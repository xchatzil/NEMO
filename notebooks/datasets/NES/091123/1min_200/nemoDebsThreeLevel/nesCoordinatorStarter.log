
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[09:50:54.104167] [I] [thread 55200] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[09:50:54.104389] [I] [thread 55200] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[09:50:54.104615] [D] [thread 55200] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[09:50:54.105682] [D] [thread 55200] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[09:50:54.106159] [I] [thread 55200] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[09:50:54.107091] [D] [thread 55200] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[09:50:54.107155] [D] [thread 55200] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[09:50:54.107943] [D] [thread 55200] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[09:50:54.108091] [D] [thread 55200] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[09:50:54.108245] [D] [thread 55200] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[09:50:54.108707] [D] [thread 55200] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[09:50:54.108863] [D] [thread 55200] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[09:50:54.161118] [D] [thread 55200] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[09:50:54.161211] [D] [thread 55200] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:50:54.161783] [D] [thread 55200] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:50:54.162250] [D] [thread 55200] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[09:50:54.162636] [D] [thread 55200] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[09:50:54.162989] [D] [thread 55200] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[09:50:54.163191] [D] [thread 55200] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[09:50:54.163654] [D] [thread 55200] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[09:50:54.164908] [D] [thread 55200] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[09:50:54.164979] [D] [thread 55200] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[09:50:54.165286] [D] [thread 55200] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[09:50:54.165708] [D] [thread 55200] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[09:50:54.166028] [D] [thread 55200] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[09:50:54.167125] [D] [thread 55200] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[09:50:54.167702] [D] [thread 55200] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[09:50:54.167895] [D] [thread 55200] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[09:50:54.168241] [D] [thread 55200] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[09:50:54.168383] [W] [thread 55200] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[09:50:54.168445] [I] [thread 55200] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[09:50:54.168462] [D] [thread 55200] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[09:50:54.168918] [D] [thread 55200] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[09:50:54.168938] [I] [thread 55208] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[09:50:54.168983] [D] [thread 55208] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[09:50:54.169333] [D] [thread 55209] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[09:50:54.176502] [D] [thread 55209] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[09:50:54.176521] [D] [thread 55200] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[09:50:54.176580] [D] [thread 55200] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[09:50:54.176699] [D] [thread 55200] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[09:50:54.176711] [D] [thread 55200] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[09:50:54.177520] [D] [thread 55200] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[09:50:54.177701] [D] [thread 55200] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[09:50:54.177730] [D] [thread 55200] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[09:50:54.177780] [D] [thread 55200] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[09:50:54.178188] [D] [thread 55200] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[09:50:54.178295] [D] [thread 55200] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[09:50:54.178399] [I] [thread 55200] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:50:54.179231] [I] [thread 55200] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[09:50:54.179310] [I] [thread 55200] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:50:54.179607] [I] [thread 55200] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[09:50:54.179738] [I] [thread 55200] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:50:54.180399] [I] [thread 55200] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[09:50:54.180465] [I] [thread 55200] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:50:54.181477] [I] [thread 55200] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[09:50:54.181884] [D] [thread 55200] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[09:50:54.182215] [D] [thread 55200] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[09:50:54.182302] [W] [thread 55200] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[09:50:54.194732] [D] [thread 55200] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[09:50:54.207063] [D] [thread 55200] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[09:50:54.256819] [D] [thread 55200] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[33m[1m[09:50:54.257245] [W] [thread 55200] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[09:50:54.257414] [D] [thread 55200] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[09:50:54.257636] [D] [thread 55200] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[09:50:54.257756] [D] [thread 55200] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[09:50:54.257829] [D] [thread 55200] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[09:50:54.258143] [D] [thread 55200] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[09:50:54.258248] [D] [thread 55200] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[09:50:54.258626] [D] [thread 55200] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[09:50:54.258833] [D] [thread 55200] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[09:50:54.258869] [W] [thread 55200] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[09:50:54.258928] [D] [thread 55200] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[09:50:54.261530] [D] [thread 55214] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[09:50:54.263127] [D] [thread 55214] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[09:50:54.263392] [D] [thread 55214] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 35855[m
[36m[09:50:54.264527] [D] [thread 55217] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 35855[m
[32m[09:50:54.264677] [I] [thread 55200] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:35855[m
[36m[09:50:54.264781] [D] [thread 55200] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1699511519  with numThreads= 1[m
[36m[09:50:54.265157] [D] [thread 55200] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[09:50:54.265712] [D] [thread 55200] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[09:50:54.265762] [D] [thread 55200] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[09:50:54.265844] [D] [thread 55218] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[09:50:54.265925] [D] [thread 55200] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[09:50:54.265961] [D] [thread 55200] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[09:50:54.266079] [D] [thread 55218] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[09:50:54.266711] [D] [thread 55219] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[09:50:54.267295] [D] [thread 55219] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[09:50:54.270426] [D] [thread 55219] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 41243[m
[36m[09:50:54.270461] [D] [thread 55200] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:41243: 41243[m
[36m[09:50:54.270486] [D] [thread 55200] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[09:50:54.270512] [D] [thread 55200] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[09:50:54.270617] [D] [thread 55200] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[09:50:54.273070] [D] [thread 55219] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[09:50:54.273109] [D] [thread 55200] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[09:50:54.274130] [W] [thread 55200] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[09:50:54.274185] [D] [thread 55200] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[09:50:54.276107] [D] [thread 55200] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 41243
dataPort: 35855
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:50:54.288957] [D] [thread 55210] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 41243
dataPort: 35855
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:50:54.289255] [D] [thread 55210] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 41243
dataPort: 35855
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:50:54.289376] [D] [thread 55210] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[09:50:54.289413] [W] [thread 55210] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[09:50:54.289424] [D] [thread 55210] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:50:54.289436] [D] [thread 55210] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:50:54.289474] [D] [thread 55210] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[09:50:54.289687] [D] [thread 55210] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[09:50:54.289833] [I] [thread 55210] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[09:50:54.289955] [D] [thread 55210] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:50:54.290222] [D] [thread 55210] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[09:50:54.290334] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:50:54.290370] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:50:54.290412] [D] [thread 55210] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:50:54.290423] [D] [thread 55210] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:50:54.290458] [D] [thread 55210] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:50:54.291724] [D] [thread 55210] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[09:50:54.293477] [D] [thread 55200] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[09:50:54.293552] [D] [thread 55200] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[09:50:54.293657] [D] [thread 55200] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[09:50:54.293670] [D] [thread 55200] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[09:50:54.327561] [D] [thread 55200] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[09:50:54.327688] [D] [thread 55200] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[09:50:54.327703] [D] [thread 55200] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[09:50:54.328229] [D] [thread 55200] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[09:50:54.328445] [D] [thread 55200] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[09:50:54.329102] [D] [thread 55200] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[09:50:54.329189] [I] [thread 55223] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[09:50:54.345794] [I] [thread 55223] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[09:50:54.345928] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:50:54.360162] [D] [thread 55200] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[09:50:54.360260] [D] [thread 55200] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[09:50:54.360276] [D] [thread 55200] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[09:50:54.360755] [D] [thread 55200] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[09:50:55.347205] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:50:56.348520] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:50:57.145324] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:50:57.146858] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:50:57.148896] [D] [thread 55227] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[09:50:57.151751] [D] [thread 55227] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[09:50:57.151892] [D] [thread 55227] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[09:50:57.152017] [D] [thread 55227] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[09:50:57.154441] [D] [thread 55228] [File.cpp:27] [createFile] Create File to file:///tmp/query_09-11-2023_09-50-57_124122.cpp[m
[36m[09:50:57.155743] [D] [thread 55228] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[09:50:57.156672] [D] [thread 55228] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -o/tmp/query_09-11-2023_09-50-57_124122.so -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_09-11-2023_09-50-57_124122.cpp'[m
[36m[09:50:58.148134] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:50:58.870943] [I] [thread 55228] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1716.651089ms[m
[36m[09:50:58.872833] [D] [thread 55227] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[09:50:58.872927] [D] [thread 55227] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[09:50:58.872967] [D] [thread 55227] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[09:50:58.873029] [D] [thread 55227] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[09:50:58.985738] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:50:58.986431] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:50:58.986889] [I] [thread 55233] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:50:58.988119] [I] [thread 55233] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:50:59.135211] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:50:59.135643] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:50:59.136567] [I] [thread 55234] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:50:59.137140] [I] [thread 55234] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:50:59.365592] [D] [thread 55221] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 36405
dataPort: 33677
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:50:59.365867] [D] [thread 55221] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 36405
dataPort: 33677
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:50:59.365947] [D] [thread 55221] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:50:59.366202] [D] [thread 55221] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:50:59.366241] [D] [thread 55221] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:50:59.366302] [D] [thread 55221] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[09:50:59.366494] [D] [thread 55221] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:50:59.366598] [I] [thread 55221] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:50:59.366805] [I] [thread 55221] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:50:59.367059] [D] [thread 55221] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[09:50:59.367362] [D] [thread 55221] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:50:59.367632] [D] [thread 55221] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:50:59.367743] [I] [thread 55221] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:50:59.367785] [D] [thread 55221] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:50:59.367834] [D] [thread 55221] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:50:59.367858] [D] [thread 55221] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:50:59.367887] [D] [thread 55221] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:50:59.368797] [D] [thread 55221] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[09:51:00.136935] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:01.138225] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:02.139532] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:02.328116] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:02.328726] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:02.329757] [I] [thread 55235] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:02.330695] [I] [thread 55235] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:02.530235] [D] [thread 55210] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 34103
dataPort: 46817
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:02.530451] [D] [thread 55210] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 34103
dataPort: 46817
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:02.530513] [D] [thread 55210] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:02.530729] [D] [thread 55210] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:02.530751] [D] [thread 55210] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:02.530794] [D] [thread 55210] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[09:51:02.530911] [D] [thread 55210] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:02.530972] [I] [thread 55210] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:02.531073] [I] [thread 55210] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:02.531169] [D] [thread 55210] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[09:51:02.531252] [D] [thread 55210] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:02.531443] [D] [thread 55210] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:02.531493] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:51:02.531516] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:51:02.531549] [D] [thread 55210] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:02.531565] [D] [thread 55210] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:02.531584] [D] [thread 55210] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:02.532059] [D] [thread 55210] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[09:51:03.330023] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:04.331307] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:05.332593] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:05.352891] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:05.353499] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:05.354350] [I] [thread 55236] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:05.355649] [I] [thread 55236] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:05.566172] [D] [thread 55221] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 37425
dataPort: 38647
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:05.566443] [D] [thread 55221] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 37425
dataPort: 38647
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:05.566520] [D] [thread 55221] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:05.566847] [D] [thread 55221] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:05.566879] [D] [thread 55221] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:05.566938] [D] [thread 55221] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[09:51:05.567099] [D] [thread 55221] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:05.567187] [I] [thread 55221] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:05.567329] [I] [thread 55221] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:05.567451] [D] [thread 55221] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[09:51:05.567558] [D] [thread 55221] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:05.567844] [D] [thread 55221] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:05.567949] [I] [thread 55221] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:51:05.567983] [D] [thread 55221] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:51:05.568110] [D] [thread 55221] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:05.568137] [D] [thread 55221] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:05.568165] [D] [thread 55221] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:05.568854] [D] [thread 55221] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[09:51:05.606107] [D] [thread 55210] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 4
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream3"
  logicalSourceName: "debs"
}
[m
[32m[09:51:05.606244] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:51:05.606291] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:51:05.606440] [D] [thread 55210] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= test_stream3 logical source= debs[m
[36m[09:51:05.607029] [D] [thread 55210] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:51:05.607131] [D] [thread 55210] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream3[m
[36m[09:51:05.607471] [D] [thread 55210] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream3 does not exist, try to add[m
[36m[09:51:05.607542] [D] [thread 55210] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:51:05.607668] [D] [thread 55210] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[09:51:05.607714] [D] [thread 55210] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:51:05.612135] [D] [thread 55237] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 2
[m
[36m[09:51:05.612247] [D] [thread 55237] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[09:51:05.612271] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:51:05.612295] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:51:05.612352] [D] [thread 55237] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[09:51:05.612371] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:05.612385] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:51:05.612400] [D] [thread 55237] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:51:05.612470] [D] [thread 55237] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:51:05.612592] [I] [thread 55237] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:05.612641] [D] [thread 55237] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:51:05.612661] [D] [thread 55237] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:51:05.612687] [D] [thread 55237] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 2[m
[32m[09:51:05.612702] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:51:05.612717] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:51:05.612733] [D] [thread 55237] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[09:51:05.612746] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:51:05.612758] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:51:05.612773] [D] [thread 55237] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[09:51:05.612852] [I] [thread 55237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[09:51:05.612897] [D] [thread 55237] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:51:05.613098] [D] [thread 55237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[09:51:05.613120] [D] [thread 55237] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:51:06.354775] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:07.356084] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:08.357417] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:08.568141] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:08.568817] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:08.569788] [I] [thread 55238] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:08.571398] [I] [thread 55238] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:08.771866] [D] [thread 55210] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 39859
dataPort: 46653
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:08.772136] [D] [thread 55210] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 39859
dataPort: 46653
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:08.772214] [D] [thread 55210] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:08.772655] [D] [thread 55210] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:08.772694] [D] [thread 55210] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:08.772758] [D] [thread 55210] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[09:51:08.772919] [D] [thread 55210] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:08.773115] [I] [thread 55210] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:08.773268] [I] [thread 55210] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:08.773355] [D] [thread 55210] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[09:51:08.773460] [D] [thread 55210] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:08.773836] [D] [thread 55210] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:08.773909] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:51:08.773944] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:51:08.773993] [D] [thread 55210] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:08.774018] [D] [thread 55210] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:08.774045] [D] [thread 55210] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:08.774649] [D] [thread 55210] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[09:51:08.810390] [D] [thread 55210] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[09:51:08.810503] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:51:08.810540] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:51:08.810625] [D] [thread 55210] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[09:51:08.810832] [D] [thread 55210] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:51:08.810886] [D] [thread 55210] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[09:51:08.811002] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[09:51:08.811059] [D] [thread 55210] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[09:51:08.811092] [D] [thread 55210] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:51:08.811169] [D] [thread 55210] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[09:51:08.811198] [D] [thread 55210] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:51:08.815869] [D] [thread 55237] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[09:51:08.815993] [D] [thread 55237] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[09:51:08.816030] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:51:08.816065] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:51:08.816099] [D] [thread 55237] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[09:51:08.816120] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:08.816142] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:51:08.816167] [D] [thread 55237] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:51:08.816249] [D] [thread 55237] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:51:08.816556] [I] [thread 55237] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:08.816609] [D] [thread 55237] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:51:08.816639] [D] [thread 55237] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:51:08.816671] [D] [thread 55237] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[09:51:08.816696] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:51:08.816723] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:51:08.816753] [D] [thread 55237] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[09:51:08.816774] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:51:08.816795] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:51:08.816819] [D] [thread 55237] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[09:51:08.816957] [I] [thread 55237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[09:51:08.817022] [D] [thread 55237] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:51:08.817372] [D] [thread 55237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[09:51:08.817409] [D] [thread 55237] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:51:09.570169] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:10.571446] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:11.572523] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:11.689091] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:11.689439] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:11.690019] [I] [thread 55239] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:11.691102] [I] [thread 55239] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:11.855417] [D] [thread 55237] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 44731
dataPort: 41255
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:11.855651] [D] [thread 55237] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 44731
dataPort: 41255
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:11.855710] [D] [thread 55237] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:11.856052] [D] [thread 55237] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:11.856094] [D] [thread 55237] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:11.856194] [D] [thread 55237] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[09:51:11.856352] [D] [thread 55237] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:11.856421] [I] [thread 55237] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:11.856518] [I] [thread 55237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:11.856580] [D] [thread 55237] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[09:51:11.856658] [D] [thread 55237] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:11.856909] [D] [thread 55237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:11.856962] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:51:11.856984] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:51:11.857016] [D] [thread 55237] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:11.857031] [D] [thread 55237] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:11.857050] [D] [thread 55237] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:11.857499] [D] [thread 55237] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[09:51:11.892585] [D] [thread 55237] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[09:51:11.892709] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:51:11.892754] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:51:11.892843] [D] [thread 55237] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[09:51:11.893048] [D] [thread 55237] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:51:11.893100] [D] [thread 55237] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[09:51:11.893176] [D] [thread 55237] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[09:51:11.893212] [D] [thread 55237] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:51:11.893247] [D] [thread 55237] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[09:51:11.893278] [D] [thread 55237] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:51:11.893351] [D] [thread 55237] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[09:51:11.893381] [D] [thread 55237] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:51:11.897465] [D] [thread 55237] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[09:51:11.897568] [D] [thread 55237] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[09:51:11.897597] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:51:11.897623] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:51:11.897648] [D] [thread 55237] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[09:51:11.897662] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:11.897676] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:51:11.897693] [D] [thread 55237] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:51:11.897764] [D] [thread 55237] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:51:11.897895] [I] [thread 55237] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:11.897947] [D] [thread 55237] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:51:11.897970] [D] [thread 55237] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:51:11.897992] [D] [thread 55237] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[09:51:11.898008] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:51:11.898025] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:51:11.898044] [D] [thread 55237] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[09:51:11.898057] [I] [thread 55237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:51:11.898072] [D] [thread 55237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:51:11.898088] [D] [thread 55237] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[09:51:11.898184] [I] [thread 55237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[09:51:11.898242] [D] [thread 55237] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:51:11.898519] [D] [thread 55237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[09:51:11.898544] [D] [thread 55237] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:51:12.690654] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:13.691931] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:14.693312] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:14.893069] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:14.893579] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:14.894573] [I] [thread 55241] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:14.896241] [I] [thread 55241] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:15.087965] [D] [thread 55210] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 42629
dataPort: 34553
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:15.088220] [D] [thread 55210] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 42629
dataPort: 34553
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:15.088295] [D] [thread 55210] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:15.088815] [D] [thread 55210] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:15.088886] [D] [thread 55210] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:15.088945] [D] [thread 55210] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[09:51:15.089182] [D] [thread 55210] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:15.089258] [I] [thread 55210] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:15.089371] [I] [thread 55210] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:15.089441] [D] [thread 55210] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[09:51:15.089549] [D] [thread 55210] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:15.089931] [D] [thread 55210] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:15.090021] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:51:15.090052] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:51:15.090091] [D] [thread 55210] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:15.090110] [D] [thread 55210] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:15.090132] [D] [thread 55210] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:15.090648] [D] [thread 55210] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[09:51:15.126876] [D] [thread 55210] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[09:51:15.126962] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:51:15.126992] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:51:15.127057] [D] [thread 55210] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[09:51:15.127214] [D] [thread 55210] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:51:15.127248] [D] [thread 55210] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[09:51:15.127321] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[09:51:15.127344] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:51:15.127374] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:51:15.127399] [D] [thread 55210] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[09:51:15.127421] [D] [thread 55210] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:51:15.127445] [D] [thread 55210] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[09:51:15.127460] [D] [thread 55210] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:51:15.131452] [D] [thread 55210] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 2
[m
[36m[09:51:15.131543] [D] [thread 55210] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[09:51:15.131567] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:51:15.131592] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:51:15.131614] [D] [thread 55210] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[09:51:15.131627] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:15.131640] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:51:15.131655] [D] [thread 55210] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:51:15.131716] [D] [thread 55210] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:51:15.131830] [I] [thread 55210] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:15.131861] [D] [thread 55210] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:51:15.131880] [D] [thread 55210] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:51:15.131897] [D] [thread 55210] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 2[m
[32m[09:51:15.131921] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:51:15.131937] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:51:15.131953] [D] [thread 55210] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[09:51:15.131965] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:51:15.131978] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:51:15.131993] [D] [thread 55210] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[09:51:15.132088] [I] [thread 55210] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[09:51:15.132136] [D] [thread 55210] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:51:15.132463] [D] [thread 55210] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[09:51:15.132493] [D] [thread 55210] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:51:15.894842] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:16.896110] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:17.897427] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:17.955778] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:17.956273] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:17.957159] [I] [thread 55242] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:17.959381] [I] [thread 55242] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:18.159473] [D] [thread 55240] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 36055
dataPort: 40527
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:18.159649] [D] [thread 55240] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 36055
dataPort: 40527
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:18.159698] [D] [thread 55240] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:18.160134] [D] [thread 55240] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:18.160214] [D] [thread 55240] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:18.160260] [D] [thread 55240] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[09:51:18.160401] [D] [thread 55240] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:18.160611] [I] [thread 55240] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:18.160786] [I] [thread 55240] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:18.160925] [D] [thread 55240] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[09:51:18.201313] [D] [thread 55240] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:18.201756] [D] [thread 55240] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:18.201865] [I] [thread 55240] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:51:18.201891] [D] [thread 55240] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:51:18.201997] [D] [thread 55240] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:18.202030] [D] [thread 55240] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:18.202049] [D] [thread 55240] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:18.202697] [D] [thread 55240] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[09:51:18.241123] [D] [thread 55240] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[09:51:18.241208] [I] [thread 55240] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:51:18.241232] [D] [thread 55240] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:51:18.241291] [D] [thread 55240] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[09:51:18.241432] [D] [thread 55240] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:51:18.241457] [D] [thread 55240] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[09:51:18.241530] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[09:51:18.241549] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:51:18.241561] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:51:18.241573] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:51:18.241591] [D] [thread 55240] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[09:51:18.241607] [D] [thread 55240] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:51:18.241708] [D] [thread 55240] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[09:51:18.241737] [D] [thread 55240] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:51:18.245343] [D] [thread 55210] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[09:51:18.245421] [D] [thread 55210] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[09:51:18.245441] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:51:18.245460] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:51:18.245477] [D] [thread 55210] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[09:51:18.245485] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:18.245494] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:51:18.245504] [D] [thread 55210] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:51:18.245554] [D] [thread 55210] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:51:18.245649] [I] [thread 55210] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:18.245672] [D] [thread 55210] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:51:18.245686] [D] [thread 55210] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:51:18.245699] [D] [thread 55210] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[09:51:18.245709] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:51:18.245720] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:51:18.245731] [D] [thread 55210] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[09:51:18.245739] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:51:18.245748] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:51:18.245758] [D] [thread 55210] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[09:51:18.245810] [I] [thread 55210] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[09:51:18.245844] [D] [thread 55210] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:51:18.246068] [D] [thread 55210] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[09:51:18.246129] [D] [thread 55210] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:51:18.957573] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:19.958870] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:20.960218] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:21.329972] [D] [thread 55240] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 40997
dataPort: 33929
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:21.330241] [D] [thread 55240] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 40997
dataPort: 33929
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:21.330315] [D] [thread 55240] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:21.330873] [D] [thread 55240] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:21.330949] [D] [thread 55240] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:21.331150] [D] [thread 55240] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[09:51:21.331336] [D] [thread 55240] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:21.331424] [I] [thread 55240] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:21.331569] [I] [thread 55240] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:21.331656] [D] [thread 55240] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[09:51:21.331759] [D] [thread 55240] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:21.332366] [D] [thread 55240] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:21.332449] [I] [thread 55240] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:51:21.332496] [D] [thread 55240] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:51:21.332550] [D] [thread 55240] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:21.332575] [D] [thread 55240] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:21.332603] [D] [thread 55240] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:21.333209] [D] [thread 55240] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[09:51:21.353792] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:21.354242] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:21.355000] [I] [thread 55243] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:21.357431] [I] [thread 55243] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:21.369391] [D] [thread 55240] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[09:51:21.369500] [I] [thread 55240] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:51:21.369528] [D] [thread 55240] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:51:21.369593] [D] [thread 55240] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[09:51:21.369751] [D] [thread 55240] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:51:21.369786] [D] [thread 55240] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[09:51:21.369844] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[09:51:21.369866] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:51:21.369883] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:51:21.369915] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:51:21.369934] [D] [thread 55240] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[09:51:21.369958] [D] [thread 55240] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[09:51:21.369981] [D] [thread 55240] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:51:21.370004] [D] [thread 55240] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[09:51:21.370020] [D] [thread 55240] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:51:21.374056] [D] [thread 55210] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 3
[m
[36m[09:51:21.374145] [D] [thread 55210] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[09:51:21.374169] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:51:21.374193] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:51:21.374215] [D] [thread 55210] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[09:51:21.374228] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:21.374241] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:51:21.374256] [D] [thread 55210] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:51:21.374316] [D] [thread 55210] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:51:21.374493] [I] [thread 55210] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:21.374527] [D] [thread 55210] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:51:21.374546] [D] [thread 55210] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:51:21.374565] [D] [thread 55210] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 3[m
[32m[09:51:21.374579] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:51:21.374597] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:51:21.374616] [D] [thread 55210] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[09:51:21.374628] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:51:21.374642] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:51:21.374657] [D] [thread 55210] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[09:51:21.374743] [I] [thread 55210] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[09:51:21.374787] [D] [thread 55210] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:51:21.375126] [D] [thread 55210] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[09:51:21.375149] [D] [thread 55210] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:51:22.355501] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:23.356823] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:24.358143] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:24.810690] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:24.811196] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:24.812127] [I] [thread 55245] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:24.814323] [I] [thread 55245] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:25.016654] [D] [thread 55240] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 44815
dataPort: 45173
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:25.016851] [D] [thread 55240] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 44815
dataPort: 45173
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:25.016903] [D] [thread 55240] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:25.017266] [D] [thread 55240] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:25.017316] [D] [thread 55240] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:25.017366] [D] [thread 55240] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[09:51:25.017480] [D] [thread 55240] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:25.017535] [I] [thread 55240] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:25.017708] [I] [thread 55240] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:25.017779] [D] [thread 55240] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[09:51:25.038901] [D] [thread 55240] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:25.039375] [D] [thread 55240] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:25.039476] [I] [thread 55240] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:51:25.039500] [D] [thread 55240] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:51:25.039534] [D] [thread 55240] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:25.039544] [D] [thread 55240] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:25.039560] [D] [thread 55240] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:25.040007] [D] [thread 55240] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[09:51:25.077496] [D] [thread 55210] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[09:51:25.077625] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:51:25.077668] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:51:25.077761] [D] [thread 55210] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[09:51:25.077977] [D] [thread 55210] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:51:25.078028] [D] [thread 55210] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[09:51:25.078107] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[09:51:25.078143] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:51:25.078171] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:51:25.078199] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:51:25.078228] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[09:51:25.078255] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[09:51:25.078292] [D] [thread 55210] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[09:51:25.078323] [D] [thread 55210] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:51:25.078359] [D] [thread 55210] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[09:51:25.078493] [D] [thread 55210] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:51:25.082895] [D] [thread 55246] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 3
[m
[36m[09:51:25.083026] [D] [thread 55246] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[09:51:25.083064] [I] [thread 55246] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:51:25.083100] [D] [thread 55246] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:51:25.083135] [D] [thread 55246] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[09:51:25.083156] [I] [thread 55246] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:25.083179] [D] [thread 55246] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:51:25.083204] [D] [thread 55246] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:51:25.083292] [D] [thread 55246] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:51:25.083467] [I] [thread 55246] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:25.083513] [D] [thread 55246] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:51:25.083541] [D] [thread 55246] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:51:25.083570] [D] [thread 55246] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 3[m
[32m[09:51:25.083593] [I] [thread 55246] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:51:25.083619] [D] [thread 55246] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:51:25.083646] [D] [thread 55246] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[09:51:25.083666] [I] [thread 55246] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:51:25.083688] [D] [thread 55246] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:51:25.083712] [D] [thread 55246] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[09:51:25.083847] [I] [thread 55246] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[09:51:25.083942] [D] [thread 55246] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:51:25.084601] [D] [thread 55246] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[09:51:25.084649] [D] [thread 55246] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:51:25.812527] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:26.813800] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:27.815101] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:27.890084] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:27.890685] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:27.891558] [I] [thread 55248] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:27.894608] [I] [thread 55248] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:28.088025] [D] [thread 55247] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.39"
grpcPort: 37337
dataPort: 46809
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:28.088266] [D] [thread 55247] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.39"
grpcPort: 37337
dataPort: 46809
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:51:28.088381] [D] [thread 55247] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:51:28.088959] [D] [thread 55247] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:51:28.089017] [D] [thread 55247] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:51:28.089089] [D] [thread 55247] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 11 and resources 65535[m
[36m[09:51:28.089324] [D] [thread 55247] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:51:28.089398] [I] [thread 55247] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:51:28.089513] [I] [thread 55247] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:28.089585] [D] [thread 55247] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 11[m
[36m[09:51:28.089672] [D] [thread 55247] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:51:28.090129] [D] [thread 55247] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[09:51:28.090211] [I] [thread 55247] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[09:51:28.090244] [D] [thread 55247] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[09:51:28.090283] [D] [thread 55247] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:51:28.090301] [D] [thread 55247] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:51:28.090324] [D] [thread 55247] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:51:28.090885] [D] [thread 55247] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=11[m
[36m[09:51:28.126650] [D] [thread 55210] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 11
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream10"
  logicalSourceName: "debs"
}
[m
[32m[09:51:28.126767] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[09:51:28.126806] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[09:51:28.126895] [D] [thread 55210] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= test_stream10 logical source= debs[m
[36m[09:51:28.127104] [D] [thread 55210] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:51:28.127156] [D] [thread 55210] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream10[m
[36m[09:51:28.127234] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[09:51:28.127268] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:51:28.127297] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:51:28.127325] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:51:28.127353] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[09:51:28.127380] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[09:51:28.127408] [D] [thread 55210] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=test_stream9[m
[36m[09:51:28.127444] [D] [thread 55210] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream10 does not exist, try to add[m
[36m[09:51:28.127476] [D] [thread 55210] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:51:28.127512] [D] [thread 55210] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[09:51:28.127568] [D] [thread 55210] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:51:28.131550] [D] [thread 55210] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 11
oldParent: 1
newParent: 3
[m
[36m[09:51:28.131669] [D] [thread 55210] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 11  parentId= 1[m
[32m[09:51:28.131706] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[09:51:28.131743] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[09:51:28.131778] [D] [thread 55210] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  11  exists[m
[32m[09:51:28.131799] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:28.131821] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:51:28.131846] [D] [thread 55210] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:51:28.131931] [D] [thread 55210] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:51:28.132187] [I] [thread 55210] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:51:28.132239] [D] [thread 55210] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:51:28.132269] [D] [thread 55210] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:51:28.132299] [D] [thread 55210] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 11  parentId= 3[m
[32m[09:51:28.132375] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[09:51:28.132409] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[09:51:28.132438] [D] [thread 55210] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 11 exists[m
[32m[09:51:28.132460] [I] [thread 55210] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:51:28.132482] [D] [thread 55210] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:51:28.132507] [D] [thread 55210] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[09:51:28.132664] [I] [thread 55210] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[09:51:28.132718] [D] [thread 55210] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:51:28.133338] [D] [thread 55210] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[09:51:28.133377] [D] [thread 55210] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:51:28.891986] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:29.893334] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:30.012147] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:30.012664] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:30.013875] [I] [thread 55249] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:51:30.017143] [I] [thread 55249] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:51:31.013881] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:31.018726] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:31.019097] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:31.147771] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:31.148457] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:31.150120] [D] [thread 55254] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[09:51:31.150229] [I] [thread 55254] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[09:51:31.150254] [I] [thread 55254] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[09:51:31.150297] [D] [thread 55254] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[09:51:31.150380] [D] [thread 55254] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[09:51:31.150442] [D] [thread 55254] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));[m
[36m[09:51:31.150549] [D] [thread 55254] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[09:51:31.151762] [D] [thread 55255] [File.cpp:27] [createFile] Create File to file:///tmp/query_09-11-2023_09-51-31_7289703.cpp[m
[36m[09:51:31.152244] [D] [thread 55255] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[09:51:31.152312] [D] [thread 55255] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[09:51:31.152677] [D] [thread 55255] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -o/tmp/query_09-11-2023_09-51-31_7289703.so -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_09-11-2023_09-51-31_7289703.cpp'[m
[36m[09:51:32.149684] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:33.150920] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:34.058518] [I] [thread 55255] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2906.830919ms[m
[36m[09:51:34.058993] [D] [thread 55254] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[09:51:34.059101] [D] [thread 55254] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[09:51:34.059484] [I] [thread 55254] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.060869] [D] [thread 55254] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[09:51:34.061398] [D] [thread 55254] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[09:51:34.061875] [I] [thread 55254] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.062038] [D] [thread 55254] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[09:51:34.062293] [D] [thread 55254] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.062373] [D] [thread 55254] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:51:34.062961] [I] [thread 55254] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:51:34.063153] [D] [thread 55254] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Min;) as new root of the plan.[m
[36m[09:51:34.063359] [D] [thread 55254] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.063399] [D] [thread 55254] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.063701] [D] [thread 55254] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[09:51:34.063888] [I] [thread 55254] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[09:51:34.064089] [D] [thread 55254] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[09:51:34.064356] [D] [thread 55254] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.064396] [D] [thread 55254] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.065455] [D] [thread 55254] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.065677] [D] [thread 55254] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.065839] [D] [thread 55254] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.066136] [D] [thread 55254] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.066247] [D] [thread 55254] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.066284] [D] [thread 55254] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.066409] [D] [thread 55254] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:51:34.066525] [D] [thread 55254] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.066648] [D] [thread 55254] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.066734] [D] [thread 55254] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.067464] [D] [thread 55254] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.067525] [D] [thread 55254] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.067643] [D] [thread 55254] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.068634] [D] [thread 55254] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.069375] [D] [thread 55254] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[09:51:34.070079] [I] [thread 55254] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[09:51:34.070869] [I] [thread 55254] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[09:51:34.070952] [I] [thread 55254] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[09:51:34.071002] [I] [thread 55208] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[09:51:34.071104] [I] [thread 55208] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[09:51:34.071134] [I] [thread 55208] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[09:51:34.071366] [I] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[09:51:34.071496] [D] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[09:51:34.071526] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.071600] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.071642] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.071693] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.071732] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.072523] [D] [thread 55208] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.072992] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.073062] [D] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[09:51:34.073084] [D] [thread 55208] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[09:51:34.073308] [D] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[09:51:34.073351] [I] [thread 55208] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:51:34.073559] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:51:34.073879] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:51:34.074190] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:51:34.074395] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.074662] [D] [thread 55208] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[09:51:34.074973] [D] [thread 55208] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.075178] [D] [thread 55208] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[09:51:34.075305] [I] [thread 55208] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.075453] [D] [thread 55208] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[09:51:34.075480] [I] [thread 55208] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:51:34.075575] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:51:34.075722] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:51:34.075938] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:51:34.076121] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.076359] [D] [thread 55208] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[09:51:34.076582] [I] [thread 55208] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.076647] [D] [thread 55208] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[09:51:34.076660] [I] [thread 55208] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:51:34.076744] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:51:34.076873] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:51:34.077069] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:51:34.077259] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.077461] [D] [thread 55208] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[09:51:34.077597] [I] [thread 55208] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[09:51:34.077729] [I] [thread 55208] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.077858] [D] [thread 55208] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[09:51:34.077973] [D] [thread 55208] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.078071] [D] [thread 55208] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.078182] [D] [thread 55208] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[09:51:34.078288] [D] [thread 55208] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.078390] [D] [thread 55208] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.078497] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.078557] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.078593] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.078638] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.078673] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.079199] [D] [thread 55208] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.079589] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[09:51:34.079656] [I] [thread 55208] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[09:51:34.079826] [I] [thread 55208] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:51:34.079855] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.079900] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.079937] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[09:51:34.080569] [I] [thread 55208] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:51:34.080663] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.080764] [D] [thread 55208] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:51:34.080783] [D] [thread 55208] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:51:34.080815] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.081027] [D] [thread 55208] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:51:34.081511] [I] [thread 55208] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:51:34.081611] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.081690] [D] [thread 55208] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:51:34.081705] [D] [thread 55208] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:51:34.081736] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.081902] [D] [thread 55208] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:51:34.082209] [I] [thread 55208] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:51:34.082268] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.082329] [D] [thread 55208] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:51:34.082344] [D] [thread 55208] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:51:34.082372] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.082537] [D] [thread 55208] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:51:34.082796] [I] [thread 55208] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:51:34.082860] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.082925] [D] [thread 55208] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:51:34.082942] [D] [thread 55208] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:51:34.083002] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.083174] [D] [thread 55208] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:51:34.083426] [I] [thread 55208] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:51:34.083490] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.083550] [D] [thread 55208] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:51:34.083566] [D] [thread 55208] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:51:34.083592] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.083743] [D] [thread 55208] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:51:34.084012] [I] [thread 55208] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:51:34.084071] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.084131] [D] [thread 55208] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:51:34.084153] [D] [thread 55208] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:51:34.084180] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.084403] [D] [thread 55208] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:51:34.084705] [I] [thread 55208] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:51:34.084770] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.084840] [D] [thread 55208] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:51:34.084857] [D] [thread 55208] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:51:34.084884] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.085048] [D] [thread 55208] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:51:34.085325] [I] [thread 55208] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:51:34.085387] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:51:34.085449] [D] [thread 55208] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:51:34.085465] [D] [thread 55208] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:51:34.085499] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:51:34.085664] [D] [thread 55208] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[09:51:34.086258] [D] [thread 55208] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(18)
      SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
    WATERMARKASSIGNER(20)
      SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[32m[09:51:34.086370] [I] [thread 55208] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[09:51:34.086648] [D] [thread 55208] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(18)
      SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
    WATERMARKASSIGNER(20)
      SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[36m[09:51:34.086959] [D] [thread 55208] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[09:51:34.087268] [D] [thread 55208] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(18)
      SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
    WATERMARKASSIGNER(20)
      SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[36m[09:51:34.087331] [D] [thread 55208] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[09:51:34.087595] [D] [thread 55208] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(18)
      SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
    WATERMARKASSIGNER(20)
      SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[36m[09:51:34.087946] [D] [thread 55208] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[09:51:34.088026] [D] [thread 55208] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Min;)[m
[36m[09:51:34.088076] [D] [thread 55208] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Min;)[m
[32m[09:51:34.088195] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:51:34.088220] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[09:51:34.088632] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:51:34.088683] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[09:51:34.088858] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:51:34.088890] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[09:51:34.088980] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:51:34.088995] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[09:51:34.089063] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:51:34.089077] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[09:51:34.089186] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:51:34.089201] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[09:51:34.089298] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:51:34.089314] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[09:51:34.089386] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[09:51:34.089401] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[09:51:34.089937] [I] [thread 55208] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:51:34.090119] [I] [thread 55208] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:34.090149] [I] [thread 55208] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:34.090162] [I] [thread 55208] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:34.090173] [I] [thread 55208] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:34.090183] [I] [thread 55208] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:34.090193] [I] [thread 55208] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:34.090203] [I] [thread 55208] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:34.090212] [I] [thread 55208] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:34.090223] [I] [thread 55208] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:51:34.090234] [I] [thread 55208] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:51:34.090243] [I] [thread 55208] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:51:34.090381] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[09:51:34.090635] [D] [thread 55208] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(21) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[32m[09:51:34.090988] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[09:51:34.091152] [D] [thread 55208] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(22) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[36m[09:51:34.091790] [D] [thread 55208] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(18)
      SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
    WATERMARKASSIGNER(20)
      SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[36m[09:51:34.092112] [D] [thread 55208] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(18)
      SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
    WATERMARKASSIGNER(20)
      SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[36m[09:51:34.092391] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.092503] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.092572] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[09:51:34.092630] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.092665] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.093662] [D] [thread 55208] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:51:34.093944] [I] [thread 55208] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:51:34.094062] [I] [thread 55208] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.094970] [D] [thread 55208] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:51:34.095211] [I] [thread 55208] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:51:34.095321] [I] [thread 55208] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.095435] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.096207] [D] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[09:51:34.096256] [D] [thread 55208] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[09:51:34.096606] [D] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[09:51:34.096723] [D] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[09:51:34.096749] [D] [thread 55208] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[09:51:34.096806] [I] [thread 55208] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[09:51:34.096848] [I] [thread 55208] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:51:34.096956] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:51:34.097118] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[09:51:34.097434] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[09:51:34.097657] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[09:51:34.097829] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[09:51:34.098000] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[09:51:34.098158] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[09:51:34.098304] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[09:51:34.098438] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[09:51:34.098577] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[09:51:34.098717] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[09:51:34.098872] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[09:51:34.099110] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[09:51:34.099301] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[09:51:34.099474] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[09:51:34.099643] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[09:51:34.099812] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[09:51:34.099996] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[09:51:34.100174] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[09:51:34.100853] [D] [thread 55208] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[09:51:34.100914] [D] [thread 55208] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[09:51:34.100997] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101038] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101062] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101085] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101106] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101126] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101153] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101175] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101197] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101217] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101237] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101259] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101270] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.101299] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101312] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.101343] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101356] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.101377] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101389] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.101406] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101417] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.101447] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101461] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.101479] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101490] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.101506] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.101518] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.102733] [D] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[09:51:34.102785] [D] [thread 55208] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[09:51:34.102868] [D] [thread 55208] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[09:51:34.102924] [D] [thread 55208] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[09:51:34.102935] [D] [thread 55208] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[09:51:34.102945] [D] [thread 55208] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[09:51:34.102970] [I] [thread 55208] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[09:51:34.103539] [D] [thread 55208] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(18)
      SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
    WATERMARKASSIGNER(20)
      SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[36m[09:51:34.103587] [D] [thread 55208] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[09:51:34.103601] [D] [thread 55208] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[09:51:34.103656] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103696] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103718] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103740] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103760] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103781] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103801] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103823] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103844] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103880] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103902] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103932] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103944] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.103975] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.103988] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.104012] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.104025] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.104045] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.104057] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.104073] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.104094] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.104116] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.104128] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.104145] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.104156] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.104172] [D] [thread 55208] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:51:34.104184] [D] [thread 55208] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:51:34.104477] [D] [thread 55208] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[09:51:34.104530] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:51:34.104550] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[09:51:34.104628] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:51:34.104641] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[09:51:34.104676] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:51:34.104700] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[09:51:34.104723] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:51:34.104735] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[09:51:34.104759] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:51:34.104770] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[09:51:34.104794] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:51:34.104805] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[09:51:34.104824] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:51:34.104834] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[09:51:34.104852] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[09:51:34.104863] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[09:51:34.104884] [I] [thread 55208] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:51:34.104895] [D] [thread 55208] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[09:51:34.104964] [I] [thread 55208] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[09:51:34.105177] [D] [thread 55208] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:51:34.105346] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.105452] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.105561] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.105735] [D] [thread 55208] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:51:34.105796] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.105855] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.105922] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106033] [D] [thread 55208] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:51:34.106086] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106164] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106236] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106340] [D] [thread 55208] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:51:34.106391] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106446] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106509] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106604] [D] [thread 55208] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:51:34.106675] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106739] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106815] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.106973] [D] [thread 55208] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:51:34.107052] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.107145] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.107254] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.107410] [D] [thread 55208] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:51:34.107496] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.107569] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.107651] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.107795] [D] [thread 55208] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:51:34.107868] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.107939] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.108049] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[09:51:34.108117] [I] [thread 55208] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 8 sub-graphs to create a single sub-graph[m
[36m[09:51:34.108128] [D] [thread 55208] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[09:51:34.108596] [D] [thread 55208] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[09:51:34.108627] [D] [thread 55208] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:51:34.108824] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.108853] [D] [thread 55208] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:51:34.108902] [D] [thread 55208] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[09:51:34.108998] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.109094] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.109133] [D] [thread 55208] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:51:34.109200] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.109212] [D] [thread 55208] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:51:34.109240] [D] [thread 55208] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:51:34.109283] [W] [thread 55208] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:51:34.109312] [D] [thread 55208] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:51:34.109367] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.109378] [D] [thread 55208] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:51:34.109400] [D] [thread 55208] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[09:51:34.109455] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.109507] [D] [thread 55208] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:51:34.109564] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.109576] [D] [thread 55208] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:51:34.109592] [D] [thread 55208] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:51:34.109635] [W] [thread 55208] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:51:34.109650] [D] [thread 55208] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:51:34.109695] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.109706] [D] [thread 55208] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:51:34.109727] [D] [thread 55208] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:51:34.109767] [W] [thread 55208] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:51:34.109782] [D] [thread 55208] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:51:34.109849] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.109866] [D] [thread 55208] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:51:34.109884] [D] [thread 55208] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:51:34.109929] [W] [thread 55208] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:51:34.109944] [D] [thread 55208] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:51:34.109993] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.110004] [D] [thread 55208] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:51:34.110018] [D] [thread 55208] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:51:34.110059] [W] [thread 55208] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:51:34.110074] [D] [thread 55208] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:51:34.110115] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:51:34.110126] [D] [thread 55208] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:51:34.110139] [D] [thread 55208] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:51:34.110183] [W] [thread 55208] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:51:34.110263] [D] [thread 55208] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[09:51:34.110275] [D] [thread 55208] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[09:51:34.110282] [D] [thread 55208] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[09:51:34.110288] [D] [thread 55208] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[09:51:34.110307] [D] [thread 55208] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[09:51:34.110315] [D] [thread 55208] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[09:51:34.110338] [D] [thread 55208] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[09:51:34.110509] [D] [thread 55208] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[09:51:34.110578] [D] [thread 55208] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3)) placement.[m
[36m[09:51:34.110643] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))[m
[36m[09:51:34.110676] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.110735] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[09:51:34.110750] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.110821] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(21)[m
[36m[09:51:34.110837] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.110855] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[09:51:34.110904] [W] [thread 55208] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[09:51:34.110921] [W] [thread 55208] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[09:51:34.110954] [D] [thread 55208] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[09:51:34.110990] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[09:51:34.111005] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.111040] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[09:51:34.111054] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.111100] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(21)[m
[36m[09:51:34.111115] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.111127] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[09:51:34.111171] [W] [thread 55208] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[09:51:34.111186] [W] [thread 55208] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[09:51:34.111215] [D] [thread 55208] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[09:51:34.111248] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[09:51:34.111277] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.111315] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[09:51:34.111329] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.111372] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(21)[m
[36m[09:51:34.111387] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.111399] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[09:51:34.111450] [W] [thread 55208] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[09:51:34.111465] [W] [thread 55208] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[09:51:34.111496] [D] [thread 55208] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[09:51:34.111530] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[09:51:34.111545] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.111579] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[09:51:34.111593] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.111648] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(21)[m
[36m[09:51:34.111667] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.111679] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:51:34.111736] [D] [thread 55208] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:51:34.111776] [D] [thread 55208] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:51:34.111789] [D] [thread 55208] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:51:34.111964] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[09:51:34.111988] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.112000] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:51:34.112046] [D] [thread 55208] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:51:34.112071] [D] [thread 55208] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:51:34.112082] [D] [thread 55208] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:51:34.112196] [D] [thread 55208] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:51:34.112240] [D] [thread 55208] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[09:51:34.112273] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[09:51:34.112290] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.112368] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[09:51:34.112388] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.112471] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(22)[m
[36m[09:51:34.112496] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.112510] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[09:51:34.112553] [W] [thread 55208] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[09:51:34.112570] [W] [thread 55208] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[09:51:34.112606] [D] [thread 55208] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[09:51:34.112641] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[09:51:34.112663] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.112707] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[09:51:34.112730] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.112781] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(22)[m
[36m[09:51:34.112796] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.112809] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[09:51:34.112857] [W] [thread 55208] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[09:51:34.112872] [W] [thread 55208] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[09:51:34.112905] [D] [thread 55208] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[09:51:34.112939] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[09:51:34.112967] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.113008] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(18)[m
[36m[09:51:34.113023] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.113068] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(22)[m
[36m[09:51:34.113083] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.113095] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[09:51:34.113150] [W] [thread 55208] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[09:51:34.113165] [W] [thread 55208] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[09:51:34.113196] [D] [thread 55208] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10)) placement.[m
[36m[09:51:34.113229] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))[m
[36m[09:51:34.113244] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.113279] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[09:51:34.113299] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.113346] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(22)[m
[36m[09:51:34.113370] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.113383] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:51:34.113441] [D] [thread 55208] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:51:34.113466] [D] [thread 55208] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:51:34.113478] [D] [thread 55208] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:51:34.113616] [D] [thread 55208] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[09:51:34.113637] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.113649] [D] [thread 55208] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:51:34.113690] [D] [thread 55208] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:51:34.113708] [D] [thread 55208] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:51:34.113718] [D] [thread 55208] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:51:34.113825] [D] [thread 55208] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:51:34.113840] [D] [thread 55208] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.113853] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.113906] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.113944] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:51:34.114196] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3)) on execution node with id 4[m
[36m[09:51:34.114221] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.114252] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.114445] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[09:51:34.114640] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3)) as new root of the plan.[m
[36m[09:51:34.114668] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.114679] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.114706] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.114719] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.114852] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:51:34.114936] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.114973] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[09:51:34.114986] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[09:51:34.115077] [D] [thread 55208] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 4[m
[36m[09:51:34.115256] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.115278] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.115307] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[09:51:34.115329] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.115389] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.115470] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.115500] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:51:34.115566] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:51:34.115579] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[09:51:34.115617] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 4[m
[36m[09:51:34.115629] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.115646] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.115680] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.115694] [D] [thread 55208] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:51:34.115728] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.115740] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.115809] [D] [thread 55208] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:51:34.115820] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.115851] [D] [thread 55208] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:51:34.115946] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[09:51:34.116137] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.116159] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.116188] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[09:51:34.116199] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[09:51:34.116351] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3)) as root operator.[m
[36m[09:51:34.116430] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.116456] [D] [thread 55208] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:51:34.116500] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:51:34.116528] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.116544] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[09:51:34.116554] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[09:51:34.116661] [D] [thread 55208] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[09:51:34.116718] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.116736] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.116752] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[09:51:34.116772] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.116828] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.116903] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:51:34.116924] [W] [thread 55208] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:51:34.116933] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.116946] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.116994] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.117021] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:51:34.117121] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[09:51:34.117136] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.117148] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.117243] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[09:51:34.117416] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[09:51:34.117433] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.117441] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.117463] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.117474] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.117527] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:51:34.117554] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.117569] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:51:34.117590] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:51:34.117651] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[09:51:34.117733] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.117752] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.117767] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:51:34.117785] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.117832] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.117898] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.117917] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:51:34.117977] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:51:34.117990] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:51:34.118020] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 5[m
[36m[09:51:34.118031] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.118052] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.118076] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.118088] [D] [thread 55208] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:51:34.118118] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.118129] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.118178] [D] [thread 55208] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:51:34.118188] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.118206] [D] [thread 55208] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:51:34.118281] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[09:51:34.118456] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.118474] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.118487] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[09:51:34.118497] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[09:51:34.118611] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[09:51:34.118659] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.118675] [D] [thread 55208] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:51:34.118712] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:51:34.118730] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.118744] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:51:34.118754] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:51:34.118816] [D] [thread 55208] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[09:51:34.118854] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.118871] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.118886] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:51:34.118905] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.118950] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.119013] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:51:34.119036] [W] [thread 55208] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:51:34.119044] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.119057] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.119120] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.119139] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:51:34.119232] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[09:51:34.119247] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.119259] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.119350] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[09:51:34.119539] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[09:51:34.119559] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.119567] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.119600] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.119613] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.119704] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:51:34.119740] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.119769] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:51:34.119781] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:51:34.119844] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[09:51:34.119901] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.119919] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.119947] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:51:34.119969] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.120026] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.120104] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.120122] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:51:34.120175] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:51:34.120188] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:51:34.120220] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 6[m
[36m[09:51:34.120232] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.120245] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.120269] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.120281] [D] [thread 55208] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:51:34.120312] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.120357] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.120419] [D] [thread 55208] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:51:34.120431] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.120451] [D] [thread 55208] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:51:34.120523] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[09:51:34.120708] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.120729] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.120742] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[09:51:34.120764] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[09:51:34.120886] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[09:51:34.120934] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.120950] [D] [thread 55208] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:51:34.120987] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:51:34.121006] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.121022] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:51:34.121031] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:51:34.121089] [D] [thread 55208] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[09:51:34.121128] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.121145] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.121174] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:51:34.121197] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.121246] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.121311] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:51:34.121334] [W] [thread 55208] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:51:34.121343] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.121355] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.121400] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.121419] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:51:34.121511] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[09:51:34.121525] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.121538] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.121628] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[09:51:34.121799] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[09:51:34.121815] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.121823] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.121845] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.121856] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.121907] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:51:34.121935] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.121950] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:51:34.121959] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:51:34.122013] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[09:51:34.122062] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.122079] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.122093] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:51:34.122111] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.122159] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.122234] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.122254] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:51:34.122304] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:51:34.122317] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:51:34.122347] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 7[m
[36m[09:51:34.122359] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.122371] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.122395] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.122407] [D] [thread 55208] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:51:34.122434] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.122445] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.122492] [D] [thread 55208] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:51:34.122503] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.122520] [D] [thread 55208] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:51:34.122585] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[09:51:34.122744] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.122763] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.122776] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[09:51:34.122785] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[09:51:34.122897] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[09:51:34.122945] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.122973] [D] [thread 55208] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:51:34.123012] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:51:34.123031] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.123045] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:51:34.123054] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:51:34.123106] [D] [thread 55208] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[09:51:34.123146] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.123162] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.123178] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:51:34.123197] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.123243] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.123308] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.123335] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.123416] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(21) on execution node with id 2[m
[36m[09:51:34.123431] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.123442] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.123547] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[09:51:34.123790] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(21) as new root of the plan.[m
[36m[09:51:34.123811] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.123819] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.123841] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.123853] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.123906] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:51:34.123940] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.123955] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[09:51:34.123964] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[09:51:34.124018] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[09:51:34.124066] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.124083] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.124099] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 2[m
[36m[09:51:34.124118] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.124183] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.124256] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:51:34.124277] [W] [thread 55208] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:51:34.124286] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.124299] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.124307] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.124399] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.124424] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:51:34.124523] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[09:51:34.124538] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.124550] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.124644] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[09:51:34.124823] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[09:51:34.124841] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.124849] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.124871] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.124883] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.124936] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:51:34.124967] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.124983] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:51:34.124992] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:51:34.125047] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[09:51:34.125103] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.125122] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.125138] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:51:34.125157] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.125207] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.125272] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.125290] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:51:34.125350] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:51:34.125364] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:51:34.125393] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 8[m
[36m[09:51:34.125404] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.125417] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.125441] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.125453] [D] [thread 55208] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:51:34.125487] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.125499] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.125546] [D] [thread 55208] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:51:34.125557] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.125575] [D] [thread 55208] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:51:34.125645] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[09:51:34.125812] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.125830] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.125843] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[09:51:34.125853] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[09:51:34.125963] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[09:51:34.126010] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.126026] [D] [thread 55208] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:51:34.126062] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:51:34.126080] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.126095] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:51:34.126104] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:51:34.126159] [D] [thread 55208] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[09:51:34.126199] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.126229] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.126247] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:51:34.126267] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.126312] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.126380] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:51:34.126401] [W] [thread 55208] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:51:34.126410] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.126423] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.126468] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.126487] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:51:34.126573] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[09:51:34.126588] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.126605] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.126692] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[09:51:34.126852] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[09:51:34.126869] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.126877] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.126897] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.126908] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.126958] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:51:34.126986] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.127000] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:51:34.127010] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:51:34.127062] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[09:51:34.127113] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.127130] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.127145] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:51:34.127165] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.127210] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.127271] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.127302] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:51:34.127354] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:51:34.127366] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:51:34.127397] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 9[m
[36m[09:51:34.127408] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.127420] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.127443] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.127459] [D] [thread 55208] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:51:34.127510] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.127531] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.127586] [D] [thread 55208] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:51:34.127597] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.127616] [D] [thread 55208] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:51:34.127682] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[09:51:34.127853] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.127871] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.127884] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[09:51:34.127893] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[09:51:34.128010] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[09:51:34.128059] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.128076] [D] [thread 55208] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:51:34.128121] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:51:34.128139] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.128154] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:51:34.128163] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:51:34.128220] [D] [thread 55208] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[09:51:34.128261] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.128279] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.128294] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:51:34.128315] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.128396] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.128468] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:51:34.128490] [W] [thread 55208] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:51:34.128498] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.128511] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.128559] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.128578] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:51:34.128680] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[09:51:34.128695] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.128716] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.128835] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[09:51:34.128997] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[09:51:34.129014] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.129022] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.129043] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.129056] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.129107] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:51:34.129136] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.129151] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:51:34.129160] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:51:34.129217] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[09:51:34.129270] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.129287] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.129302] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:51:34.129320] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.129367] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.129437] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.129466] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:51:34.129517] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:51:34.129530] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:51:34.129561] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(18) on execution node with id 10[m
[36m[09:51:34.129572] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.129585] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.129608] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.129620] [D] [thread 55208] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:51:34.129649] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.129660] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.129709] [D] [thread 55208] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:51:34.129720] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.129738] [D] [thread 55208] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:51:34.129803] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[09:51:34.129961] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.129981] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.129995] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[09:51:34.130004] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[09:51:34.130116] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[09:51:34.130163] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.130179] [D] [thread 55208] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:51:34.130214] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:51:34.130232] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.130247] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:51:34.130256] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:51:34.130310] [D] [thread 55208] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[09:51:34.130349] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.130365] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.130380] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:51:34.130408] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.130454] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.130515] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:51:34.130537] [W] [thread 55208] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:51:34.130546] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.130566] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.130615] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.130633] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[09:51:34.130717] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10)) on execution node with id 11[m
[36m[09:51:34.130732] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.130743] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.130827] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[09:51:34.130980] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10)) as new root of the plan.[m
[36m[09:51:34.130996] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.131004] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.131024] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.131035] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.131129] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[09:51:34.131161] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.131176] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[09:51:34.131197] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[09:51:34.131257] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 11 to the query Id 1[m
[36m[09:51:34.131312] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.131330] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.131346] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[09:51:34.131365] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.131414] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.131480] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:51:34.131498] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[09:51:34.131548] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[09:51:34.131561] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[09:51:34.131591] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 11[m
[36m[09:51:34.131602] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.131614] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.131649] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.131663] [D] [thread 55208] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:51:34.131691] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.131702] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.131750] [D] [thread 55208] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:51:34.131761] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.131779] [D] [thread 55208] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:51:34.131844] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[09:51:34.132006] [D] [thread 55208] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:51:34.132028] [D] [thread 55208] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:51:34.132042] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[09:51:34.132051] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[09:51:34.132163] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10)) as root operator.[m
[36m[09:51:34.132208] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.132223] [D] [thread 55208] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:51:34.132258] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[09:51:34.132277] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.132291] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[09:51:34.132301] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[09:51:34.132392] [D] [thread 55208] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[09:51:34.132439] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.132457] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.132473] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[09:51:34.132493] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.132542] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.132613] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.132639] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.132724] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(22) on execution node with id 3[m
[36m[09:51:34.132738] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.132751] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.132843] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[09:51:34.133030] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(22) as new root of the plan.[m
[36m[09:51:34.133048] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.133056] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.133091] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.133103] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.133155] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:51:34.133185] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.133201] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[09:51:34.133211] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[09:51:34.133263] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[09:51:34.133315] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.133332] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.133348] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 3[m
[36m[09:51:34.133367] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.133415] [D] [thread 55208] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:51:34.133482] [D] [thread 55208] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:51:34.133506] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:51:34.133596] [D] [thread 55208] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[09:51:34.133610] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:51:34.133622] [W] [thread 55208] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:51:34.133704] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[09:51:34.133906] [D] [thread 55208] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[09:51:34.133931] [D] [thread 55208] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:34.133939] [D] [thread 55208] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:34.133961] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.133973] [D] [thread 55208] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:51:34.134021] [D] [thread 55208] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:51:34.134050] [D] [thread 55208] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:51:34.134065] [W] [thread 55208] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[09:51:34.134075] [D] [thread 55208] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[09:51:34.134128] [D] [thread 55208] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[09:51:34.134178] [D] [thread 55208] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:51:34.134194] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:51:34.134209] [I] [thread 55208] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[09:51:34.134227] [D] [thread 55208] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:51:34.134248] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.134265] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.134273] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.134282] [D] [thread 55208] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:51:34.134299] [D] [thread 55208] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[09:51:34.134340] [I] [thread 55208] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[09:51:34.134363] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.134425] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[09:51:34.134442] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[09:51:34.134471] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.134601] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.134625] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.134646] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[09:51:34.134692] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.134776] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.134792] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.134799] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.134911] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:51:34.134988] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:51:34.135001] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[09:51:34.135022] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.135038] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.135067] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[09:51:34.135080] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[32m[09:51:34.135222] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[09:51:34.135403] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[09:51:34.135472] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.135517] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.135529] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:51:34.135546] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.135559] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.135766] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[09:51:34.135817] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[09:51:34.135843] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[09:51:34.135992] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:51:34.136011] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[09:51:34.136025] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[09:51:34.136041] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.136070] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:51:34.136100] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.136149] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[09:51:34.136163] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[09:51:34.136189] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.136298] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.136416] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.136458] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.136499] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.136566] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.136596] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.136606] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.136671] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:51:34.136743] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:51:34.136757] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:51:34.136775] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.136790] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.136820] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[09:51:34.136834] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[09:51:34.136904] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[09:51:34.137066] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[09:51:34.137135] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.137178] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.137190] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:51:34.137207] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.137219] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.137373] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[09:51:34.137420] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[09:51:34.137433] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[09:51:34.137574] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:51:34.137592] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:51:34.137618] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[09:51:34.137631] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.137676] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:51:34.137709] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.137761] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[09:51:34.137775] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[09:51:34.137799] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.137908] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.137954] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.138004] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[09:51:34.138043] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.138105] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.138121] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.138128] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.138199] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:51:34.138266] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:51:34.138279] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:51:34.138296] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.138313] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.138342] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[09:51:34.138354] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[09:51:34.138424] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[09:51:34.138573] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[09:51:34.138640] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.138683] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.138695] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:51:34.138711] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.138724] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.138827] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[09:51:34.138867] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[09:51:34.138881] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[09:51:34.139014] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:51:34.139031] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:51:34.139043] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[09:51:34.139054] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.139085] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:51:34.139121] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.139166] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[09:51:34.139180] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[09:51:34.139205] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.139309] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.139357] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.139407] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[09:51:34.139445] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.139506] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.139521] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.139528] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.139587] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:51:34.139652] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:51:34.139664] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:51:34.139681] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.139696] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.139723] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[09:51:34.139735] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[09:51:34.139801] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[09:51:34.139943] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[09:51:34.140010] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.140051] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.140064] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:51:34.140080] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.140092] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.140248] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[09:51:34.140294] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[09:51:34.140307] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[09:51:34.140497] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:51:34.140517] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:51:34.140530] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[09:51:34.140540] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.140584] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:51:34.140623] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.140798] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.140819] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.140838] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[09:51:34.140869] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.140924] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.140939] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.140946] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.141008] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.141073] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.141087] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:51:34.141104] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.141119] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.141146] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[09:51:34.141159] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[32m[09:51:34.141227] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[09:51:34.141370] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(21) as root operator.[m
[36m[09:51:34.141456] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:51:34.141500] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:51:34.141513] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:51:34.141529] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.141541] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.141644] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[09:51:34.141685] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[09:51:34.141698] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[09:51:34.141827] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:51:34.141856] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:51:34.141869] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[09:51:34.141879] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.141906] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:51:34.141935] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.141980] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[09:51:34.141994] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[09:51:34.142018] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.142124] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.142145] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.142163] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[09:51:34.142193] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.142251] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.142266] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.142273] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.142331] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:51:34.142406] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:51:34.142420] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:51:34.142437] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.142452] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.142482] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[09:51:34.142562] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[09:51:34.142638] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[09:51:34.142806] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[09:51:34.142951] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.143006] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.143019] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:51:34.143038] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.143052] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.143162] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[09:51:34.143209] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:51:34.143224] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[09:51:34.143357] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:51:34.143374] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:51:34.143387] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[09:51:34.143397] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.143422] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:51:34.143452] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.143498] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[09:51:34.143511] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[09:51:34.143536] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.143640] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.143680] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.143712] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.143749] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.143810] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.143826] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.143843] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.143909] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:51:34.143974] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:51:34.143987] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:51:34.144004] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.144019] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.144045] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[09:51:34.144058] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[09:51:34.144127] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[09:51:34.144278] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[09:51:34.144395] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.144447] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.144459] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:51:34.144476] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.144490] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.144599] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[09:51:34.144651] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:51:34.144669] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[09:51:34.144818] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:51:34.144838] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:51:34.144851] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[09:51:34.144861] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.144893] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:51:34.144922] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.144970] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[09:51:34.144983] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[09:51:34.145008] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.145114] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.145160] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.145198] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[09:51:34.145235] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.145294] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.145325] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.145334] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.145396] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:51:34.145461] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:51:34.145473] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:51:34.145491] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.145505] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.145533] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[09:51:34.145546] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[09:51:34.145658] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[09:51:34.145836] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(18) as root operator.[m
[36m[09:51:34.145920] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.145991] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.146004] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:51:34.146025] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.146041] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.146177] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[09:51:34.146223] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:51:34.146243] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[09:51:34.146402] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:51:34.146421] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:51:34.146434] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[09:51:34.146445] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.146488] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:51:34.146520] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.146573] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[09:51:34.146586] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[09:51:34.146611] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.146721] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.146772] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.146811] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[09:51:34.146851] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.146913] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.146928] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.146935] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.146995] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[09:51:34.147061] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[09:51:34.147075] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[09:51:34.147091] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.147106] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.147133] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[09:51:34.147146] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[09:51:34.147213] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[09:51:34.147355] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[09:51:34.147421] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.147464] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.147476] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:51:34.147493] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.147505] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.147612] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[09:51:34.147656] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:51:34.147669] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[09:51:34.147805] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[09:51:34.147824] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[09:51:34.147836] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  11[m
[36m[09:51:34.147847] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.147891] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:51:34.147929] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.148078] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.148120] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.148150] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.148188] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.148254] [D] [thread 55208] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:51:34.148269] [D] [thread 55208] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:51:34.148276] [D] [thread 55208] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:51:34.148373] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.148448] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.148473] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:51:34.148494] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.148509] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.148539] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:51:34.148554] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[09:51:34.148666] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[09:51:34.148836] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(22) as root operator.[m
[36m[09:51:34.148910] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:51:34.148952] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:51:34.148963] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:51:34.148981] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.148994] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:51:34.149098] [I] [thread 55208] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[09:51:34.149139] [D] [thread 55208] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[09:51:34.149152] [D] [thread 55208] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[09:51:34.149294] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:51:34.149311] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:51:34.149324] [D] [thread 55208] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[09:51:34.149335] [D] [thread 55208] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:51:34.149366] [D] [thread 55208] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:51:34.149425] [D] [thread 55208] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:51:34.149464] [D] [thread 55208] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[09:51:34.149476] [D] [thread 55208] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:51:34.149486] [D] [thread 55208] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:51:34.149502] [D] [thread 55208] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[09:51:34.149522] [D] [thread 55208] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:51:34.149583] [D] [thread 55208] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[09:51:34.149606] [D] [thread 55208] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:51:34.149631] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.149645] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.149861] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.149909] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.149943] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.149986] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.150010] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.150452] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.150507] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.150526] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.150676] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.150712] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.150740] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.150776] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.150798] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.151179] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.151221] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.151236] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.151358] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.151406] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.151434] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.151467] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.151489] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.151844] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.151879] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.151893] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.152043] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.152088] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.152118] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.152135] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:34.152156] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.152181] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.152619] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.152667] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.152684] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.152863] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.152911] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.152948] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[09:51:34.152981] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.153002] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.153422] [D] [thread 55208] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:51:34.153662] [I] [thread 55208] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:51:34.153756] [I] [thread 55208] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.153903] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.153950] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.153966] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.154110] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.154149] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.154179] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.154214] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.154238] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.154561] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.154594] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.154607] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.154751] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.154784] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.154808] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.154838] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.154858] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.155177] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.155209] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.155223] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.155373] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.155407] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.155432] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.155460] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.155486] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.155819] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.155857] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.155872] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.156006] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.156051] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.156077] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:51:34.156109] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.156129] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.156517] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.156560] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.156576] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.156731] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.156775] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.156810] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[09:51:34.156842] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.156862] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.157276] [D] [thread 55208] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:51:34.157530] [I] [thread 55208] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:51:34.157630] [I] [thread 55208] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.157772] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.157829] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.157848] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.157991] [D] [thread 55208] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:51:34.158031] [D] [thread 55208] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:51:34.158065] [D] [thread 55208] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[09:51:34.158097] [D] [thread 55208] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:51:34.158119] [D] [thread 55208] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:51:34.158245] [D] [thread 55208] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:51:34.158296] [D] [thread 55208] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[09:51:34.160060] [D] [thread 55208] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:11)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.12:33677 1::35::0::0})
|    SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.30:46817 1::50::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  SINK(37: {NetworkSinkDescriptor(partition=1::35::0::0;nodeLocation=tcp://192.168.2.11:35855)})
|  |    CENTRALWINDOW(21)
|  |      SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.31:38647 1::23::0::0})
|  |      SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.32:46653 1::26::0::0})
|  |      SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.33:41255 1::29::0::0})
|  |      SOURCE(32,,NetworkSourceDescriptor{tcp://192.168.2.34:34553 1::32::0::0})
|  |--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(25: {NetworkSinkDescriptor(partition=1::23::0::0;nodeLocation=tcp://192.168.2.12:33677)})
|  |  |    WATERMARKASSIGNER(6)
|  |  |      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.12:33677)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:33677)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.12:33677)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.11:35855)})
|  |    CENTRALWINDOW(22)
|  |      SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.35:40527 1::38::0::0})
|  |      SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.37:33929 1::41::0::0})
|  |      SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.38:45173 1::44::0::0})
|  |      SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.39:46809 1::47::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.30:46817)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:46817)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.30:46817)})
|  |  |    WATERMARKASSIGNER(18)
|  |  |      SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
|  |--ExecutionNode(id:11, ip:192.168.2.39, topologyId:11)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  |  SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.30:46817)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[36m[09:51:34.160203] [D] [thread 55208] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[09:51:34.160234] [D] [thread 55208] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:51:34.160547] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.160575] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.160799] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.160818] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.160887] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.160900] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.160953] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.160968] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161013] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.161027] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161064] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.161077] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161114] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.161126] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161165] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.161178] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161216] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.161229] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161266] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.161278] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161314] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.161327] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161486] [D] [thread 55208] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[09:51:34.161517] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[09:51:34.161527] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.161537] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.161753] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:37425[m
[36m[09:51:34.161798] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:37425 queryId=1 querySubPlanId = 1[m
[36m[09:51:34.162071] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(25: {NetworkSinkDescriptor(partition=1::23::0::0;nodeLocation=tcp://192.168.2.12:33677)})
  WATERMARKASSIGNER(6)
    SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream3))
[m
[36m[09:51:34.162107] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.162363] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.166460] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.167632] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.168082] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.168488] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.169330] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:51:34.170369] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.170746] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.171110] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.171365] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.171684] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.172132] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream3)[m
[36m[09:51:34.172419] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.172798] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.173339] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.173699] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.173948] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.174277] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.185815] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[09:51:34.185900] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.185931] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.186054] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:39859[m
[36m[09:51:34.186085] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:39859 queryId=1 querySubPlanId = 2[m
[36m[09:51:34.186287] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.12:33677)})
  WATERMARKASSIGNER(8)
    SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[09:51:34.186320] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.186473] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.186845] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.187294] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.187638] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.188052] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.188756] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:51:34.188894] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.189148] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.189531] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.189802] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.190148] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.190568] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[09:51:34.190777] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.191149] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.191542] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.191899] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.192151] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.192548] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.200810] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[09:51:34.200885] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.200908] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.201030] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:44731[m
[36m[09:51:34.201059] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:44731 queryId=1 querySubPlanId = 3[m
[36m[09:51:34.201254] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:33677)})
  WATERMARKASSIGNER(10)
    SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[09:51:34.201288] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.201446] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.201788] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.202175] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.202445] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.202788] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.203291] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:51:34.203396] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.203626] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.203985] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.204243] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.204635] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.205072] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[09:51:34.205282] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.205652] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.206044] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.206402] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.206647] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.206992] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.217561] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[09:51:34.217780] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.217817] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.218128] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:42629[m
[36m[09:51:34.218198] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:42629 queryId=1 querySubPlanId = 4[m
[36m[09:51:34.218536] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.12:33677)})
  WATERMARKASSIGNER(12)
    SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[09:51:34.218615] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.218821] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.219208] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.219655] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.219995] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.220487] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.221134] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:51:34.221289] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.221562] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.222005] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.222358] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.222785] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.223372] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[09:51:34.223632] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.224070] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.224630] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.225068] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.225404] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.225828] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.234471] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[09:51:34.234554] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.234577] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.234709] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:36405[m
[36m[09:51:34.234744] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:36405 queryId=1 querySubPlanId = 5[m
[36m[09:51:34.235045] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(37: {NetworkSinkDescriptor(partition=1::35::0::0;nodeLocation=tcp://192.168.2.11:35855)})
  CENTRALWINDOW(21)
    SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.31:38647 1::23::0::0})
    SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.32:46653 1::26::0::0})
    SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.33:41255 1::29::0::0})
    SOURCE(32,,NetworkSourceDescriptor{tcp://192.168.2.34:34553 1::32::0::0})
[m
[36m[09:51:34.235113] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.235315] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.235615] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.235838] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.236049] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.236246] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.236811] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:51:34.237009] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.237323] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:51:34.237497] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.237553] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:51:34.237643] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.238227] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.238677] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.238947] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.239151] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.239652] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:38647 1::23::0::0}[m
[36m[09:51:34.239931] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.240453] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.241091] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.241541] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.241876] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.242300] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.242908] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:46653 1::26::0::0}[m
[36m[09:51:34.243125] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.243549] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.244089] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.244583] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.244894] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.245257] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.245759] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:41255 1::29::0::0}[m
[36m[09:51:34.245954] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.246329] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.246785] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.247160] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.247491] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.247915] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.248606] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:34553 1::32::0::0}[m
[36m[09:51:34.248848] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.249283] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.249832] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.250267] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.250614] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.251039] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.263549] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[09:51:34.263644] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.263669] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.263801] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:36055[m
[36m[09:51:34.263837] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:36055 queryId=1 querySubPlanId = 6[m
[36m[09:51:34.264049] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.30:46817)})
  WATERMARKASSIGNER(14)
    SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[09:51:34.264092] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.264278] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.264711] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.265160] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.265497] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.265921] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.266525] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:51:34.266673] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.266932] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.267316] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.267629] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.268015] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.268555] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[09:51:34.268788] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.269189] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.269702] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.270093] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.270399] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.270796] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.280827] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[09:51:34.280909] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.280945] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.281079] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:40997[m
[36m[09:51:34.281116] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:40997 queryId=1 querySubPlanId = 7[m
[36m[09:51:34.281385] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:46817)})
  WATERMARKASSIGNER(16)
    SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:51:34.281422] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.281593] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.281967] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.282389] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.282721] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.283143] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.283743] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:51:34.283866] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.284109] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.284543] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.284823] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.285166] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.285628] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[09:51:34.285853] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.286240] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.286652] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.287019] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.287322] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.287719] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.296414] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[09:51:34.296489] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.296524] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.296664] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:44815[m
[36m[09:51:34.296697] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:44815 queryId=1 querySubPlanId = 8[m
[36m[09:51:34.296903] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.30:46817)})
  WATERMARKASSIGNER(18)
    SOURCE(17,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:51:34.296938] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.297095] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.297422] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.297822] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.298105] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.298486] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.299036] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:51:34.299162] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.299426] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.299852] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.300168] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.300616] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.301171] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[09:51:34.301422] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.301853] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.302338] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.302758] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.303087] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.303498] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.312305] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=11[m
[36m[09:51:34.312417] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.312473] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.312607] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.39:37337[m
[36m[09:51:34.312639] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.39:37337 queryId=1 querySubPlanId = 9[m
[36m[09:51:34.312856] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.30:46817)})
  WATERMARKASSIGNER(20)
    SOURCE(19,debs,LogicalSourceDescriptor(debs, test_stream10))
[m
[36m[09:51:34.312895] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.313069] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.313455] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.313891] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.314219] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.314690] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.315349] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:51:34.315497] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.315767] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.316164] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.316531] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.316937] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.317482] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream10)[m
[36m[09:51:34.317736] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.318172] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.318668] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.319105] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.319434] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.319850] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.328685] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[09:51:34.328767] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.328801] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.328930] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:34103[m
[36m[09:51:34.328968] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:34103 queryId=1 querySubPlanId = 10[m
[36m[09:51:34.329273] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.11:35855)})
  CENTRALWINDOW(22)
    SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.35:40527 1::38::0::0})
    SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.37:33929 1::41::0::0})
    SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.38:45173 1::44::0::0})
    SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.39:46809 1::47::0::0})
[m
[36m[09:51:34.329354] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.329547] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.329840] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.330058] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.330253] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.330430] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.330907] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:51:34.331089] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.331263] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:51:34.331389] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.331428] [D] [thread 55208] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:51:34.331496] [D] [thread 55208] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:51:34.331836] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.332260] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.332560] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.332764] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.333258] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:40527 1::38::0::0}[m
[36m[09:51:34.333543] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.333988] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.334558] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.334991] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.335318] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.335737] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.336377] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:33929 1::41::0::0}[m
[36m[09:51:34.336613] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.337047] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.337580] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.338007] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.338351] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.338785] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.339422] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:45173 1::44::0::0}[m
[36m[09:51:34.339661] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.340065] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.340581] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.340951] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.341216] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.341563] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.342113] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.39:46809 1::47::0::0}[m
[36m[09:51:34.342324] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.342794] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.343316] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.343810] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.344150] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:51:34.344652] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.357222] [D] [thread 55208] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[09:51:34.357314] [D] [thread 55208] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:51:34.357342] [D] [thread 55208] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:51:34.357488] [D] [thread 55208] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:41243[m
[36m[09:51:34.357522] [D] [thread 55208] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:41243 queryId=1 querySubPlanId = 11[m
[36m[09:51:34.357776] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.12:33677 1::35::0::0})
  SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.30:46817 1::50::0::0})
[m
[36m[09:51:34.357816] [D] [thread 55208] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:51:34.357968] [D] [thread 55208] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:51:34.358283] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.358516] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.358692] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.358881] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.359326] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:33677 1::35::0::0}[m
[36m[09:51:34.359470] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.359652] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.359990] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.360193] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.360408] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.360599] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.361038] [D] [thread 55208] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:46817 1::50::0::0}[m
[36m[09:51:34.361187] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.361375] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.361707] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.361903] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.362062] [D] [thread 55208] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:34.362230] [D] [thread 55208] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:51:34.369689] [D] [thread 55208] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 11 queues[m
[36m[09:51:34.471641] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:34.472148] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:34.772461] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:34.772645] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:34.772811] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:34.773006] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:34.773287] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:34.785080] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:34.785186] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:34.785259] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:34.785314] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:34.785470] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:34.807249] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:34.807350] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:34.807419] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:34.807470] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:34.807618] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:34.849416] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:34.849536] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:34.849601] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:34.849644] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:34.849775] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:34.884418] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:34.884765] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:34.931814] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:34.931987] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:34.932090] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:34.932162] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:34.932472] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:35.094492] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:35.094718] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:35.094806] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:35.094875] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:35.095150] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:35.209986] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:35.210342] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:35.416974] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:35.417079] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:35.417135] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:35.417172] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:35.417307] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:36.059759] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:36.059927] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:36.060027] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:36.060099] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:36.060315] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:36.211550] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:36.322879] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:36.323233] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:37.324517] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:37.342951] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:37.343117] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[33m[1m[09:51:37.343218] [W] [thread 55217] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:51:37.343289] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[33m[1m[09:51:37.343506] [W] [thread 55217] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::35::0::0[m
[36m[09:51:37.438481] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:37.438839] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:38.440188] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:38.560719] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:38.561062] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:51:39.285309] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[09:51:39.285457] [D] [thread 55220] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:51:39.285971] [D] [thread 55220] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:51:39.286055] [D] [thread 55220] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:51:39.286401] [D] [thread 55220] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:51:39.287697] [D] [thread 55220] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:51:39.287828] [D] [thread 55220] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:51:39.288241] [D] [thread 55220] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:51:39.288484] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[09:51:39.288561] [D] [thread 55220] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:51:39.288975] [D] [thread 55220] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:51:39.289036] [D] [thread 55220] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:51:39.289374] [D] [thread 55220] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:51:39.290730] [D] [thread 55220] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:51:39.290838] [D] [thread 55220] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:51:39.291240] [D] [thread 55220] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:51:39.291398] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[09:51:39.291458] [D] [thread 55220] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:51:39.291856] [D] [thread 55220] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:51:39.291923] [D] [thread 55220] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:51:39.292254] [D] [thread 55220] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:51:39.293521] [D] [thread 55220] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(53: {FileSinkDescriptor()})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.12:33677 1::35::0::0})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.30:46817 1::50::0::0})
[m
[32m[09:51:39.293600] [I] [thread 55220] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 11 [m
[32m[09:51:39.293725] [I] [thread 55220] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
Dumping queryPlan: [36m[09:51:39.294021] [D] [thread 55220] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 11[m
[36m[09:51:39.294084] [D] [thread 55220] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-11-2023-11-09 09:51:39 - 1. LogicalQueryPlan[m
SINK(53: {FileSinkDescriptor()})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.12:33677 1::35::0::0})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.30:46817 1::50::0::0})

[32m[09:51:39.294606] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[32m[09:51:39.294738] [I] [thread 55220] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[09:51:39.294755] [I] [thread 55220] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[09:51:39.294763] [I] [thread 55220] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:51:39.294782] [I] [thread 55220] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:39.294791] [I] [thread 55220] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:51:39.294869] [I] [thread 55220] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:51:39.295088] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[09:51:39.295230] [D] [thread 55220] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[09:51:39.295248] [I] [thread 55220] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:51:39.295256] [I] [thread 55220] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[09:51:39.295334] [D] [thread 55220] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:51:39.295348] [D] [thread 55220] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[09:51:39.295393] [D] [thread 55220] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[09:51:39.295414] [D] [thread 55220] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
Dumping queryPlan: PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[32m[09:51:39.295542] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[09:51:39.295649] [D] [thread 55220] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:51:39.295673] [D] [thread 55220] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:51:39.295710] [I] [thread 55220] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:51:39.295720] [I] [thread 55220] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:51:39.295732] [I] [thread 55220] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:51:39.295823] [D] [thread 55220] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:51:39.295839] [D] [thread 55220] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:51:39.295901] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[09:51:39.295973] [D] [thread 55220] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:51:39.296002] [D] [thread 55220] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:51:39.296042] [I] [thread 55220] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:51:39.296051] [I] [thread 55220] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:51:39.296061] [I] [thread 55220] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:51:39.296139] [D] [thread 55220] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
Dumping pipelineQueryPlan: [36m[09:51:39.296155] [D] [thread 55220] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[09:51:39.296264] [D] [thread 55220] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-11-2023-11-09 09:51:39 - 2. PhysicalQueryPlan[m
[36m[09:51:39.296495] [D] [thread 55220] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 11[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 11, no. pipelines: 3
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[09:51:39.296864] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
Dumping pipelineQueryPlan: [36m[09:51:39.297062] [D] [thread 55220] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 11, no. pipelines: 3
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[09:51:39.297086] [D] [thread 55220] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:39.297095] [D] [thread 55220] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:51:39.297567] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[09:51:39.297716] [D] [thread 55220] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:51:39.297732] [D] [thread 55220] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:39.297740] [D] [thread 55220] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:51:39.297863] [I] [thread 55220] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[09:51:39.297956] [D] [thread 55220] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:51:39.297970] [D] [thread 55220] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:51:39.297977] [D] [thread 55220] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:51:39.298060] [D] [thread 55220] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-11-09 09:51:39 - 3. AfterPipelinedQueryPlan[m
[36m[09:51:39.298426] [D] [thread 55220] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-11-09 09:51:39 - 4. AfterAddScanAndEmitPhase[m
[36m[09:51:39.298734] [D] [thread 55220] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 11[m
[36m[09:51:39.299015] [D] [thread 55220] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  57[m
[32m[09:51:39.299077] [I] [thread 55220] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[09:51:39.299402] [D] [thread 55220] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out[m
[32m[09:51:39.300077] [I] [thread 55220] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:51:39.300760] [D] [thread 55220] [DataSource.cpp:75] [DataSource] DataSource  35 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:51:39.301675] [I] [thread 55220] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:51:39.302005] [D] [thread 55220] [DataSource.cpp:75] [DataSource] DataSource  50 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:51:39.303021] [D] [thread 55220] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 11[m
[36m[09:51:39.303215] [D] [thread 55220] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  11  as a singleton[m
[36m[09:51:39.303237] [D] [thread 55220] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=11[m
[36m[09:51:39.303280] [D] [thread 55220] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 2[m
[36m[09:51:39.303314] [D] [thread 55220] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  35  not found. Creating new element with with qep [m
[36m[09:51:39.303553] [D] [thread 55220] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  50  not found. Creating new element with with qep [m
[36m[09:51:39.303617] [D] [thread 55220] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 11  pair queryId= 1  subplanId= 11[m
2023-11-09 09:51:39.303 setup: queryId=1, querySubPlanId=11; 
[36m[09:51:39.304027] [D] [thread 55220] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=11[m
2023-11-09 09:51:39.304 start: queryId=1, querySubPlanId=11; 
[36m[09:51:39.304213] [D] [thread 55220] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=11[m
[36m[09:51:39.304548] [D] [thread 55220] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::35::0::0 from 192.168.2.12[m
[36m[09:51:39.304849] [D] [thread 55220] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::35::0::0=1[m
[36m[09:51:39.304895] [D] [thread 55220] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4800dac0  started successfully[m
[36m[09:51:39.304946] [D] [thread 55220] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::50::0::0 from 192.168.2.30[m
[36m[09:51:39.305000] [D] [thread 55220] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::50::0::0=1[m
[36m[09:51:39.305017] [D] [thread 55220] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4800dd00  started successfully[m
[36m[09:51:39.305067] [D] [thread 55220] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:35 PartitionId: 0 SubpartitionID: 0[m
[36m[09:51:39.305189] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[09:51:39.305535] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[09:51:39.306332] [D] [thread 55218] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::35::0::0[m
[36m[09:51:39.306481] [D] [thread 55220] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::35::0::0[m
[36m[09:51:39.306628] [D] [thread 55220] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:35 PartitionId: 0 SubpartitionID: 0[m
[36m[09:51:39.306672] [D] [thread 55220] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4800dac0  started successfully[m
[36m[09:51:39.306722] [D] [thread 55220] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0[m
[36m[09:51:39.306788] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[09:51:39.306935] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[09:51:39.307238] [D] [thread 55218] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::50::0::0[m
[36m[09:51:39.307342] [D] [thread 55220] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::50::0::0[m
[36m[09:51:39.307464] [D] [thread 55220] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0[m
[36m[09:51:39.307499] [D] [thread 55220] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4800dd00  started successfully[m
[36m[09:51:39.307551] [D] [thread 55220] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[09:51:39.307833] [D] [thread 55220] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  11  succeeded[m
[36m[09:51:39.307948] [D] [thread 55220] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[09:51:39.345987] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::35::0::0[m
[32m[09:51:39.346150] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::35::0::0(threadId=0) Data[m
[36m[09:51:39.346292] [D] [thread 55217] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::35::0::0(threadId=0) REGISTERED[m
[36m[09:51:39.562256] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:39.754360] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:39.755237] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:39.767679] [D] [thread 55217] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): ClientAnnouncement received for channel 0:1::50::0::0[m
[32m[09:51:39.767811] [I] [thread 55217] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::50::0::0(threadId=0) Data[m
[36m[09:51:39.767900] [D] [thread 55217] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::50::0::0(threadId=0) REGISTERED[m
[36m[09:51:40.756548] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:40.824375] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:40.824852] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:41.669608] [D] [thread 55208] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[09:51:41.669714] [D] [thread 55208] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[09:51:41.670260] [D] [thread 55208] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[09:51:41.670421] [D] [thread 55208] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[09:51:41.670457] [D] [thread 55208] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[09:51:41.670651] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[09:51:41.670689] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:37425 queryId=1[m
[36m[09:51:41.675460] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[09:51:41.675547] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:39859 queryId=1[m
[36m[09:51:41.679974] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[09:51:41.680101] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:44731 queryId=1[m
[36m[09:51:41.684512] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[09:51:41.684586] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:42629 queryId=1[m
[36m[09:51:41.688939] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[09:51:41.689021] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:36405 queryId=1[m
[36m[09:51:41.693463] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[09:51:41.693549] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:36055 queryId=1[m
[36m[09:51:41.698063] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[09:51:41.698149] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:40997 queryId=1[m
[36m[09:51:41.702512] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[09:51:41.702639] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:44815 queryId=1[m
[36m[09:51:41.706990] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=11 and IP=192.168.2.39[m
[36m[09:51:41.707077] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.39:37337 queryId=1[m
[36m[09:51:41.711420] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[09:51:41.711507] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:34103 queryId=1[m
[36m[09:51:41.715888] [D] [thread 55208] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[09:51:41.716015] [D] [thread 55208] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:41243 queryId=1[m
[36m[09:51:41.720587] [D] [thread 55208] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 11 queues[m
[36m[09:51:41.809416] [D] [thread 55276] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[09:51:41.809527] [D] [thread 55276] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[09:51:41.809665] [D] [thread 55276] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  11   1[m
[36m[09:51:41.809804] [D] [thread 55276] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699523501809[m
[36m[09:51:41.809830] [D] [thread 55276] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  11  succeeded[m
[36m[09:51:41.809857] [D] [thread 55276] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[09:51:41.823212] [D] [thread 55208] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[09:51:41.823316] [D] [thread 55208] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[09:51:41.824030] [I] [thread 55208] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[09:51:41.824191] [D] [thread 55208] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[09:51:41.826063] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:41.900634] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:41.901161] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:42.902419] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:43.205474] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:43.206017] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:43.206974] [D] [thread 55285] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:43.207099] [I] [thread 55285] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:43.207121] [I] [thread 55285] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:43.207305] [I] [thread 55285] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:43.207322] [I] [thread 55285] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:43.317807] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:43.318407] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:44.319697] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:44.602035] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:44.602520] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:44.603342] [D] [thread 55290] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:44.603432] [I] [thread 55290] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:44.603451] [I] [thread 55290] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:44.603569] [I] [thread 55290] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:44.603582] [I] [thread 55290] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:44.735348] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:44.735679] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:45.736927] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:46.021608] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:46.021969] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:46.023002] [D] [thread 55295] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:46.023096] [I] [thread 55295] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:46.023115] [I] [thread 55295] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:46.023248] [I] [thread 55295] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:46.023265] [I] [thread 55295] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:46.116471] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:46.116809] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:47.117969] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:47.380521] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:47.380840] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:47.381925] [D] [thread 55300] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:47.382026] [I] [thread 55300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:47.382046] [I] [thread 55300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:47.382165] [I] [thread 55300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:47.382180] [I] [thread 55300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:47.512937] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:47.513514] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:48.514786] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:48.791989] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:48.792497] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:48.793445] [D] [thread 55306] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:48.793540] [I] [thread 55306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:48.793560] [I] [thread 55306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:48.793678] [I] [thread 55306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:48.793693] [I] [thread 55306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:48.852442] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:48.852879] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:49.854154] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:50.115360] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:50.115957] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:50.116738] [D] [thread 55311] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:50.116829] [I] [thread 55311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:50.116847] [I] [thread 55311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:50.116964] [I] [thread 55311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:50.116980] [I] [thread 55311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:50.247115] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:50.247448] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:51.248662] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:51.503269] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:51.503590] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:51.504681] [D] [thread 55316] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:51.504776] [I] [thread 55316] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:51.504793] [I] [thread 55316] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:51.504910] [I] [thread 55316] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:51.504975] [I] [thread 55316] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:51.604214] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:51.604692] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:52.606003] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:52.879868] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:52.880460] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:52.881393] [D] [thread 55321] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:52.881566] [I] [thread 55321] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:52.881589] [I] [thread 55321] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:52.881740] [I] [thread 55321] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:52.881760] [I] [thread 55321] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:53.005960] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:53.006303] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:54.007461] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:54.329077] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:54.329413] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:54.330367] [D] [thread 55326] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:54.330462] [I] [thread 55326] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:54.330482] [I] [thread 55326] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:54.330598] [I] [thread 55326] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:54.330612] [I] [thread 55326] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:54.456685] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:54.457050] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:55.458278] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:55.725863] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:55.726205] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:55.727188] [D] [thread 55331] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:55.727281] [I] [thread 55331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:55.727300] [I] [thread 55331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:55.727415] [I] [thread 55331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:55.727430] [I] [thread 55331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:55.825619] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:55.825970] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:56.827222] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:57.110185] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:57.110550] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:57.111472] [D] [thread 55336] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:57.111567] [I] [thread 55336] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:57.111585] [I] [thread 55336] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:57.111702] [I] [thread 55336] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:57.111717] [I] [thread 55336] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:57.167969] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:57.168307] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:58.169589] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:58.453350] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:58.453736] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:58.454797] [D] [thread 55341] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:58.454994] [I] [thread 55341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:58.455015] [I] [thread 55341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:58.455153] [I] [thread 55341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:58.455184] [I] [thread 55341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:58.592991] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:58.593322] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:59.594575] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:59.869211] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:59.869894] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:59.870773] [D] [thread 55347] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:51:59.870873] [I] [thread 55347] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:59.870892] [I] [thread 55347] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:51:59.871008] [I] [thread 55347] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:51:59.871024] [I] [thread 55347] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:51:59.963724] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:51:59.964301] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:00.469155] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:52:00.473139] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,98,1699523501735,1699523520469
10620000,10680000,74,1699523501754,1699523520469
10620000,10680000,54,1699523501766,1699523520469
10620000,10680000,63,1699523501804,1699523520469
[m
[36m[09:52:00.473641] [D] [thread 55218] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699523520473[m
[36m[09:52:00.965552] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:01.169455] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:01.169918] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:01.170871] [D] [thread 55352] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:01.170971] [I] [thread 55352] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:01.170990] [I] [thread 55352] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:01.171109] [I] [thread 55352] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:01.171123] [I] [thread 55352] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:01.303810] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:01.304513] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:01.696971] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:52:01.697075] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:52:01.699408] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,24,1699523501727,1699523521697
10620000,10680000,47,1699523501746,1699523521697
10620000,10680000,100,1699523501775,1699523521697
10620000,10680000,13,1699523501821,1699523521697
[m
[36m[09:52:02.305708] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:02.537022] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:02.537516] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:02.538414] [D] [thread 55357] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:02.538550] [I] [thread 55357] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:02.538574] [I] [thread 55357] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:02.538709] [I] [thread 55357] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:02.538725] [I] [thread 55357] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:02.637954] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:02.638461] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:03.639851] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:04.065841] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:04.066181] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:04.067729] [D] [thread 55362] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:04.067824] [I] [thread 55362] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:04.067843] [I] [thread 55362] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:04.067960] [I] [thread 55362] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:04.067974] [I] [thread 55362] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:04.203548] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:04.203871] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:05.205107] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:05.457530] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:05.457853] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:05.458836] [D] [thread 55367] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:05.458929] [I] [thread 55367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:05.458948] [I] [thread 55367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:05.459067] [I] [thread 55367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:05.459080] [I] [thread 55367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:05.557772] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:05.558179] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:06.559403] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:07.134755] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:07.135100] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:07.136064] [D] [thread 55372] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:07.136157] [I] [thread 55372] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:07.136176] [I] [thread 55372] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:07.136293] [I] [thread 55372] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:07.136306] [I] [thread 55372] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:07.233115] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:07.233446] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:08.234704] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:08.492438] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:08.492771] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:08.493797] [D] [thread 55377] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:08.493894] [I] [thread 55377] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:08.493912] [I] [thread 55377] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:08.494030] [I] [thread 55377] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:08.494056] [I] [thread 55377] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:08.623707] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:08.624059] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:09.625417] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:10.249525] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:10.250115] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:10.250892] [D] [thread 55382] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:10.250984] [I] [thread 55382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:10.251003] [I] [thread 55382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:10.251125] [I] [thread 55382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:10.251144] [I] [thread 55382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:10.382671] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:10.383010] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:11.384186] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:11.993894] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:11.994213] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:11.995357] [D] [thread 55387] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:11.995462] [I] [thread 55387] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:11.995480] [I] [thread 55387] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:11.995596] [I] [thread 55387] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:11.995620] [I] [thread 55387] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:12.087165] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:12.087500] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:13.088706] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:13.356973] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:13.357308] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:13.358285] [D] [thread 55393] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:13.358380] [I] [thread 55393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:13.358397] [I] [thread 55393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:13.358514] [I] [thread 55393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:13.358527] [I] [thread 55393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:13.534961] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:13.535285] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:14.536589] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:14.802656] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:14.802979] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:14.804000] [D] [thread 55398] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:14.804094] [I] [thread 55398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:14.804113] [I] [thread 55398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:14.804231] [I] [thread 55398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:14.804244] [I] [thread 55398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:14.933379] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:14.934010] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:15.935308] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:16.297600] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:16.298167] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:16.298905] [D] [thread 55403] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:16.298996] [I] [thread 55403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:16.299014] [I] [thread 55403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:16.299132] [I] [thread 55403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:16.299145] [I] [thread 55403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:16.435992] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:16.436499] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:17.437850] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:17.762260] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:17.762877] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:17.763579] [D] [thread 55408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:17.763673] [I] [thread 55408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:17.763691] [I] [thread 55408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:17.763811] [I] [thread 55408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:17.763826] [I] [thread 55408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:17.825982] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:17.826307] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:18.827529] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:19.422483] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:19.422795] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:19.423864] [D] [thread 55413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:19.423966] [I] [thread 55413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:19.423985] [I] [thread 55413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:19.424102] [I] [thread 55413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:19.424128] [I] [thread 55413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:19.519079] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:19.519415] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:20.520623] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:20.764237] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:20.764630] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:20.765848] [D] [thread 55418] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:20.765971] [I] [thread 55418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:20.765993] [I] [thread 55418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:20.766119] [I] [thread 55418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:20.766138] [I] [thread 55418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:20.855997] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:20.856389] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:21.857713] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:22.168421] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:22.168748] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:22.170401] [D] [thread 55423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:22.170493] [I] [thread 55423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:22.170512] [I] [thread 55423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:22.170632] [I] [thread 55423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:22.170647] [I] [thread 55423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:22.304073] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:22.304445] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:23.305702] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:23.746754] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:23.747159] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:23.748513] [D] [thread 55428] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:23.748603] [I] [thread 55428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:23.748622] [I] [thread 55428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:23.748738] [I] [thread 55428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:23.748751] [I] [thread 55428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:23.924743] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:23.925098] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:24.911882] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:52:24.911976] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:52:24.914047] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,98,1699523508544,1699523544912
10680000,10740000,74,1699523519859,1699523544912
10680000,10740000,54,1699523519879,1699523544912
10680000,10740000,63,1699523520283,1699523544912
[m
[36m[09:52:24.926407] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:25.203231] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:25.203585] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:25.204578] [D] [thread 55433] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:25.204676] [I] [thread 55433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:25.204694] [I] [thread 55433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:25.204812] [I] [thread 55433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:25.204838] [I] [thread 55433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:25.307317] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:25.307675] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:26.309015] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:26.721876] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:26.722242] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:26.723386] [D] [thread 55438] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:26.723483] [I] [thread 55438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:26.723503] [I] [thread 55438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:26.723621] [I] [thread 55438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:26.723635] [I] [thread 55438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:26.926508] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:26.926882] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:27.768526] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:52:27.768598] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:52:27.769814] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,100,1699523519659,1699523547768
10680000,10740000,24,1699523520779,1699523547768
10680000,10740000,47,1699523520913,1699523547768
10680000,10740000,13,1699523521526,1699523547768
[m
[36m[09:52:27.928248] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:28.357513] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:28.357850] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:28.358894] [D] [thread 55443] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:28.359001] [I] [thread 55443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:28.359021] [I] [thread 55443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:28.359150] [I] [thread 55443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:28.359176] [I] [thread 55443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:28.477061] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:28.477441] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:29.478687] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:29.741024] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:29.741349] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:29.742367] [D] [thread 55448] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:29.742466] [I] [thread 55448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:29.742484] [I] [thread 55448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:29.742601] [I] [thread 55448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:29.742661] [I] [thread 55448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:29.875541] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:29.875869] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:30.877216] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:31.625346] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:31.625682] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:31.626824] [D] [thread 55453] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:31.627020] [I] [thread 55453] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:31.627043] [I] [thread 55453] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:31.627181] [I] [thread 55453] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:31.627211] [I] [thread 55453] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:31.786394] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:31.786792] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:32.788157] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:33.041320] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:33.041654] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:33.042870] [D] [thread 55458] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:33.042969] [I] [thread 55458] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:33.042988] [I] [thread 55458] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:33.043108] [I] [thread 55458] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:33.043122] [I] [thread 55458] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:33.173839] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:33.174229] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:34.175481] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:34.446125] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:34.446529] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:34.447654] [D] [thread 55463] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:34.447750] [I] [thread 55463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:34.447770] [I] [thread 55463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:34.447891] [I] [thread 55463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:34.447908] [I] [thread 55463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:34.580471] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:34.580852] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:35.582152] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:35.828789] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:35.829137] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:35.830482] [D] [thread 55468] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:35.830605] [I] [thread 55468] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:35.830626] [I] [thread 55468] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:35.830755] [I] [thread 55468] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:35.830775] [I] [thread 55468] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:35.960813] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:35.961175] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:36.961798] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:37.529085] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:37.529651] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:37.530443] [D] [thread 55473] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:37.530542] [I] [thread 55473] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:37.530559] [I] [thread 55473] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:37.530676] [I] [thread 55473] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:37.530689] [I] [thread 55473] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:37.628271] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:37.628771] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:38.630153] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:38.852239] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:38.852729] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:38.853703] [D] [thread 55478] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:38.853799] [I] [thread 55478] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:38.853819] [I] [thread 55478] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:38.853938] [I] [thread 55478] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:38.853953] [I] [thread 55478] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:38.949843] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:38.950327] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:39.951974] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:40.194900] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:40.195401] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:40.196213] [D] [thread 55483] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:40.196309] [I] [thread 55483] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:40.196360] [I] [thread 55483] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:40.196481] [I] [thread 55483] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:40.196496] [I] [thread 55483] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:40.293605] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:40.294043] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:41.295367] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:41.499958] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:41.500296] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:41.501798] [D] [thread 55488] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:41.501921] [I] [thread 55488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:41.501943] [I] [thread 55488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:41.502067] [I] [thread 55488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:41.502083] [I] [thread 55488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:41.672154] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:41.672541] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:42.673799] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:43.242760] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:43.243332] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:43.244261] [D] [thread 55493] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:43.244393] [I] [thread 55493] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:43.244413] [I] [thread 55493] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:43.244532] [I] [thread 55493] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:43.244546] [I] [thread 55493] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:43.343392] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:43.343716] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:44.344891] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:44.620732] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:44.621052] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:44.622098] [D] [thread 55498] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:44.622199] [I] [thread 55498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:44.622217] [I] [thread 55498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:44.622333] [I] [thread 55498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:44.622346] [I] [thread 55498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:44.753435] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:44.753774] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:45.754975] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:46.218251] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:46.218588] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:46.219794] [D] [thread 55503] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:46.219902] [I] [thread 55503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:46.219921] [I] [thread 55503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:46.220048] [I] [thread 55503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:46.220072] [I] [thread 55503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:46.357231] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:46.357580] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:47.358799] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:47.775073] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:47.775434] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:47.776557] [D] [thread 55508] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:47.776656] [I] [thread 55508] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:47.776673] [I] [thread 55508] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:47.776791] [I] [thread 55508] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:47.776810] [I] [thread 55508] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:47.893007] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:47.893358] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:48.894573] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:49.164446] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:49.164983] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:49.165746] [D] [thread 55513] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:49.165842] [I] [thread 55513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:49.165859] [I] [thread 55513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:49.165977] [I] [thread 55513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:49.165992] [I] [thread 55513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:49.304163] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:49.304668] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:49.478489] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:52:49.478596] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:52:49.480710] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,98,1699523525333,1699523569478
10740000,10800000,74,1699523543905,1699523569478
10740000,10800000,54,1699523544397,1699523569478
10740000,10800000,63,1699523544740,1699523569478
[m
[36m[09:52:50.305952] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:50.568462] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:50.568800] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:50.570301] [D] [thread 55518] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:50.570395] [I] [thread 55518] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:50.570413] [I] [thread 55518] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:50.570528] [I] [thread 55518] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:50.570543] [I] [thread 55518] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:50.670171] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:50.670526] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:51.671746] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:51.932460] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:51.932807] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:51.933832] [D] [thread 55523] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:51.933955] [I] [thread 55523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:51.933978] [I] [thread 55523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:51.934103] [I] [thread 55523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:51.934121] [I] [thread 55523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:52.059347] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:52.059689] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:53.034106] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:52:53.034212] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:52:53.036230] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,100,1699523541229,1699523573034
10740000,10800000,47,1699523546197,1699523573034
10740000,10800000,24,1699523546347,1699523573034
10740000,10800000,13,1699523547576,1699523573034
[m
[36m[09:52:53.060938] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:53.329401] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:53.329762] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:53.330727] [D] [thread 55529] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:53.330819] [I] [thread 55529] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:53.330838] [I] [thread 55529] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:53.330954] [I] [thread 55529] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:53.330970] [I] [thread 55529] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:53.426135] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:53.426499] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:54.427664] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:54.884144] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:54.884519] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:54.885607] [D] [thread 55536] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:54.885706] [I] [thread 55536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:54.885725] [I] [thread 55536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:54.885843] [I] [thread 55536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:54.885858] [I] [thread 55536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:55.031214] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:55.031598] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:56.032857] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:56.455754] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:56.456105] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:56.457119] [D] [thread 55541] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:56.457214] [I] [thread 55541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:56.457233] [I] [thread 55541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:56.457350] [I] [thread 55541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:56.457364] [I] [thread 55541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:56.602701] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:56.603031] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:57.604280] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:57.856840] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:57.857209] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:57.858418] [D] [thread 55546] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:57.858538] [I] [thread 55546] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:57.858558] [I] [thread 55546] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:57.858687] [I] [thread 55546] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:57.858703] [I] [thread 55546] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:57.948444] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:57.948795] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:58.949965] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:59.207082] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:59.207623] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:59.208431] [D] [thread 55551] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:52:59.208519] [I] [thread 55551] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:59.208538] [I] [thread 55551] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:52:59.208655] [I] [thread 55551] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:52:59.208671] [I] [thread 55551] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:52:59.341135] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:52:59.341701] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:00.343037] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:00.629297] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:00.629890] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:00.630599] [D] [thread 55556] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:00.630688] [I] [thread 55556] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:00.630706] [I] [thread 55556] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:00.630824] [I] [thread 55556] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:00.630837] [I] [thread 55556] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:00.770152] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:00.770637] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:01.771893] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:01.995037] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:01.995625] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:01.996389] [D] [thread 55561] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:01.996475] [I] [thread 55561] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:01.996494] [I] [thread 55561] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:01.996614] [I] [thread 55561] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:01.996630] [I] [thread 55561] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:02.128005] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:02.128286] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:03.129535] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:03.393048] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:03.393387] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:03.394349] [D] [thread 55566] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:03.394446] [I] [thread 55566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:03.394464] [I] [thread 55566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:03.394580] [I] [thread 55566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:03.394594] [I] [thread 55566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:03.492997] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:03.493317] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:04.494564] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:04.722088] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:04.722410] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:04.723504] [D] [thread 55571] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:04.723625] [I] [thread 55571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:04.723645] [I] [thread 55571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:04.723773] [I] [thread 55571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:04.723805] [I] [thread 55571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:04.855658] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:04.856013] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:05.857175] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:06.129927] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:06.130225] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:06.131408] [D] [thread 55576] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:06.131505] [I] [thread 55576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:06.131526] [I] [thread 55576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:06.131647] [I] [thread 55576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:06.131660] [I] [thread 55576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:06.228737] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:06.229053] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:07.230355] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:07.508440] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:07.508779] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:07.509950] [D] [thread 55581] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:07.510045] [I] [thread 55581] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:07.510064] [I] [thread 55581] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:07.510182] [I] [thread 55581] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:07.510196] [I] [thread 55581] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:07.643238] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:07.643570] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:08.644885] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:08.900022] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:08.900390] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:08.901453] [D] [thread 55586] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:08.901553] [I] [thread 55586] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:08.901572] [I] [thread 55586] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:08.901689] [I] [thread 55586] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:08.901714] [I] [thread 55586] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:09.000486] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:09.000844] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:10.002123] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:10.275986] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:10.276365] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:10.277423] [D] [thread 55591] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:10.277525] [I] [thread 55591] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:10.277542] [I] [thread 55591] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:10.277661] [I] [thread 55591] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:10.277688] [I] [thread 55591] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:10.372802] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:10.373142] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:11.374350] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:11.612933] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:11.613255] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:11.614308] [D] [thread 55596] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:11.614508] [I] [thread 55596] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:11.614528] [I] [thread 55596] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:11.614668] [I] [thread 55596] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:11.614690] [I] [thread 55596] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:11.715157] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:11.715607] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:12.716883] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:12.923097] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:12.923637] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:12.924733] [D] [thread 55601] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:12.924844] [I] [thread 55601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:12.924865] [I] [thread 55601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:12.924999] [I] [thread 55601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:12.925014] [I] [thread 55601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:13.020899] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:13.021369] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:14.022666] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:14.306614] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:14.307213] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:14.307924] [D] [thread 55606] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:14.308016] [I] [thread 55606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:14.308036] [I] [thread 55606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:14.308153] [I] [thread 55606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:14.308167] [I] [thread 55606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:14.374860] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:53:14.374968] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:53:14.377952] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,98,1699523541287,1699523594375
10800000,10860000,74,1699523567179,1699523594375
10800000,10860000,63,1699523568774,1699523594375
10800000,10860000,54,1699523569293,1699523594375
[m
[36m[09:53:14.403842] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:14.404471] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:15.405770] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:15.753719] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:15.754232] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:15.755015] [D] [thread 55611] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:15.755109] [I] [thread 55611] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:15.755127] [I] [thread 55611] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:15.755242] [I] [thread 55611] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:15.755257] [I] [thread 55611] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:15.854365] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:15.854826] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:16.856181] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:17.112263] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:17.112644] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:17.114325] [D] [thread 55616] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:17.114418] [I] [thread 55616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:17.114437] [I] [thread 55616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:17.114556] [I] [thread 55616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:17.114570] [I] [thread 55616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:17.246122] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:17.246460] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:18.247725] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:18.479032] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:18.479445] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:18.480519] [D] [thread 55621] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:18.480609] [I] [thread 55621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:18.480627] [I] [thread 55621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:18.480747] [I] [thread 55621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:18.480759] [I] [thread 55621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:18.614294] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:18.614644] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:18.703170] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:53:18.703247] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:53:18.704713] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,100,1699523561120,1699523598703
10800000,10860000,47,1699523570979,1699523598703
10800000,10860000,24,1699523571865,1699523598703
10800000,10860000,13,1699523572869,1699523598703
[m
[36m[09:53:19.615896] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:19.913371] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:19.913727] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:19.914705] [D] [thread 55626] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:19.914797] [I] [thread 55626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:19.914816] [I] [thread 55626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:19.914933] [I] [thread 55626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:19.914949] [I] [thread 55626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:20.093362] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:20.093828] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:21.095093] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:21.337188] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:21.337766] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:21.338498] [D] [thread 55631] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:21.338591] [I] [thread 55631] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:21.338608] [I] [thread 55631] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:21.338723] [I] [thread 55631] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:21.338736] [I] [thread 55631] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:21.429499] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:21.430087] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:22.431382] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:22.680366] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:22.680968] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:22.681741] [D] [thread 55636] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:22.681833] [I] [thread 55636] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:22.681852] [I] [thread 55636] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:22.681970] [I] [thread 55636] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:22.681983] [I] [thread 55636] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:22.811522] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:22.812113] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:23.813430] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:24.097464] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:24.097808] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:24.099126] [D] [thread 55641] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:24.099221] [I] [thread 55641] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:24.099240] [I] [thread 55641] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:24.099360] [I] [thread 55641] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:24.099375] [I] [thread 55641] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:24.229535] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:24.229879] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:25.230882] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:25.755284] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:25.755630] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:25.756632] [D] [thread 55646] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:25.756723] [I] [thread 55646] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:25.756740] [I] [thread 55646] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:25.756859] [I] [thread 55646] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:25.756875] [I] [thread 55646] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:25.894680] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:25.895000] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:26.896223] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:27.543028] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:27.543349] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:27.544520] [D] [thread 55651] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:27.544617] [I] [thread 55651] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:27.544635] [I] [thread 55651] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:27.544755] [I] [thread 55651] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:27.544769] [I] [thread 55651] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:27.660755] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:27.661088] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:28.662341] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:29.663578] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:29.665544] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:29.665856] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:29.667563] [D] [thread 55656] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:29.667658] [I] [thread 55656] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:29.667677] [I] [thread 55656] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:29.667795] [I] [thread 55656] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:29.667808] [I] [thread 55656] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:29.850331] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:29.850722] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:30.851931] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:31.622561] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:31.623008] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:31.623890] [D] [thread 55661] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:31.623984] [I] [thread 55661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:31.624001] [I] [thread 55661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:31.624119] [I] [thread 55661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:31.624134] [I] [thread 55661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:31.748858] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:31.749328] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:32.750579] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:33.019578] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:33.019914] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:33.021026] [D] [thread 55666] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:33.021127] [I] [thread 55666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:33.021146] [I] [thread 55666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:33.021264] [I] [thread 55666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:33.021286] [I] [thread 55666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:33.155200] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:33.155528] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:34.156739] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:34.658179] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:34.658547] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:34.660064] [D] [thread 55671] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:34.660156] [I] [thread 55671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:34.660174] [I] [thread 55671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:34.660293] [I] [thread 55671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:34.660310] [I] [thread 55671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:34.760386] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:34.760757] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:35.762000] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:36.086366] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:36.086718] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:36.088468] [D] [thread 55676] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:36.088558] [I] [thread 55676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:36.088576] [I] [thread 55676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:36.088692] [I] [thread 55676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:36.088709] [I] [thread 55676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:36.183396] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:36.183762] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:37.184460] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:37.456664] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:37.457007] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:37.458035] [D] [thread 55681] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:37.458134] [I] [thread 55681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:37.458153] [I] [thread 55681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:37.458270] [I] [thread 55681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:37.458296] [I] [thread 55681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:37.588072] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:37.588461] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:38.589694] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:38.905179] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:53:38.905283] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:53:38.907567] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,98,1699523557270,1699523618905
10860000,10920000,74,1699523590857,1699523618905
10860000,10920000,63,1699523592008,1699523618905
10860000,10920000,54,1699523594174,1699523618905
[m
[36m[09:53:39.338154] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:39.338521] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:39.339446] [D] [thread 55686] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:39.339542] [I] [thread 55686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:39.339561] [I] [thread 55686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:39.339679] [I] [thread 55686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:39.339693] [I] [thread 55686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:39.438829] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:39.439201] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:40.440483] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:40.672292] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:40.672678] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:40.673728] [D] [thread 55691] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:40.673851] [I] [thread 55691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:40.673872] [I] [thread 55691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:40.673994] [I] [thread 55691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:40.674015] [I] [thread 55691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:40.806637] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:40.806972] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:41.808259] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:42.000547] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:42.000905] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:42.002050] [D] [thread 55696] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:42.002149] [I] [thread 55696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:42.002167] [I] [thread 55696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:42.002284] [I] [thread 55696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:42.002300] [I] [thread 55696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:42.104972] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:42.105331] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:43.106589] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:43.879108] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:43.879693] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:43.880465] [D] [thread 55701] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:43.880556] [I] [thread 55701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:43.880574] [I] [thread 55701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:43.880691] [I] [thread 55701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:43.880706] [I] [thread 55701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:43.976391] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:43.977003] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:44.978371] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:45.185348] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:53:45.185424] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:53:45.186808] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,100,1699523584223,1699523625185
10860000,10920000,47,1699523595764,1699523625185
10860000,10920000,24,1699523597743,1699523625185
10860000,10920000,13,1699523598556,1699523625185
[m
[36m[09:53:45.194090] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:45.194615] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:45.195422] [D] [thread 55706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:45.195511] [I] [thread 55706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:45.195529] [I] [thread 55706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:45.195644] [I] [thread 55706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:45.195659] [I] [thread 55706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:45.289422] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:45.289963] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:46.291239] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:46.988666] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:46.989299] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:46.989989] [D] [thread 55711] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:46.990061] [I] [thread 55711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:46.990076] [I] [thread 55711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:46.990184] [I] [thread 55711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:46.990198] [I] [thread 55711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:47.123053] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:47.123616] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:48.124609] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:49.125880] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:49.854222] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:49.855226] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:49.855925] [D] [thread 55716] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:49.856014] [I] [thread 55716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:49.856032] [I] [thread 55716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:49.856167] [I] [thread 55716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:49.856179] [I] [thread 55716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:50.014992] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:50.015344] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:51.016668] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:51.618342] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:51.618703] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:51.619734] [D] [thread 55721] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:51.619834] [I] [thread 55721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:51.619853] [I] [thread 55721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:51.619971] [I] [thread 55721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:51.619994] [I] [thread 55721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:51.733463] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:51.733916] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:52.735223] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:52.951275] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:52.951725] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:52.952668] [D] [thread 55726] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:52.952759] [I] [thread 55726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:52.952777] [I] [thread 55726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:52.952896] [I] [thread 55726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:52.952911] [I] [thread 55726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:53.048504] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:53.048940] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:54.050267] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:54.555345] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:54.555934] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:54.557067] [D] [thread 55731] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:54.557180] [I] [thread 55731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:54.557202] [I] [thread 55731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:54.557332] [I] [thread 55731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:54.557349] [I] [thread 55731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:54.661517] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:54.661998] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:55.663189] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:56.106009] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:56.106620] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:56.107348] [D] [thread 55736] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:56.107441] [I] [thread 55736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:56.107460] [I] [thread 55736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:56.107576] [I] [thread 55736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:56.107588] [I] [thread 55736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:56.213370] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:56.213847] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:57.215218] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:57.548075] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:57.548674] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:57.549407] [D] [thread 55741] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:57.549503] [I] [thread 55741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:57.549522] [I] [thread 55741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:57.549640] [I] [thread 55741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:57.549653] [I] [thread 55741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:57.681023] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:57.681370] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:58.682632] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:58.900688] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:58.901010] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:58.902026] [D] [thread 55746] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:53:58.902122] [I] [thread 55746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:58.902140] [I] [thread 55746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:53:58.902257] [I] [thread 55746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:53:58.902273] [I] [thread 55746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:53:59.000966] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:53:59.001292] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:00.002450] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:00.303523] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:00.303892] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:00.305906] [D] [thread 55751] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:00.306029] [I] [thread 55751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:00.306053] [I] [thread 55751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:00.306187] [I] [thread 55751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:00.306217] [I] [thread 55751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:00.406411] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:00.406735] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:01.407969] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:02.408678] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:02.440664] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:02.441223] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:02.442040] [D] [thread 55756] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:02.442135] [I] [thread 55756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:02.442153] [I] [thread 55756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:02.442269] [I] [thread 55756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:02.442284] [I] [thread 55756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:02.695718] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:02.696056] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:03.028032] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:54:03.028104] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:54:03.029345] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,98,1699523573279,1699523643028
10920000,10980000,74,1699523614543,1699523643028
10920000,10980000,63,1699523615246,1699523643028
10920000,10980000,54,1699523618761,1699523643028
[m
[36m[09:54:03.697269] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:03.944962] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:03.945297] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:03.946389] [D] [thread 55761] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:03.946594] [I] [thread 55761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:03.946616] [I] [thread 55761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:03.946756] [I] [thread 55761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:03.946897] [I] [thread 55761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:04.041795] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:04.042128] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:05.043322] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:05.394621] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:05.394979] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:05.395929] [D] [thread 55766] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:05.396021] [I] [thread 55766] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:05.396038] [I] [thread 55766] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:05.396155] [I] [thread 55766] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:05.396171] [I] [thread 55766] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:05.493230] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:05.493588] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:06.494946] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:07.482423] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:07.483109] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:07.483856] [D] [thread 55771] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:07.483951] [I] [thread 55771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:07.483970] [I] [thread 55771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:07.484088] [I] [thread 55771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:07.484103] [I] [thread 55771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:07.666240] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:07.666830] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:08.668065] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:08.976191] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:08.976801] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:08.977619] [D] [thread 55776] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:08.977693] [I] [thread 55776] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:08.977709] [I] [thread 55776] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:08.977817] [I] [thread 55776] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:08.977829] [I] [thread 55776] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:09.067425] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:09.067785] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:09.640519] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:54:09.640597] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:54:09.641883] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,100,1699523606553,1699523649640
10920000,10980000,47,1699523621058,1699523649640
10920000,10980000,24,1699523623286,1699523649640
10920000,10980000,13,1699523625005,1699523649640
[m
[36m[09:54:10.069040] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:10.326679] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:10.327015] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:10.327980] [D] [thread 55783] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:10.328071] [I] [thread 55783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:10.328089] [I] [thread 55783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:10.328207] [I] [thread 55783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:10.328220] [I] [thread 55783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:10.417247] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:10.417605] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:11.418818] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:11.605269] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:11.605595] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:11.606565] [D] [thread 55788] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:11.606692] [I] [thread 55788] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:11.606712] [I] [thread 55788] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:11.606833] [I] [thread 55788] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:11.606849] [I] [thread 55788] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:11.696306] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:11.696657] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:12.697904] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:13.352243] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:13.352618] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:13.353721] [D] [thread 55793] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:13.353820] [I] [thread 55793] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:13.353838] [I] [thread 55793] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:13.353957] [I] [thread 55793] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:13.353984] [I] [thread 55793] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:13.457977] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:13.458303] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:14.459512] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:14.720315] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:14.720685] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:14.722418] [D] [thread 55798] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:14.722509] [I] [thread 55798] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:14.722527] [I] [thread 55798] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:14.722643] [I] [thread 55798] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:14.722659] [I] [thread 55798] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:14.821395] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:14.821715] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:15.822933] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:16.154442] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:16.154802] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:16.156440] [D] [thread 55803] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:16.156530] [I] [thread 55803] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:16.156548] [I] [thread 55803] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:16.156669] [I] [thread 55803] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:16.156683] [I] [thread 55803] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:16.254814] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:16.255158] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:17.256451] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:17.558874] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:17.559240] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:17.560157] [D] [thread 55808] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:17.560249] [I] [thread 55808] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:17.560268] [I] [thread 55808] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:17.560421] [I] [thread 55808] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:17.560439] [I] [thread 55808] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:17.651950] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:17.652579] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:18.653866] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:18.917861] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:18.918464] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:18.919444] [D] [thread 55813] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:18.919551] [I] [thread 55813] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:18.919571] [I] [thread 55813] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:18.919696] [I] [thread 55813] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:18.919710] [I] [thread 55813] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:19.018058] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:19.018578] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:20.019838] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:20.380029] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:20.380417] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:20.381421] [D] [thread 55818] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:20.381542] [I] [thread 55818] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:20.381566] [I] [thread 55818] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:20.381700] [I] [thread 55818] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:20.381720] [I] [thread 55818] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:20.477993] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:20.478323] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:21.479540] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:21.781510] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:21.781859] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:21.782856] [D] [thread 55823] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:21.782953] [I] [thread 55823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:21.782971] [I] [thread 55823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:21.783089] [I] [thread 55823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:21.783117] [I] [thread 55823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:21.912268] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:21.912662] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:22.913922] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:23.245148] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:23.245695] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:23.246468] [D] [thread 55828] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:23.246563] [I] [thread 55828] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:23.246580] [I] [thread 55828] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:23.246699] [I] [thread 55828] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:23.246712] [I] [thread 55828] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:23.376154] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:23.376789] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:24.378098] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:24.660459] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:24.660783] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:24.662774] [D] [thread 55833] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:24.662896] [I] [thread 55833] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:24.662919] [I] [thread 55833] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:24.663051] [I] [thread 55833] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:24.663070] [I] [thread 55833] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:24.765744] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:24.766101] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:25.767266] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:26.043109] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:26.043475] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:26.045084] [D] [thread 55839] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:26.045180] [I] [thread 55839] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:26.045199] [I] [thread 55839] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:26.045318] [I] [thread 55839] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:26.045333] [I] [thread 55839] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:26.153029] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:26.153339] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:27.154573] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:27.426605] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:27.426942] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:27.427888] [D] [thread 55845] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:27.427981] [I] [thread 55845] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:27.428001] [I] [thread 55845] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:27.428116] [I] [thread 55845] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:27.428130] [I] [thread 55845] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:27.527479] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:27.527816] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:27.546645] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:54:27.546721] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:54:27.548139] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,98,1699523592374,1699523667546
10980000,11040000,74,1699523637414,1699523667546
10980000,11040000,63,1699523638047,1699523667546
10980000,11040000,54,1699523642870,1699523667546
[m
[36m[09:54:28.529151] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:28.947312] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:28.947682] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:28.948866] [D] [thread 55850] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:28.948961] [I] [thread 55850] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:28.948980] [I] [thread 55850] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:28.949099] [I] [thread 55850] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:28.949114] [I] [thread 55850] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:29.044255] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:29.044857] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:30.046156] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:30.512057] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:30.512726] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:30.513620] [D] [thread 55855] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:30.513734] [I] [thread 55855] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:30.513753] [I] [thread 55855] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:30.513893] [I] [thread 55855] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:30.513909] [I] [thread 55855] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:30.681248] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:30.681606] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:31.682763] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:31.887559] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:31.887915] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:31.888935] [D] [thread 55860] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:31.889036] [I] [thread 55860] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:31.889056] [I] [thread 55860] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:31.889173] [I] [thread 55860] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:31.889238] [I] [thread 55860] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:31.991239] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:31.991589] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:32.992937] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:33.241581] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:33.241931] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:33.242946] [D] [thread 55865] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:33.243042] [I] [thread 55865] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:33.243060] [I] [thread 55865] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:33.243179] [I] [thread 55865] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:33.243204] [I] [thread 55865] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:33.405839] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:33.406415] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:34.407710] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:34.852632] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:34.853192] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:34.854009] [D] [thread 55870] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:34.854103] [I] [thread 55870] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:34.854122] [I] [thread 55870] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:34.854242] [I] [thread 55870] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:34.854257] [I] [thread 55870] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:34.908804] [D] [thread 55218] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:54:34.908894] [D] [thread 55218] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:54:34.910654] [D] [thread 55218] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,100,1699523630079,1699523674908
10980000,11040000,47,1699523646349,1699523674908
10980000,11040000,24,1699523649215,1699523674908
10980000,11040000,13,1699523649479,1699523674908
[m
[36m[09:54:35.005263] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:35.005600] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:36.006842] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:36.617924] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:36.618562] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:36.619328] [D] [thread 55875] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:36.619419] [I] [thread 55875] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:36.619436] [I] [thread 55875] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:36.619552] [I] [thread 55875] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:36.619567] [I] [thread 55875] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:36.716631] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:36.716968] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:37.718189] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:38.603606] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:38.604269] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:38.605280] [D] [thread 55880] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:38.605388] [I] [thread 55880] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:38.605409] [I] [thread 55880] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:38.605541] [I] [thread 55880] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:38.605557] [I] [thread 55880] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:38.709571] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:38.710045] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:39.711293] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:40.023428] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:40.024000] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:40.024851] [D] [thread 55885] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:40.024947] [I] [thread 55885] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:40.024964] [I] [thread 55885] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:40.025081] [I] [thread 55885] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:40.025095] [I] [thread 55885] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:40.129711] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:40.130296] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:41.131586] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:41.559600] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:41.560216] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:41.560955] [D] [thread 55890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:54:41.561051] [I] [thread 55890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:41.561070] [I] [thread 55890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:54:41.561187] [I] [thread 55890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:54:41.561200] [I] [thread 55890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:54:41.668165] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:41.668800] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:41.966103] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:41.966725] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:41.967983] [I] [thread 55894] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[09:54:41.968098] [D] [thread 55894] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[09:54:41.968243] [I] [thread 55894] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[09:54:41.968275] [I] [thread 55894] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[09:54:41.968361] [I] [thread 55208] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[09:54:41.968415] [I] [thread 55208] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[09:54:41.968436] [I] [thread 55208] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[09:54:41.968485] [I] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[09:54:41.968500] [D] [thread 55208] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[09:54:41.968546] [D] [thread 55208] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[09:54:41.968709] [D] [thread 55208] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[09:54:41.969186] [D] [thread 55208] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[09:54:41.969245] [D] [thread 55208] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[09:54:41.969327] [D] [thread 55208] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[09:54:41.969345] [D] [thread 55208] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[09:54:41.969354] [D] [thread 55208] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[09:54:41.969384] [D] [thread 55208] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[09:54:41.969403] [D] [thread 55208] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:54:41.969433] [D] [thread 55208] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[09:54:41.969445] [D] [thread 55208] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[09:54:41.969600] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:37425[m
[36m[09:54:41.969629] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:37425 queryId=1[m
[36m[09:54:41.974407] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:39859[m
[36m[09:54:41.974498] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:39859 queryId=1[m
[36m[09:54:41.979111] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:44731[m
[36m[09:54:41.979197] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:44731 queryId=1[m
[36m[09:54:41.983895] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:42629[m
[36m[09:54:41.983987] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:42629 queryId=1[m
[36m[09:54:41.988626] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:36405[m
[36m[09:54:41.988713] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:36405 queryId=1[m
[36m[09:54:41.993446] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:36055[m
[36m[09:54:41.993539] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:36055 queryId=1[m
[36m[09:54:41.998112] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:40997[m
[36m[09:54:41.998200] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:40997 queryId=1[m
[36m[09:54:42.002773] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:44815[m
[36m[09:54:42.002864] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:44815 queryId=1[m
[36m[09:54:42.006848] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=11 and IP=192.168.2.39:37337[m
[36m[09:54:42.006934] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.39:37337 queryId=1[m
[36m[09:54:42.011575] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:34103[m
[36m[09:54:42.011657] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:34103 queryId=1[m
[36m[09:54:42.016490] [D] [thread 55208] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:41243[m
[36m[09:54:42.016569] [D] [thread 55208] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:41243 queryId=1[m
[36m[09:54:42.021871] [D] [thread 55208] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 11 queues[m
[36m[09:54:42.165744] [D] [thread 55217] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): EndOfStream received for channel [m
[36m[09:54:42.165924] [D] [thread 55217] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::35::0::0(threadId=0)[m
[32m[09:54:42.166128] [I] [thread 55217] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::35::0::0; newCnt(1)[m
[36m[09:54:42.166373] [D] [thread 55217] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::35::0::0, counter is at 1.[m
[36m[09:54:42.166625] [D] [thread 55217] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:35 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:54:42.166833] [W] [thread 55217] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:35 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:42.242347] [D] [thread 55217] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35855): EndOfStream received for channel [m
[36m[09:54:42.242515] [D] [thread 55217] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::50::0::0(threadId=0)[m
[32m[09:54:42.242630] [I] [thread 55217] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::50::0::0; newCnt(1)[m
[36m[09:54:42.242679] [D] [thread 55217] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::50::0::0, counter is at 1.[m
[36m[09:54:42.242757] [D] [thread 55217] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:54:42.242797] [W] [thread 55217] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:42.255489] [D] [thread 55220] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[09:54:42.255623] [D] [thread 55220] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[09:54:42.255727] [D] [thread 55220] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  11  type= HardStop[m
[36m[09:54:42.255777] [D] [thread 55220] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:35 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:42.255849] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:54:42.256024] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:54:42.256470] [D] [thread 55220] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 11 Source 35 is notifying completion: HardStop[m
[36m[09:54:42.256492] [D] [thread 55218] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::35::0::0[m
[36m[09:54:42.256577] [D] [thread 55220] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 11 Source 35 is terminated; tokens left = 3[m
[36m[09:54:42.256630] [D] [thread 55220] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 35 terminationType=HardStop[m
[36m[09:54:42.256635] [D] [thread 55218] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::35::0::0 Thread 0[m
[36m[09:54:42.256674] [D] [thread 55218] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::35::0::0[m
[36m[09:54:42.256701] [D] [thread 55218] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::35::0::0[m
[36m[09:54:42.256731] [D] [thread 55218] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::35::0::0[m
[36m[09:54:42.256744] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[32m[09:54:42.256801] [I] [thread 55218] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::35::0::0; newCnt(0)[m
[36m[09:54:42.256898] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[09:54:42.257160] [D] [thread 55220] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=35 reconfType=HardEndOfStream queryId=1 querySubPlanId=11 threadPool->getNumberOfThreads()=1[m
[36m[09:54:42.257215] [D] [thread 55218] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[09:54:42.257229] [D] [thread 55220] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:35 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[09:54:42.257279] [D] [thread 55220] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:42.257328] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:54:42.257451] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:54:42.257684] [D] [thread 55220] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 11 Source 50 is notifying completion: HardStop[m
[36m[09:54:42.257736] [D] [thread 55220] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 11 Source 50 is terminated; tokens left = 2[m
[36m[09:54:42.257745] [D] [thread 55218] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::50::0::0[m
[36m[09:54:42.257769] [D] [thread 55220] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 50 terminationType=HardStop[m
[36m[09:54:42.257810] [D] [thread 55218] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::50::0::0 Thread 0[m
[36m[09:54:42.257844] [D] [thread 55218] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::50::0::0[m
[36m[09:54:42.257859] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[09:54:42.257871] [D] [thread 55218] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::50::0::0[m
[36m[09:54:42.257914] [D] [thread 55218] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::50::0::0[m
[32m[09:54:42.257977] [I] [thread 55218] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::50::0::0; newCnt(0)[m
[36m[09:54:42.257985] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[09:54:42.258189] [D] [thread 55220] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=50 reconfType=HardEndOfStream queryId=1 querySubPlanId=11 threadPool->getNumberOfThreads()=1[m
2023-11-09 09:54:42.259 postReconfigurationCallback: queryId=1, querySubPlanId=11; queryId=1 subPlanId=11 processedTasks=14 processedTuple=56 processedBuffers=14 processedWatermarks=0 latencyAVG=1699523596405 queueSizeAVG=0 availableGlobalBufferAVG=895 availableFixedBufferAVG=0
[36m[09:54:42.258242] [D] [thread 55218] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[09:54:42.258253] [D] [thread 55220] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[09:54:42.258430] [D] [thread 55218] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 11 Sink FileSink() is terminated; tokens left = 1[m
[36m[09:54:42.258502] [D] [thread 55218] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[09:54:42.258637] [D] [thread 55218] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[09:54:42.258881] [D] [thread 55218] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[09:54:42.259399] [D] [thread 55218] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=11[m
[36m[09:54:42.259436] [D] [thread 55218] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=11[m
[36m[09:54:42.259454] [D] [thread 55218] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-11 is marked as stopped now[m
[36m[09:54:42.259685] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Destroy[m
[36m[09:54:42.259871] [D] [thread 55220] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Destroy[m
[36m[09:54:42.260412] [D] [thread 55220] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  11[m
[36m[09:54:42.260589] [D] [thread 55220] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 11 was successful[m
[36m[09:54:42.260668] [D] [thread 55220] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  11  succeeded[m
[36m[09:54:42.260694] [D] [thread 55220] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[1m[41m[09:54:42.265365] [C] [thread 55208] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[09:54:42.265448] [I] [thread 55208] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[09:54:42.265504] [I] [thread 55208] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[09:54:42.265568] [W] [thread 55208] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[09:54:42.265580] [I] [thread 55208] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[09:54:42.265588] [W] [thread 55208] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[09:54:42.968095] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[09:54:43.108132] [E] [thread 55224] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:54:43.109201] [W] [thread 55224] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:36405 went dead so we remove it[m
[32m[09:54:43.109356] [I] [thread 55224] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=1][m
[32m[09:54:43.109380] [I] [thread 55224] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:43.109409] [I] [thread 55224] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:54:43.109417] [I] [thread 55224] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:54:43.109428] [I] [thread 55224] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:43.109438] [I] [thread 55224] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:43.109447] [I] [thread 55224] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:43.109456] [I] [thread 55224] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[09:54:43.109499] [D] [thread 55224] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[09:54:43.114969] [E] [thread 55224] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:54:43.115958] [W] [thread 55224] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:34103 went dead so we remove it[m
[32m[09:54:43.116100] [I] [thread 55224] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[32m[09:54:43.116125] [I] [thread 55224] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:43.116146] [I] [thread 55224] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:54:43.116153] [I] [thread 55224] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:54:43.116170] [I] [thread 55224] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:43.116222] [I] [thread 55224] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:43.116233] [I] [thread 55224] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:43.116242] [I] [thread 55224] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[09:54:43.116287] [D] [thread 55224] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[09:54:43.121818] [E] [thread 55224] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:54:43.122920] [W] [thread 55224] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:37425 went dead so we remove it[m
[32m[09:54:43.123074] [I] [thread 55224] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=2][m
[32m[09:54:43.123100] [I] [thread 55224] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:43.123111] [I] [thread 55224] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[09:54:43.123136] [D] [thread 55224] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[09:54:43.128572] [E] [thread 55224] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:54:43.129615] [W] [thread 55224] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:39859 went dead so we remove it[m
[32m[09:54:43.129764] [I] [thread 55224] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[32m[09:54:43.129790] [I] [thread 55224] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:43.129801] [I] [thread 55224] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[09:54:43.129824] [D] [thread 55224] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[09:54:43.135323] [E] [thread 55224] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:54:43.136399] [W] [thread 55224] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:44731 went dead so we remove it[m
[32m[09:54:43.136542] [I] [thread 55224] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[32m[09:54:43.136567] [I] [thread 55224] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:43.136578] [I] [thread 55224] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[09:54:43.136603] [D] [thread 55224] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[09:54:43.141990] [E] [thread 55224] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:54:43.143018] [W] [thread 55224] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:42629 went dead so we remove it[m
[32m[09:54:43.143205] [I] [thread 55224] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[32m[09:54:43.143231] [I] [thread 55224] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:43.143243] [I] [thread 55224] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[09:54:43.143278] [D] [thread 55224] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[09:54:43.969391] [D] [thread 55223] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
