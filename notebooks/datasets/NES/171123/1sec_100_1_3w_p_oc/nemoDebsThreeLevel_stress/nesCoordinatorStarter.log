
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[15:04:24.673676] [I] [thread 249403] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: DEFAULT_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[15:04:24.673740] [I] [thread 249403] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[15:04:24.673777] [D] [thread 249403] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[15:04:24.674364] [D] [thread 249403] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[15:04:24.674527] [I] [thread 249403] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[15:04:24.674628] [D] [thread 249403] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[15:04:24.674634] [D] [thread 249403] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[15:04:24.674709] [D] [thread 249403] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[15:04:24.674717] [D] [thread 249403] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[15:04:24.674733] [D] [thread 249403] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[15:04:24.674756] [D] [thread 249403] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[15:04:24.674763] [D] [thread 249403] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[15:04:24.706213] [D] [thread 249403] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[15:04:24.706273] [D] [thread 249403] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:04:24.706316] [D] [thread 249403] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:04:24.706376] [D] [thread 249403] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[15:04:24.706432] [D] [thread 249403] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[15:04:24.706462] [D] [thread 249403] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[15:04:24.706484] [D] [thread 249403] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[15:04:24.706519] [D] [thread 249403] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[15:04:24.706656] [D] [thread 249403] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[15:04:24.706674] [D] [thread 249403] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[15:04:24.706694] [D] [thread 249403] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[15:04:24.706712] [D] [thread 249403] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[15:04:24.706749] [D] [thread 249403] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[15:04:24.707089] [D] [thread 249403] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[15:04:24.707174] [D] [thread 249403] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[15:04:24.707205] [D] [thread 249403] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[15:04:24.707220] [D] [thread 249403] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[15:04:24.707228] [W] [thread 249403] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[15:04:24.707238] [I] [thread 249403] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[15:04:24.707243] [D] [thread 249403] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[15:04:24.707455] [D] [thread 249403] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[15:04:24.707581] [I] [thread 249411] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[15:04:24.707608] [D] [thread 249411] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[15:04:24.707719] [D] [thread 249412] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[15:04:24.709412] [D] [thread 249403] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[15:04:24.709412] [D] [thread 249412] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[15:04:24.709440] [D] [thread 249403] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[15:04:24.709446] [D] [thread 249403] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[15:04:24.709447] [D] [thread 249403] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[15:04:24.709561] [D] [thread 249403] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[15:04:24.709597] [D] [thread 249403] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[15:04:24.709599] [D] [thread 249403] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[15:04:24.709614] [D] [thread 249403] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[15:04:24.709647] [D] [thread 249403] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[15:04:24.709652] [D] [thread 249403] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[15:04:24.709664] [I] [thread 249403] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:04:24.709818] [I] [thread 249403] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[15:04:24.709825] [I] [thread 249403] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:04:24.709881] [I] [thread 249403] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[15:04:24.709888] [I] [thread 249403] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:04:24.709974] [I] [thread 249403] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[15:04:24.709979] [I] [thread 249403] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:04:24.710095] [I] [thread 249403] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[15:04:24.710130] [D] [thread 249403] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[15:04:24.710149] [D] [thread 249403] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[15:04:24.710155] [W] [thread 249403] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[15:04:24.719662] [D] [thread 249403] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975450624 available bytes[m
[36m[15:04:24.727937] [D] [thread 249403] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[15:04:24.768042] [D] [thread 249403] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[36m[15:04:24.768649] [D] [thread 249403] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[15:04:24.768800] [I] [thread 249403] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[15:04:24.768836] [D] [thread 249403] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[15:04:24.768845] [D] [thread 249403] [DefaultPhaseFactory.cpp:66] [createLowerPhysicalToGeneratableOperatorsPhase] Create default lower pipeline plan phase[m
[36m[15:04:24.768857] [D] [thread 249403] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[15:04:24.768866] [D] [thread 249403] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[15:04:24.768871] [D] [thread 249403] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[15:04:24.768873] [D] [thread 249403] [DefaultPhaseFactory.cpp:91] [createBufferOptimizationPhase] Create buffer optimization phase[m
[36m[15:04:24.768881] [D] [thread 249403] [DefaultPhaseFactory.cpp:95] [createPredicationOptimizationPhase] Create predication optimization phase[m
[36m[15:04:24.768888] [D] [thread 249403] [DefaultPhaseFactory.cpp:72] [createCodeGenerationPhase] Create default code generation phase[m
[36m[15:04:24.768950] [D] [thread 249403] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[15:04:24.768962] [D] [thread 249403] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[15:04:24.768993] [D] [thread 249403] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[15:04:24.769033] [D] [thread 249403] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[15:04:24.769036] [W] [thread 249403] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[15:04:24.769042] [D] [thread 249403] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[15:04:24.770182] [D] [thread 249417] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[15:04:24.771142] [D] [thread 249417] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[15:04:24.771197] [D] [thread 249417] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 38151[m
[36m[15:04:24.771677] [D] [thread 249420] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 38151[m
[32m[15:04:24.771810] [I] [thread 249403] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:38151[m
[36m[15:04:24.771830] [D] [thread 249403] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1700024004  with numThreads= 1[m
[36m[15:04:24.771853] [D] [thread 249403] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[15:04:24.772106] [D] [thread 249403] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[15:04:24.772120] [D] [thread 249403] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[15:04:24.772135] [D] [thread 249403] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[15:04:24.772140] [D] [thread 249403] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[15:04:24.772185] [D] [thread 249421] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[15:04:24.772207] [D] [thread 249421] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[15:04:24.772444] [D] [thread 249422] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[15:04:24.772553] [D] [thread 249422] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[15:04:24.773283] [D] [thread 249422] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 39223[m
[36m[15:04:24.773296] [D] [thread 249403] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:39223: 39223[m
[36m[15:04:24.773300] [D] [thread 249403] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[15:04:24.773310] [D] [thread 249403] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[15:04:24.773317] [D] [thread 249403] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[15:04:24.773679] [D] [thread 249403] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[15:04:24.773845] [W] [thread 249403] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[15:04:24.773863] [D] [thread 249403] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[15:04:24.775509] [D] [thread 249422] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[15:04:24.775702] [D] [thread 249403] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 39223
dataPort: 38151
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:24.779022] [D] [thread 249413] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 39223
dataPort: 38151
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:24.779100] [D] [thread 249413] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 39223
dataPort: 38151
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:24.779117] [D] [thread 249413] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[15:04:24.779121] [W] [thread 249413] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[15:04:24.779122] [D] [thread 249413] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:24.779124] [D] [thread 249413] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:24.779157] [D] [thread 249413] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[15:04:24.779205] [D] [thread 249413] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[15:04:24.779248] [I] [thread 249413] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[15:04:24.779259] [D] [thread 249413] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:24.779298] [D] [thread 249413] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:24.779310] [I] [thread 249413] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:04:24.779312] [D] [thread 249413] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:04:24.779320] [D] [thread 249413] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:24.779321] [D] [thread 249413] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:24.779363] [D] [thread 249413] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:24.779481] [D] [thread 249413] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[15:04:24.780173] [D] [thread 249403] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[15:04:24.780202] [D] [thread 249403] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[15:04:24.780298] [D] [thread 249403] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[15:04:24.780300] [D] [thread 249403] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[15:04:24.807665] [D] [thread 249403] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[15:04:24.807722] [D] [thread 249403] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[15:04:24.807725] [D] [thread 249403] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[15:04:24.808149] [D] [thread 249403] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[15:04:24.808191] [D] [thread 249403] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[15:04:24.808503] [D] [thread 249403] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[15:04:24.808586] [I] [thread 249426] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[15:04:24.810716] [I] [thread 249426] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[15:04:24.810767] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:24.833584] [D] [thread 249403] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[15:04:24.833624] [D] [thread 249403] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[15:04:24.833627] [D] [thread 249403] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[15:04:24.833992] [D] [thread 249403] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[15:04:25.811591] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:26.812799] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:27.813999] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:28.815191] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:28.896506] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:28.897216] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:28.897609] [D] [thread 249429] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[15:04:28.897916] [D] [thread 249429] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[15:04:28.897950] [D] [thread 249429] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[15:04:28.898019] [D] [thread 249429] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[15:04:28.899108] [D] [thread 249430] [File.cpp:27] [createFile] Create File to file:///tmp/query_17-11-2023_15-04-28_9468914.cpp[m
[36m[15:04:28.899978] [D] [thread 249430] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[15:04:28.900213] [D] [thread 249430] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_17-11-2023_15-04-28_9468914.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_17-11-2023_15-04-28_9468914.cpp'[m
[36m[15:04:29.898370] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:30.632823] [I] [thread 249430] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1733.824938ms[m
[36m[15:04:30.633791] [D] [thread 249429] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[15:04:30.633829] [D] [thread 249429] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[15:04:30.633833] [D] [thread 249429] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[15:04:30.633843] [D] [thread 249429] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[15:04:30.899564] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:30.904469] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:30.904746] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:30.905286] [I] [thread 249436] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:30.905428] [I] [thread 249436] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:31.219668] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:31.220032] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:31.220422] [I] [thread 249437] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:31.220579] [I] [thread 249437] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:31.299729] [D] [thread 249424] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 46805
dataPort: 44173
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:31.299819] [D] [thread 249424] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 46805
dataPort: 44173
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:31.299833] [D] [thread 249424] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:04:31.299904] [D] [thread 249424] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:31.299908] [D] [thread 249424] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:31.299917] [D] [thread 249424] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[15:04:31.299945] [D] [thread 249424] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:04:31.299971] [I] [thread 249424] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:04:31.300010] [I] [thread 249424] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:31.300070] [D] [thread 249424] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[15:04:31.300102] [D] [thread 249424] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:31.300154] [D] [thread 249424] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:31.300165] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:04:31.300168] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:04:31.300175] [D] [thread 249424] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:31.300178] [D] [thread 249424] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:31.300181] [D] [thread 249424] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:31.300248] [D] [thread 249424] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[15:04:32.221305] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:33.222525] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:34.223760] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:35.225000] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:35.429338] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:35.429706] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:35.430193] [I] [thread 249438] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:35.430319] [I] [thread 249438] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:35.482701] [D] [thread 249413] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 38755
dataPort: 41875
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:35.482786] [D] [thread 249413] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 38755
dataPort: 41875
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:35.482798] [D] [thread 249413] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:04:35.482884] [D] [thread 249413] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:35.482888] [D] [thread 249413] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:35.482898] [D] [thread 249413] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[15:04:35.482924] [D] [thread 249413] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:04:35.482941] [I] [thread 249413] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:04:35.482968] [I] [thread 249413] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:35.482980] [D] [thread 249413] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[15:04:35.482992] [D] [thread 249413] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:35.483077] [D] [thread 249413] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:35.483089] [I] [thread 249413] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:04:35.483092] [D] [thread 249413] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:04:35.483098] [D] [thread 249413] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:35.483102] [D] [thread 249413] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:35.483105] [D] [thread 249413] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:35.483171] [D] [thread 249413] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[15:04:36.430902] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:37.432112] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:38.433328] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:39.381305] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:39.381733] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:39.382087] [I] [thread 249440] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:39.382301] [I] [thread 249440] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:39.409945] [D] [thread 249413] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 45087
dataPort: 35153
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:39.410032] [D] [thread 249413] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 45087
dataPort: 35153
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:39.410046] [D] [thread 249413] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:04:39.410143] [D] [thread 249413] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:39.410147] [D] [thread 249413] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:39.410159] [D] [thread 249413] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[15:04:39.410186] [D] [thread 249413] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:04:39.410203] [I] [thread 249413] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:04:39.410230] [I] [thread 249413] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:39.410241] [D] [thread 249413] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[15:04:39.410253] [D] [thread 249413] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:39.410313] [D] [thread 249413] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:39.410353] [I] [thread 249413] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:04:39.410356] [D] [thread 249413] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:04:39.410363] [D] [thread 249413] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:39.410366] [D] [thread 249413] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:39.410369] [D] [thread 249413] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:39.410436] [D] [thread 249413] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[15:04:40.382845] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:41.384015] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:42.385199] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:42.740191] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:42.740538] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:42.741038] [I] [thread 249441] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:42.741210] [I] [thread 249441] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:42.765187] [D] [thread 249413] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 40303
dataPort: 37119
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:42.765268] [D] [thread 249413] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 40303
dataPort: 37119
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:42.765282] [D] [thread 249413] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:04:42.765394] [D] [thread 249413] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:42.765398] [D] [thread 249413] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:42.765409] [D] [thread 249413] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[15:04:42.765437] [D] [thread 249413] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:04:42.765454] [I] [thread 249413] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:04:42.765480] [I] [thread 249413] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:42.765489] [D] [thread 249413] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[15:04:42.765501] [D] [thread 249413] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:42.765570] [D] [thread 249413] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:42.765581] [I] [thread 249413] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:04:42.765585] [D] [thread 249413] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:04:42.765591] [D] [thread 249413] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:42.765594] [D] [thread 249413] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:42.765598] [D] [thread 249413] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:42.765665] [D] [thread 249413] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[15:04:42.789133] [D] [thread 249413] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[15:04:42.789175] [I] [thread 249413] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:04:42.789180] [D] [thread 249413] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:04:42.789196] [D] [thread 249413] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[15:04:42.789281] [D] [thread 249413] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:04:42.789292] [D] [thread 249413] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[15:04:42.789319] [D] [thread 249413] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[15:04:42.789326] [D] [thread 249413] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:04:42.789337] [D] [thread 249413] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[15:04:42.789341] [D] [thread 249413] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:04:42.790690] [D] [thread 249424] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[15:04:42.790731] [D] [thread 249424] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[15:04:42.790737] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:04:42.790740] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:04:42.790743] [D] [thread 249424] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[15:04:42.790745] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:04:42.790747] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:04:42.790749] [D] [thread 249424] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:04:42.790762] [D] [thread 249424] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:04:42.790824] [I] [thread 249424] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:42.790844] [D] [thread 249424] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:04:42.790847] [D] [thread 249424] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:04:42.790853] [D] [thread 249424] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[15:04:42.790855] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:04:42.790857] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:04:42.790860] [D] [thread 249424] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[15:04:42.790861] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:04:42.790863] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:04:42.790865] [D] [thread 249424] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[15:04:42.790888] [I] [thread 249424] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[15:04:42.790896] [D] [thread 249424] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:04:42.790964] [D] [thread 249424] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:04:42.790969] [D] [thread 249424] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:04:43.741726] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:44.742933] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:45.744126] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:46.745320] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:46.821105] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:46.821509] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:46.821969] [I] [thread 249442] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:46.822165] [I] [thread 249442] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:46.858842] [D] [thread 249413] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 40105
dataPort: 36507
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:46.858929] [D] [thread 249413] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 40105
dataPort: 36507
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:46.858944] [D] [thread 249413] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:04:46.859067] [D] [thread 249413] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:46.859072] [D] [thread 249413] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:46.859082] [D] [thread 249413] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[15:04:46.859108] [D] [thread 249413] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:04:46.859125] [I] [thread 249413] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:04:46.859151] [I] [thread 249413] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:46.859160] [D] [thread 249413] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[15:04:46.859172] [D] [thread 249413] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:46.859252] [D] [thread 249413] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:46.859263] [I] [thread 249413] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:04:46.859266] [D] [thread 249413] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:04:46.859272] [D] [thread 249413] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:46.859276] [D] [thread 249413] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:46.859279] [D] [thread 249413] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:46.859347] [D] [thread 249413] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[15:04:46.882784] [D] [thread 249424] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[15:04:46.882830] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:04:46.882835] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:04:46.882845] [D] [thread 249424] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[15:04:46.882871] [D] [thread 249424] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:04:46.882878] [D] [thread 249424] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[15:04:46.882895] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:04:46.882901] [D] [thread 249424] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[15:04:46.882905] [D] [thread 249424] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:04:46.882912] [D] [thread 249424] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[15:04:46.882916] [D] [thread 249424] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:04:46.884314] [D] [thread 249443] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[15:04:46.884419] [D] [thread 249443] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[15:04:46.884425] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:04:46.884429] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:04:46.884448] [D] [thread 249443] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[15:04:46.884450] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:04:46.884453] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:04:46.884455] [D] [thread 249443] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:04:46.884470] [D] [thread 249443] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:04:46.884541] [I] [thread 249443] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:46.884550] [D] [thread 249443] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:04:46.884553] [D] [thread 249443] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:04:46.884556] [D] [thread 249443] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[15:04:46.884559] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:04:46.884561] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:04:46.884564] [D] [thread 249443] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[15:04:46.884566] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:04:46.884582] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:04:46.884585] [D] [thread 249443] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[15:04:46.884616] [I] [thread 249443] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[15:04:46.884624] [D] [thread 249443] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:04:46.884714] [D] [thread 249443] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:04:46.884720] [D] [thread 249443] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:04:47.822676] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:48.823886] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:49.824462] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:50.825663] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:50.827898] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:50.828201] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:50.828798] [I] [thread 249444] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:50.829029] [I] [thread 249444] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:50.854804] [D] [thread 249424] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 41483
dataPort: 39701
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:50.854861] [D] [thread 249424] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 41483
dataPort: 39701
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:50.854871] [D] [thread 249424] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:04:50.854969] [D] [thread 249424] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:50.854972] [D] [thread 249424] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:50.854979] [D] [thread 249424] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[15:04:50.854998] [D] [thread 249424] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:04:50.855009] [I] [thread 249424] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:04:50.855028] [I] [thread 249424] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:50.855036] [D] [thread 249424] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[15:04:50.863939] [D] [thread 249424] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:50.864259] [D] [thread 249424] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:50.864291] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:04:50.864294] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:04:50.864304] [D] [thread 249424] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:50.864307] [D] [thread 249424] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:50.864309] [D] [thread 249424] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:50.864402] [D] [thread 249424] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[15:04:50.890122] [D] [thread 249443] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[15:04:50.890170] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:04:50.890176] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:04:50.890187] [D] [thread 249443] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[15:04:50.890212] [D] [thread 249443] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:04:50.890217] [D] [thread 249443] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[15:04:50.890224] [D] [thread 249443] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:04:50.890229] [D] [thread 249443] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:04:50.890233] [D] [thread 249443] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[15:04:50.890237] [D] [thread 249443] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:04:50.890244] [D] [thread 249443] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[15:04:50.890249] [D] [thread 249443] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:04:50.891343] [D] [thread 249424] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[15:04:50.891358] [D] [thread 249424] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[15:04:50.891363] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:04:50.891366] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:04:50.891369] [D] [thread 249424] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[15:04:50.891371] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:04:50.891373] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:04:50.891376] [D] [thread 249424] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:04:50.891390] [D] [thread 249424] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:04:50.891457] [I] [thread 249424] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:50.891464] [D] [thread 249424] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:04:50.891467] [D] [thread 249424] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:04:50.891470] [D] [thread 249424] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[15:04:50.891473] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:04:50.891485] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:04:50.891488] [D] [thread 249424] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[15:04:50.891490] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:04:50.891492] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:04:50.891494] [D] [thread 249424] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[15:04:50.891521] [I] [thread 249424] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[15:04:50.891528] [D] [thread 249424] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:04:50.891630] [D] [thread 249424] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:04:50.891637] [D] [thread 249424] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:04:51.829411] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:52.830617] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:53.831823] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:54.833031] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:54.908756] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:54.909042] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:54.909594] [I] [thread 249445] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:54.909832] [I] [thread 249445] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:54.941209] [D] [thread 249443] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 40927
dataPort: 34021
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:54.941292] [D] [thread 249443] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 40927
dataPort: 34021
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:54.941308] [D] [thread 249443] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:04:54.941485] [D] [thread 249443] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:54.941489] [D] [thread 249443] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:54.941499] [D] [thread 249443] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[15:04:54.941526] [D] [thread 249443] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:04:54.941544] [I] [thread 249443] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:04:54.941571] [I] [thread 249443] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:54.941581] [D] [thread 249443] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[15:04:54.941593] [D] [thread 249443] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:54.941698] [D] [thread 249443] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:54.941709] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:04:54.941712] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:04:54.941719] [D] [thread 249443] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:54.941722] [D] [thread 249443] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:54.941725] [D] [thread 249443] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:54.941790] [D] [thread 249443] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[15:04:54.965319] [D] [thread 249443] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[15:04:54.965353] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:04:54.965357] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:04:54.965365] [D] [thread 249443] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[15:04:54.965386] [D] [thread 249443] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:04:54.965391] [D] [thread 249443] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[15:04:54.965397] [D] [thread 249443] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:04:54.965401] [D] [thread 249443] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:04:54.965403] [D] [thread 249443] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:04:54.965406] [D] [thread 249443] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[15:04:54.965410] [D] [thread 249443] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:04:54.965413] [D] [thread 249443] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[15:04:54.965417] [D] [thread 249443] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:04:54.966390] [D] [thread 249443] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[15:04:54.966421] [D] [thread 249443] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[15:04:54.966426] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:04:54.966440] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:04:54.966443] [D] [thread 249443] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[15:04:54.966445] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:04:54.966447] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:04:54.966449] [D] [thread 249443] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:04:54.966460] [D] [thread 249443] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:04:54.966519] [I] [thread 249443] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:54.966526] [D] [thread 249443] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:04:54.966530] [D] [thread 249443] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:04:54.966533] [D] [thread 249443] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[15:04:54.966536] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:04:54.966538] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:04:54.966541] [D] [thread 249443] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[15:04:54.966543] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:04:54.966545] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:04:54.966547] [D] [thread 249443] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[15:04:54.966574] [I] [thread 249443] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[15:04:54.966582] [D] [thread 249443] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:04:54.966691] [D] [thread 249443] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:04:54.966700] [D] [thread 249443] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:04:55.910203] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:56.911361] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:57.912457] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:58.909304] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:04:58.909628] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:04:58.910049] [I] [thread 249446] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:04:58.910320] [I] [thread 249446] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:04:58.942727] [D] [thread 249443] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 41147
dataPort: 45555
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:58.942811] [D] [thread 249443] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 41147
dataPort: 45555
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:04:58.942827] [D] [thread 249443] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:04:58.942980] [D] [thread 249443] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:04:58.942984] [D] [thread 249443] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:04:58.942994] [D] [thread 249443] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[15:04:58.943020] [D] [thread 249443] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:04:58.943038] [I] [thread 249443] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:04:58.943064] [I] [thread 249443] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:58.943074] [D] [thread 249443] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[15:04:58.943087] [D] [thread 249443] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:04:58.943230] [D] [thread 249443] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:04:58.943243] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:04:58.943246] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:04:58.943252] [D] [thread 249443] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:04:58.943256] [D] [thread 249443] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:04:58.943259] [D] [thread 249443] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:04:58.943325] [D] [thread 249443] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[15:04:58.966576] [D] [thread 249424] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[15:04:58.966618] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:04:58.966623] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:04:58.966633] [D] [thread 249424] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[15:04:58.966660] [D] [thread 249424] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:04:58.966666] [D] [thread 249424] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[15:04:58.966674] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:04:58.966678] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:04:58.966681] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:04:58.966683] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[15:04:58.966687] [D] [thread 249424] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[15:04:58.966692] [D] [thread 249424] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:04:58.966698] [D] [thread 249424] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[15:04:58.966703] [D] [thread 249424] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:04:58.967778] [D] [thread 249443] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[15:04:58.967817] [D] [thread 249443] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[15:04:58.967824] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:04:58.967828] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:04:58.967837] [D] [thread 249443] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[15:04:58.967839] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:04:58.967842] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:04:58.967844] [D] [thread 249443] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:04:58.967859] [D] [thread 249443] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:04:58.967926] [I] [thread 249443] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:04:58.967933] [D] [thread 249443] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:04:58.967937] [D] [thread 249443] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:04:58.967941] [D] [thread 249443] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[15:04:58.967943] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:04:58.967945] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:04:58.967948] [D] [thread 249443] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[15:04:58.967950] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:04:58.967958] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:04:58.967960] [D] [thread 249443] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[15:04:58.967987] [I] [thread 249443] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[15:04:58.967995] [D] [thread 249443] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:04:58.968118] [D] [thread 249443] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:04:58.968125] [D] [thread 249443] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:04:59.910829] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:00.911965] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:01.912436] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:02.815685] [D] [thread 249443] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 39955
dataPort: 35049
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:05:02.815771] [D] [thread 249443] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 39955
dataPort: 35049
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:05:02.815786] [D] [thread 249443] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:05:02.815956] [D] [thread 249443] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:05:02.815960] [D] [thread 249443] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:05:02.815970] [D] [thread 249443] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[15:05:02.815997] [D] [thread 249443] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:05:02.816015] [I] [thread 249443] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:05:02.816042] [I] [thread 249443] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:05:02.816051] [D] [thread 249443] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[15:05:02.816063] [D] [thread 249443] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:05:02.816223] [D] [thread 249443] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:05:02.816235] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:05:02.816238] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:05:02.816245] [D] [thread 249443] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:05:02.816248] [D] [thread 249443] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:05:02.816251] [D] [thread 249443] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:05:02.816526] [D] [thread 249443] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[15:05:02.840789] [D] [thread 249424] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[15:05:02.840822] [I] [thread 249424] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:05:02.840826] [D] [thread 249424] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:05:02.840834] [D] [thread 249424] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[15:05:02.840865] [D] [thread 249424] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:05:02.840870] [D] [thread 249424] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[15:05:02.840876] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:05:02.840880] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:05:02.840882] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:05:02.840884] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[15:05:02.840886] [D] [thread 249424] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[15:05:02.840888] [D] [thread 249424] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[15:05:02.840892] [D] [thread 249424] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:05:02.840896] [D] [thread 249424] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[15:05:02.840899] [D] [thread 249424] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:05:02.842229] [D] [thread 249443] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[15:05:02.842276] [D] [thread 249443] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[15:05:02.842282] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:05:02.842286] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:05:02.842305] [D] [thread 249443] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[15:05:02.842307] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:05:02.842310] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:05:02.842313] [D] [thread 249443] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:05:02.842327] [D] [thread 249443] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:05:02.842398] [I] [thread 249443] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:05:02.842407] [D] [thread 249443] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:05:02.842410] [D] [thread 249443] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:05:02.842427] [D] [thread 249443] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[15:05:02.842431] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:05:02.842433] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:05:02.842436] [D] [thread 249443] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[15:05:02.842438] [I] [thread 249443] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:05:02.842440] [D] [thread 249443] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:05:02.842442] [D] [thread 249443] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[15:05:02.842471] [I] [thread 249443] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[15:05:02.842479] [D] [thread 249443] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:05:02.842616] [D] [thread 249443] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:05:02.842625] [D] [thread 249443] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:05:02.913570] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:03.365289] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:03.365595] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:05:03.365992] [I] [thread 249448] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:05:03.366293] [I] [thread 249448] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:05:04.366766] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:05.274139] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:05.274325] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:05.437054] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:05.437367] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:05.437971] [D] [thread 249454] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Seconds(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[15:05:05.438018] [I] [thread 249454] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[15:05:05.438026] [I] [thread 249454] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[15:05:05.438034] [D] [thread 249454] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[15:05:05.438079] [D] [thread 249454] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[15:05:05.438115] [D] [thread 249454] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Seconds(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));[m
[36m[15:05:05.438125] [D] [thread 249454] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Seconds(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));
}
}
[m
[36m[15:05:05.439073] [D] [thread 249455] [File.cpp:27] [createFile] Create File to file:///tmp/query_17-11-2023_15-05-05_8585752.cpp[m
[36m[15:05:05.439537] [D] [thread 249455] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[15:05:05.439577] [D] [thread 249455] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[15:05:05.439684] [D] [thread 249455] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -o/tmp/query_17-11-2023_15-05-05_8585752.so -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_17-11-2023_15-05-05_8585752.cpp'[m
[36m[15:05:06.438542] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:07.439697] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:05:08.349206] [I] [thread 249455] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2910.201252ms[m
[36m[15:05:08.349389] [D] [thread 249454] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[15:05:08.349415] [D] [thread 249454] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[15:05:08.349474] [I] [thread 249454] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.349582] [D] [thread 249454] [Query.cpp:237] [project] Query: add projection to query[m
[36m[15:05:08.349604] [D] [thread 249454] [QueryPlanBuilder.cpp:51] [addProjection] QueryPlanBuilder: add projection operator to query plan[m
[32m[15:05:08.349620] [I] [thread 249454] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:05:08.349658] [D] [thread 249454] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PROJECTION(2, schema=) as new root of the plan.[m
[36m[15:05:08.349699] [D] [thread 249454] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.349700] [D] [thread 249454] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.349795] [D] [thread 249454] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[15:05:08.349821] [D] [thread 249454] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[15:05:08.349851] [I] [thread 249454] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:05:08.349866] [D] [thread 249454] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(3) as new root of the plan.[m
[36m[15:05:08.349886] [D] [thread 249454] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.349887] [D] [thread 249454] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:05:08.349916] [I] [thread 249454] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[15:05:08.349936] [D] [thread 249454] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-4, Min;) as new root of the plan.[m
[36m[15:05:08.349951] [D] [thread 249454] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.349952] [D] [thread 249454] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.349983] [D] [thread 249454] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[15:05:08.349993] [I] [thread 249454] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[15:05:08.350005] [D] [thread 249454] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[15:05:08.350022] [D] [thread 249454] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.350023] [D] [thread 249454] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.350751] [D] [thread 249454] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.350777] [D] [thread 249454] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.350786] [D] [thread 249454] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.350803] [D] [thread 249454] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.350809] [D] [thread 249454] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.350810] [D] [thread 249454] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.350821] [D] [thread 249454] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:05:08.350829] [D] [thread 249454] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.350833] [D] [thread 249454] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.350835] [D] [thread 249454] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.350962] [D] [thread 249454] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.350969] [D] [thread 249454] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.350978] [D] [thread 249454] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.351228] [D] [thread 249454] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.351325] [D] [thread 249454] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.351404] [D] [thread 249454] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[15:05:08.351465] [I] [thread 249454] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[15:05:08.351559] [I] [thread 249454] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[15:05:08.351563] [I] [thread 249454] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[15:05:08.351621] [I] [thread 249411] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[15:05:08.351637] [I] [thread 249411] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[15:05:08.351643] [I] [thread 249411] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[15:05:08.351682] [I] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[15:05:08.351695] [D] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[15:05:08.351699] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.351712] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.351715] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.351721] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.351725] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.351947] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.352005] [D] [thread 249411] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.352061] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.352066] [D] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[15:05:08.352071] [D] [thread 249411] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[15:05:08.352119] [D] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[15:05:08.352126] [I] [thread 249411] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:05:08.352146] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:05:08.352173] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:05:08.352218] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:05:08.352245] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:05:08.352288] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.352391] [D] [thread 249411] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[15:05:08.352466] [D] [thread 249411] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.352524] [D] [thread 249411] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[15:05:08.352566] [I] [thread 249411] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.352578] [D] [thread 249411] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[15:05:08.352580] [I] [thread 249411] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:05:08.352587] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:05:08.352596] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:05:08.352621] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:05:08.352642] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:05:08.352676] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.352714] [D] [thread 249411] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[15:05:08.352761] [I] [thread 249411] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.352768] [D] [thread 249411] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[15:05:08.352770] [I] [thread 249411] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:05:08.352774] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:05:08.352780] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:05:08.352802] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:05:08.352821] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:05:08.352872] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.352914] [D] [thread 249411] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[15:05:08.352955] [I] [thread 249411] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[15:05:08.352995] [I] [thread 249411] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.353017] [D] [thread 249411] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[15:05:08.353057] [D] [thread 249411] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.353096] [D] [thread 249411] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.353112] [D] [thread 249411] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[15:05:08.353152] [D] [thread 249411] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.353190] [D] [thread 249411] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.353203] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.353209] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.353212] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.353217] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.353220] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.353405] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.353458] [D] [thread 249411] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.353511] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[15:05:08.353521] [I] [thread 249411] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[15:05:08.353569] [I] [thread 249411] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:05:08.353572] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.353578] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.353581] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[15:05:08.353684] [I] [thread 249411] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:05:08.353689] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.353696] [D] [thread 249411] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:05:08.353699] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.353703] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:05:08.353708] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.353711] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:05:08.353781] [D] [thread 249411] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:05:08.353851] [I] [thread 249411] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:05:08.353855] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.353860] [D] [thread 249411] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:05:08.353862] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.353883] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:05:08.353897] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.353900] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:05:08.353964] [D] [thread 249411] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:05:08.353998] [I] [thread 249411] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:05:08.354002] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.354006] [D] [thread 249411] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:05:08.354008] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.354011] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:05:08.354014] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.354016] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:05:08.354078] [D] [thread 249411] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:05:08.354116] [I] [thread 249411] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:05:08.354120] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.354124] [D] [thread 249411] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:05:08.354126] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.354129] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:05:08.354133] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.354151] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:05:08.354218] [D] [thread 249411] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:05:08.354258] [I] [thread 249411] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:05:08.354262] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.354266] [D] [thread 249411] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:05:08.354268] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.354271] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:05:08.354274] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.354277] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:05:08.354337] [D] [thread 249411] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:05:08.354375] [I] [thread 249411] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:05:08.354378] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:05:08.354382] [D] [thread 249411] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:05:08.354384] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.354387] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:05:08.354390] [D] [thread 249411] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:05:08.354404] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:05:08.354465] [D] [thread 249411] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[15:05:08.354689] [D] [thread 249411] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[15:05:08.354697] [I] [thread 249411] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[15:05:08.354862] [D] [thread 249411] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:05:08.354921] [D] [thread 249411] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[15:05:08.355098] [D] [thread 249411] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:05:08.355102] [D] [thread 249411] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[15:05:08.355266] [D] [thread 249411] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:05:08.355321] [D] [thread 249411] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[15:05:08.355329] [D] [thread 249411] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-4, Min;)[m
[36m[15:05:08.355342] [D] [thread 249411] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:05:08.355363] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:05:08.355365] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[15:05:08.355390] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:05:08.355392] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[15:05:08.355403] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:05:08.355404] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[15:05:08.355415] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:05:08.355416] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[15:05:08.355426] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:05:08.355427] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[15:05:08.355438] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:05:08.355445] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[15:05:08.355486] [I] [thread 249411] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:05:08.355489] [I] [thread 249411] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:08.355490] [I] [thread 249411] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:08.355492] [I] [thread 249411] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:08.355493] [I] [thread 249411] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:08.355494] [I] [thread 249411] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:08.355495] [I] [thread 249411] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:08.355498] [I] [thread 249411] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:05:08.355501] [I] [thread 249411] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:05:08.355502] [I] [thread 249411] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:05:08.355510] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[15:05:08.355536] [D] [thread 249411] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:05:08.355581] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[15:05:08.355594] [D] [thread 249411] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:05:08.355638] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[15:05:08.355651] [D] [thread 249411] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[36m[15:05:08.355885] [D] [thread 249411] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:05:08.356060] [D] [thread 249411] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:05:08.356107] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.356127] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.356132] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[15:05:08.356141] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.356145] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.356379] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.356578] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.356636] [D] [thread 249411] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:05:08.356665] [I] [thread 249411] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:05:08.356688] [I] [thread 249411] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.356867] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.357048] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.357101] [D] [thread 249411] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:05:08.357117] [I] [thread 249411] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:05:08.357139] [I] [thread 249411] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.357302] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.357490] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.357535] [D] [thread 249411] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:05:08.357552] [I] [thread 249411] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:05:08.357574] [I] [thread 249411] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.357589] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.357714] [D] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[15:05:08.357717] [D] [thread 249411] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[15:05:08.357790] [D] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[15:05:08.357797] [D] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[15:05:08.357800] [D] [thread 249411] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[15:05:08.357808] [I] [thread 249411] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[15:05:08.357816] [I] [thread 249411] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:05:08.357827] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:05:08.357843] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[15:05:08.357895] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[15:05:08.357921] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[15:05:08.357949] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[15:05:08.357970] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[15:05:08.357990] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[15:05:08.358037] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[15:05:08.358062] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[15:05:08.358080] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[15:05:08.358102] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[15:05:08.358143] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[15:05:08.358176] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[15:05:08.358209] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[15:05:08.358256] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[15:05:08.358291] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[15:05:08.358325] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[15:05:08.358373] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[15:05:08.358413] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[15:05:08.358463] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[15:05:08.358507] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[15:05:08.358545] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[15:05:08.358627] [D] [thread 249411] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[15:05:08.358630] [D] [thread 249411] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[15:05:08.358634] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358638] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358641] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358643] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358647] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358649] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358652] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358655] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358657] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358660] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358663] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358665] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358668] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358671] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358674] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358676] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358679] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358680] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.358689] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358691] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.358694] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358696] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.358698] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358700] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.358702] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358704] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.358706] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.358708] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.358864] [D] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[15:05:08.358869] [D] [thread 249411] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[15:05:08.358877] [D] [thread 249411] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[15:05:08.358890] [D] [thread 249411] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[15:05:08.358892] [D] [thread 249411] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[15:05:08.358895] [D] [thread 249411] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[15:05:08.358901] [I] [thread 249411] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[15:05:08.359169] [D] [thread 249411] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:05:08.359175] [D] [thread 249411] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[15:05:08.359177] [D] [thread 249411] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[15:05:08.359183] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359187] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359190] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359192] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359195] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359198] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359200] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359203] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359206] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359209] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359211] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359214] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359217] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359219] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359222] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359225] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359228] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359230] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.359233] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359235] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.359237] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359239] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.359241] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359243] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.359245] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359246] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.359249] [D] [thread 249411] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:05:08.359251] [D] [thread 249411] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:05:08.359288] [D] [thread 249411] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[15:05:08.359295] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:05:08.359298] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[15:05:08.359303] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:05:08.359304] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[15:05:08.359306] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:05:08.359309] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[15:05:08.359310] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:05:08.359312] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[15:05:08.359314] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:05:08.359315] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[15:05:08.359317] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:05:08.359318] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[15:05:08.359321] [I] [thread 249411] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:05:08.359323] [D] [thread 249411] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[15:05:08.359330] [I] [thread 249411] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[15:05:08.359364] [D] [thread 249411] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:05:08.359385] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359399] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359410] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359432] [D] [thread 249411] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:05:08.359438] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359444] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359451] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359465] [D] [thread 249411] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:05:08.359477] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359483] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359491] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359505] [D] [thread 249411] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:05:08.359511] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359517] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359581] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359602] [D] [thread 249411] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:05:08.359607] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359613] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359621] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359635] [D] [thread 249411] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:05:08.359640] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359656] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359663] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[15:05:08.359672] [I] [thread 249411] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[15:05:08.359674] [D] [thread 249411] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[15:05:08.359705] [D] [thread 249411] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[15:05:08.359707] [D] [thread 249411] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:05:08.359713] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359715] [D] [thread 249411] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:05:08.359717] [D] [thread 249411] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:05:08.359725] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359764] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359775] [D] [thread 249411] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:05:08.359782] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359783] [D] [thread 249411] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:05:08.359785] [D] [thread 249411] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:05:08.359792] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359799] [D] [thread 249411] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:05:08.359804] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359806] [D] [thread 249411] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:05:08.359807] [D] [thread 249411] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:05:08.359812] [W] [thread 249411] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:05:08.359814] [D] [thread 249411] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:05:08.359819] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359820] [D] [thread 249411] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:05:08.359822] [D] [thread 249411] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:05:08.359826] [W] [thread 249411] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:05:08.359827] [D] [thread 249411] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:05:08.359832] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359834] [D] [thread 249411] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:05:08.359836] [D] [thread 249411] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:05:08.359842] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359848] [D] [thread 249411] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:05:08.359853] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:05:08.359854] [D] [thread 249411] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:05:08.359856] [D] [thread 249411] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:05:08.359861] [W] [thread 249411] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:05:08.359871] [D] [thread 249411] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[15:05:08.359873] [D] [thread 249411] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[15:05:08.359874] [D] [thread 249411] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[15:05:08.359875] [D] [thread 249411] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[15:05:08.359877] [D] [thread 249411] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[15:05:08.359879] [D] [thread 249411] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[15:05:08.359880] [D] [thread 249411] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[15:05:08.359908] [D] [thread 249411] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[15:05:08.359925] [D] [thread 249411] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[15:05:08.359943] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[15:05:08.359951] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.359988] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:05:08.359991] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360011] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[15:05:08.360014] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360026] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[15:05:08.360028] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360035] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[15:05:08.360041] [W] [thread 249411] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[15:05:08.360044] [W] [thread 249411] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[15:05:08.360053] [D] [thread 249411] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[15:05:08.360061] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[15:05:08.360063] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360087] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:05:08.360090] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360101] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(11)[m
[36m[15:05:08.360103] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360129] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[15:05:08.360131] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360134] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:05:08.360140] [D] [thread 249411] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:05:08.360145] [D] [thread 249411] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:05:08.360147] [D] [thread 249411] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:05:08.360175] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:05:08.360178] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360180] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:05:08.360188] [D] [thread 249411] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:05:08.360190] [D] [thread 249411] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:05:08.360191] [D] [thread 249411] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:05:08.360207] [D] [thread 249411] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:05:08.360216] [D] [thread 249411] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[15:05:08.360223] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[15:05:08.360225] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360250] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:05:08.360253] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360264] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[15:05:08.360267] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360277] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[15:05:08.360279] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360282] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[15:05:08.360286] [W] [thread 249411] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[15:05:08.360288] [W] [thread 249411] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[15:05:08.360295] [D] [thread 249411] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[15:05:08.360302] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[15:05:08.360304] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360434] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:05:08.360438] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360453] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(17)[m
[36m[15:05:08.360455] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360466] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[15:05:08.360469] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360471] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:05:08.360477] [D] [thread 249411] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:05:08.360479] [D] [thread 249411] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:05:08.360481] [D] [thread 249411] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:05:08.360499] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:05:08.360502] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360504] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:05:08.360511] [D] [thread 249411] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:05:08.360513] [D] [thread 249411] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:05:08.360514] [D] [thread 249411] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:05:08.360528] [D] [thread 249411] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:05:08.360538] [D] [thread 249411] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[15:05:08.360545] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[15:05:08.360548] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360571] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:05:08.360574] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360586] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[15:05:08.360588] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360599] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[15:05:08.360601] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360604] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[15:05:08.360608] [W] [thread 249411] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[15:05:08.360610] [W] [thread 249411] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[15:05:08.360617] [D] [thread 249411] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[15:05:08.360625] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[15:05:08.360626] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360649] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:05:08.360652] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360663] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(23)[m
[36m[15:05:08.360665] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360684] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[15:05:08.360687] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360689] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:05:08.360695] [D] [thread 249411] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:05:08.360705] [D] [thread 249411] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:05:08.360706] [D] [thread 249411] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:05:08.360724] [D] [thread 249411] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:05:08.360727] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.360729] [D] [thread 249411] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:05:08.360737] [D] [thread 249411] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:05:08.360739] [D] [thread 249411] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:05:08.360740] [D] [thread 249411] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:05:08.360753] [D] [thread 249411] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:05:08.360756] [D] [thread 249411] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.360761] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.360781] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.360790] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:05:08.360821] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[15:05:08.360827] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.360829] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.360853] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[15:05:08.360874] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[15:05:08.360877] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.360878] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.360883] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.360885] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.360899] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:05:08.360908] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.360910] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:05:08.360913] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:05:08.360933] [D] [thread 249411] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[15:05:08.360948] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.360951] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.360957] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:05:08.360960] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.360968] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.360999] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.361003] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:05:08.361019] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:05:08.361020] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:05:08.361041] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 5[m
[36m[15:05:08.361051] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361053] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.361057] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361059] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.361064] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361065] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.361080] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.361082] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361084] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.361092] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[15:05:08.361107] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361109] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.361113] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[15:05:08.361115] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[15:05:08.361162] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[15:05:08.361175] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361176] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.361180] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:05:08.361181] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.361182] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:05:08.361184] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:05:08.361189] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[15:05:08.361193] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.361194] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.361196] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:05:08.361198] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.361202] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.361211] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.361213] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:05:08.361222] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:05:08.361223] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:05:08.361229] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 5[m
[36m[15:05:08.361230] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361231] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.361232] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361236] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.361239] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361240] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.361257] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.361259] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361260] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.361264] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[15:05:08.361275] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361276] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.361278] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[15:05:08.361279] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[15:05:08.361322] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:05:08.361339] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361341] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.361343] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:05:08.361344] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.361345] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:05:08.361346] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:05:08.361368] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[15:05:08.361371] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.361373] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.361374] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:05:08.361376] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.361382] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.361392] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:05:08.361396] [W] [thread 249411] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:05:08.361397] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.361399] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.361400] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.361408] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.361411] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:05:08.361421] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[15:05:08.361422] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.361423] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.361428] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[15:05:08.361444] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[15:05:08.361446] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.361447] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.361449] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361450] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.361453] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:05:08.361455] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.361456] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:05:08.361457] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:05:08.361460] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[15:05:08.361469] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.361470] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.361471] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:05:08.361473] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.361476] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.361499] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.361502] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:05:08.361510] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:05:08.361511] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:05:08.361528] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 6[m
[36m[15:05:08.361529] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361530] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.361540] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361541] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.361544] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361545] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.361553] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.361554] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361555] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.361560] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[15:05:08.361568] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361570] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.361572] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[15:05:08.361573] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[15:05:08.361607] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[15:05:08.361615] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361616] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.361619] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:05:08.361620] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.361621] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:05:08.361622] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:05:08.361624] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[15:05:08.361627] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.361628] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.361630] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:05:08.361631] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.361635] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.361642] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.361644] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:05:08.361651] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:05:08.361655] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:05:08.361661] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(11) on execution node with id 6[m
[36m[15:05:08.361663] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361664] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.361665] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361670] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.361672] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361673] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.361691] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.361693] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361694] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.361697] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[15:05:08.361706] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.361707] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.361709] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[15:05:08.361710] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[15:05:08.361751] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:05:08.361768] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361769] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.361771] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:05:08.361773] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.361781] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:05:08.361782] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:05:08.361784] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[15:05:08.361787] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.361789] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.361790] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:05:08.361792] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.361797] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.361804] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.361808] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:05:08.361816] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 2[m
[36m[15:05:08.361818] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.361819] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.361824] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[15:05:08.361843] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(24) as new root of the plan.[m
[36m[15:05:08.361845] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.361846] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.361848] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361849] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.361853] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:05:08.361855] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.361856] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[15:05:08.361857] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[15:05:08.361859] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[15:05:08.361876] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.361878] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.361879] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 2[m
[36m[15:05:08.361881] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.361887] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.361896] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:05:08.361900] [W] [thread 249411] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:05:08.361901] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.361902] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.361903] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.361904] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.361912] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.361915] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:05:08.361923] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[15:05:08.361924] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.361925] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.361928] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[15:05:08.361941] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[15:05:08.361942] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.361943] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.361945] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.361946] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.361948] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:05:08.361950] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.361951] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:05:08.361952] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:05:08.361954] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[15:05:08.361958] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.361959] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.361960] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:05:08.361962] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.361966] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.361988] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.361991] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:05:08.361999] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:05:08.362001] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:05:08.362018] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 7[m
[36m[15:05:08.362020] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362021] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.362022] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362023] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.362026] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362027] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362034] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.362035] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362041] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.362045] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[15:05:08.362054] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362055] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362057] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[15:05:08.362059] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[15:05:08.362092] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[15:05:08.362101] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362102] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.362104] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:05:08.362106] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.362107] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:05:08.362108] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:05:08.362110] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[15:05:08.362113] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.362114] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.362116] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:05:08.362117] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.362121] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.362128] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.362131] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:05:08.362138] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:05:08.362139] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:05:08.362145] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[15:05:08.362146] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362147] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.362148] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362151] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.362153] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362155] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362172] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.362173] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362175] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.362178] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[15:05:08.362187] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362189] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362190] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[15:05:08.362192] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[15:05:08.362232] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:05:08.362249] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362250] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.362252] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:05:08.362253] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.362254] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:05:08.362255] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:05:08.362258] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[15:05:08.362260] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.362262] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.362263] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:05:08.362265] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.362269] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.362276] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:05:08.362279] [W] [thread 249411] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:05:08.362280] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.362282] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.362283] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.362290] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.362292] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:05:08.362301] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[15:05:08.362302] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.362303] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.362307] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[15:05:08.362320] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[15:05:08.362322] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.362323] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.362325] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362326] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.362329] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:05:08.362330] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.362331] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:05:08.362332] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:05:08.362347] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[15:05:08.362351] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.362352] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.362354] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:05:08.362356] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.362360] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.362383] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.362385] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:05:08.362393] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:05:08.362394] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:05:08.362411] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 8[m
[36m[15:05:08.362413] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362414] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.362415] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362416] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.362419] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362420] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362427] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.362428] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362429] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.362433] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[15:05:08.362441] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362442] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362444] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[15:05:08.362445] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[15:05:08.362477] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[15:05:08.362484] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362485] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.362488] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:05:08.362489] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.362490] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:05:08.362491] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:05:08.362493] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[15:05:08.362496] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.362497] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.362498] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:05:08.362499] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.362503] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.362510] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.362512] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:05:08.362520] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:05:08.362521] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:05:08.362535] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(17) on execution node with id 8[m
[36m[15:05:08.362537] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362538] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.362539] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362542] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.362544] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362546] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362564] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.362565] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362566] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.362570] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[15:05:08.362579] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362580] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362582] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[15:05:08.362583] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[15:05:08.362625] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:05:08.362642] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362643] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.362645] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:05:08.362652] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.362654] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:05:08.362655] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:05:08.362657] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[15:05:08.362660] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.362661] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.362663] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:05:08.362664] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.362669] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.362677] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.362680] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:05:08.362688] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 3[m
[36m[15:05:08.362689] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.362690] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.362699] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[15:05:08.362712] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(25) as new root of the plan.[m
[36m[15:05:08.362713] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.362714] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.362716] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362717] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.362725] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:05:08.362727] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.362728] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[15:05:08.362729] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[15:05:08.362732] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[15:05:08.362736] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.362737] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.362738] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 3[m
[36m[15:05:08.362740] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.362744] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.362752] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:05:08.362756] [W] [thread 249411] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:05:08.362757] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.362759] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.362760] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.362761] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.362769] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.362771] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:05:08.362779] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[15:05:08.362780] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.362781] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.362796] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[15:05:08.362811] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[15:05:08.362813] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.362813] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.362815] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362816] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.362819] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:05:08.362820] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.362821] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:05:08.362822] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:05:08.362824] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[15:05:08.362828] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.362884] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.362887] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:05:08.362889] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.362895] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.362925] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.362928] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:05:08.362937] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:05:08.362938] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:05:08.362955] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 9[m
[36m[15:05:08.362964] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362966] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.362968] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362969] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.362973] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.362974] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.362983] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.362984] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.362986] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.362991] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[15:05:08.363002] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363003] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.363006] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[15:05:08.363007] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[15:05:08.363045] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[15:05:08.363052] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363053] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.363056] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:05:08.363058] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.363059] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:05:08.363060] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:05:08.363063] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[15:05:08.363067] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.363069] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.363071] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:05:08.363072] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.363076] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.363083] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.363086] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:05:08.363094] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:05:08.363096] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:05:08.363101] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 9[m
[36m[15:05:08.363103] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363103] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.363105] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363107] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.363109] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363110] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.363128] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.363129] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363131] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.363135] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[15:05:08.363144] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363145] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.363147] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[15:05:08.363148] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[15:05:08.363189] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:05:08.363206] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363208] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.363209] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:05:08.363211] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.363212] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:05:08.363213] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:05:08.363215] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[15:05:08.363218] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.363220] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.363229] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:05:08.363231] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.363236] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.363246] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:05:08.363250] [W] [thread 249411] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:05:08.363251] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.363252] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.363253] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.363261] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.363264] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:05:08.363274] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[15:05:08.363280] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.363282] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.363287] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[15:05:08.363302] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[15:05:08.363304] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.363305] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.363307] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363308] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.363312] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:05:08.363314] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.363315] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:05:08.363316] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:05:08.363318] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[15:05:08.363323] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.363324] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.363326] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:05:08.363327] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.363331] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.363353] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.363356] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:05:08.363364] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:05:08.363365] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:05:08.363382] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 10[m
[36m[15:05:08.363384] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363384] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.363386] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363387] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.363390] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363391] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.363398] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.363399] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363400] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.363405] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[15:05:08.363413] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363415] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.363417] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[15:05:08.363418] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[15:05:08.363451] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[15:05:08.363458] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363460] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.363462] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:05:08.363463] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.363464] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:05:08.363465] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:05:08.363468] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[15:05:08.363471] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.363472] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.363474] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:05:08.363475] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.363479] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.363486] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:05:08.363489] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:05:08.363496] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:05:08.363498] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:05:08.363502] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(23) on execution node with id 10[m
[36m[15:05:08.363504] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363505] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.363506] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363508] [D] [thread 249411] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:05:08.363511] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363512] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.363529] [D] [thread 249411] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:05:08.363530] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363531] [D] [thread 249411] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:05:08.363535] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[15:05:08.363557] [D] [thread 249411] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:05:08.363560] [D] [thread 249411] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:05:08.363562] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[15:05:08.363563] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[15:05:08.363606] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:05:08.363624] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363625] [D] [thread 249411] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:05:08.363627] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:05:08.363629] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.363630] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:05:08.363631] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:05:08.363634] [D] [thread 249411] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[15:05:08.363637] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.363639] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.363640] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:05:08.363642] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.363646] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.363653] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.363657] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:05:08.363665] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 4[m
[36m[15:05:08.363666] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.363667] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.363672] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[15:05:08.363688] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(26) as new root of the plan.[m
[36m[15:05:08.363690] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.363691] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.363692] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363693] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.363696] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:05:08.363699] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.363700] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[15:05:08.363701] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[15:05:08.363703] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[15:05:08.363707] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.363709] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.363710] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[15:05:08.363711] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.363715] [D] [thread 249411] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:05:08.363723] [D] [thread 249411] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:05:08.363728] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:05:08.363735] [D] [thread 249411] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(5: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[15:05:08.363737] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:05:08.363737] [W] [thread 249411] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:05:08.363742] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[15:05:08.363764] [D] [thread 249411] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[15:05:08.363765] [D] [thread 249411] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:08.363766] [D] [thread 249411] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:08.363768] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363769] [D] [thread 249411] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:05:08.363772] [D] [thread 249411] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:05:08.363774] [D] [thread 249411] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:05:08.363775] [W] [thread 249411] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[15:05:08.363776] [D] [thread 249411] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[15:05:08.363779] [D] [thread 249411] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[15:05:08.363783] [D] [thread 249411] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:05:08.363784] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:05:08.363792] [I] [thread 249411] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[15:05:08.363794] [D] [thread 249411] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:05:08.363796] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.363798] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.363799] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.363800] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.363802] [D] [thread 249411] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:05:08.363810] [D] [thread 249411] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[15:05:08.363818] [I] [thread 249411] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[15:05:08.363825] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.363835] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[15:05:08.363847] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.363850] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[15:05:08.363851] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[15:05:08.363853] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.363878] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.363881] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.363882] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:05:08.363889] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.363899] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.363902] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.363902] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.363911] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:05:08.363924] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:05:08.363925] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:05:08.363927] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.363929] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.363930] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[15:05:08.363932] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[15:05:08.363963] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[15:05:08.363999] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[15:05:08.364007] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:05:08.364015] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:05:08.364016] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:05:08.364018] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364019] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.364039] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[15:05:08.364043] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[15:05:08.364044] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[15:05:08.364070] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:05:08.364071] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:05:08.364072] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[15:05:08.364074] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.364079] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:05:08.364084] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364098] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[15:05:08.364104] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364107] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[15:05:08.364108] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[15:05:08.364109] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364122] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.364127] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.364130] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.364133] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364138] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.364140] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364141] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.364145] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:05:08.364156] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:05:08.364157] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:05:08.364158] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364160] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.364161] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[15:05:08.364162] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[32m[15:05:08.364168] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[15:05:08.364192] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(11) as root operator.[m
[36m[15:05:08.364198] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:05:08.364205] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:05:08.364207] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:05:08.364208] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364209] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.364215] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[15:05:08.364217] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[15:05:08.364219] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[15:05:08.364239] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:05:08.364241] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:05:08.364242] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[15:05:08.364243] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.364249] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:05:08.364253] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364265] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.364266] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.364267] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:05:08.364276] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364280] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.364282] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364282] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.364286] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:05:08.364308] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:05:08.364310] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:05:08.364311] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364312] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.364314] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[15:05:08.364315] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[15:05:08.364386] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[15:05:08.364420] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[15:05:08.364429] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:05:08.364437] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:05:08.364438] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:05:08.364440] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364441] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.364446] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[15:05:08.364449] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:05:08.364450] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:05:08.364471] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:05:08.364473] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:05:08.364474] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[15:05:08.364475] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.364477] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:05:08.364481] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364487] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[15:05:08.364492] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364496] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[15:05:08.364497] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[15:05:08.364499] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364513] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.364515] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.364516] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:05:08.364519] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364525] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.364527] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364528] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.364532] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:05:08.364541] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:05:08.364542] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:05:08.364544] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364545] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.364546] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[15:05:08.364547] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[15:05:08.364552] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[15:05:08.364574] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[15:05:08.364580] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:05:08.364587] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:05:08.364588] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:05:08.364589] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364590] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.364595] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[15:05:08.364598] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[15:05:08.364599] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[15:05:08.364626] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:05:08.364627] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:05:08.364628] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[15:05:08.364629] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.364631] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:05:08.364634] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364638] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[15:05:08.364642] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364645] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[15:05:08.364646] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[15:05:08.364648] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364658] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.364663] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.364665] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.364667] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364672] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.364674] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364675] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.364678] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:05:08.364688] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:05:08.364689] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:05:08.364690] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364691] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.364693] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[15:05:08.364694] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[32m[15:05:08.364730] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[15:05:08.364756] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(17) as root operator.[m
[36m[15:05:08.364764] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:05:08.364771] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:05:08.364772] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:05:08.364774] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364775] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.364779] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[15:05:08.364782] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[15:05:08.364783] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[15:05:08.364804] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:05:08.364805] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:05:08.364806] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[15:05:08.364808] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.364811] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:05:08.364814] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364827] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.364830] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.364832] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.364835] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364839] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.364841] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364842] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.364845] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:05:08.364854] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:05:08.364855] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:05:08.364857] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364858] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.364859] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[15:05:08.364860] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[15:05:08.364864] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[15:05:08.364886] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[15:05:08.364893] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:05:08.364900] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:05:08.364901] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:05:08.364902] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364903] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.364908] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[15:05:08.364910] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:05:08.364911] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:05:08.364932] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:05:08.364934] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:05:08.364935] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[15:05:08.364936] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.364938] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:05:08.364941] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364946] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[15:05:08.364951] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364954] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[15:05:08.364955] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[15:05:08.364957] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.364968] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.364970] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.364971] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:05:08.364972] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364977] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.364978] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.364979] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.364982] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:05:08.364991] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:05:08.364992] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:05:08.364994] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.364995] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.364996] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[15:05:08.364997] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[15:05:08.365019] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[15:05:08.365043] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[15:05:08.365050] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:05:08.365057] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:05:08.365059] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:05:08.365060] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.365061] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.365066] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[15:05:08.365068] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[15:05:08.365069] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[15:05:08.365088] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:05:08.365089] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:05:08.365090] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[15:05:08.365091] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.365093] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:05:08.365097] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.365101] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[15:05:08.365105] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.365108] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[15:05:08.365110] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[15:05:08.365111] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.365123] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.365126] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.365128] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.365130] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.365135] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.365136] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.365137] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.365140] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:05:08.365149] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:05:08.365150] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:05:08.365152] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.365153] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.365154] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[15:05:08.365155] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[15:05:08.365159] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[15:05:08.365180] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(23) as root operator.[m
[36m[15:05:08.365186] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:05:08.365193] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:05:08.365194] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:05:08.365195] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.365196] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.365201] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[15:05:08.365203] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[15:05:08.365205] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[15:05:08.365225] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:05:08.365227] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:05:08.365228] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[15:05:08.365229] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.365232] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:05:08.365235] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.365246] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.365250] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.365252] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:05:08.365254] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.365258] [D] [thread 249411] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:05:08.365259] [D] [thread 249411] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:05:08.365260] [D] [thread 249411] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:05:08.365263] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:05:08.365272] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:05:08.365273] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:05:08.365274] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.365275] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.365277] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[15:05:08.365278] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[15:05:08.365298] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[15:05:08.365322] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[15:05:08.365328] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:05:08.365335] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:05:08.365337] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:05:08.365338] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.365343] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:05:08.365348] [I] [thread 249411] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[15:05:08.365351] [D] [thread 249411] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:05:08.365352] [D] [thread 249411] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:05:08.365375] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:05:08.365376] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:05:08.365378] [D] [thread 249411] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[15:05:08.365379] [D] [thread 249411] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:05:08.365382] [D] [thread 249411] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:05:08.365385] [D] [thread 249411] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:05:08.365390] [D] [thread 249411] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[15:05:08.365392] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:05:08.365393] [D] [thread 249411] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:05:08.365397] [D] [thread 249411] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[15:05:08.365400] [D] [thread 249411] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:05:08.365411] [D] [thread 249411] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[15:05:08.365415] [D] [thread 249411] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[15:05:08.365418] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.365419] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.365445] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.365449] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.365452] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.365457] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.365461] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.365649] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.365692] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.365697] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.365698] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.365711] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.365715] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.365717] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.365720] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.365723] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.365881] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.365907] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.365909] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.365911] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.365934] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.365938] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.365941] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:05:08.365944] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.365946] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.365975] [D] [thread 249411] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:05:08.366003] [I] [thread 249411] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:05:08.366025] [I] [thread 249411] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.366035] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.366037] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.366038] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.366051] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.366055] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.366057] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.366059] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.366061] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.366222] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.366263] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.366266] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.366267] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.366282] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.366285] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.366287] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.366290] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.366292] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.366435] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.366458] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.366461] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.366462] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.366475] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.366479] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.366481] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:05:08.366483] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.366485] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.366511] [D] [thread 249411] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:05:08.366528] [I] [thread 249411] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:05:08.366548] [I] [thread 249411] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.366576] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.366579] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.366580] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.366593] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.366597] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.366599] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.366601] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.366603] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.366761] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.366788] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.366790] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.366792] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.366804] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.366807] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.366809] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:05:08.366812] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.366814] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.366965] [D] [thread 249411] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:05:08.366989] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.366992] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.366993] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367006] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.367010] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.367012] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:05:08.367015] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.367017] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.367044] [D] [thread 249411] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:05:08.367059] [I] [thread 249411] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:05:08.367078] [I] [thread 249411] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.367087] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.367089] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367091] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367107] [D] [thread 249411] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:05:08.367111] [D] [thread 249411] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:05:08.367113] [D] [thread 249411] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[15:05:08.367117] [D] [thread 249411] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:05:08.367118] [D] [thread 249411] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:05:08.367135] [D] [thread 249411] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:05:08.367143] [D] [thread 249411] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[15:05:08.367647] [D] [thread 249411] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:10)
|  SINK(5: {FileSinkDescriptor()})
|    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:44173 1::33::0::0})
|    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.30:41875 1::42::0::0})
|    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:35153 1::51::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:38151)})
|  |    CENTRALWINDOW(24)
|  |      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.32:37119 1::27::0::0})
|  |      SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:36507 1::30::0::0})
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.12:44173)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:44173)})
|  |  |    WATERMARKASSIGNER(11)
|  |  |      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.11:38151)})
|  |    CENTRALWINDOW(25)
|  |      SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:39701 1::36::0::0})
|  |      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.35:34021 1::39::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:41875)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.30:41875)})
|  |  |    WATERMARKASSIGNER(17)
|  |  |      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:38151)})
|  |    CENTRALWINDOW(26)
|  |      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.37:45555 1::45::0::0})
|  |      SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:35049 1::48::0::0})
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.31:35153)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:35153)})
|  |  |    WATERMARKASSIGNER(23)
|  |  |      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:05:08.367667] [D] [thread 249411] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[15:05:08.367670] [D] [thread 249411] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[15:05:08.367703] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367704] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367720] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367721] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367723] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367724] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367727] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367728] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367730] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367731] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367733] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367734] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367736] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367737] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367740] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367740] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367744] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367745] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367747] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367748] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367764] [D] [thread 249411] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[15:05:08.367766] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[15:05:08.367768] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.367769] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.367815] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:40303[m
[36m[15:05:08.367824] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:40303 queryId=1 querySubPlanId = 1[m
[36m[15:05:08.367902] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.12:44173)})
  WATERMARKASSIGNER(8)
    PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[15:05:08.367906] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.367980] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.370747] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.371194] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.371262] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.371278] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.371436] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:05:08.372022] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.372107] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.372130] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.372155] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.372170] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.372250] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.372264] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.372268] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:05:08.372276] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.372280] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.372288] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.372417] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.372484] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.372533] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.372547] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.372644] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[15:05:08.372706] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.372761] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.372918] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.372972] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.373042] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.373096] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.378319] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[15:05:08.378328] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.378329] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.378346] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:40105[m
[36m[15:05:08.378350] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:40105 queryId=1 querySubPlanId = 2[m
[36m[15:05:08.378436] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:44173)})
  WATERMARKASSIGNER(11)
    PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[15:05:08.378441] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.378470] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.378535] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.378564] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.378594] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.378607] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.378685] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:05:08.378702] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.378738] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.378753] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.378774] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.378787] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.378841] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.378851] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.378855] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:05:08.378862] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.378866] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.378874] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.378927] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.378978] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.379026] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.379041] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.379109] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[15:05:08.379161] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.379214] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.379334] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.379384] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.379447] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.379497] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.382688] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[15:05:08.382697] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.382699] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.382717] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:46805[m
[36m[15:05:08.382721] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:46805 queryId=1 querySubPlanId = 3[m
[36m[15:05:08.382795] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:38151)})
  CENTRALWINDOW(24)
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.32:37119 1::27::0::0})
    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:36507 1::30::0::0})
[m
[36m[15:05:08.382799] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.382828] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.382897] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.382930] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.382963] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.382979] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.383067] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.383087] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.383136] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.383145] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.383149] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.383157] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.383248] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.383264] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.383288] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.383304] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.383360] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:37119 1::27::0::0}[m
[36m[15:05:08.383389] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.383404] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.383454] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.383468] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.383489] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.383501] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.383547] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:36507 1::30::0::0}[m
[36m[15:05:08.383563] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.383578] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.383608] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.383622] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.383642] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.383655] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.409195] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[15:05:08.409204] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.409205] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.409223] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:41483[m
[36m[15:05:08.409227] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:41483 queryId=1 querySubPlanId = 4[m
[36m[15:05:08.409318] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:41875)})
  WATERMARKASSIGNER(14)
    PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[15:05:08.409322] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.409352] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.409424] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.409451] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.409479] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.409492] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.409567] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:05:08.409584] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.409620] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.409635] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.409657] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.409669] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.409723] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.409734] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.409738] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:05:08.409745] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.409749] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.409756] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.409811] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.409863] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.409908] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.409922] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.410003] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[15:05:08.410056] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.410104] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.410300] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.410353] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.410420] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.410470] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.413745] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[15:05:08.413759] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.413761] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.413779] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:40927[m
[36m[15:05:08.413783] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:40927 queryId=1 querySubPlanId = 5[m
[36m[15:05:08.413871] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.30:41875)})
  WATERMARKASSIGNER(17)
    PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[15:05:08.413875] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.413906] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.413967] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.413995] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.414024] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.414037] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.414112] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:05:08.414129] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.414164] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.414188] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.414211] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.414223] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.414278] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.414288] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.414291] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:05:08.414298] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.414302] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.414309] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.414364] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.414416] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.414453] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.414467] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.414533] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[15:05:08.414584] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.414632] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.414750] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.414800] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.414864] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.414914] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.417984] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[15:05:08.418020] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.418022] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.418037] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:38755[m
[36m[15:05:08.418041] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:38755 queryId=1 querySubPlanId = 6[m
[36m[15:05:08.418116] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.11:38151)})
  CENTRALWINDOW(25)
    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:39701 1::36::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.35:34021 1::39::0::0})
[m
[36m[15:05:08.418119] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.418148] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.418218] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418249] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418282] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418299] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418377] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.418397] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.418423] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.418431] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.418435] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.418443] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.418493] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418508] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418530] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418547] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418601] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:39701 1::36::0::0}[m
[36m[15:05:08.418621] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418635] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418677] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418691] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418711] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418723] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418767] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:34021 1::39::0::0}[m
[36m[15:05:08.418784] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418797] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418828] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418842] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.418861] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.418874] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.421071] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[15:05:08.421106] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.421108] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.421123] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:41147[m
[36m[15:05:08.421126] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:41147 queryId=1 querySubPlanId = 7[m
[36m[15:05:08.421210] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.31:35153)})
  WATERMARKASSIGNER(20)
    PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[15:05:08.421214] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.421243] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.421304] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.421329] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.421357] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.421371] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.421443] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:05:08.421461] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.421495] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.421510] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.421531] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.421544] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.421598] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.421608] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.421612] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:05:08.421619] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.421623] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.421630] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.421683] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.421734] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.421776] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.421789] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.421863] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[15:05:08.421915] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.421963] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.422078] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.422127] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.422191] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.422255] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.425388] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[15:05:08.425423] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.425425] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.425441] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:39955[m
[36m[15:05:08.425446] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:39955 queryId=1 querySubPlanId = 8[m
[36m[15:05:08.425533] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:35153)})
  WATERMARKASSIGNER(23)
    PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:05:08.425538] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.425568] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.425632] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.425659] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.425687] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.425707] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.425785] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:05:08.425802] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.425837] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.425852] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.425872] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.425886] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.425938] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.425949] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.425952] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:05:08.425959] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.425963] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.425971] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.426024] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.426080] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.426118] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.426131] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.426197] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[15:05:08.426249] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.426298] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.426415] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.426464] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.426526] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:05:08.426577] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.429549] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[15:05:08.429624] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.429626] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.429643] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:45087[m
[36m[15:05:08.429647] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:45087 queryId=1 querySubPlanId = 9[m
[36m[15:05:08.429722] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:38151)})
  CENTRALWINDOW(26)
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.37:45555 1::45::0::0})
    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:35049 1::48::0::0})
[m
[36m[15:05:08.429725] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.429755] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.429823] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.429853] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.429885] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.429901] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.429987] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:05:08.430006] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.430033] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.430041] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.430045] [D] [thread 249411] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:05:08.430053] [D] [thread 249411] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:05:08.430104] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.430118] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.430142] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.430158] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.430212] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:45555 1::45::0::0}[m
[36m[15:05:08.430233] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.430247] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.430289] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.430302] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.430322] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.430335] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.430380] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:35049 1::48::0::0}[m
[36m[15:05:08.430396] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.430409] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.430439] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.430452] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.430472] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.430485] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.432668] [D] [thread 249411] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[15:05:08.432702] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:05:08.432704] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:05:08.432719] [D] [thread 249411] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:39223[m
[36m[15:05:08.432724] [D] [thread 249411] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:39223 queryId=1 querySubPlanId = 10[m
[36m[15:05:08.432793] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(5: {FileSinkDescriptor()})
  SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:44173 1::33::0::0})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.30:41875 1::42::0::0})
  SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:35153 1::51::0::0})
[m
[36m[15:05:08.432798] [D] [thread 249411] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:05:08.432827] [D] [thread 249411] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:05:08.432948] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.432981] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433014] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433030] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433096] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:44173 1::33::0::0}[m
[36m[15:05:08.433120] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433138] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433192] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433208] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433232] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433247] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433297] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:41875 1::42::0::0}[m
[36m[15:05:08.433317] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433333] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433370] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433386] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433410] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433425] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433475] [D] [thread 249411] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:35153 1::51::0::0}[m
[36m[15:05:08.433495] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433512] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433550] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433566] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.433589] [D] [thread 249411] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:08.433604] [D] [thread 249411] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:05:08.436077] [D] [thread 249411] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[15:05:08.440488] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:08.795887] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:08.796071] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:09.785202] [D] [thread 249423] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:05:09.785307] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.785584] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:05:09.785653] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[15:05:09.785667] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.786216] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:05:09.786250] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.786370] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:05:09.787482] [D] [thread 249423] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:05:09.787523] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.787658] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:05:09.787691] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[15:05:09.787700] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.787922] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:05:09.787945] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.788115] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:05:09.788975] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[15:05:09.789000] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.789118] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:05:09.789136] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.789340] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:05:09.790266] [D] [thread 249423] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:05:09.790304] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.790418] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:05:09.790462] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[15:05:09.790469] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.790665] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:05:09.790685] [D] [thread 249423] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:05:09.790889] [D] [thread 249423] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:05:09.791595] [D] [thread 249423] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(56: {FileSinkDescriptor()})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.12:44173 1::33::0::0})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:41875 1::42::0::0})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:35153 1::51::0::0})
[m
[32m[15:05:09.791622] [I] [thread 249423] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 10 [m
[32m[15:05:09.791641] [I] [thread 249423] [DefaultQueryCompiler.cpp:61] [compileQuery] Compile Query with Default Compiler[m
[36m[15:05:09.791846] [D] [thread 249423] [DefaultQueryCompiler.cpp:75] [compileQuery] compile query with id: 1 subPlanId: 10[m
[36m[15:05:09.791879] [D] [thread 249423] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-10-2023-11-17 15:05:09 - 1. LogicalQueryPlan[m
[36m[15:05:09.791887] [D] [thread 249423] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 10 for context QueryCompilation-1-10-2023-11-17 15:05:09 and scope 1. LogicalQueryPlan[m
[32m[15:05:09.792790] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[32m[15:05:09.792828] [I] [thread 249423] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[15:05:09.792830] [I] [thread 249423] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[15:05:09.792832] [I] [thread 249423] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:05:09.792834] [I] [thread 249423] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:09.792836] [I] [thread 249423] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:09.792837] [I] [thread 249423] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:05:09.792863] [I] [thread 249423] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:05:09.792936] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[15:05:09.792969] [D] [thread 249423] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[15:05:09.792971] [I] [thread 249423] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:05:09.792973] [I] [thread 249423] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[15:05:09.793012] [D] [thread 249423] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:05:09.793015] [D] [thread 249423] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[15:05:09.793029] [D] [thread 249423] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[15:05:09.793033] [D] [thread 249423] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:05:09.793060] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[15:05:09.793070] [D] [thread 249423] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:05:09.793073] [D] [thread 249423] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:05:09.793092] [I] [thread 249423] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:05:09.793094] [I] [thread 249423] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:05:09.793095] [I] [thread 249423] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[15:05:09.793164] [D] [thread 249423] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:05:09.793168] [D] [thread 249423] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:05:09.793193] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[15:05:09.793202] [D] [thread 249423] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:05:09.793204] [D] [thread 249423] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:05:09.793245] [I] [thread 249423] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:05:09.793248] [I] [thread 249423] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:05:09.793250] [I] [thread 249423] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[15:05:09.793290] [D] [thread 249423] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:05:09.793293] [D] [thread 249423] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:05:09.793303] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[15:05:09.793312] [D] [thread 249423] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:05:09.793314] [D] [thread 249423] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:05:09.793323] [I] [thread 249423] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:05:09.793325] [I] [thread 249423] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:05:09.793326] [I] [thread 249423] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[15:05:09.793346] [D] [thread 249423] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:05:09.793348] [D] [thread 249423] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[15:05:09.793378] [D] [thread 249423] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-10-2023-11-17 15:05:09 - 2. PhysicalQueryPlan[m
[36m[15:05:09.793383] [D] [thread 249423] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 10 for context QueryCompilation-1-10-2023-11-17 15:05:09 and scope 2. PhysicalQueryPlan[m
[36m[15:05:09.793951] [D] [thread 249423] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 10[m
[32m[15:05:09.794050] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[15:05:09.794123] [D] [thread 249423] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[15:05:09.794137] [D] [thread 249423] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:09.794138] [D] [thread 249423] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:05:09.794255] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[15:05:09.794281] [D] [thread 249423] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:05:09.794325] [D] [thread 249423] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:09.794328] [D] [thread 249423] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:05:09.794341] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[15:05:09.794352] [D] [thread 249423] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:05:09.794359] [D] [thread 249423] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:09.794360] [D] [thread 249423] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:05:09.794409] [I] [thread 249423] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[15:05:09.794422] [D] [thread 249423] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:05:09.794424] [D] [thread 249423] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:05:09.794425] [D] [thread 249423] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:05:09.794436] [D] [thread 249423] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 15:05:09 - 3. AfterPipelinedQueryPlan[m
[36m[15:05:09.794445] [D] [thread 249423] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 15:05:09[m
[36m[15:05:09.795057] [D] [thread 249423] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 15:05:09 - 4. AfterAddScanAndEmitPhase[m
[36m[15:05:09.795079] [D] [thread 249423] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 15:05:09[m
[36m[15:05:09.795419] [D] [thread 249423] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 15:05:09 - 5. GeneratableOperators[m
[36m[15:05:09.795438] [D] [thread 249423] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 15:05:09[m
[36m[15:05:09.795706] [D] [thread 249423] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 15:05:09 - 6. BufferOptimizationPhase[m
[36m[15:05:09.795723] [D] [thread 249423] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 15:05:09[m
[36m[15:05:09.796017] [D] [thread 249423] [PredicationOptimizationPhase.cpp:41] [apply] PredicationOptimizationPhase: No optimization requested or applied.[m
[36m[15:05:09.796034] [D] [thread 249423] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 15:05:09 - 7. PredicationOptimizationPhase[m
[36m[15:05:09.796037] [D] [thread 249423] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 15:05:09[m
[36m[15:05:09.796371] [D] [thread 249423] [CodeGenerationPhase.cpp:44] [apply] Generate code for query plan 1 - 10[m
[36m[15:05:09.796388] [D] [thread 249423] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 15:05:09 - 8. ExecutableOperatorPlan[m
[36m[15:05:09.796391] [D] [thread 249423] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 15:05:09[m
[36m[15:05:09.796404] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:05:09.796806] [I] [thread 249423] [DefaultQueryCompiler.cpp:108] [compileQuery] DefaultQueryCompiler Runtime:
overall runtime: 4.82209 ms
DefaultQueryCompiler_LogicalQueryPlan:	0.871492 ms
DefaultQueryCompiler_PhysicalQueryPlan:	1.21232 ms
DefaultQueryCompiler_AfterPipelinedQueryPlan:	1.10008 ms
DefaultQueryCompiler_AfterAddScanAndEmitPhase:	0.364256 ms
DefaultQueryCompiler_GeneratableOperators:	0.285886 ms
DefaultQueryCompiler_BufferOptimizationPhase:	0.309979 ms
DefaultQueryCompiler_PredicationOptimizationPhase:	0.345145 ms
DefaultQueryCompiler_ExecutableOperatorPlan:	0.328627 ms[m
[36m[15:05:09.796870] [D] [thread 249423] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  59[m
[32m[15:05:09.796886] [I] [thread 249423] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[15:05:09.797212] [D] [thread 249423] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/nemoDebsThreeLevel.out[m
[32m[15:05:09.797335] [I] [thread 249423] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:05:09.797465] [D] [thread 249423] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:05:09.797640] [I] [thread 249423] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:05:09.797688] [D] [thread 249423] [DataSource.cpp:75] [DataSource] DataSource  42 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:05:09.797715] [I] [thread 249423] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:05:09.797745] [D] [thread 249423] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:05:09.797880] [D] [thread 249423] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 10[m
[36m[15:05:09.797911] [D] [thread 249423] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  10  as a singleton[m
[36m[15:05:09.797915] [D] [thread 249423] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=10[m
[36m[15:05:09.797920] [D] [thread 249423] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 3[m
[36m[15:05:09.797923] [D] [thread 249423] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[15:05:09.797955] [D] [thread 249423] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  42  not found. Creating new element with with qep [m
[36m[15:05:09.797957] [D] [thread 249423] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
2023[36m-11-[15:05:09.797961] [D] [thread 249423] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 10  pair queryId= 1  subplanId= 10[m
17 15:05:09.797 setup: queryId=1, querySubPlanId=10; 
[36m[15:05:09.798096] [D] [thread 249423] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=10[m
2023-11-17 15:05:09.798 start: queryId=1, querySubPlanId=10; 
[36m[15:05:09.798181] [D] [thread 249423] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=10[m
[36m[15:05:09.798241] [D] [thread 249423] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.12[m
[36m[15:05:09.798297] [D] [thread 249423] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[15:05:09.798308] [D] [thread 249423] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff50010fd0  started successfully[m
[36m[15:05:09.798349] [D] [thread 249423] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::42::0::0 from 192.168.2.30[m
[36m[15:05:09.798357] [D] [thread 249423] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::42::0::0=1[m
[36m[15:05:09.798359] [D] [thread 249423] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff50011210  started successfully[m
[36m[15:05:09.798368] [D] [thread 249423] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[15:05:09.798382] [D] [thread 249423] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[15:05:09.798385] [D] [thread 249423] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff500115d0  started successfully[m
[36m[15:05:09.798400] [D] [thread 249423] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:05:09.798415] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:05:09.798482] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:05:09.798610] [D] [thread 249421] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:05:09.798699] [D] [thread 249423] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[15:05:09.798754] [D] [thread 249423] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:05:09.798764] [D] [thread 249423] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff50010fd0  started successfully[m
[36m[15:05:09.798775] [D] [thread 249423] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[15:05:09.798781] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:05:09.798792] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:05:09.798830] [D] [thread 249421] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[15:05:09.798890] [D] [thread 249423] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::42::0::0[m
[36m[15:05:09.798899] [D] [thread 249423] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[15:05:09.798910] [D] [thread 249423] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff50011210  started successfully[m
[36m[15:05:09.798920] [D] [thread 249423] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:05:09.798924] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:05:09.798933] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:05:09.798963] [D] [thread 249421] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:05:09.798993] [D] [thread 249423] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[15:05:09.798999] [D] [thread 249423] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:05:09.799003] [D] [thread 249423] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff500115d0  started successfully[m
[36m[15:05:09.799013] [D] [thread 249423] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[15:05:09.799043] [D] [thread 249423] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  10  succeeded[m
[36m[15:05:09.799086] [D] [thread 249423] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[15:05:10.306615] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:10.307140] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:10.554297] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:10.554496] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:11.555657] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:11.753676] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:11.753920] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:12.755097] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:12.917407] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:12.917596] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:13.918776] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:14.106393] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:14.106578] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:15.107757] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:15.241621] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:15.241806] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:16.242979] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:16.432076] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:16.432280] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:17.433466] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:17.633851] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:17.634054] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:18.635216] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:18.837088] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:18.837294] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:19.838453] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:20.041545] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:20.041735] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:21.042898] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:21.254589] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:21.254963] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:22.256140] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:22.454685] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:22.454877] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:23.456030] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:23.662925] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:23.663104] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:24.664263] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:24.845704] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:24.845955] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:25.847132] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:26.017448] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:26.017653] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:27.018860] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:27.216820] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:27.217045] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:28.218221] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:28.379062] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:28.379266] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:29.380465] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:29.535403] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:29.535689] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:30.536883] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:30.742358] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:30.742642] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:31.743855] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:31.950351] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:31.950579] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:32.951776] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:33.155134] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:33.155361] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:34.156536] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:34.325667] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:34.325866] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:35.327047] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:35.526133] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:35.526373] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:36.527524] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:36.708295] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:36.708509] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:37.709681] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:37.884407] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:37.884656] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:38.885865] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:39.107579] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:39.107799] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:40.108991] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:40.308473] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:40.308702] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:41.309892] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:41.513256] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:41.513437] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:42.514633] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:42.721097] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:42.721317] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:43.722544] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:43.910501] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:43.910682] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:44.911858] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:45.066732] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:45.066927] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:46.068095] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:46.227161] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:46.227372] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:47.228530] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:47.426941] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:47.427113] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:48.428280] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:48.648411] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:48.648592] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:49.649789] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:49.861154] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:49.861339] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:50.862513] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:51.061663] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:51.061878] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:52.063039] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:52.273799] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:52.273996] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:53.275198] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:53.470895] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:53.471071] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:54.472220] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:54.673880] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:54.674064] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:55.675245] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:55.885761] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:55.885942] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:56.887092] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:57.045661] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:57.045839] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:58.046973] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:58.253378] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:58.253587] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:59.254802] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:59.442870] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:59.443070] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:05:59.802770] [D] [thread 249420] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38151): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[15:05:59.802848] [I] [thread 249420] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[15:05:59.802875] [D] [thread 249420] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[15:06:00.256513] [D] [thread 249420] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38151): ClientAnnouncement received for channel 0:1::42::0::0[m
[32m[15:06:00.256549] [I] [thread 249420] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=0) Data[m
[36m[15:06:00.256560] [D] [thread 249420] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=0) REGISTERED[m
[36m[15:06:00.444262] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:00.491158] [D] [thread 249420] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38151): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[15:06:00.491209] [I] [thread 249420] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[15:06:00.491233] [D] [thread 249420] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[15:06:00.678399] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:00.678590] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:01.679777] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:01.852282] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:01.852485] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:02.853680] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:03.054405] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:03.054613] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:04.055745] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:04.218964] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:04.219179] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:05.220394] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:05.425514] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:05.425689] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:06.426845] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:06.631730] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:06.631939] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:07.633095] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:07.834164] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:07.834383] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:08.835494] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:09.061536] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:09.061740] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:10.062891] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:10.265404] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:10.265608] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:11.266790] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:11.474645] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:11.474852] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:12.476041] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:12.690652] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:12.690848] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:13.692034] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:13.889118] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:13.889320] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:14.890490] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:15.054158] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:15.054516] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:16.055675] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:16.205729] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:16.205907] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:17.207188] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:17.407409] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:17.407607] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:18.408768] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:18.600926] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:18.601136] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:19.602338] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:19.804116] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:19.804359] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:20.805543] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:21.013649] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:21.013848] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:22.015084] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:22.219236] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:22.219424] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:23.220578] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:23.429479] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:23.429671] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:24.430852] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:24.590707] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:24.590890] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:25.592040] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:25.806428] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:25.806626] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:26.807815] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:26.997367] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:26.997579] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:27.998761] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:28.158282] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:28.158518] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:29.160047] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:29.364891] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:29.365095] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:30.366294] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:30.518555] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:30.518759] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:31.519938] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:31.722077] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:31.722265] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:32.723442] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:32.886202] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:32.886448] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:33.887635] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:34.077385] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:34.077588] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:35.078816] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:35.275728] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:35.275926] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:36.277109] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:36.481514] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:36.481695] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:37.482874] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:37.681402] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:37.681585] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:38.682767] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:38.865198] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:38.865405] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:39.866548] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:40.085819] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:40.086024] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:41.087223] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:41.280382] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:41.280583] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:42.281867] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:42.485525] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:42.485737] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:43.486894] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:43.648736] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:43.648919] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:44.650083] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:44.848922] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:44.849123] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:45.850281] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:46.063788] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:46.063974] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:47.065126] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:47.266540] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:47.266748] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:48.267934] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:48.473167] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:48.473496] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:49.474682] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:49.679235] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:49.679428] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:50.680614] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:50.882687] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:50.882894] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:51.884072] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:52.081405] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:52.081616] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:53.082802] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:53.290649] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:53.290861] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:54.292014] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:54.438672] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:54.438869] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:55.440043] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:55.601836] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:55.602045] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:56.602240] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:56.809753] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:56.809970] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:57.811131] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:57.974525] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:57.974748] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:58.975928] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:59.180433] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:06:59.180613] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:00.181721] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:00.394008] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:00.394246] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:01.395507] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:01.594465] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:01.594692] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:02.595883] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:02.802034] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:02.802307] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:03.803479] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:04.005428] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:04.005620] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:05.006801] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:05.209934] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:05.210123] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:06.211265] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:06.423402] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:06.423605] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:07.424754] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:07.626553] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:07.626738] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:08.627892] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:08.830585] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:08.830806] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:09.831978] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:10.025688] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:10.025881] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:11.027037] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:11.233957] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:11.234147] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:12.235292] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:12.405923] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:12.406110] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:13.407285] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:13.608871] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:13.609079] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:14.610253] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:14.806144] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:14.806340] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:15.807615] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:16.023106] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:16.023310] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:17.024497] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:17.240063] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:17.240261] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:18.240481] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:18.447786] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:18.448003] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:19.449161] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:19.657824] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:19.658010] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:20.659196] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:20.859922] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:20.860125] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:21.861311] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:22.022238] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:22.022472] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:23.023651] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:23.233369] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:23.233582] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:24.234777] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:24.402282] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:24.402492] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:25.403776] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:25.609735] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:25.609956] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:26.611118] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:26.827254] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:26.827471] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:27.828654] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:28.041459] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:28.041694] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:29.042865] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:29.190789] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:29.191066] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:30.192399] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:30.395486] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:30.395712] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:31.181409] [D] [thread 249411] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[15:07:31.181461] [D] [thread 249411] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[15:07:31.181951] [D] [thread 249411] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[15:07:31.181981] [D] [thread 249411] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[15:07:31.181991] [D] [thread 249411] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[15:07:31.182029] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[15:07:31.182043] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:40303 queryId=1[m
[36m[15:07:31.183927] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[15:07:31.183942] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:40105 queryId=1[m
[36m[15:07:31.185255] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[15:07:31.185266] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:46805 queryId=1[m
[36m[15:07:31.186655] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[15:07:31.186698] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:41483 queryId=1[m
[36m[15:07:31.188141] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[15:07:31.188186] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:40927 queryId=1[m
[36m[15:07:31.189069] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[15:07:31.189094] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:38755 queryId=1[m
[36m[15:07:31.189778] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[15:07:31.189803] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:41147 queryId=1[m
[36m[15:07:31.190475] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[15:07:31.190499] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:39955 queryId=1[m
[36m[15:07:31.191154] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[15:07:31.191177] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:45087 queryId=1[m
[36m[15:07:31.191835] [D] [thread 249411] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[15:07:31.191859] [D] [thread 249411] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:39223 queryId=1[m
[36m[15:07:31.192666] [D] [thread 249411] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[15:07:31.266017] [D] [thread 249471] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[15:07:31.266077] [D] [thread 249471] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[15:07:31.266086] [D] [thread 249471] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  10   1[m
[36m[15:07:31.266103] [D] [thread 249471] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1700233651266[m
[36m[15:07:31.266105] [D] [thread 249471] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  10  succeeded[m
[36m[15:07:31.266108] [D] [thread 249471] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[15:07:31.289318] [D] [thread 249411] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[15:07:31.289352] [D] [thread 249411] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[15:07:31.289813] [I] [thread 249411] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[15:07:31.289893] [D] [thread 249411] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[15:07:31.396934] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:31.546733] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:31.546963] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:32.548151] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:33.549389] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:34.222669] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:34.222854] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:34.224508] [D] [thread 249748] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:34.224536] [I] [thread 249748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:34.224541] [I] [thread 249748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:34.224557] [I] [thread 249748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:34.224558] [I] [thread 249748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:34.465369] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:34.465604] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:35.383872] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:07:35.384456] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10634000,10635000,54,1700233651288,1700233655384
10634000,10635000,63,1700233651222,1700233655384
[m
[36m[15:07:35.384684] [D] [thread 249421] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1700233655384[m
[36m[15:07:35.466751] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:35.807151] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:07:35.807187] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:07:35.807402] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10634000,10635000,13,1700233651204,1700233655807
10634000,10635000,100,1700233651241,1700233655807
[m
[36m[15:07:36.467954] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:36.581692] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:07:36.581726] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:07:36.581920] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10634000,10635000,24,1700233651261,1700233656581
10634000,10635000,47,1700233651207,1700233656581
[m
[36m[15:07:36.961437] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:36.961658] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:36.962553] [D] [thread 249754] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:36.962576] [I] [thread 249754] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:36.962580] [I] [thread 249754] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:36.962591] [I] [thread 249754] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:36.962592] [I] [thread 249754] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:37.214895] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:37.215094] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:38.216275] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:39.217536] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:39.773847] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:39.774045] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:39.774924] [D] [thread 249759] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:39.774948] [I] [thread 249759] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:39.774951] [I] [thread 249759] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:39.774966] [I] [thread 249759] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:39.774967] [I] [thread 249759] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:40.010470] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:40.010652] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:41.011870] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:42.013047] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:42.561842] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:42.562044] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:42.562886] [D] [thread 249764] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:42.562909] [I] [thread 249764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:42.562912] [I] [thread 249764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:42.562926] [I] [thread 249764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:42.562927] [I] [thread 249764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:42.807098] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:42.807285] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:43.808478] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:44.809690] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:45.370490] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:45.370681] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:45.372189] [D] [thread 249769] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:45.372213] [I] [thread 249769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:45.372219] [I] [thread 249769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:45.372231] [I] [thread 249769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:45.372232] [I] [thread 249769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:45.613253] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:45.613436] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:46.614597] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:47.615785] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:48.093966] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:48.094151] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:48.095005] [D] [thread 249774] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:48.095027] [I] [thread 249774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:48.095032] [I] [thread 249774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:48.095044] [I] [thread 249774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:48.095045] [I] [thread 249774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:48.336660] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:48.336838] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:49.337984] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:50.339173] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:50.958392] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:50.958578] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:50.959555] [D] [thread 249779] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:50.959578] [I] [thread 249779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:50.959589] [I] [thread 249779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:50.959600] [I] [thread 249779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:50.959601] [I] [thread 249779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:51.193470] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:51.193654] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:52.194833] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:53.196040] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:53.852677] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:53.852889] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:53.853837] [D] [thread 249784] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:53.853862] [I] [thread 249784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:53.853865] [I] [thread 249784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:53.853876] [I] [thread 249784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:53.853878] [I] [thread 249784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:54.083350] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:54.083547] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:55.084721] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:56.039346] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:07:56.039380] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:07:56.039558] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10635000,10636000,54,1700233651590,1700233676039
10635000,10636000,63,1700233655351,1700233676039
[m
[36m[15:07:56.085906] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:56.630533] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:56.630765] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:56.631689] [D] [thread 249789] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:56.631712] [I] [thread 249789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:56.631717] [I] [thread 249789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:56.631728] [I] [thread 249789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:56.631729] [I] [thread 249789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:56.874660] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:56.874852] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:57.689257] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:07:57.689298] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:07:57.689490] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10635000,10636000,24,1700233655895,1700233677689
10635000,10636000,47,1700233656548,1700233677689
[m
[36m[15:07:57.728683] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:07:57.728711] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:07:57.728870] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10635000,10636000,13,1700233655634,1700233677728
10635000,10636000,100,1700233655775,1700233677728
[m
[36m[15:07:57.876009] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:58.877195] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:59.298252] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:59.298472] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:59.299934] [D] [thread 249794] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:07:59.299957] [I] [thread 249794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:59.299967] [I] [thread 249794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:07:59.299978] [I] [thread 249794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:07:59.299979] [I] [thread 249794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:07:59.534044] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:07:59.534226] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:00.535384] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:01.536575] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:01.945664] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:01.945852] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:01.946747] [D] [thread 249799] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:01.946771] [I] [thread 249799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:01.946775] [I] [thread 249799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:01.946786] [I] [thread 249799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:01.946787] [I] [thread 249799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:02.173130] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:02.173312] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:03.174492] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:04.175676] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:04.725935] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:04.726118] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:04.727006] [D] [thread 249804] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:04.727030] [I] [thread 249804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:04.727034] [I] [thread 249804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:04.727045] [I] [thread 249804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:04.727047] [I] [thread 249804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:04.955209] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:04.955414] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:05.956598] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:06.957812] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:07.518340] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:07.518579] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:07.519409] [D] [thread 249809] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:07.519431] [I] [thread 249809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:07.519435] [I] [thread 249809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:07.519446] [I] [thread 249809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:07.519447] [I] [thread 249809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:07.739034] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:07.739254] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:08.740391] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:09.741562] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:10.187117] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:10.187320] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:10.188158] [D] [thread 249814] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:10.188179] [I] [thread 249814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:10.188183] [I] [thread 249814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:10.188194] [I] [thread 249814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:10.188202] [I] [thread 249814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:10.441823] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:10.442053] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:11.443236] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:12.444480] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:13.061251] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:13.061569] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:13.062360] [D] [thread 249819] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:13.062394] [I] [thread 249819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:13.062399] [I] [thread 249819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:13.062410] [I] [thread 249819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:13.062412] [I] [thread 249819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:13.290894] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:13.291137] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:14.292387] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:15.293628] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:15.686066] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:15.686274] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:15.687177] [D] [thread 249824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:15.687201] [I] [thread 249824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:15.687204] [I] [thread 249824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:15.687215] [I] [thread 249824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:15.687217] [I] [thread 249824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:15.927226] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:15.927428] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:16.598651] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:08:16.598689] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:08:16.598884] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10636000,10637000,54,1700233670939,1700233696598
10636000,10637000,63,1700233676006,1700233696598
[m
[36m[15:08:16.928613] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:17.929802] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:18.480600] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:18.480884] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:18.481688] [D] [thread 249829] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:18.481711] [I] [thread 249829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:18.481715] [I] [thread 249829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:18.481726] [I] [thread 249829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:18.481727] [I] [thread 249829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:18.702376] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:18.702614] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:19.361024] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:08:19.361058] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:08:19.361233] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10636000,10637000,24,1700233677657,1700233699361
10636000,10637000,47,1700233677609,1700233699361
[m
[36m[15:08:19.703803] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:19.798970] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:08:19.799003] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:08:19.799197] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10636000,10637000,13,1700233677696,1700233699799
10636000,10637000,100,1700233675410,1700233699799
[m
[36m[15:08:20.705022] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:21.406836] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:21.407017] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:21.407967] [D] [thread 249837] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:21.407989] [I] [thread 249837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:21.407993] [I] [thread 249837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:21.408004] [I] [thread 249837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:21.408005] [I] [thread 249837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:21.652357] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:21.652537] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:22.653718] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:23.654916] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:24.141239] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:24.141433] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:24.142933] [D] [thread 249842] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:24.142957] [I] [thread 249842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:24.142966] [I] [thread 249842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:24.142978] [I] [thread 249842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:24.142979] [I] [thread 249842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:24.380273] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:24.380501] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:25.381647] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:26.382832] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:26.960570] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:26.960755] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:26.961722] [D] [thread 249848] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:26.961779] [I] [thread 249848] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:26.961783] [I] [thread 249848] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:26.961795] [I] [thread 249848] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:26.961796] [I] [thread 249848] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:27.226782] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:27.227002] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:28.228200] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:29.229428] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:29.842233] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:29.842435] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:29.843332] [D] [thread 249856] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:29.843356] [I] [thread 249856] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:29.843360] [I] [thread 249856] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:29.843372] [I] [thread 249856] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:29.843373] [I] [thread 249856] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:30.081041] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:30.081236] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:31.082432] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:32.083637] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:32.679644] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:32.679870] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:32.680791] [D] [thread 249862] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:32.680813] [I] [thread 249862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:32.680817] [I] [thread 249862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:32.680829] [I] [thread 249862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:32.680830] [I] [thread 249862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:32.909544] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:32.909723] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:33.910873] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:34.912055] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:35.026378] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:35.026575] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:35.027471] [D] [thread 249867] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:35.027494] [I] [thread 249867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:35.027498] [I] [thread 249867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:35.027509] [I] [thread 249867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:35.027510] [I] [thread 249867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:35.243601] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:35.243789] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:36.244972] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:37.246182] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:37.256818] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:08:37.256852] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:08:37.257045] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10637000,10638000,54,1700233691804,1700233717256
10637000,10638000,63,1700233696565,1700233717256
[m
[36m[15:08:37.701130] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:37.701311] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:37.702212] [D] [thread 249872] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:37.702225] [I] [thread 249872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:37.702228] [I] [thread 249872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:37.702239] [I] [thread 249872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:37.702240] [I] [thread 249872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:37.935841] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:37.936062] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:38.937347] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:39.764928] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:08:39.764969] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:08:39.765183] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10637000,10638000,24,1700233699328,1700233719764
10637000,10638000,47,1700233698669,1700233719764
[m
[36m[15:08:39.938663] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:40.522272] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:40.522500] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:40.523363] [D] [thread 249877] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:40.523385] [I] [thread 249877] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:40.523389] [I] [thread 249877] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:40.523400] [I] [thread 249877] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:40.523401] [I] [thread 249877] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:40.765999] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:40.766204] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:41.766967] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:08:41.766999] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:08:41.767201] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10637000,10638000,13,1700233699765,1700233721767
10637000,10638000,100,1700233695058,1700233721767
[m
[36m[15:08:41.767361] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:42.768558] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:43.698998] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:43.699183] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:43.700139] [D] [thread 249884] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:43.700163] [I] [thread 249884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:43.700173] [I] [thread 249884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:43.700184] [I] [thread 249884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:43.700185] [I] [thread 249884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:43.946082] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:43.946273] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:44.947435] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:45.948621] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:46.494637] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:46.494845] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:46.495795] [D] [thread 249890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:46.495818] [I] [thread 249890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:46.495822] [I] [thread 249890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:46.495834] [I] [thread 249890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:46.495835] [I] [thread 249890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:46.750740] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:46.750944] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:47.752092] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:48.753285] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:49.329817] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:49.330039] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:49.331011] [D] [thread 249895] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:49.331035] [I] [thread 249895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:49.331039] [I] [thread 249895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:49.331050] [I] [thread 249895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:49.331051] [I] [thread 249895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:49.563254] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:49.563447] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:50.564633] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:51.565774] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:52.166249] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:52.166468] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:52.167402] [D] [thread 249902] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:52.167427] [I] [thread 249902] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:52.167430] [I] [thread 249902] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:52.167442] [I] [thread 249902] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:52.167443] [I] [thread 249902] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:52.397842] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:52.398047] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:53.399266] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:54.400473] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:54.948392] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:54.948588] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:54.949455] [D] [thread 249910] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:54.949481] [I] [thread 249910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:54.949484] [I] [thread 249910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:54.949496] [I] [thread 249910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:54.949498] [I] [thread 249910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:55.191475] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:55.191669] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:56.192831] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:57.194046] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:57.790924] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:57.791102] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:57.792013] [D] [thread 249915] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:08:57.792035] [I] [thread 249915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:57.792038] [I] [thread 249915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:08:57.792056] [I] [thread 249915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:08:57.792057] [I] [thread 249915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:08:57.812345] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:08:57.812378] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:08:57.812529] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10638000,10639000,54,1700233712664,1700233737812
10638000,10639000,63,1700233717224,1700233737812
[m
[36m[15:08:57.991683] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:57.991857] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:58.993021] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:08:59.994201] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:00.489988] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:00.490171] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:00.491023] [D] [thread 249920] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:00.491045] [I] [thread 249920] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:00.491049] [I] [thread 249920] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:00.491060] [I] [thread 249920] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:00.491061] [I] [thread 249920] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:00.689820] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:00.690004] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:00.729673] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:00.729704] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:00.729903] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10638000,10639000,24,1700233717366,1700233740729
10638000,10639000,47,1700233719732,1700233740729
[m
[36m[15:09:01.691185] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:02.692445] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:03.231992] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:03.232217] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:03.233060] [D] [thread 249925] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:03.233085] [I] [thread 249925] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:03.233089] [I] [thread 249925] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:03.233108] [I] [thread 249925] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:03.233109] [I] [thread 249925] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:03.480047] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:03.480274] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:03.842809] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:03.842842] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:03.843039] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10638000,10639000,13,1700233721734,1700233743842
10638000,10639000,100,1700233714713,1700233743842
[m
[36m[15:09:04.481454] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:05.482612] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:06.012639] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:06.012819] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:06.014381] [D] [thread 249932] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:06.014395] [I] [thread 249932] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:06.014398] [I] [thread 249932] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:06.014409] [I] [thread 249932] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:06.014410] [I] [thread 249932] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:06.259115] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:06.259333] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:07.260514] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:08.261719] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:08.858211] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:08.858429] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:08.859908] [D] [thread 249939] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:08.859933] [I] [thread 249939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:08.859937] [I] [thread 249939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:08.859955] [I] [thread 249939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:08.859956] [I] [thread 249939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:09.086144] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:09.086378] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:10.087535] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:11.088720] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:11.488371] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:11.488553] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:11.489544] [D] [thread 249944] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:11.489569] [I] [thread 249944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:11.489573] [I] [thread 249944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:11.489585] [I] [thread 249944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:11.489587] [I] [thread 249944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:11.744849] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:11.745030] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:12.746192] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:13.747370] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:14.306136] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:14.306346] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:14.307189] [D] [thread 249949] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:14.307213] [I] [thread 249949] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:14.307216] [I] [thread 249949] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:14.307228] [I] [thread 249949] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:14.307229] [I] [thread 249949] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:14.545207] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:14.545421] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:15.546562] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:16.547774] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:17.153543] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:17.153737] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:17.154623] [D] [thread 249956] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:17.154648] [I] [thread 249956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:17.154651] [I] [thread 249956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:17.154664] [I] [thread 249956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:17.154665] [I] [thread 249956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:17.405800] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:17.406011] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:18.407197] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:18.466857] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:18.466888] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:18.467090] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10639000,10640000,54,1700233733521,1700233758466
10639000,10640000,63,1700233737779,1700233758466
[m
[36m[15:09:19.408374] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:19.855436] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:19.855644] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:19.857141] [D] [thread 249962] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:19.857165] [I] [thread 249962] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:19.857169] [I] [thread 249962] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:19.857181] [I] [thread 249962] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:19.857182] [I] [thread 249962] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:20.114040] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:20.114245] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:21.115411] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:21.792611] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:21.792651] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:21.792848] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10639000,10640000,24,1700233739029,1700233761792
10639000,10640000,47,1700233740696,1700233761792
[m
[36m[15:09:22.116597] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:22.707143] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:22.707328] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:22.708313] [D] [thread 249968] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:22.708400] [I] [thread 249968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:22.708403] [I] [thread 249968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:22.708415] [I] [thread 249968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:22.708416] [I] [thread 249968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:22.949899] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:22.950107] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:23.951275] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:24.952478] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:25.512200] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:25.512469] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:25.513343] [D] [thread 249973] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:25.513366] [I] [thread 249973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:25.513376] [I] [thread 249973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:25.513386] [I] [thread 249973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:25.513388] [I] [thread 249973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:25.742493] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:25.742677] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:25.908626] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:25.908669] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:25.908877] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10639000,10640000,13,1700233743809,1700233765908
10639000,10640000,100,1700233734366,1700233765908
[m
[36m[15:09:26.743869] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:27.745080] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:28.315103] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:28.315290] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:28.316185] [D] [thread 249979] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:28.316207] [I] [thread 249979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:28.316211] [I] [thread 249979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:28.316225] [I] [thread 249979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:28.316226] [I] [thread 249979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:28.549473] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:28.549700] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:29.550905] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:30.552105] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:31.318109] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:31.318335] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:31.319168] [D] [thread 249985] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:31.319191] [I] [thread 249985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:31.319194] [I] [thread 249985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:31.319206] [I] [thread 249985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:31.319207] [I] [thread 249985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:31.605752] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:31.605936] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:32.607121] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:33.608367] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:34.334458] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:34.334642] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:34.335610] [D] [thread 249991] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:34.335634] [I] [thread 249991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:34.335645] [I] [thread 249991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:34.335657] [I] [thread 249991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:34.335659] [I] [thread 249991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:34.598962] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:34.599165] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:35.600383] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:36.601620] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:37.254092] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:37.254322] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:37.255260] [D] [thread 249996] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:37.255285] [I] [thread 249996] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:37.255289] [I] [thread 249996] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:37.255301] [I] [thread 249996] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:37.255302] [I] [thread 249996] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:37.518147] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:37.518325] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:38.519478] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:39.024278] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:39.024315] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:39.024549] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10640000,10641000,54,1700233754383,1700233779024
10640000,10641000,63,1700233758433,1700233779024
[m
[36m[15:09:39.520486] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:40.094479] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:40.094666] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:40.095631] [D] [thread 250003] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:40.095654] [I] [thread 250003] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:40.095658] [I] [thread 250003] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:40.095670] [I] [thread 250003] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:40.095671] [I] [thread 250003] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:40.302164] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:40.302407] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:41.303594] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:42.304807] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:42.849552] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:42.849574] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:42.849700] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10640000,10641000,24,1700233760793,1700233782849
10640000,10641000,47,1700233761760,1700233782849
[m
[36m[15:09:42.867088] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:42.867304] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:42.868267] [D] [thread 250008] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:42.868291] [I] [thread 250008] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:42.868294] [I] [thread 250008] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:42.868305] [I] [thread 250008] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:42.868306] [I] [thread 250008] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:43.120049] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:43.120251] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:44.121372] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:45.122575] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:45.638320] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:45.638528] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:45.639424] [D] [thread 250013] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:45.639446] [I] [thread 250013] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:45.639457] [I] [thread 250013] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:45.639468] [I] [thread 250013] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:45.639469] [I] [thread 250013] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:45.879254] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:45.879440] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:46.880596] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:47.881777] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:47.982080] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:47.982117] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:47.982312] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10640000,10641000,13,1700233765875,1700233787982
10640000,10641000,100,1700233754013,1700233787982
[m
[36m[15:09:48.249400] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:48.249621] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:48.250526] [D] [thread 250018] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:48.250561] [I] [thread 250018] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:48.250565] [I] [thread 250018] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:48.250579] [I] [thread 250018] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:48.250580] [I] [thread 250018] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:48.501536] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:48.501741] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:49.502911] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:50.504107] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:51.047455] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:51.047670] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:51.049230] [D] [thread 250023] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:51.049254] [I] [thread 250023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:51.049257] [I] [thread 250023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:51.049269] [I] [thread 250023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:51.049270] [I] [thread 250023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:51.306799] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:51.307003] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:52.308164] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:53.309351] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:53.953712] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:53.953965] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:53.954875] [D] [thread 250028] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:53.954897] [I] [thread 250028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:53.954901] [I] [thread 250028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:53.954912] [I] [thread 250028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:53.954914] [I] [thread 250028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:54.182236] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:54.182439] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:55.183594] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:56.184805] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:56.777658] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:56.777884] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:56.778821] [D] [thread 250033] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:56.778845] [I] [thread 250033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:56.778849] [I] [thread 250033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:56.778860] [I] [thread 250033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:56.778861] [I] [thread 250033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:57.010279] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:57.010494] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:58.011676] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:59.012883] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:59.538762] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:59.538941] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:59.539830] [D] [thread 250040] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:09:59.539852] [I] [thread 250040] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:59.539856] [I] [thread 250040] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:09:59.539866] [I] [thread 250040] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:09:59.539867] [I] [thread 250040] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:09:59.578405] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:09:59.578436] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:09:59.578590] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10641000,10642000,54,1700233775245,1700233799578
10641000,10642000,63,1700233778991,1700233799578
[m
[36m[15:09:59.744681] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:09:59.744855] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:00.746005] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:01.747187] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:02.322753] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:02.322931] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:02.323935] [D] [thread 250046] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:02.323951] [I] [thread 250046] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:02.323954] [I] [thread 250046] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:02.323964] [I] [thread 250046] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:02.323965] [I] [thread 250046] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:02.568462] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:02.568666] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:03.569849] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:04.249794] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:10:04.249832] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:10:04.250027] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10641000,10642000,24,1700233782456,1700233804249
10641000,10642000,47,1700233782816,1700233804249
[m
[36m[15:10:04.571084] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:05.025888] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:05.026089] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:05.026979] [D] [thread 250052] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:05.027004] [I] [thread 250052] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:05.027010] [I] [thread 250052] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:05.027021] [I] [thread 250052] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:05.027023] [I] [thread 250052] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:05.287153] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:05.287334] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:06.288491] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:07.289672] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:07.824557] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:07.824741] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:07.826270] [D] [thread 250057] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:07.826292] [I] [thread 250057] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:07.826296] [I] [thread 250057] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:07.826307] [I] [thread 250057] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:07.826308] [I] [thread 250057] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:08.093848] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:08.094030] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:09.095205] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:09.944750] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:10:09.944790] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:10:09.944989] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10641000,10642000,13,1700233787948,1700233809944
10641000,10642000,100,1700233773655,1700233809944
[m
[36m[15:10:10.096416] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:10.760440] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:10.760694] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:10.761508] [D] [thread 250062] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:10.761531] [I] [thread 250062] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:10.761535] [I] [thread 250062] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:10.761546] [I] [thread 250062] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:10.761548] [I] [thread 250062] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:11.022071] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:11.022258] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:12.023443] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:13.024676] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:13.502465] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:13.502644] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:13.504204] [D] [thread 250067] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:13.504227] [I] [thread 250067] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:13.504234] [I] [thread 250067] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:13.504246] [I] [thread 250067] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:13.504247] [I] [thread 250067] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:13.778800] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:13.778969] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:14.780116] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:15.781299] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:16.598921] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:16.599116] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:16.600712] [D] [thread 250072] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:16.600736] [I] [thread 250072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:16.600740] [I] [thread 250072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:16.600752] [I] [thread 250072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:16.600753] [I] [thread 250072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:16.806614] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:16.806794] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:17.808068] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:18.808493] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:19.629668] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:19.629856] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:19.631352] [D] [thread 250079] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:19.631374] [I] [thread 250079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:19.631383] [I] [thread 250079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:19.631395] [I] [thread 250079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:19.631396] [I] [thread 250079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:19.910451] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:19.910637] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:20.228596] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:10:20.228635] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:10:20.228832] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10642000,10643000,54,1700233796104,1700233820228
10642000,10643000,63,1700233799545,1700233820228
[m
[36m[15:10:20.911816] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:21.913028] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:22.466903] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:22.467092] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:22.468038] [D] [thread 250086] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:22.468062] [I] [thread 250086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:22.468066] [I] [thread 250086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:22.468078] [I] [thread 250086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:22.468079] [I] [thread 250086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:22.686905] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:22.687144] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:23.688390] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:24.689528] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:25.162717] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:25.162902] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:25.163908] [D] [thread 250094] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:25.163932] [I] [thread 250094] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:25.163935] [I] [thread 250094] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:25.163946] [I] [thread 250094] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:25.163948] [I] [thread 250094] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:25.414812] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:25.414997] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:25.917156] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:10:25.917192] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:10:25.917390] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10642000,10643000,24,1700233804216,1700233825917
10642000,10643000,47,1700233803883,1700233825917
[m
[36m[15:10:26.416191] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:27.417394] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:28.010144] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:28.010399] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:28.011225] [D] [thread 250100] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:28.011250] [I] [thread 250100] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:28.011253] [I] [thread 250100] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:28.011264] [I] [thread 250100] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:28.011266] [I] [thread 250100] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:28.263121] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:28.263298] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:29.264462] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:30.265653] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:30.741253] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:30.741458] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:30.742302] [D] [thread 250105] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:30.742324] [I] [thread 250105] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:30.742327] [I] [thread 250105] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:30.742339] [I] [thread 250105] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:30.742340] [I] [thread 250105] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:30.967473] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:30.967718] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:31.968905] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:32.015787] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:10:32.015824] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:10:32.016023] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10642000,10643000,13,1700233809911,1700233832015
10642000,10643000,100,1700233793298,1700233832015
[m
[36m[15:10:32.970117] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:33.482365] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:33.482651] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:33.483399] [D] [thread 250110] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:33.483424] [I] [thread 250110] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:33.483428] [I] [thread 250110] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:33.483439] [I] [thread 250110] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:33.483440] [I] [thread 250110] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:33.720462] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:33.720639] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:34.721784] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:35.722977] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:36.353995] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:36.354183] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:36.355074] [D] [thread 250115] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:36.355090] [I] [thread 250115] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:36.355093] [I] [thread 250115] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:36.355103] [I] [thread 250115] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:36.355104] [I] [thread 250115] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:36.511752] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:36.511952] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:37.512417] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:38.513602] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:39.055988] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:39.056200] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:39.057092] [D] [thread 250120] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:39.057115] [I] [thread 250120] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:39.057119] [I] [thread 250120] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:39.057130] [I] [thread 250120] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:39.057131] [I] [thread 250120] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:39.279852] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:39.280058] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:40.281222] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:40.790706] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:10:40.790735] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:10:40.790882] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10643000,10644000,54,1700233816968,1700233840790
10643000,10644000,63,1700233820197,1700233840790
[m
[36m[15:10:41.282430] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:41.870230] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:41.870434] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:41.871386] [D] [thread 250125] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:41.871411] [I] [thread 250125] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:41.871414] [I] [thread 250125] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:41.871426] [I] [thread 250125] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:41.871427] [I] [thread 250125] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:42.121843] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:42.122053] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:43.123233] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:44.124472] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:44.816067] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:44.816252] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:44.817230] [D] [thread 250130] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:44.817254] [I] [thread 250130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:44.817258] [I] [thread 250130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:44.817270] [I] [thread 250130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:44.817271] [I] [thread 250130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:45.078928] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:45.079146] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:46.080251] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:47.081442] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:47.615110] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:47.615297] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:47.616895] [D] [thread 250135] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:47.616920] [I] [thread 250135] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:47.616923] [I] [thread 250135] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:47.616935] [I] [thread 250135] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:47.616936] [I] [thread 250135] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:47.678008] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:10:47.678046] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:10:47.678246] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10643000,10644000,24,1700233825884,1700233847678
10643000,10644000,47,1700233824943,1700233847678
[m
[36m[15:10:47.897166] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:47.897404] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:48.898563] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:49.899777] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:50.474732] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:50.474940] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:50.475846] [D] [thread 250140] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:50.475869] [I] [thread 250140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:50.475875] [I] [thread 250140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:50.475885] [I] [thread 250140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:50.475886] [I] [thread 250140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:50.705316] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:50.705498] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:51.706611] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:52.707752] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:53.297444] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:53.297638] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:53.299136] [D] [thread 250145] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:53.299160] [I] [thread 250145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:53.299164] [I] [thread 250145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:53.299175] [I] [thread 250145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:53.299176] [I] [thread 250145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:53.549108] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:53.549304] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:54.083053] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:10:54.083088] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:10:54.083283] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10643000,10644000,13,1700233831983,1700233854083
10643000,10644000,100,1700233812949,1700233854083
[m
[36m[15:10:54.550479] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:55.551691] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:56.113559] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:56.113754] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:56.114641] [D] [thread 250151] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:56.114663] [I] [thread 250151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:56.114667] [I] [thread 250151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:56.114681] [I] [thread 250151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:56.114682] [I] [thread 250151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:56.359304] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:56.359493] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:57.360683] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:58.361906] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:58.919912] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:58.920116] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:58.921075] [D] [thread 250156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:10:58.921106] [I] [thread 250156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:58.921110] [I] [thread 250156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:10:58.921121] [I] [thread 250156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:10:58.921123] [I] [thread 250156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:10:59.154783] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:10:59.154993] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:00.156182] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:01.157407] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:01.450405] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:11:01.450431] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:11:01.450549] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10644000,10645000,54,1700233837829,1700233861450
10644000,10645000,63,1700233840758,1700233861450
[m
[36m[15:11:01.455505] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:01.455718] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:01.456626] [D] [thread 250161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:01.456649] [I] [thread 250161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:01.456652] [I] [thread 250161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:01.456662] [I] [thread 250161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:01.456663] [I] [thread 250161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:01.699169] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:01.699377] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:02.700564] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:03.701781] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:04.149352] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:04.149566] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:04.150456] [D] [thread 250167] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:04.150479] [I] [thread 250167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:04.150490] [I] [thread 250167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:04.150501] [I] [thread 250167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:04.150502] [I] [thread 250167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:04.393441] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:04.393642] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:05.394789] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:06.395967] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:06.854392] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:06.854600] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:06.856189] [D] [thread 250172] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:06.856212] [I] [thread 250172] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:06.856215] [I] [thread 250172] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:06.856227] [I] [thread 250172] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:06.856228] [I] [thread 250172] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:07.103272] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:07.103505] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:08.104656] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:09.105841] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:09.339507] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:11:09.339543] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:11:09.339738] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10644000,10645000,24,1700233847644,1700233869339
10644000,10645000,47,1700233846007,1700233869339
[m
[36m[15:11:09.827262] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:09.827450] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:09.828311] [D] [thread 250177] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:09.828362] [I] [thread 250177] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:09.828366] [I] [thread 250177] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:09.828385] [I] [thread 250177] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:09.828386] [I] [thread 250177] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:10.088699] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:10.088896] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:11.090071] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:12.091276] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:12.510384] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:12.510563] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:12.511492] [D] [thread 250183] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:12.511515] [I] [thread 250183] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:12.511519] [I] [thread 250183] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:12.511529] [I] [thread 250183] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:12.511531] [I] [thread 250183] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:12.750624] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:12.750811] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:13.751930] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:14.752520] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:15.327090] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:15.327294] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:15.328842] [D] [thread 250188] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:15.328867] [I] [thread 250188] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:15.328870] [I] [thread 250188] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:15.328882] [I] [thread 250188] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:15.328883] [I] [thread 250188] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:15.577532] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:15.577740] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:16.154800] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:11:16.154840] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:11:16.155039] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10644000,10645000,13,1700233854049,1700233876154
10644000,10645000,100,1700233832595,1700233876154
[m
[36m[15:11:16.578915] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:17.580127] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:18.038833] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:18.039039] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:18.039965] [D] [thread 250193] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:18.039989] [I] [thread 250193] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:18.039994] [I] [thread 250193] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:18.040005] [I] [thread 250193] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:18.040006] [I] [thread 250193] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:18.249864] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:18.250074] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:19.251415] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:20.252743] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:20.666937] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:20.667115] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:20.668099] [D] [thread 250198] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:20.668123] [I] [thread 250198] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:20.668127] [I] [thread 250198] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:20.668139] [I] [thread 250198] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:20.668140] [I] [thread 250198] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:20.927039] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:20.927234] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:21.928449] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:22.000296] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:11:22.000376] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:11:22.000571] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10645000,10646000,54,1700233858691,1700233882000
10645000,10646000,63,1700233861417,1700233882000
[m
[36m[15:11:22.929647] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:23.588144] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:23.588448] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:23.589252] [D] [thread 250203] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:23.589276] [I] [thread 250203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:23.589279] [I] [thread 250203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:23.589297] [I] [thread 250203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:23.589298] [I] [thread 250203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:23.837654] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:23.837857] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:24.839026] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:25.840224] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:26.490249] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:26.490593] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:26.491388] [D] [thread 250208] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:26.491412] [I] [thread 250208] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:26.491422] [I] [thread 250208] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:26.491433] [I] [thread 250208] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:26.491435] [I] [thread 250208] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:26.748030] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:26.748238] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:27.749409] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:28.750609] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:29.209495] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:29.209693] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:29.210563] [D] [thread 250213] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:29.210586] [I] [thread 250213] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:29.210597] [I] [thread 250213] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:29.210609] [I] [thread 250213] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:29.210610] [I] [thread 250213] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:29.444215] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:29.444418] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:30.445622] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:31.094856] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:11:31.094889] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:11:31.095070] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10645000,10646000,24,1700233869306,1700233891094
10645000,10646000,47,1700233866970,1700233891094
[m
[36m[15:11:31.446827] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:31.794014] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:31.794224] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:31.795091] [D] [thread 250218] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:31.795105] [I] [thread 250218] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:31.795108] [I] [thread 250218] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:31.795118] [I] [thread 250218] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:31.795119] [I] [thread 250218] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:32.063460] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:32.063663] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:33.064496] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:34.065709] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:34.690438] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:34.690682] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:34.691560] [D] [thread 250223] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:34.691581] [I] [thread 250223] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:34.691584] [I] [thread 250223] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:34.691596] [I] [thread 250223] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:34.691597] [I] [thread 250223] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:34.921906] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:34.922113] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:35.923280] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:36.924462] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:37.490602] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:37.490822] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:37.491648] [D] [thread 250228] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:37.491671] [I] [thread 250228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:37.491674] [I] [thread 250228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:37.491686] [I] [thread 250228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:37.491687] [I] [thread 250228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:37.745290] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:37.745513] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:38.230571] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:11:38.230611] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:11:38.230809] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10645000,10646000,13,1700233876121,1700233898230
10645000,10646000,100,1700233852245,1700233898230
[m
[36m[15:11:38.746712] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:39.747933] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:40.395097] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:40.395294] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:40.396126] [D] [thread 250233] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:40.396149] [I] [thread 250233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:40.396153] [I] [thread 250233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:40.396164] [I] [thread 250233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:40.396165] [I] [thread 250233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:40.638374] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:40.638578] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:41.639747] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:42.640957] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:42.650790] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:11:42.650821] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:11:42.651018] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10646000,10647000,54,1700233879556,1700233902650
10646000,10647000,63,1700233881967,1700233902650
[m
[36m[15:11:43.142584] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:43.142791] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:43.143699] [D] [thread 250238] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:43.143723] [I] [thread 250238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:43.143733] [I] [thread 250238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:43.143745] [I] [thread 250238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:43.143746] [I] [thread 250238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:43.411824] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:43.412035] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:44.413227] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:45.414440] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:45.870279] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:45.870502] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:45.871424] [D] [thread 250243] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:45.871449] [I] [thread 250243] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:45.871459] [I] [thread 250243] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:45.871470] [I] [thread 250243] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:45.871471] [I] [thread 250243] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:46.141649] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:46.141850] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:47.142126] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:48.143489] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:48.586438] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:48.586648] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:48.587595] [D] [thread 250248] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:48.587619] [I] [thread 250248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:48.587626] [I] [thread 250248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:48.587637] [I] [thread 250248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:48.587638] [I] [thread 250248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:48.829529] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:48.829713] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:49.830861] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:50.832028] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:51.430889] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:51.431174] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:51.431978] [D] [thread 250253] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:51.432002] [I] [thread 250253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:51.432008] [I] [thread 250253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:51.432019] [I] [thread 250253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:51.432020] [I] [thread 250253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:51.671566] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:51.671748] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:52.672937] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:52.755282] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:11:52.755311] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:11:52.755505] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10646000,10647000,24,1700233891061,1700233912755
10646000,10647000,47,1700233888025,1700233912755
[m
[36m[15:11:53.674166] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:54.345706] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:54.345931] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:54.346877] [D] [thread 250258] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:54.346900] [I] [thread 250258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:54.346904] [I] [thread 250258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:54.346917] [I] [thread 250258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:54.346919] [I] [thread 250258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:54.571761] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:54.572013] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:55.573200] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:56.574385] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:57.080458] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:57.080652] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:57.081594] [D] [thread 250263] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:57.081619] [I] [thread 250263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:57.081631] [I] [thread 250263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:57.081642] [I] [thread 250263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:57.081643] [I] [thread 250263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:11:57.314833] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:57.315042] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:58.316226] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:59.317437] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:59.884774] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:59.884969] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:11:59.885835] [D] [thread 250268] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:11:59.885859] [I] [thread 250268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:59.885863] [I] [thread 250268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:11:59.885874] [I] [thread 250268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:11:59.885875] [I] [thread 250268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:00.148630] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:00.148841] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:00.201853] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:12:00.201886] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:12:00.202056] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10646000,10647000,13,1700233898197,1700233920201
10646000,10647000,100,1700233871896,1700233920201
[m
[36m[15:12:01.150063] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:02.151301] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:02.574337] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:02.574582] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:02.575464] [D] [thread 250273] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:02.575487] [I] [thread 250273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:02.575491] [I] [thread 250273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:02.575502] [I] [thread 250273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:02.575503] [I] [thread 250273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:02.799280] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:02.799460] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:03.204123] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:12:03.204150] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:12:03.204294] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10647000,10648000,54,1700233900418,1700233923204
10647000,10648000,63,1700233902617,1700233923204
[m
[36m[15:12:03.800610] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:04.801783] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:05.343055] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:05.343272] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:05.344240] [D] [thread 250278] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:05.344269] [I] [thread 250278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:05.344273] [I] [thread 250278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:05.344285] [I] [thread 250278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:05.344286] [I] [thread 250278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:05.571035] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:05.571325] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:06.572493] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:07.573688] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:08.142823] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:08.143011] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:08.143942] [D] [thread 250284] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:08.143966] [I] [thread 250284] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:08.143970] [I] [thread 250284] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:08.143984] [I] [thread 250284] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:08.143985] [I] [thread 250284] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:08.361795] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:08.362019] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:09.363204] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:10.364421] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:10.877432] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:10.877638] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:10.878518] [D] [thread 250289] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:10.878541] [I] [thread 250289] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:10.878545] [I] [thread 250289] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:10.878556] [I] [thread 250289] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:10.878557] [I] [thread 250289] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:11.099111] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:11.099317] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:12.100502] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:13.101701] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:13.703268] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:13.703501] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:13.704393] [D] [thread 250294] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:13.704415] [I] [thread 250294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:13.704419] [I] [thread 250294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:13.704431] [I] [thread 250294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:13.704432] [I] [thread 250294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:13.911310] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:13.911579] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:14.522752] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:12:14.522790] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:12:14.522986] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10647000,10648000,24,1700233912725,1700233934522
10647000,10648000,47,1700233909090,1700233934522
[m
[36m[15:12:14.912767] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:15.913935] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:16.383068] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:16.383270] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:16.384103] [D] [thread 250300] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:16.384126] [I] [thread 250300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:16.384129] [I] [thread 250300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:16.384141] [I] [thread 250300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:16.384142] [I] [thread 250300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:16.638115] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:16.638342] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:17.639746] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:18.640937] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:19.054280] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:19.054555] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:19.055357] [D] [thread 250305] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:19.055379] [I] [thread 250305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:19.055385] [I] [thread 250305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:19.055397] [I] [thread 250305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:19.055398] [I] [thread 250305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:19.296259] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:19.296468] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:20.297658] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:21.298833] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:21.961062] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:21.961287] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:21.962111] [D] [thread 250310] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:21.962134] [I] [thread 250310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:21.962137] [I] [thread 250310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:21.962148] [I] [thread 250310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:21.962152] [I] [thread 250310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:22.218234] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:22.218470] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:22.278627] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:12:22.278664] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:12:22.278863] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10647000,10648000,13,1700233920168,1700233942278
10647000,10648000,100,1700233891545,1700233942278
[m
[36m[15:12:23.219667] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:23.856089] [D] [thread 249421] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[15:12:23.856119] [D] [thread 249421] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:12:23.856314] [D] [thread 249421] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10648000,10649000,54,1700233921276,1700233943856
10648000,10649000,63,1700233923171,1700233943856
[m
[36m[15:12:24.220514] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:24.793601] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:24.793782] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:24.795304] [D] [thread 250315] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:24.795327] [I] [thread 250315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:24.795331] [I] [thread 250315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:24.795342] [I] [thread 250315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:24.795343] [I] [thread 250315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:25.081534] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:25.081760] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:26.082922] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:27.084112] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:27.734960] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:27.735188] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:27.736142] [D] [thread 250320] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:27.736166] [I] [thread 250320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:27.736169] [I] [thread 250320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:27.736181] [I] [thread 250320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:27.736182] [I] [thread 250320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:27.971068] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:27.971251] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:28.972450] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:29.973607] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:30.650621] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:30.650800] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:30.651807] [D] [thread 250325] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:12:30.651831] [I] [thread 250325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:30.651837] [I] [thread 250325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:12:30.651848] [I] [thread 250325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:12:30.651849] [I] [thread 250325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:12:30.897752] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:30.897938] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:31.682818] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:12:31.683025] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:12:31.683957] [I] [thread 250329] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[15:12:31.683980] [D] [thread 250329] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[15:12:31.683996] [I] [thread 250329] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[15:12:31.683998] [I] [thread 250329] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[15:12:31.684025] [I] [thread 249411] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[15:12:31.684032] [I] [thread 249411] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[15:12:31.684037] [I] [thread 249411] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[15:12:31.684052] [I] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[15:12:31.684056] [D] [thread 249411] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[15:12:31.684061] [D] [thread 249411] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[15:12:31.684100] [D] [thread 249411] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(5: {FileSinkDescriptor()}) as root operator.[m
[36m[15:12:31.684152] [D] [thread 249411] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[15:12:31.684154] [D] [thread 249411] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[15:12:31.684158] [D] [thread 249411] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[15:12:31.684160] [D] [thread 249411] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[15:12:31.684162] [D] [thread 249411] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[15:12:31.684168] [D] [thread 249411] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[15:12:31.684170] [D] [thread 249411] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[15:12:31.684173] [D] [thread 249411] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[15:12:31.684177] [D] [thread 249411] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[15:12:31.684198] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:40303[m
[36m[15:12:31.684203] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:40303 queryId=1[m
[36m[15:12:31.685223] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:40105[m
[36m[15:12:31.685256] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:40105 queryId=1[m
[36m[15:12:31.686100] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:46805[m
[36m[15:12:31.686127] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:46805 queryId=1[m
[36m[15:12:31.687070] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:41483[m
[36m[15:12:31.687105] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:41483 queryId=1[m
[36m[15:12:31.688038] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:40927[m
[36m[15:12:31.688079] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:40927 queryId=1[m
[36m[15:12:31.689128] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:38755[m
[36m[15:12:31.689159] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:38755 queryId=1[m
[36m[15:12:31.689937] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:41147[m
[36m[15:12:31.689963] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:41147 queryId=1[m
[36m[15:12:31.690630] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:39955[m
[36m[15:12:31.690656] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:39955 queryId=1[m
[36m[15:12:31.691299] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:45087[m
[36m[15:12:31.691322] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:45087 queryId=1[m
[36m[15:12:31.691978] [D] [thread 249411] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:39223[m
[36m[15:12:31.692000] [D] [thread 249411] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:39223 queryId=1[m
[36m[15:12:31.692877] [D] [thread 249411] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[15:12:31.788621] [D] [thread 249420] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38151): EndOfStream received for channel [m
[36m[15:12:31.788687] [D] [thread 249420] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[15:12:31.788711] [I] [thread 249420] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[15:12:31.788719] [D] [thread 249420] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[15:12:31.788745] [D] [thread 249420] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:12:31.788750] [W] [thread 249420] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:12:31.930537] [D] [thread 249420] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38151): EndOfStream received for channel [m
[36m[15:12:31.930606] [D] [thread 249420] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=0)[m
[32m[15:12:31.930624] [I] [thread 249420] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(1)[m
[36m[15:12:31.930631] [D] [thread 249420] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::42::0::0, counter is at 1.[m
[36m[15:12:31.930644] [D] [thread 249420] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:12:31.930648] [W] [thread 249420] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[15:12:32.067444] [D] [thread 249420] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38151): EndOfStream received for channel [m
[36m[15:12:32.067484] [D] [thread 249420] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[32m[15:12:32.067494] [I] [thread 249420] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[15:12:32.067497] [D] [thread 249420] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[15:12:32.067504] [D] [thread 249420] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:12:32.067507] [W] [thread 249420] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:12:32.089812] [D] [thread 249423] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[15:12:32.089861] [D] [thread 249423] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[15:12:32.089875] [D] [thread 249423] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  10  type= HardStop[m
[36m[15:12:32.089884] [D] [thread 249423] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:12:32.089899] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:12:32.089930] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:12:32.089994] [D] [thread 249423] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 33 is notifying completion: HardStop[m
[36m[15:12:32.090004] [D] [thread 249423] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 33 is terminated; tokens left = 4[m
[36m[15:12:32.090014] [D] [thread 249423] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[15:12:32.090028] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[15:12:32.090042] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[15:12:32.090055] [D] [thread 249421] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:12:32.090059] [D] [thread 249423] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=1[m
2023-11-17 15:12:32.90 postReconfigurationCallback: queryId=1, querySubPlanId=10; queryId=1 subPlanId=10 processedTasks=43 processedTuple=86 processedBuffers=43 processedWatermarks=0 latencyAVG=1700233797776 queueSizeAVG=0 availableGlobalBufferAVG=895 availableFixedBufferAVG=0
[36m[15:12:32.090067] [D] [thread 249423] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:12:32.090071] [D] [thread 249423] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[15:12:32.090076] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:12:32.090079] [D] [thread 249421] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[15:12:32.090084] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:12:32.090086] [D] [thread 249421] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[15:12:32.090091] [D] [thread 249421] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[15:12:32.090096] [D] [thread 249423] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 42 is notifying completion: HardStop[m
[36m[15:12:32.090099] [D] [thread 249421] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[36m[15:12:32.090099] [D] [thread 249423] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 42 is terminated; tokens left = 3[m
[36m[15:12:32.090123] [D] [thread 249423] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 42 terminationType=HardStop[m
[32m[15:12:32.090124] [I] [thread 249421] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[15:12:32.090128] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[15:12:32.090139] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[15:12:32.090148] [D] [thread 249423] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=42 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=1[m
[36m[15:12:32.090153] [D] [thread 249423] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:12:32.090156] [D] [thread 249423] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:12:32.090160] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:12:32.090167] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:12:32.090172] [D] [thread 249421] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:12:32.090178] [D] [thread 249423] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 51 is notifying completion: HardStop[m
[36m[15:12:32.090180] [D] [thread 249423] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 51 is terminated; tokens left = 2[m
[36m[15:12:32.090184] [D] [thread 249423] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[15:12:32.090188] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[15:12:32.090196] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[15:12:32.090200] [D] [thread 249421] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[15:12:32.090205] [D] [thread 249423] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=1[m
[36m[15:12:32.090207] [D] [thread 249421] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 0[m
[36m[15:12:32.090209] [D] [thread 249423] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:12:32.090212] [D] [thread 249421] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::42::0::0[m
[36m[15:12:32.090216] [D] [thread 249421] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::42::0::0[m
[36m[15:12:32.090220] [D] [thread 249421] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::42::0::0[m
[32m[15:12:32.090225] [I] [thread 249421] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(0)[m
[36m[15:12:32.090254] [D] [thread 249421] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:12:32.090278] [D] [thread 249421] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:12:32.090296] [D] [thread 249421] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[15:12:32.090301] [D] [thread 249421] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[15:12:32.090305] [D] [thread 249421] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[15:12:32.090310] [D] [thread 249421] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[15:12:32.090315] [I] [thread 249421] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[15:12:32.090349] [D] [thread 249421] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:12:32.090375] [D] [thread 249421] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 10 Sink FileSink() is terminated; tokens left = 1[m
[36m[15:12:32.090383] [D] [thread 249421] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[15:12:32.090395] [D] [thread 249421] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[15:12:32.090418] [D] [thread 249421] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[15:12:32.090591] [D] [thread 249421] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=10[m
[36m[15:12:32.090601] [D] [thread 249421] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=10[m
[36m[15:12:32.090604] [D] [thread 249421] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-10 is marked as stopped now[m
[36m[15:12:32.090708] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Destroy[m
[36m[15:12:32.090725] [D] [thread 249423] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Destroy[m
[36m[15:12:32.090906] [D] [thread 249423] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  10[m
[36m[15:12:32.090920] [D] [thread 249423] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 10 was successful[m
[36m[15:12:32.090924] [D] [thread 249423] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  10  succeeded[m
[36m[15:12:32.090927] [D] [thread 249423] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[15:12:32.114320] [D] [thread 249411] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Stop succeed[m
[36m[15:12:32.114354] [D] [thread 249411] [QueryUndeploymentPhase.cpp:114] [stopQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[36m[15:12:32.114619] [D] [thread 249411] [QueryUndeploymentPhase.cpp:59] [execute] QueryUndeploymentPhase:removeQuery: undeploy query  1[m
[36m[15:12:32.114640] [D] [thread 249411] [QueryUndeploymentPhase.cpp:125] [undeployQuery] QueryUndeploymentPhase::undeployQuery queryId= 1[m
[36m[15:12:32.114667] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=5 and IP=192.168.2.32:40303[m
[36m[15:12:32.114673] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.32:40303 queryId=1[m
[36m[15:12:32.115727] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=6 and IP=192.168.2.33:40105[m
[36m[15:12:32.115760] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.33:40105 queryId=1[m
[36m[15:12:32.116640] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=2 and IP=192.168.2.12:46805[m
[36m[15:12:32.116666] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.12:46805 queryId=1[m
[36m[15:12:32.117486] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=7 and IP=192.168.2.34:41483[m
[36m[15:12:32.117514] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.34:41483 queryId=1[m
[36m[15:12:32.118328] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=8 and IP=192.168.2.35:40927[m
[36m[15:12:32.118356] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.35:40927 queryId=1[m
[36m[15:12:32.119139] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=3 and IP=192.168.2.30:38755[m
[36m[15:12:32.119164] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.30:38755 queryId=1[m
[36m[15:12:32.119933] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=9 and IP=192.168.2.37:41147[m
[36m[15:12:32.119960] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.37:41147 queryId=1[m
[36m[15:12:32.120783] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=10 and IP=192.168.2.38:39955[m
[36m[15:12:32.120811] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.38:39955 queryId=1[m
[36m[15:12:32.121592] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=4 and IP=192.168.2.31:45087[m
[36m[15:12:32.121617] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.31:45087 queryId=1[m
[36m[15:12:32.122358] [D] [thread 249411] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=1 and IP=192.168.2.11:39223[m
[36m[15:12:32.122382] [D] [thread 249411] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.11:39223 queryId=1[m
[36m[15:12:32.123306] [D] [thread 249411] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Unregister for 10 queues[m
[36m[15:12:32.144199] [D] [thread 249471] [WorkerRPCServer.cpp:64] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: got request for 1[m
[36m[15:12:32.144237] [D] [thread 249471] [NodeEngine.cpp:206] [unregisterQuery] Runtime: unregisterQuery query= 1[m
[36m[15:12:32.144249] [D] [thread 249471] [NodeEngine.cpp:231] [unregisterQuery] Runtime: unregister of query  10 : current status is stopped= true[m
[36m[15:12:32.144257] [D] [thread 249471] [QueryManagerLifecycle.cpp:222] [deregisterQuery] AbstractQueryManager::deregisterAndUndeployQuery: query 1[m
[36m[15:12:32.144269] [D] [thread 249471] [NodeEngine.cpp:234] [unregisterQuery] Runtime: unregister of query  10  succeeded[m
[36m[15:12:32.144280] [D] [thread 249471] [WorkerRPCServer.cpp:67] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: success[m
[36m[15:12:32.150361] [D] [thread 249411] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Unregister succeed[m
[36m[15:12:32.150398] [D] [thread 249411] [QueryUndeploymentPhase.cpp:146] [undeployQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[32m[15:12:32.150733] [I] [thread 249411] [GlobalExecutionPlan.cpp:208] [getMapOfTopologyNodeIdToOccupiedResource] GlobalExecutionPlan: Get a map of occupied resources for the query 1[m
[36m[15:12:32.150757] [D] [thread 249411] [GlobalExecutionPlan.cpp:211] [getMapOfTopologyNodeIdToOccupiedResource] GlobalExecutionPlan: Found 10 Execution node for query with id 1[m
[36m[15:12:32.150764] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.150766] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.150771] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.150774] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.150775] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.150826] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 5[m
[36m[15:12:32.150837] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.150839] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.150841] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.150843] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.150844] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.150863] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 6[m
[36m[15:12:32.150866] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.150868] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.150869] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.150871] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.150872] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.150890] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 1 CPU resources from the node with id 2[m
[36m[15:12:32.150899] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.150901] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.150902] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.150904] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.150905] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.150922] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 7[m
[36m[15:12:32.150926] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.150938] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.150940] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.150942] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.150943] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.150960] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 8[m
[36m[15:12:32.150965] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.150966] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.150968] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.150970] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.150972] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.150987] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 1 CPU resources from the node with id 3[m
[36m[15:12:32.150990] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.150992] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.150994] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.150996] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.150997] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.151012] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 9[m
[36m[15:12:32.151015] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.151017] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.151018] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.151020] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.151021] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.151036] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 10[m
[36m[15:12:32.151042] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.151043] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.151045] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.151047] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.151048] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.151062] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 1 CPU resources from the node with id 4[m
[36m[15:12:32.151066] [D] [thread 249411] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:12:32.151067] [D] [thread 249411] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:12:32.151069] [D] [thread 249411] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[15:12:32.151070] [D] [thread 249411] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[15:12:32.151072] [D] [thread 249411] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[15:12:32.151087] [I] [thread 249411] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 1 CPU resources from the node with id 1[m
[36m[15:12:32.151091] [D] [thread 249411] [GlobalExecutionPlan.cpp:216] [getMapOfTopologyNodeIdToOccupiedResource] GlobalExecutionPlan: returning the map of occupied resources for the query  1[m
[32m[15:12:32.151103] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 1 resources from node with id 1[m
[32m[15:12:32.151111] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 1 resources from node with id 2[m
[32m[15:12:32.151113] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 1 resources from node with id 3[m
[32m[15:12:32.151116] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 1 resources from node with id 4[m
[32m[15:12:32.151118] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 5[m
[32m[15:12:32.151121] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 6[m
[32m[15:12:32.151123] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 7[m
[32m[15:12:32.151125] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 8[m
[32m[15:12:32.151128] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 9[m
[32m[15:12:32.151130] [I] [thread 249411] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 10[m
[36m[15:12:32.151137] [D] [thread 249411] [GlobalExecutionPlan.cpp:111] [removeQuerySubPlans] GlobalExecutionPlan: Found 10 Execution node for query with id 1[m
[36m[15:12:32.151148] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151153] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  5[m
[36m[15:12:32.151155] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:12:32.151157] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  5[m
[36m[15:12:32.151166] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151168] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  6[m
[36m[15:12:32.151169] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:12:32.151170] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  6[m
[36m[15:12:32.151173] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151175] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  2[m
[36m[15:12:32.151176] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:12:32.151178] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  2[m
[36m[15:12:32.151180] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151182] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  7[m
[36m[15:12:32.151183] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:12:32.151185] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  7[m
[36m[15:12:32.151188] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151189] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  8[m
[36m[15:12:32.151190] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:12:32.151191] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  8[m
[36m[15:12:32.151194] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151195] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  3[m
[36m[15:12:32.151196] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:12:32.151198] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  3[m
[36m[15:12:32.151200] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151201] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  9[m
[36m[15:12:32.151203] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:12:32.151204] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  9[m
[36m[15:12:32.151207] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151208] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  10[m
[36m[15:12:32.151209] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:12:32.151210] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  10[m
[36m[15:12:32.151213] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151215] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  4[m
[36m[15:12:32.151221] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:12:32.151223] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  4[m
[36m[15:12:32.151225] [D] [thread 249411] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[15:12:32.151227] [D] [thread 249411] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  1[m
[36m[15:12:32.151228] [D] [thread 249411] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:12:32.151229] [D] [thread 249411] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  1[m
[36m[15:12:32.151242] [D] [thread 249411] [GlobalExecutionPlan.cpp:125] [removeQuerySubPlans] GlobalExecutionPlan: Removed all Execution nodes for Query with id  1[m
[32m[15:12:32.151266] [I] [thread 249411] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[15:12:32.151281] [D] [thread 249411] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[15:12:32.684186] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[15:12:33.129674] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:33.129826] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:46805 went dead so we remove it[m
[32m[15:12:33.129892] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[15:12:33.129897] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:33.129900] [I] [thread 249427] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:12:33.129903] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:12:33.129905] [I] [thread 249427] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:12:33.129906] [I] [thread 249427] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[15:12:33.129912] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[15:12:33.131145] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:33.131261] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:38755 went dead so we remove it[m
[32m[15:12:33.131293] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[15:12:33.131296] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:33.131298] [I] [thread 249427] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:12:33.131300] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:12:33.131302] [I] [thread 249427] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:12:33.131303] [I] [thread 249427] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[15:12:33.131306] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[15:12:33.132395] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:33.132504] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:45087 went dead so we remove it[m
[32m[15:12:33.132533] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[15:12:33.132536] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:33.132539] [I] [thread 249427] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:12:33.132540] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:12:33.132542] [I] [thread 249427] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:12:33.132543] [I] [thread 249427] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[15:12:33.132546] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[15:12:33.685357] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[15:12:34.194698] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:34.194837] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:46805 went dead so we remove it[m
[32m[15:12:34.194887] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:34.194902] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[15:12:34.196042] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:34.196166] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:38755 went dead so we remove it[m
[32m[15:12:34.196211] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:34.196220] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[15:12:34.197320] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:34.197446] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:45087 went dead so we remove it[m
[32m[15:12:34.197490] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:34.197499] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[15:12:34.198675] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:34.198799] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:40303 went dead so we remove it[m
[32m[15:12:34.198844] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0][m
[32m[15:12:34.198852] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:34.198854] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[15:12:34.198857] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[15:12:34.200094] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:34.200217] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:40105 went dead so we remove it[m
[32m[15:12:34.200260] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0][m
[32m[15:12:34.200268] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:34.200270] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[15:12:34.200274] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[15:12:34.686569] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[15:12:35.258191] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:35.258333] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:46805 went dead so we remove it[m
[32m[15:12:35.258382] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:35.258398] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[15:12:35.259721] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:35.259852] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:38755 went dead so we remove it[m
[32m[15:12:35.259898] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:35.259906] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[15:12:35.261179] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:35.261310] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:45087 went dead so we remove it[m
[32m[15:12:35.261354] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:35.261361] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[15:12:35.262695] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:35.262825] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:40303 went dead so we remove it[m
[32m[15:12:35.262868] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:35.262872] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 5 doesn't exists in the system.[m
[31m[1m[15:12:35.264163] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:35.264288] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:40105 went dead so we remove it[m
[32m[15:12:35.264360] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:35.264364] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 6 doesn't exists in the system.[m
[31m[1m[15:12:35.265663] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:35.265795] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:41483 went dead so we remove it[m
[32m[15:12:35.265840] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0][m
[32m[15:12:35.265849] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:35.265851] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[15:12:35.265872] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[15:12:35.267171] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:35.267300] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:40927 went dead so we remove it[m
[32m[15:12:35.267344] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0][m
[32m[15:12:35.267352] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:35.267355] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[15:12:35.267357] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[15:12:35.687770] [D] [thread 249426] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[15:12:36.309189] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.309333] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:46805 went dead so we remove it[m
[32m[15:12:36.309382] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:36.309398] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[15:12:36.310686] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.310823] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:38755 went dead so we remove it[m
[32m[15:12:36.310869] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:36.310876] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[15:12:36.312097] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.312230] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:45087 went dead so we remove it[m
[32m[15:12:36.312275] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:36.312283] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[15:12:36.313700] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.313831] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:40303 went dead so we remove it[m
[32m[15:12:36.313876] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:36.313881] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 5 doesn't exists in the system.[m
[31m[1m[15:12:36.315182] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.315314] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:40105 went dead so we remove it[m
[32m[15:12:36.315354] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:36.315368] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 6 doesn't exists in the system.[m
[31m[1m[15:12:36.316757] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.316901] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:41483 went dead so we remove it[m
[32m[15:12:36.316951] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:36.316960] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 7 doesn't exists in the system.[m
[31m[1m[15:12:36.318270] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.318402] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:40927 went dead so we remove it[m
[32m[15:12:36.318449] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:12:36.318456] [W] [thread 249427] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 8 doesn't exists in the system.[m
[31m[1m[15:12:36.319750] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.319878] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.37:41147 went dead so we remove it[m
[32m[15:12:36.319924] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0][m
[32m[15:12:36.319931] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:36.319934] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[15:12:36.319938] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[15:12:36.321178] [E] [thread 249427] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:12:36.321309] [W] [thread 249427] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.38:39955 went dead so we remove it[m
[32m[15:12:36.321356] [I] [thread 249427] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0][m
[32m[15:12:36.321363] [I] [thread 249427] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:12:36.321365] [I] [thread 249427] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[15:12:36.321368] [D] [thread 249427] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
