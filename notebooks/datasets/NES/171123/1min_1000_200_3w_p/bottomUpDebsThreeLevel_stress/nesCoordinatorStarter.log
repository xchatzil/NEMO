
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[09:54:20.946157] [I] [thread 234993] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: CPP_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1000
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[09:54:20.946208] [I] [thread 234993] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[09:54:20.946241] [D] [thread 234993] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[09:54:20.946847] [D] [thread 234993] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[09:54:20.947034] [I] [thread 234993] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[09:54:20.947125] [D] [thread 234993] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[09:54:20.947144] [D] [thread 234993] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[09:54:20.947225] [D] [thread 234993] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[09:54:20.947231] [D] [thread 234993] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[09:54:20.947247] [D] [thread 234993] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[09:54:20.947270] [D] [thread 234993] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[09:54:20.947277] [D] [thread 234993] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[09:54:20.978611] [D] [thread 234993] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[09:54:20.978735] [D] [thread 234993] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:54:20.978784] [D] [thread 234993] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:54:20.978837] [D] [thread 234993] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[09:54:20.978891] [D] [thread 234993] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[09:54:20.978922] [D] [thread 234993] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[09:54:20.978945] [D] [thread 234993] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[09:54:20.978980] [D] [thread 234993] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[09:54:20.979117] [D] [thread 234993] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[09:54:20.979132] [D] [thread 234993] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[09:54:20.979152] [D] [thread 234993] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[09:54:20.979171] [D] [thread 234993] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[09:54:20.979220] [D] [thread 234993] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[09:54:20.979523] [D] [thread 234993] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[09:54:20.979608] [D] [thread 234993] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[09:54:20.979651] [D] [thread 234993] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[09:54:20.979673] [D] [thread 234993] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[09:54:20.979682] [W] [thread 234993] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[09:54:20.979691] [I] [thread 234993] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[09:54:20.979695] [D] [thread 234993] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[09:54:20.979897] [D] [thread 234993] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[09:54:20.979976] [I] [thread 235001] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[09:54:20.979987] [D] [thread 235001] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[09:54:20.980179] [D] [thread 235002] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[09:54:20.981807] [D] [thread 235002] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[09:54:20.981807] [D] [thread 234993] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[09:54:20.981825] [D] [thread 234993] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[09:54:20.981830] [D] [thread 234993] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[09:54:20.981831] [D] [thread 234993] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[09:54:20.981940] [D] [thread 234993] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[09:54:20.981973] [D] [thread 234993] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[09:54:20.981975] [D] [thread 234993] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[09:54:20.981991] [D] [thread 234993] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[09:54:20.982025] [D] [thread 234993] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[09:54:20.982031] [D] [thread 234993] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[09:54:20.982042] [I] [thread 234993] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:54:20.982190] [I] [thread 234993] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[09:54:20.982196] [I] [thread 234993] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:54:20.982250] [I] [thread 234993] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[09:54:20.982256] [I] [thread 234993] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:54:20.982343] [I] [thread 234993] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[09:54:20.982356] [I] [thread 234993] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:54:20.982466] [I] [thread 234993] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[09:54:20.982518] [D] [thread 234993] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[09:54:20.982539] [D] [thread 234993] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[09:54:20.982544] [W] [thread 234993] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[09:54:20.991578] [D] [thread 234993] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[09:54:20.999438] [D] [thread 234993] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[09:54:21.037854] [D] [thread 234993] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[33m[1m[09:54:21.037928] [W] [thread 234993] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[09:54:21.037970] [D] [thread 234993] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[09:54:21.037983] [D] [thread 234993] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[09:54:21.037994] [D] [thread 234993] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[09:54:21.038004] [D] [thread 234993] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[09:54:21.038014] [D] [thread 234993] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[09:54:21.038029] [D] [thread 234993] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[09:54:21.038089] [D] [thread 234993] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[09:54:21.038133] [D] [thread 234993] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[09:54:21.038142] [D] [thread 234993] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[09:54:21.039368] [D] [thread 235007] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[09:54:21.040268] [D] [thread 235007] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[09:54:21.040354] [D] [thread 235007] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 46353[m
[36m[09:54:21.041112] [D] [thread 235011] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 46353[m
[36m[09:54:21.041112] [D] [thread 235010] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 46353[m
[32m[09:54:21.041188] [I] [thread 234993] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:46353[m
[36m[09:54:21.041201] [D] [thread 234993] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1700048318  with numThreads= 4[m
[36m[09:54:21.041225] [D] [thread 234993] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[09:54:21.041960] [D] [thread 234993] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[09:54:21.041977] [D] [thread 234993] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[09:54:21.041993] [D] [thread 234993] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[09:54:21.041999] [D] [thread 234993] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[09:54:21.042023] [D] [thread 235015] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 0 pins to queue 0[m
[36m[09:54:21.042045] [D] [thread 235015] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[09:54:21.042409] [D] [thread 235014] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 1 pins to queue 0[m
[36m[09:54:21.042579] [D] [thread 235013] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 2 pins to queue 0[m
[36m[09:54:21.042601] [D] [thread 235013] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[09:54:21.042765] [D] [thread 235012] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 3 pins to queue 0[m
[36m[09:54:21.042767] [D] [thread 235016] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[09:54:21.042871] [D] [thread 235012] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[09:54:21.042949] [D] [thread 235016] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[09:54:21.043230] [D] [thread 235014] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[09:54:21.043743] [D] [thread 235016] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 42913[m
[36m[09:54:21.043759] [D] [thread 234993] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:42913: 42913[m
[36m[09:54:21.043763] [D] [thread 234993] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[09:54:21.043771] [D] [thread 234993] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[09:54:21.043777] [D] [thread 234993] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[09:54:21.044147] [D] [thread 234993] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[09:54:21.044316] [W] [thread 234993] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[09:54:21.044376] [D] [thread 234993] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[09:54:21.045989] [D] [thread 235016] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[09:54:21.046182] [D] [thread 234993] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 42913
dataPort: 46353
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:21.049182] [D] [thread 235003] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 42913
dataPort: 46353
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:21.049246] [D] [thread 235003] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 42913
dataPort: 46353
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:21.049260] [D] [thread 235003] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[09:54:21.049263] [W] [thread 235003] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[09:54:21.049265] [D] [thread 235003] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:21.049266] [D] [thread 235003] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:21.049296] [D] [thread 235003] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[09:54:21.049341] [D] [thread 235003] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[09:54:21.049382] [I] [thread 235003] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[09:54:21.049391] [D] [thread 235003] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:21.049423] [D] [thread 235003] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:21.049433] [I] [thread 235003] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:54:21.049435] [D] [thread 235003] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:54:21.049441] [D] [thread 235003] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:21.049443] [D] [thread 235003] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:21.049447] [D] [thread 235003] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:21.049540] [D] [thread 235003] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[09:54:21.050071] [D] [thread 234993] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[09:54:21.050097] [D] [thread 234993] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[09:54:21.050183] [D] [thread 234993] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[09:54:21.050186] [D] [thread 234993] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[09:54:21.078261] [D] [thread 234993] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[09:54:21.078310] [D] [thread 234993] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[09:54:21.078312] [D] [thread 234993] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[09:54:21.078718] [D] [thread 234993] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[09:54:21.078749] [D] [thread 234993] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[09:54:21.079006] [D] [thread 234993] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[09:54:21.079081] [I] [thread 235020] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[09:54:21.081312] [I] [thread 235020] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[09:54:21.081362] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:21.104928] [D] [thread 234993] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[09:54:21.104973] [D] [thread 234993] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[09:54:21.104975] [D] [thread 234993] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[09:54:21.105360] [D] [thread 234993] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[09:54:22.082198] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:23.083407] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:24.035713] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:24.036504] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:24.036899] [D] [thread 235024] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[09:54:24.037202] [D] [thread 235024] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[09:54:24.037237] [D] [thread 235024] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[09:54:24.037303] [D] [thread 235024] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[09:54:24.038411] [D] [thread 235025] [File.cpp:27] [createFile] Create File to file:///tmp/query_17-11-2023_09-54-24_5225208.cpp[m
[36m[09:54:24.039293] [D] [thread 235025] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[09:54:24.039549] [D] [thread 235025] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -o/tmp/query_17-11-2023_09-54-24_5225208.so -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_17-11-2023_09-54-24_5225208.cpp'[m
[36m[09:54:25.037669] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:25.780261] [I] [thread 235025] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1741.96043ms[m
[36m[09:54:25.781285] [D] [thread 235024] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[09:54:25.781325] [D] [thread 235024] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[09:54:25.781330] [D] [thread 235024] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[09:54:25.781339] [D] [thread 235024] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[09:54:25.884932] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:25.885243] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:25.885643] [I] [thread 235030] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:25.885784] [I] [thread 235030] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:26.132598] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:26.132902] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:26.133754] [I] [thread 235031] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:26.133846] [I] [thread 235031] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:26.268969] [D] [thread 235018] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 35433
dataPort: 44589
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:26.269021] [D] [thread 235018] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 35433
dataPort: 44589
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:26.269030] [D] [thread 235018] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:26.269087] [D] [thread 235018] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:26.269090] [D] [thread 235018] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:26.269097] [D] [thread 235018] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[09:54:26.269114] [D] [thread 235018] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:26.269130] [I] [thread 235018] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:26.269149] [I] [thread 235018] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:26.269191] [D] [thread 235018] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[09:54:26.284998] [D] [thread 235018] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:26.285124] [D] [thread 235018] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:26.285141] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:54:26.285144] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:54:26.285153] [D] [thread 235018] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:26.285155] [D] [thread 235018] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:26.285160] [D] [thread 235018] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:26.285237] [D] [thread 235018] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[09:54:27.134059] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:28.135227] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:29.136426] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:29.173392] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:29.173645] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:29.174198] [I] [thread 235032] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:29.174331] [I] [thread 235032] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:29.288445] [D] [thread 235003] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 45679
dataPort: 34943
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:29.288530] [D] [thread 235003] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 45679
dataPort: 34943
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:29.288543] [D] [thread 235003] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:29.288632] [D] [thread 235003] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:29.288636] [D] [thread 235003] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:29.288645] [D] [thread 235003] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[09:54:29.288673] [D] [thread 235003] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:29.288690] [I] [thread 235003] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:29.288717] [I] [thread 235003] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:29.288728] [D] [thread 235003] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[09:54:29.288742] [D] [thread 235003] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:29.288826] [D] [thread 235003] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:29.288837] [I] [thread 235003] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:54:29.288840] [D] [thread 235003] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:54:29.288847] [D] [thread 235003] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:29.288850] [D] [thread 235003] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:29.288853] [D] [thread 235003] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:29.288919] [D] [thread 235003] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[09:54:30.174828] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:31.176019] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:32.177215] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:32.251757] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:32.252053] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:32.252508] [I] [thread 235033] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:32.252664] [I] [thread 235033] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:32.368868] [D] [thread 235003] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 35543
dataPort: 34213
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:32.368947] [D] [thread 235003] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 35543
dataPort: 34213
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:32.368962] [D] [thread 235003] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:32.369059] [D] [thread 235003] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:32.369063] [D] [thread 235003] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:32.369074] [D] [thread 235003] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[09:54:32.369100] [D] [thread 235003] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:32.369117] [I] [thread 235003] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:32.369144] [I] [thread 235003] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:32.369155] [D] [thread 235003] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[09:54:32.369168] [D] [thread 235003] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:32.369255] [D] [thread 235003] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:32.369268] [I] [thread 235003] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:54:32.369271] [D] [thread 235003] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:54:32.369278] [D] [thread 235003] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:32.369288] [D] [thread 235003] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:32.369292] [D] [thread 235003] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:32.369359] [D] [thread 235003] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[09:54:33.253238] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:34.254430] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:34.606582] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:34.606845] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:34.607283] [I] [thread 235034] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:34.607407] [I] [thread 235034] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:34.724178] [D] [thread 235018] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 35713
dataPort: 40499
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:34.724258] [D] [thread 235018] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 35713
dataPort: 40499
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:34.724274] [D] [thread 235018] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:34.724596] [D] [thread 235018] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:34.724603] [D] [thread 235018] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:34.724614] [D] [thread 235018] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[09:54:34.724639] [D] [thread 235018] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:34.724654] [I] [thread 235018] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:34.724678] [I] [thread 235018] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:34.724686] [D] [thread 235018] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[09:54:34.724698] [D] [thread 235018] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:34.724757] [D] [thread 235018] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:34.724767] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:54:34.724770] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:54:34.724776] [D] [thread 235018] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:34.724779] [D] [thread 235018] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:34.724782] [D] [thread 235018] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:34.724847] [D] [thread 235018] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[09:54:34.748464] [D] [thread 235018] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[09:54:34.748504] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:54:34.748513] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:54:34.748530] [D] [thread 235018] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[09:54:34.748612] [D] [thread 235018] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:54:34.748623] [D] [thread 235018] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[09:54:34.748649] [D] [thread 235018] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[09:54:34.748658] [D] [thread 235018] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:54:34.748669] [D] [thread 235018] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[09:54:34.748688] [D] [thread 235018] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:54:34.749969] [D] [thread 235018] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[09:54:34.750010] [D] [thread 235018] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[09:54:34.750015] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:54:34.750033] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:54:34.750036] [D] [thread 235018] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[09:54:34.750039] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:54:34.750041] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:54:34.750044] [D] [thread 235018] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:54:34.750059] [D] [thread 235018] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:54:34.750133] [I] [thread 235018] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:34.750149] [D] [thread 235018] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:54:34.750153] [D] [thread 235018] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:54:34.750160] [D] [thread 235018] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[09:54:34.750163] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:54:34.750165] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:54:34.750168] [D] [thread 235018] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[09:54:34.750170] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:54:34.750172] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:54:34.750174] [D] [thread 235018] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[09:54:34.750216] [I] [thread 235018] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[09:54:34.750224] [D] [thread 235018] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:54:34.750338] [D] [thread 235018] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:54:34.750345] [D] [thread 235018] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:54:35.608017] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:36.609199] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:37.610409] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:37.759239] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:37.759418] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:37.759921] [I] [thread 235036] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:37.760019] [I] [thread 235036] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:37.876657] [D] [thread 235035] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 40579
dataPort: 36617
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:37.876748] [D] [thread 235035] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 40579
dataPort: 36617
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:37.876763] [D] [thread 235035] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:37.876891] [D] [thread 235035] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:37.876895] [D] [thread 235035] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:37.876904] [D] [thread 235035] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[09:54:37.876929] [D] [thread 235035] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:37.876946] [I] [thread 235035] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:37.876974] [I] [thread 235035] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:37.876983] [D] [thread 235035] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[09:54:37.876996] [D] [thread 235035] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:37.877079] [D] [thread 235035] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:37.877090] [I] [thread 235035] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:54:37.877093] [D] [thread 235035] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:54:37.877099] [D] [thread 235035] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:37.877102] [D] [thread 235035] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:37.877105] [D] [thread 235035] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:37.877173] [D] [thread 235035] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[09:54:37.900783] [D] [thread 235035] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[09:54:37.900815] [I] [thread 235035] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:54:37.900819] [D] [thread 235035] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:54:37.900826] [D] [thread 235035] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[09:54:37.900848] [D] [thread 235035] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:54:37.900853] [D] [thread 235035] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[09:54:37.900866] [D] [thread 235035] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:54:37.900870] [D] [thread 235035] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[09:54:37.900874] [D] [thread 235035] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:54:37.900879] [D] [thread 235035] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[09:54:37.900882] [D] [thread 235035] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:54:37.901900] [D] [thread 235035] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[09:54:37.901931] [D] [thread 235035] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[09:54:37.901937] [I] [thread 235035] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:54:37.901939] [D] [thread 235035] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:54:37.901942] [D] [thread 235035] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[09:54:37.901944] [I] [thread 235035] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:54:37.901945] [D] [thread 235035] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:54:37.901947] [D] [thread 235035] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:54:37.901960] [D] [thread 235035] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:54:37.902015] [I] [thread 235035] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:37.902021] [D] [thread 235035] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:54:37.902024] [D] [thread 235035] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:54:37.902027] [D] [thread 235035] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[09:54:37.902029] [I] [thread 235035] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:54:37.902031] [D] [thread 235035] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:54:37.902033] [D] [thread 235035] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[09:54:37.902035] [I] [thread 235035] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:54:37.902036] [D] [thread 235035] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:54:37.902038] [D] [thread 235035] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[09:54:37.902059] [I] [thread 235035] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[09:54:37.902065] [D] [thread 235035] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:54:37.902132] [D] [thread 235035] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:54:37.902137] [D] [thread 235035] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:54:38.760598] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:39.761794] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:40.762976] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:40.801855] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:40.802255] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:40.802586] [I] [thread 235037] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:40.802877] [I] [thread 235037] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:40.910547] [D] [thread 235035] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 41929
dataPort: 42123
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:40.910596] [D] [thread 235035] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 41929
dataPort: 42123
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:40.910605] [D] [thread 235035] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:40.910684] [D] [thread 235035] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:40.910686] [D] [thread 235035] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:40.910693] [D] [thread 235035] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[09:54:40.910752] [D] [thread 235035] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:40.910761] [I] [thread 235035] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:40.910775] [I] [thread 235035] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:40.910781] [D] [thread 235035] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[09:54:40.910789] [D] [thread 235035] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:40.910833] [D] [thread 235035] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:40.910840] [I] [thread 235035] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:54:40.910842] [D] [thread 235035] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:54:40.910847] [D] [thread 235035] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:40.910849] [D] [thread 235035] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:40.910851] [D] [thread 235035] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:40.910897] [D] [thread 235035] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[09:54:40.934315] [D] [thread 235035] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[09:54:40.934354] [I] [thread 235035] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:54:40.934358] [D] [thread 235035] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:54:40.934367] [D] [thread 235035] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[09:54:40.934405] [D] [thread 235035] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:54:40.934411] [D] [thread 235035] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[09:54:40.934418] [D] [thread 235035] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:54:40.934422] [D] [thread 235035] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:54:40.934425] [D] [thread 235035] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[09:54:40.934429] [D] [thread 235035] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:54:40.934436] [D] [thread 235035] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[09:54:40.934440] [D] [thread 235035] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:54:40.935735] [D] [thread 235038] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[09:54:40.935753] [D] [thread 235038] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[09:54:40.935758] [I] [thread 235038] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:54:40.935760] [D] [thread 235038] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:54:40.935763] [D] [thread 235038] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[09:54:40.935765] [I] [thread 235038] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:54:40.935767] [D] [thread 235038] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:54:40.935770] [D] [thread 235038] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:54:40.935782] [D] [thread 235038] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:54:40.935844] [I] [thread 235038] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:40.935851] [D] [thread 235038] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:54:40.935854] [D] [thread 235038] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:54:40.935858] [D] [thread 235038] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[09:54:40.935860] [I] [thread 235038] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:54:40.935862] [D] [thread 235038] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:54:40.935864] [D] [thread 235038] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[09:54:40.935866] [I] [thread 235038] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:54:40.935868] [D] [thread 235038] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:54:40.935870] [D] [thread 235038] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[09:54:40.935893] [I] [thread 235038] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[09:54:40.935900] [D] [thread 235038] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:54:40.935991] [D] [thread 235038] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:54:40.935996] [D] [thread 235038] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:54:41.803443] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:42.804649] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:43.805849] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:43.819630] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:43.819958] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:43.820492] [I] [thread 235039] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:43.820732] [I] [thread 235039] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:43.937305] [D] [thread 235018] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 37923
dataPort: 39633
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:43.937387] [D] [thread 235018] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 37923
dataPort: 39633
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:43.937404] [D] [thread 235018] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:43.937550] [D] [thread 235018] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:43.937554] [D] [thread 235018] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:43.937563] [D] [thread 235018] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[09:54:43.937588] [D] [thread 235018] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:43.937606] [I] [thread 235018] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:43.937633] [I] [thread 235018] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:43.937659] [D] [thread 235018] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[09:54:43.937672] [D] [thread 235018] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:43.937829] [D] [thread 235018] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:43.937843] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:54:43.937846] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:54:43.937853] [D] [thread 235018] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:43.937856] [D] [thread 235018] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:43.937858] [D] [thread 235018] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:43.937925] [D] [thread 235018] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[09:54:43.961049] [D] [thread 235018] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[09:54:43.961078] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:54:43.961083] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:54:43.961091] [D] [thread 235018] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[09:54:43.961113] [D] [thread 235018] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:54:43.961118] [D] [thread 235018] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[09:54:43.961125] [D] [thread 235018] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:54:43.961128] [D] [thread 235018] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:54:43.961130] [D] [thread 235018] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:54:43.961133] [D] [thread 235018] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[09:54:43.961137] [D] [thread 235018] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:54:43.961141] [D] [thread 235018] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[09:54:43.961144] [D] [thread 235018] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:54:43.962303] [D] [thread 235038] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[09:54:43.962342] [D] [thread 235038] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[09:54:43.962349] [I] [thread 235038] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:54:43.962367] [D] [thread 235038] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:54:43.962371] [D] [thread 235038] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[09:54:43.962373] [I] [thread 235038] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:54:43.962376] [D] [thread 235038] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:54:43.962379] [D] [thread 235038] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:54:43.962393] [D] [thread 235038] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:54:43.962459] [I] [thread 235038] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:43.962467] [D] [thread 235038] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:54:43.962470] [D] [thread 235038] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:54:43.962474] [D] [thread 235038] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[09:54:43.962476] [I] [thread 235038] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:54:43.962478] [D] [thread 235038] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:54:43.962481] [D] [thread 235038] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[09:54:43.962483] [I] [thread 235038] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:54:43.962485] [D] [thread 235038] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:54:43.962487] [D] [thread 235038] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[09:54:43.962514] [I] [thread 235038] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[09:54:43.962522] [D] [thread 235038] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:54:43.962633] [D] [thread 235038] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:54:43.962639] [D] [thread 235038] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:54:44.821144] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:45.822327] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:46.823572] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:46.894068] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:46.894365] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:46.894850] [I] [thread 235040] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:46.895102] [I] [thread 235040] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:47.011314] [D] [thread 235018] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 43627
dataPort: 38951
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:47.011392] [D] [thread 235018] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 43627
dataPort: 38951
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:47.011408] [D] [thread 235018] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:47.011563] [D] [thread 235018] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:47.011567] [D] [thread 235018] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:47.011577] [D] [thread 235018] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[09:54:47.011652] [D] [thread 235018] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:47.011670] [I] [thread 235018] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:47.011697] [I] [thread 235018] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:47.011707] [D] [thread 235018] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[09:54:47.011720] [D] [thread 235018] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:47.011836] [D] [thread 235018] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:47.011848] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:54:47.011851] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:54:47.011859] [D] [thread 235018] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:47.011862] [D] [thread 235018] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:47.011865] [D] [thread 235018] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:47.011932] [D] [thread 235018] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[09:54:47.035593] [D] [thread 235018] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[09:54:47.035629] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:54:47.035634] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:54:47.035642] [D] [thread 235018] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[09:54:47.035665] [D] [thread 235018] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:54:47.035669] [D] [thread 235018] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[09:54:47.035676] [D] [thread 235018] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:54:47.035680] [D] [thread 235018] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:54:47.035682] [D] [thread 235018] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:54:47.035684] [D] [thread 235018] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[09:54:47.035687] [D] [thread 235018] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[09:54:47.035691] [D] [thread 235018] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:54:47.035696] [D] [thread 235018] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[09:54:47.035700] [D] [thread 235018] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:54:47.037121] [D] [thread 235018] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[09:54:47.037163] [D] [thread 235018] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[09:54:47.037169] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:54:47.037172] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:54:47.037176] [D] [thread 235018] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[09:54:47.037193] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:54:47.037196] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:54:47.037199] [D] [thread 235018] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:54:47.037213] [D] [thread 235018] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:54:47.037280] [I] [thread 235018] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:47.037288] [D] [thread 235018] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:54:47.037292] [D] [thread 235018] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:54:47.037295] [D] [thread 235018] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[09:54:47.037297] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:54:47.037300] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:54:47.037302] [D] [thread 235018] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[09:54:47.037305] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:54:47.037307] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:54:47.037310] [D] [thread 235018] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[09:54:47.037335] [I] [thread 235018] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[09:54:47.037342] [D] [thread 235018] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:54:47.037465] [D] [thread 235018] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:54:47.037530] [D] [thread 235018] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:54:47.895568] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:48.896753] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:49.897955] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:50.134709] [D] [thread 235018] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 36447
dataPort: 42483
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:50.134788] [D] [thread 235018] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 36447
dataPort: 42483
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:54:50.134804] [D] [thread 235018] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:54:50.134974] [D] [thread 235018] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:54:50.134979] [D] [thread 235018] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:54:50.134988] [D] [thread 235018] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[09:54:50.135015] [D] [thread 235018] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:54:50.135033] [I] [thread 235018] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:54:50.135060] [I] [thread 235018] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:50.135069] [D] [thread 235018] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[09:54:50.135081] [D] [thread 235018] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:54:50.135252] [D] [thread 235018] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:54:50.135266] [I] [thread 235018] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:54:50.135275] [D] [thread 235018] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:54:50.135283] [D] [thread 235018] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:54:50.135285] [D] [thread 235018] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:54:50.135288] [D] [thread 235018] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:54:50.135358] [D] [thread 235018] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[09:54:50.159458] [D] [thread 235041] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[09:54:50.159498] [I] [thread 235041] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:54:50.159503] [D] [thread 235041] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:54:50.159511] [D] [thread 235041] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[09:54:50.159534] [D] [thread 235041] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:54:50.159539] [D] [thread 235041] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[09:54:50.159545] [D] [thread 235041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:54:50.159549] [D] [thread 235041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:54:50.159551] [D] [thread 235041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:54:50.159553] [D] [thread 235041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[09:54:50.159555] [D] [thread 235041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[09:54:50.159558] [D] [thread 235041] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[09:54:50.159561] [D] [thread 235041] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:54:50.159565] [D] [thread 235041] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[09:54:50.159569] [D] [thread 235041] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:54:50.160774] [D] [thread 235041] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[09:54:50.160813] [D] [thread 235041] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[09:54:50.160819] [I] [thread 235041] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:54:50.160835] [D] [thread 235041] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:54:50.160838] [D] [thread 235041] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[09:54:50.160840] [I] [thread 235041] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:54:50.160842] [D] [thread 235041] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:54:50.160845] [D] [thread 235041] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:54:50.160859] [D] [thread 235041] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:54:50.160924] [I] [thread 235041] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:54:50.160932] [D] [thread 235041] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:54:50.160935] [D] [thread 235041] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:54:50.160939] [D] [thread 235041] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[09:54:50.160941] [I] [thread 235041] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:54:50.160943] [D] [thread 235041] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:54:50.160945] [D] [thread 235041] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[09:54:50.160947] [I] [thread 235041] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:54:50.160948] [D] [thread 235041] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:54:50.160950] [D] [thread 235041] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[09:54:50.160974] [I] [thread 235041] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[09:54:50.160981] [D] [thread 235041] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:54:50.161103] [D] [thread 235041] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:54:50.161110] [D] [thread 235041] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:54:50.431436] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:50.431685] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:50.432249] [I] [thread 235043] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:54:50.432517] [I] [thread 235043] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:54:51.432864] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:51.569621] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:51.569826] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:51.652751] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:51.653029] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:51.653612] [D] [thread 235048] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[09:54:51.653661] [I] [thread 235048] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[09:54:51.653668] [I] [thread 235048] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[09:54:51.653676] [D] [thread 235048] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[09:54:51.653719] [D] [thread 235048] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[09:54:51.653758] [D] [thread 235048] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));[m
[36m[09:54:51.653767] [D] [thread 235048] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));
}
}
[m
[36m[09:54:51.654692] [D] [thread 235049] [File.cpp:27] [createFile] Create File to file:///tmp/query_17-11-2023_09-54-51_926308.cpp[m
[36m[09:54:51.655151] [D] [thread 235049] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[09:54:51.655192] [D] [thread 235049] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[09:54:51.655295] [D] [thread 235049] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -o/tmp/query_17-11-2023_09-54-51_926308.so -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_17-11-2023_09-54-51_926308.cpp'[m
[36m[09:54:52.654156] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:53.655307] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:54:54.533854] [I] [thread 235049] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2879.228054ms[m
[36m[09:54:54.534018] [D] [thread 235048] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[09:54:54.534047] [D] [thread 235048] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[09:54:54.534098] [I] [thread 235048] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.534230] [D] [thread 235048] [Query.cpp:237] [project] Query: add projection to query[m
[36m[09:54:54.534306] [D] [thread 235048] [QueryPlanBuilder.cpp:51] [addProjection] QueryPlanBuilder: add projection operator to query plan[m
[32m[09:54:54.534328] [I] [thread 235048] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:54:54.534424] [D] [thread 235048] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PROJECTION(2, schema=) as new root of the plan.[m
[36m[09:54:54.534485] [D] [thread 235048] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.534494] [D] [thread 235048] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.534690] [D] [thread 235048] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[09:54:54.534726] [D] [thread 235048] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[09:54:54.534781] [I] [thread 235048] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:54:54.534820] [D] [thread 235048] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(3) as new root of the plan.[m
[36m[09:54:54.534840] [D] [thread 235048] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.534842] [D] [thread 235048] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:54.534878] [I] [thread 235048] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[09:54:54.534897] [D] [thread 235048] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-4, Min;) as new root of the plan.[m
[36m[09:54:54.534945] [D] [thread 235048] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.534960] [D] [thread 235048] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.535027] [D] [thread 235048] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[09:54:54.535038] [I] [thread 235048] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[09:54:54.535079] [D] [thread 235048] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[09:54:54.535115] [D] [thread 235048] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.535117] [D] [thread 235048] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.535905] [D] [thread 235048] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.535956] [D] [thread 235048] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.535965] [D] [thread 235048] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.535981] [D] [thread 235048] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.535985] [D] [thread 235048] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.535987] [D] [thread 235048] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.535997] [D] [thread 235048] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:54:54.536003] [D] [thread 235048] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.536007] [D] [thread 235048] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.536008] [D] [thread 235048] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.536115] [D] [thread 235048] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.536121] [D] [thread 235048] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.536129] [D] [thread 235048] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.536566] [D] [thread 235048] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.536758] [D] [thread 235048] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.536862] [D] [thread 235048] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[09:54:54.536959] [I] [thread 235048] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[09:54:54.537180] [I] [thread 235048] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[09:54:54.537197] [I] [thread 235048] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[09:54:54.537234] [I] [thread 235001] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[09:54:54.537249] [I] [thread 235001] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[09:54:54.537256] [I] [thread 235001] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[09:54:54.537292] [I] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[09:54:54.537305] [D] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[09:54:54.537308] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.537321] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.537325] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.537331] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.537341] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.537582] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.537665] [D] [thread 235001] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.537726] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.537738] [D] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[09:54:54.537744] [D] [thread 235001] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[09:54:54.537798] [D] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[09:54:54.537805] [I] [thread 235001] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:54:54.537826] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[09:54:54.537853] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:54:54.537902] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:54:54.537931] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:54:54.537975] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.538060] [D] [thread 235001] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[09:54:54.538154] [D] [thread 235001] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.538236] [D] [thread 235001] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[09:54:54.538296] [I] [thread 235001] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.538322] [D] [thread 235001] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[09:54:54.538325] [I] [thread 235001] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:54:54.538332] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[09:54:54.538340] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:54:54.538368] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:54:54.538390] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:54:54.538428] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.538470] [D] [thread 235001] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[09:54:54.538521] [I] [thread 235001] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.538530] [D] [thread 235001] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[09:54:54.538532] [I] [thread 235001] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:54:54.538537] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[09:54:54.538543] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:54:54.538567] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:54:54.538588] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:54:54.538624] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.538664] [D] [thread 235001] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[09:54:54.538709] [I] [thread 235001] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[09:54:54.538754] [I] [thread 235001] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.538799] [D] [thread 235001] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[09:54:54.538846] [D] [thread 235001] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.538889] [D] [thread 235001] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.538906] [D] [thread 235001] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[09:54:54.538950] [D] [thread 235001] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.538993] [D] [thread 235001] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.539005] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.539013] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.539016] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.539023] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.539027] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.539231] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.539317] [D] [thread 235001] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.539393] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[09:54:54.539414] [I] [thread 235001] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[09:54:54.539471] [I] [thread 235001] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:54:54.539479] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.539486] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.539490] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[09:54:54.539600] [I] [thread 235001] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:54:54.539618] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.539627] [D] [thread 235001] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:54:54.539631] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.539636] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:54:54.539641] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.539644] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:54:54.539719] [D] [thread 235001] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:54:54.539792] [I] [thread 235001] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:54:54.539797] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.539803] [D] [thread 235001] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:54:54.539805] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.539808] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:54:54.539812] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.539814] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:54:54.539882] [D] [thread 235001] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:54:54.539920] [I] [thread 235001] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:54:54.539924] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.539929] [D] [thread 235001] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:54:54.539931] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.539934] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:54:54.539938] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.539941] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:54:54.540006] [D] [thread 235001] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:54:54.540071] [I] [thread 235001] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:54:54.540075] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.540080] [D] [thread 235001] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:54:54.540082] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.540085] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:54:54.540089] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.540091] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:54:54.540159] [D] [thread 235001] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:54:54.540201] [I] [thread 235001] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:54:54.540205] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.540209] [D] [thread 235001] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:54:54.540211] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.540214] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:54:54.540217] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.540220] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:54:54.540301] [D] [thread 235001] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:54:54.540387] [I] [thread 235001] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:54:54.540394] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:54:54.540400] [D] [thread 235001] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:54:54.540402] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.540406] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:54:54.540410] [D] [thread 235001] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:54:54.540412] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:54:54.540481] [D] [thread 235001] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[09:54:54.540733] [D] [thread 235001] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[09:54:54.540751] [I] [thread 235001] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[09:54:54.540930] [D] [thread 235001] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:54:54.540995] [D] [thread 235001] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[09:54:54.541180] [D] [thread 235001] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:54:54.541190] [D] [thread 235001] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[09:54:54.541366] [D] [thread 235001] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:54:54.541445] [D] [thread 235001] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[09:54:54.541467] [D] [thread 235001] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-4, Min;)[m
[36m[09:54:54.541481] [D] [thread 235001] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-4, Min;)[m
[32m[09:54:54.541505] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:54:54.541508] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[09:54:54.541536] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:54:54.541538] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[09:54:54.541550] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:54:54.541553] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[09:54:54.541565] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:54:54.541566] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[09:54:54.541577] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:54:54.541579] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[09:54:54.541590] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:54:54.541592] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[09:54:54.541625] [I] [thread 235001] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:54:54.541629] [I] [thread 235001] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:54.541630] [I] [thread 235001] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:54.541631] [I] [thread 235001] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:54.541632] [I] [thread 235001] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:54.541633] [I] [thread 235001] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:54.541635] [I] [thread 235001] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:54.541638] [I] [thread 235001] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:54.541641] [I] [thread 235001] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:54:54.541642] [I] [thread 235001] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:54:54.541651] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[09:54:54.541680] [D] [thread 235001] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[09:54:54.541715] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[09:54:54.541729] [D] [thread 235001] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[09:54:54.541760] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[09:54:54.541774] [D] [thread 235001] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[09:54:54.541807] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[09:54:54.541820] [D] [thread 235001] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(27) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[09:54:54.541856] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[09:54:54.541869] [D] [thread 235001] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(28) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[09:54:54.541907] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[09:54:54.541921] [D] [thread 235001] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(29) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[36m[09:54:54.542181] [D] [thread 235001] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:54:54.542382] [D] [thread 235001] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:54:54.542436] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.542461] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.542468] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[09:54:54.542478] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.542482] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.542679] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.542761] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.542802] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.542830] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.543024] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.543087] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.543112] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.543137] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.543329] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.543390] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.543413] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.543437] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.543616] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.543690] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.543708] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.543733] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.543912] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.543983] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.544000] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.544024] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.544201] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.544259] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.544275] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.544298] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.544355] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.544513] [D] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[09:54:54.544529] [D] [thread 235001] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[09:54:54.544620] [D] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[09:54:54.544637] [D] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[09:54:54.544642] [D] [thread 235001] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[09:54:54.544649] [I] [thread 235001] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[09:54:54.544658] [I] [thread 235001] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:54:54.544670] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[09:54:54.544717] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[09:54:54.544771] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[09:54:54.544813] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[09:54:54.544841] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[32m[09:54:54.544870] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[32m[09:54:54.544900] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[32m[09:54:54.544943] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[09:54:54.544969] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[09:54:54.544989] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[09:54:54.545008] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[09:54:54.545027] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[09:54:54.545046] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[09:54:54.545069] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[09:54:54.545122] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[09:54:54.545161] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[09:54:54.545222] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[09:54:54.545259] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[09:54:54.545295] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[09:54:54.545334] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[09:54:54.545397] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[09:54:54.545444] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[09:54:54.545487] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[09:54:54.545529] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[09:54:54.545592] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[09:54:54.545696] [D] [thread 235001] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[09:54:54.545710] [D] [thread 235001] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[09:54:54.545716] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545721] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545724] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545727] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545729] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545733] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545736] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545740] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545743] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545746] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545749] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545752] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545755] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545758] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545761] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545765] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545768] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545771] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545773] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545776] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545778] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.545782] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545783] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.545786] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545788] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.545791] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545793] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.545795] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545796] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.545812] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.545814] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.545990] [D] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[09:54:54.545995] [D] [thread 235001] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[09:54:54.546004] [D] [thread 235001] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[09:54:54.546007] [D] [thread 235001] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[09:54:54.546009] [D] [thread 235001] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[09:54:54.546011] [D] [thread 235001] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[09:54:54.546017] [I] [thread 235001] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[09:54:54.546309] [D] [thread 235001] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:54:54.546314] [D] [thread 235001] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[09:54:54.546316] [D] [thread 235001] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[09:54:54.546321] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546324] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546327] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546330] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546333] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546336] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546339] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546342] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546345] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546348] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546351] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546354] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546356] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546360] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546363] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546366] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546369] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546372] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546375] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546378] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546380] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.546383] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546385] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.546388] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546390] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.546392] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546394] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.546396] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546398] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.546401] [D] [thread 235001] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:54:54.546402] [D] [thread 235001] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:54:54.546439] [D] [thread 235001] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[09:54:54.546446] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:54:54.546448] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[09:54:54.546454] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:54:54.546456] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[09:54:54.546458] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:54:54.546460] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[09:54:54.546462] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:54:54.546464] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[09:54:54.546466] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:54:54.546467] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[09:54:54.546469] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:54:54.546470] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[09:54:54.546473] [I] [thread 235001] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:54:54.546475] [D] [thread 235001] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[09:54:54.546482] [I] [thread 235001] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[09:54:54.546513] [D] [thread 235001] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:54:54.546537] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546550] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546574] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546598] [D] [thread 235001] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:54:54.546605] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546612] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546634] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546654] [D] [thread 235001] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:54:54.546660] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546667] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546674] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546690] [D] [thread 235001] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:54:54.546695] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546708] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546714] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546727] [D] [thread 235001] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:54:54.546731] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546736] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546742] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546755] [D] [thread 235001] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:54:54.546767] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546772] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546778] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[09:54:54.546785] [I] [thread 235001] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[09:54:54.546787] [D] [thread 235001] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[09:54:54.546814] [D] [thread 235001] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[09:54:54.546816] [D] [thread 235001] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:54:54.546821] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546822] [D] [thread 235001] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:54:54.546825] [D] [thread 235001] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[09:54:54.546832] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546842] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546845] [D] [thread 235001] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:54:54.546849] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546851] [D] [thread 235001] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:54:54.546852] [D] [thread 235001] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[09:54:54.546865] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546872] [D] [thread 235001] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:54:54.546876] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546877] [D] [thread 235001] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:54:54.546879] [D] [thread 235001] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[09:54:54.546883] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546888] [D] [thread 235001] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:54:54.546892] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546894] [D] [thread 235001] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:54:54.546895] [D] [thread 235001] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:54:54.546900] [W] [thread 235001] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:54:54.546901] [D] [thread 235001] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:54:54.546905] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546906] [D] [thread 235001] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:54:54.546908] [D] [thread 235001] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:54:54.546919] [W] [thread 235001] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:54:54.546921] [D] [thread 235001] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:54:54.546933] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:54:54.546934] [D] [thread 235001] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:54:54.546936] [D] [thread 235001] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:54:54.546941] [W] [thread 235001] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:54:54.546949] [D] [thread 235001] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[09:54:54.546951] [D] [thread 235001] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[09:54:54.546952] [D] [thread 235001] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[09:54:54.546953] [D] [thread 235001] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[09:54:54.546955] [D] [thread 235001] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[09:54:54.546956] [D] [thread 235001] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[09:54:54.546958] [D] [thread 235001] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[09:54:54.546982] [D] [thread 235001] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[09:54:54.546997] [D] [thread 235001] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[09:54:54.547014] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[09:54:54.547021] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547052] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[09:54:54.547054] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547068] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(11)[m
[36m[09:54:54.547070] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547080] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[09:54:54.547082] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547091] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[09:54:54.547093] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:54:54.547099] [D] [thread 235001] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:54:54.547114] [D] [thread 235001] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:54:54.547119] [D] [thread 235001] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:54:54.547121] [D] [thread 235001] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:54:54.547150] [D] [thread 235001] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:54:54.547159] [D] [thread 235001] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[09:54:54.547165] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[09:54:54.547167] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547188] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[09:54:54.547190] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547200] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[09:54:54.547202] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547212] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[09:54:54.547214] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547221] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[09:54:54.547223] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:54:54.547225] [D] [thread 235001] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:54:54.547237] [D] [thread 235001] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:54:54.547239] [D] [thread 235001] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:54:54.547240] [D] [thread 235001] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:54:54.547258] [D] [thread 235001] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:54:54.547266] [D] [thread 235001] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[09:54:54.547273] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[09:54:54.547275] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547295] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[09:54:54.547297] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547307] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(17)[m
[36m[09:54:54.547308] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547317] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[09:54:54.547319] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547327] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[09:54:54.547328] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:54:54.547330] [D] [thread 235001] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:54:54.547342] [D] [thread 235001] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:54:54.547344] [D] [thread 235001] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:54:54.547345] [D] [thread 235001] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:54:54.547363] [D] [thread 235001] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:54:54.547370] [D] [thread 235001] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[09:54:54.547376] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[09:54:54.547378] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547398] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[09:54:54.547400] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547409] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[09:54:54.547420] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547432] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(27)[m
[36m[09:54:54.547438] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547447] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[09:54:54.547449] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:54:54.547451] [D] [thread 235001] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:54:54.547462] [D] [thread 235001] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:54:54.547464] [D] [thread 235001] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:54:54.547465] [D] [thread 235001] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:54:54.547483] [D] [thread 235001] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:54:54.547491] [D] [thread 235001] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[09:54:54.547497] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[09:54:54.547499] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547520] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[09:54:54.547522] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547532] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(23)[m
[36m[09:54:54.547534] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547543] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(28)[m
[36m[09:54:54.547549] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547557] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[09:54:54.547559] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:54:54.547561] [D] [thread 235001] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:54:54.547572] [D] [thread 235001] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:54:54.547574] [D] [thread 235001] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:54:54.547575] [D] [thread 235001] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:54:54.547592] [D] [thread 235001] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:54:54.547600] [D] [thread 235001] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[09:54:54.547607] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[09:54:54.547608] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547628] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[09:54:54.547630] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547640] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[09:54:54.547642] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547651] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(29)[m
[36m[09:54:54.547653] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547660] [D] [thread 235001] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[09:54:54.547662] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:54:54.547664] [D] [thread 235001] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:54:54.547675] [D] [thread 235001] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:54:54.547677] [D] [thread 235001] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:54:54.547678] [D] [thread 235001] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:54:54.547695] [D] [thread 235001] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:54:54.547697] [D] [thread 235001] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.547701] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.547712] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547719] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.547746] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[09:54:54.547752] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:54:54.547754] [W] [thread 235001] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:54:54.547774] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[09:54:54.547793] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[09:54:54.547795] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.547797] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.547801] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.547802] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.547815] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:54:54.547823] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.547825] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:54:54.547828] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:54:54.547838] [D] [thread 235001] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 6[m
[36m[09:54:54.547866] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.547869] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.547874] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:54:54.547877] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.547884] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.547911] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.547914] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.547926] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.547928] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:54:54.547946] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 6[m
[36m[09:54:54.547948] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.547949] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.547952] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.547954] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.547958] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.547959] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.547973] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.547974] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.547976] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.547983] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[09:54:54.547994] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.547996] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548000] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[09:54:54.548001] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[09:54:54.548044] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[09:54:54.548057] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548059] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.548062] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:54:54.548063] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.548064] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:54:54.548065] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:54:54.548071] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[09:54:54.548074] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.548076] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.548078] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:54:54.548079] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.548084] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.548091] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.548094] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.548101] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.548102] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:54:54.548107] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(11) on execution node with id 6[m
[36m[09:54:54.548109] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548110] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.548111] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548116] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.548118] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548119] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548139] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.548140] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548141] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.548145] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[09:54:54.548155] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548156] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548158] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[09:54:54.548159] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[09:54:54.548201] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[09:54:54.548218] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548220] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.548222] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:54:54.548223] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.548224] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:54:54.548225] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:54:54.548228] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[09:54:54.548230] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.548232] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.548233] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:54:54.548234] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.548240] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.548247] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.548249] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.548263] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.548264] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:54:54.548269] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 6[m
[36m[09:54:54.548271] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548272] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.548273] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548276] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.548281] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548283] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548288] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.548289] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548291] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.548295] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[09:54:54.548309] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548311] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548313] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[09:54:54.548314] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[09:54:54.548368] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(11) as root operator.[m
[36m[09:54:54.548376] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548377] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.548380] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:54:54.548382] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.548383] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:54:54.548384] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:54:54.548388] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[09:54:54.548391] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.548392] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.548394] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:54:54.548396] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.548401] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.548410] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:54:54.548415] [W] [thread 235001] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:54:54.548416] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.548418] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.548419] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.548421] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.548431] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.548433] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.548445] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[09:54:54.548447] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:54:54.548449] [W] [thread 235001] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:54:54.548454] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[09:54:54.548469] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[09:54:54.548471] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.548472] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.548475] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548476] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.548480] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:54:54.548482] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.548483] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:54:54.548484] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:54:54.548487] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[09:54:54.548496] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.548498] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.548499] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:54:54.548500] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.548505] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.548529] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.548532] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.548540] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.548542] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:54:54.548559] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 5[m
[36m[09:54:54.548561] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548562] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.548563] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548565] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.548568] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548569] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548576] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.548577] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548579] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.548584] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[09:54:54.548593] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548594] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548597] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[09:54:54.548598] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[09:54:54.548632] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[09:54:54.548639] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548641] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.548643] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:54:54.548644] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.548645] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:54:54.548647] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:54:54.548649] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[09:54:54.548653] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.548654] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.548656] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:54:54.548657] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.548661] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.548668] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.548670] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.548678] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.548679] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:54:54.548684] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 5[m
[36m[09:54:54.548686] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548687] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.548688] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548690] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.548693] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548694] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548712] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.548714] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548715] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.548737] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[09:54:54.548748] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548750] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548752] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[09:54:54.548753] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[09:54:54.548796] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[09:54:54.548813] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548815] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.548817] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:54:54.548818] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.548819] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:54:54.548820] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:54:54.548822] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[09:54:54.548825] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.548827] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.548829] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:54:54.548830] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.548835] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.548842] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.548845] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.548852] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.548853] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:54:54.548858] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 5[m
[36m[09:54:54.548859] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548860] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.548862] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548864] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.548867] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548868] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548874] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.548875] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548876] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.548880] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[09:54:54.548892] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.548893] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.548895] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[09:54:54.548897] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[09:54:54.548913] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[09:54:54.548919] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.548920] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.548922] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:54:54.548923] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.548924] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:54:54.548925] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:54:54.548928] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[09:54:54.548930] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.548932] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.548933] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:54:54.548934] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.548938] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.548945] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:54:54.548950] [W] [thread 235001] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:54:54.548951] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.548952] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.548953] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.548954] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.548963] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.548966] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.548976] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[09:54:54.548978] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:54:54.548979] [W] [thread 235001] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:54:54.548983] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[09:54:54.548996] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[09:54:54.548997] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.548999] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.549001] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549005] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.549008] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:54:54.549010] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.549011] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:54:54.549012] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:54:54.549015] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[09:54:54.549019] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.549020] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.549029] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:54:54.549031] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.549036] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.549060] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.549062] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.549070] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.549071] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:54:54.549088] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 8[m
[36m[09:54:54.549090] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549091] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.549092] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549093] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.549096] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549097] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549104] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.549106] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549107] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.549111] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[09:54:54.549120] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549128] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549131] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[09:54:54.549132] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[09:54:54.549168] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[09:54:54.549175] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549177] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.549179] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:54:54.549180] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.549181] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:54:54.549188] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:54:54.549191] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[09:54:54.549194] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.549196] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.549197] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:54:54.549199] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.549203] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.549212] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.549214] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.549222] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.549228] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:54:54.549233] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(17) on execution node with id 8[m
[36m[09:54:54.549235] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549236] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.549237] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549239] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.549242] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549243] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549260] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.549262] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549263] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.549266] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[09:54:54.549288] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549290] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549292] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[09:54:54.549293] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[09:54:54.549336] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[09:54:54.549353] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549354] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.549356] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:54:54.549357] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.549358] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:54:54.549359] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:54:54.549361] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[09:54:54.549364] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.549365] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.549367] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:54:54.549368] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.549373] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.549381] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.549383] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.549391] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.549392] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:54:54.549397] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 8[m
[36m[09:54:54.549398] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549399] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.549401] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549404] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.549406] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549407] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549413] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.549414] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549415] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.549418] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[09:54:54.549428] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549429] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549431] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[09:54:54.549432] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[09:54:54.549449] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(17) as root operator.[m
[36m[09:54:54.549454] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549456] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.549457] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:54:54.549459] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.549460] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:54:54.549461] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:54:54.549464] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[09:54:54.549466] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.549468] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.549469] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:54:54.549470] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.549474] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.549482] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:54:54.549487] [W] [thread 235001] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:54:54.549488] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.549489] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.549490] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.549491] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.549500] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.549503] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.549513] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[09:54:54.549522] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:54:54.549523] [W] [thread 235001] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:54:54.549528] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[09:54:54.549542] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[09:54:54.549544] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.549545] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.549547] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549549] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.549551] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:54:54.549553] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.549554] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:54:54.549555] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:54:54.549561] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[09:54:54.549566] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.549568] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.549569] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:54:54.549570] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.549575] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.549598] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.549601] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.549615] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.549616] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:54:54.549633] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 7[m
[36m[09:54:54.549635] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549636] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.549637] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549638] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.549641] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549642] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549656] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.549657] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549658] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.549666] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[09:54:54.549673] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549675] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549677] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[09:54:54.549679] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[09:54:54.549711] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[09:54:54.549718] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549719] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.549721] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:54:54.549722] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.549724] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:54:54.549728] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:54:54.549730] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[09:54:54.549733] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.549734] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.549736] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:54:54.549737] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.549742] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.549749] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.549751] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.549759] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.549760] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:54:54.549765] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[09:54:54.549766] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549767] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.549769] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549771] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.549773] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549775] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549793] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.549795] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549796] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.549812] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[09:54:54.549823] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549825] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549827] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[09:54:54.549828] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[09:54:54.549870] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[09:54:54.549887] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549888] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.549890] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:54:54.549892] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.549893] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:54:54.549894] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:54:54.549897] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[09:54:54.549899] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.549901] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.549906] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:54:54.549907] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.549912] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.549919] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.549922] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.549929] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.549930] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:54:54.549935] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(27) on execution node with id 7[m
[36m[09:54:54.549937] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549937] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.549939] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549941] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.549944] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549945] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549950] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.549951] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549952] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.549955] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[09:54:54.549965] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.549967] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.549969] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[09:54:54.549970] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[09:54:54.549987] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[09:54:54.549993] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.549994] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.549997] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:54:54.549998] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.549999] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:54:54.550000] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:54:54.550002] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[09:54:54.550005] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.550013] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.550014] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:54:54.550015] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.550019] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.550027] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:54:54.550033] [W] [thread 235001] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:54:54.550034] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.550035] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.550036] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.550038] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.550046] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.550048] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.550057] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[09:54:54.550059] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:54:54.550060] [W] [thread 235001] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:54:54.550064] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[09:54:54.550078] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[09:54:54.550080] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.550081] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.550083] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550084] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.550087] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:54:54.550088] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.550089] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:54:54.550090] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:54:54.550097] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[09:54:54.550101] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.550102] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.550104] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:54:54.550105] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.550110] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.550131] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.550134] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.550142] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.550143] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:54:54.550160] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 10[m
[36m[09:54:54.550162] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550163] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.550164] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550166] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.550169] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550170] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550177] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.550178] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550179] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.550184] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[09:54:54.550191] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550193] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550195] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[09:54:54.550200] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[09:54:54.550233] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[09:54:54.550240] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550241] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.550244] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:54:54.550245] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.550246] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:54:54.550247] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:54:54.550250] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[09:54:54.550253] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.550254] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.550255] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:54:54.550261] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.550265] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.550272] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.550275] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.550283] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.550284] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:54:54.550289] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(23) on execution node with id 10[m
[36m[09:54:54.550291] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550292] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.550293] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550296] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.550298] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550300] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550318] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.550319] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550320] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.550324] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[09:54:54.550333] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550334] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550336] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:54:54.550337] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[09:54:54.550378] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[09:54:54.550395] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550397] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.550399] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:54:54.550400] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.550404] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:54:54.550405] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:54:54.550407] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[09:54:54.550410] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.550412] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.550413] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:54:54.550415] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.550419] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.550429] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.550432] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.550439] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.550440] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:54:54.550445] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(28) on execution node with id 10[m
[36m[09:54:54.550447] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550448] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.550449] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550452] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.550479] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550481] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550487] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.550488] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550490] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.550493] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[09:54:54.550504] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550506] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550508] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[09:54:54.550509] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[09:54:54.550526] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(23) as root operator.[m
[36m[09:54:54.550532] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550533] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.550535] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:54:54.550536] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.550538] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:54:54.550539] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:54:54.550541] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[09:54:54.550544] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.550546] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.550547] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:54:54.550548] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.550552] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.550560] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:54:54.550566] [W] [thread 235001] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:54:54.550567] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.550568] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.550569] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.550570] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.550579] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.550582] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.550591] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[09:54:54.550593] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:54:54.550594] [W] [thread 235001] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:54:54.550598] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[09:54:54.550610] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[09:54:54.550612] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.550613] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.550615] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550616] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.550618] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:54:54.550621] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.550622] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:54:54.550622] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:54:54.550625] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[09:54:54.550629] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.550630] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.550631] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:54:54.550633] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.550637] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.550659] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.550662] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.550669] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.550671] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:54:54.550687] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 9[m
[36m[09:54:54.550689] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550690] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.550692] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550693] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.550696] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550697] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550704] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.550709] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550710] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.550715] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[09:54:54.550723] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550724] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550727] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[09:54:54.550728] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[09:54:54.550761] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[09:54:54.550767] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550768] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.550771] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:54:54.550772] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.550773] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:54:54.550774] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:54:54.550777] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[09:54:54.550779] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.550781] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.550782] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:54:54.550783] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.550787] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.550794] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.550797] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.550804] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.550805] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:54:54.550811] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 9[m
[36m[09:54:54.550812] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550813] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.550815] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550817] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.550819] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550820] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550838] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.550840] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550841] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.550844] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[09:54:54.550852] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550854] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550855] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[09:54:54.550857] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[09:54:54.550911] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[09:54:54.550929] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550930] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.550932] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:54:54.550933] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.550934] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:54:54.550935] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:54:54.550938] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[09:54:54.550941] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.550942] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.550944] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:54:54.550945] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.550954] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.550962] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:54:54.550964] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.550972] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.550973] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:54:54.550978] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(29) on execution node with id 9[m
[36m[09:54:54.550980] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550981] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.550982] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550985] [D] [thread 235001] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:54:54.550987] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.550989] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.550994] [D] [thread 235001] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:54:54.550995] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.550997] [D] [thread 235001] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:54:54.551000] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[09:54:54.551010] [D] [thread 235001] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:54:54.551015] [D] [thread 235001] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:54:54.551017] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[09:54:54.551018] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[09:54:54.551036] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[09:54:54.551041] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551042] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.551044] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:54:54.551046] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.551047] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:54:54.551048] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:54:54.551050] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[09:54:54.551053] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.551055] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.551056] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:54:54.551057] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.551061] [D] [thread 235001] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:54:54.551068] [D] [thread 235001] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:54:54.551074] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.551083] [D] [thread 235001] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(5: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[09:54:54.551085] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:54:54.551085] [W] [thread 235001] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:54:54.551090] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[09:54:54.551103] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[09:54:54.551105] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.551106] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.551108] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551109] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.551112] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:54:54.551114] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.551115] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[09:54:54.551116] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[09:54:54.551118] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[09:54:54.551122] [D] [thread 235001] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:54:54.551124] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:54:54.551126] [I] [thread 235001] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[09:54:54.551128] [D] [thread 235001] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:54:54.551129] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.551131] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.551132] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.551133] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.551134] [D] [thread 235001] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:54:54.551144] [D] [thread 235001] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[09:54:54.551151] [I] [thread 235001] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[09:54:54.551159] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551169] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[09:54:54.551183] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551186] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[09:54:54.551189] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551193] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[09:54:54.551194] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[09:54:54.551196] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551221] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.551224] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.551225] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[09:54:54.551232] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551243] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.551245] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551248] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.551250] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551251] [D] [thread 235001] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:54:54.551261] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.551290] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.551292] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:54:54.551294] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551295] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.551296] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[09:54:54.551297] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[09:54:54.551316] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[09:54:54.551352] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[09:54:54.551360] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[09:54:54.551420] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[09:54:54.551439] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:36617 1::30::0::0}) as new root of the plan.[m
[36m[09:54:54.551441] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.551442] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:54.551449] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[09:54:54.551460] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:46353)}) as new root of the plan.[m
[36m[09:54:54.551481] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.551483] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.551485] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551491] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.551495] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:54:54.551497] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.551499] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[09:54:54.551500] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[09:54:54.551505] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[09:54:54.551513] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:54:54.551514] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:54:54.551515] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[09:54:54.551517] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.551521] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:54:54.551523] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.551533] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.551535] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:54:54.551536] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551537] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:54:54.551543] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[09:54:54.551546] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[09:54:54.551547] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[09:54:54.551569] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:54:54.551570] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:54:54.551571] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[09:54:54.551573] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.551575] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:54:54.551580] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551585] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[09:54:54.551592] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551594] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[09:54:54.551598] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551601] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[09:54:54.551602] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[09:54:54.551604] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551621] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.551626] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.551629] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.551632] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551639] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.551641] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551643] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.551645] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551646] [D] [thread 235001] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:54:54.551651] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.551661] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.551663] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:54:54.551664] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551665] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.551675] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[09:54:54.551676] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[09:54:54.551680] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[09:54:54.551706] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[09:54:54.551741] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:54:54.551752] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:54:54.551753] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[09:54:54.551759] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[09:54:54.551771] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:40499 1::36::0::0}) as new root of the plan.[m
[36m[09:54:54.551773] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.551774] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:54.551779] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[09:54:54.551791] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:46353)}) as new root of the plan.[m
[36m[09:54:54.551811] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.551812] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.551814] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551816] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.551819] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:54:54.551820] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.551822] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[09:54:54.551823] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[09:54:54.551827] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[09:54:54.551830] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:54:54.551831] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:54:54.551832] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[09:54:54.551833] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.551840] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:54:54.551841] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.551850] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.551851] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:54:54.551852] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551853] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:54:54.551858] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[09:54:54.551861] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[09:54:54.551862] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[09:54:54.551884] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:54:54.551885] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:54:54.551887] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[09:54:54.551888] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.551890] [D] [thread 235001] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[09:54:54.551894] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551900] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[09:54:54.551906] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551909] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[09:54:54.551912] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551916] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[09:54:54.551917] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[09:54:54.551918] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.551933] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.551938] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.551940] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[09:54:54.551943] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551949] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.551950] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551953] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.551955] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.551956] [D] [thread 235001] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:54:54.551960] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.551970] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.551971] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:54:54.551973] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.551974] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.551975] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[09:54:54.551976] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[09:54:54.551988] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[09:54:54.552023] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[09:54:54.552030] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[09:54:54.552038] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[09:54:54.552051] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:39633 1::42::0::0}) as new root of the plan.[m
[36m[09:54:54.552053] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.552054] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:54.552058] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[09:54:54.552068] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:46353)}) as new root of the plan.[m
[36m[09:54:54.552088] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.552089] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.552091] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552092] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.552096] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:54:54.552097] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.552099] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[09:54:54.552100] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[09:54:54.552103] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[09:54:54.552109] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:54:54.552110] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:54:54.552111] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[09:54:54.552112] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.552115] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:54:54.552116] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.552125] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.552126] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:54:54.552128] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552129] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:54:54.552134] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[09:54:54.552136] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[09:54:54.552137] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[09:54:54.552161] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:54:54.552164] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:54:54.552165] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[09:54:54.552166] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.552168] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:54:54.552171] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552177] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[09:54:54.552183] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552186] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[09:54:54.552189] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552192] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[09:54:54.552193] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[36m[09:54:54.552195] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552214] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.552219] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.552222] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[09:54:54.552242] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552248] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.552250] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552252] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.552254] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552255] [D] [thread 235001] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:54:54.552260] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.552272] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.552273] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:54:54.552274] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552276] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.552277] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[09:54:54.552283] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[32m[09:54:54.552288] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[09:54:54.552311] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(27) as root operator.[m
[36m[09:54:54.552349] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:54:54.552360] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:54:54.552362] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[09:54:54.552370] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[09:54:54.552382] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:42123 1::48::0::0}) as new root of the plan.[m
[36m[09:54:54.552384] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.552385] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:54.552391] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[09:54:54.552402] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:46353)}) as new root of the plan.[m
[36m[09:54:54.552422] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.552424] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.552426] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552428] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.552431] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:54:54.552433] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.552434] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[09:54:54.552435] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[09:54:54.552440] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[09:54:54.552443] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:54:54.552444] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:54:54.552445] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[09:54:54.552446] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.552450] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:54:54.552452] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.552460] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.552461] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:54:54.552463] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552464] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:54:54.552469] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[09:54:54.552472] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[09:54:54.552473] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[09:54:54.552500] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:54:54.552501] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:54:54.552503] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[09:54:54.552504] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.552505] [D] [thread 235001] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[09:54:54.552510] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552515] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:54:54.552521] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552523] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[09:54:54.552527] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552531] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[09:54:54.552532] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[36m[09:54:54.552533] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552548] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.552554] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.552582] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[09:54:54.552586] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552594] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.552595] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552598] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.552600] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552601] [D] [thread 235001] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:54:54.552606] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.552618] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.552620] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:54:54.552621] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552622] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.552624] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[09:54:54.552625] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[32m[09:54:54.552630] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[09:54:54.552654] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(28) as root operator.[m
[36m[09:54:54.552660] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[09:54:54.552670] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[09:54:54.552681] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:42483 1::54::0::0}) as new root of the plan.[m
[36m[09:54:54.552683] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.552684] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:54.552689] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[09:54:54.552699] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:46353)}) as new root of the plan.[m
[36m[09:54:54.552719] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.552721] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.552723] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552724] [D] [thread 235001] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:54:54.552727] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:54:54.552734] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.552735] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[09:54:54.552737] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[09:54:54.552741] [D] [thread 235001] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[09:54:54.552746] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:54:54.552747] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:54:54.552748] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[09:54:54.552749] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.552751] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:54:54.552753] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.552762] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.552763] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:54:54.552764] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552765] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:54:54.552784] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[09:54:54.552787] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[09:54:54.552789] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[09:54:54.552818] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:54:54.552820] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[09:54:54.552821] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[09:54:54.552822] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.552825] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:54:54.552829] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552834] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[09:54:54.552840] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552843] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[09:54:54.552846] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552849] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[09:54:54.552851] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[36m[09:54:54.552852] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.552866] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.552872] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.552875] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[09:54:54.552878] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552885] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.552887] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552889] [D] [thread 235001] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:54:54.552891] [D] [thread 235001] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:54:54.552892] [D] [thread 235001] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:54:54.552895] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.552906] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.552907] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:54:54.552909] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.552910] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.552912] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[09:54:54.552913] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[32m[09:54:54.552917] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[09:54:54.552938] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(29) as root operator.[m
[36m[09:54:54.552944] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:54:54.552951] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:54:54.552952] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[09:54:54.552958] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[09:54:54.552969] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38951 1::60::0::0}) as new root of the plan.[m
[36m[09:54:54.552971] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.552972] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:54.552976] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[09:54:54.552987] [D] [thread 235001] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:46353)}) as new root of the plan.[m
[36m[09:54:54.553007] [D] [thread 235001] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:54.553009] [D] [thread 235001] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:54.553010] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.553011] [D] [thread 235001] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:54:54.553015] [D] [thread 235001] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:54:54.553016] [D] [thread 235001] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:54:54.553017] [W] [thread 235001] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[09:54:54.553018] [D] [thread 235001] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[09:54:54.553022] [D] [thread 235001] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[09:54:54.553025] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:54:54.553026] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:54:54.553027] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[09:54:54.553028] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.553030] [D] [thread 235001] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:54:54.553032] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.553040] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.553041] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:54:54.553042] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.553043] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:54:54.553064] [I] [thread 235001] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[36m[09:54:54.553067] [D] [thread 235001] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[09:54:54.553069] [D] [thread 235001] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[09:54:54.553099] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:54:54.553101] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[09:54:54.553102] [D] [thread 235001] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[09:54:54.553103] [D] [thread 235001] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:54:54.553105] [D] [thread 235001] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[09:54:54.553108] [D] [thread 235001] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:54:54.553115] [D] [thread 235001] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[09:54:54.553116] [D] [thread 235001] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:54:54.553117] [D] [thread 235001] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:54:54.553121] [D] [thread 235001] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[09:54:54.553123] [D] [thread 235001] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:54:54.553137] [D] [thread 235001] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[09:54:54.553141] [D] [thread 235001] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:54:54.553144] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.553145] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.553179] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.553184] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.553186] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.553191] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.553195] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.553391] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.553446] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.553475] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.553497] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.553506] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.553511] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.553513] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.553531] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.553536] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.553538] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.553542] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.553544] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.553711] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.553752] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.553767] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.553786] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.553794] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.553798] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.553799] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.553817] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.553821] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.553823] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.553826] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.553829] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.553998] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.554039] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.554054] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.554074] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.554083] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.554086] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.554087] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.554103] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.554108] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.554109] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.554112] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.554115] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.554277] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.554314] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.554328] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.554348] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.554356] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.554359] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.554360] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.554376] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.554380] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.554382] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.554385] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.554387] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.554551] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.554614] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.554628] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.554648] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.554657] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.554660] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.554662] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.554678] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.554688] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.554690] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.554693] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.554695] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.554856] [D] [thread 235001] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[09:54:54.554896] [D] [thread 235001] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:54.554911] [I] [thread 235001] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:54:54.554930] [I] [thread 235001] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.554938] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.554941] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.554942] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.554961] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.554967] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.554970] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[09:54:54.554975] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.554978] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.555004] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.555007] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555008] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555016] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.555019] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.555020] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.555022] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.555024] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.555034] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.555042] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.555045] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.555047] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.555049] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.555051] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.555061] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.555063] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555064] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555071] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.555073] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.555075] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.555077] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.555079] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.555104] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.555112] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.555115] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.555117] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.555119] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.555121] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.555130] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.555132] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555133] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555140] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.555143] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.555144] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.555146] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.555151] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.555160] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.555167] [D] [thread 235001] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:54:54.555169] [D] [thread 235001] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:54:54.555171] [D] [thread 235001] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:54:54.555173] [D] [thread 235001] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:54:54.555175] [D] [thread 235001] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:54:54.555184] [D] [thread 235001] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:54:54.555191] [D] [thread 235001] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[09:54:54.555773] [D] [thread 235001] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(5: {FileSinkDescriptor()})
|    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::33::0::0})
|    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::39::0::0})
|    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::45::0::0})
|    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::51::0::0})
|    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::57::0::0})
|    SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::63::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:46353)})
|  |    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:36617 1::30::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:46353)})
|  |    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:40499 1::36::0::0})
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:44589)})
|  |  |    CENTRALWINDOW(24)
|  |  |      WATERMARKASSIGNER(11)
|  |  |        PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.12:44589)})
|  |  |    CENTRALWINDOW(25)
|  |  |      WATERMARKASSIGNER(8)
|  |  |        PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:46353)})
|  |    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:39633 1::42::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:46353)})
|  |    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:42123 1::48::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:34943)})
|  |  |    CENTRALWINDOW(26)
|  |  |      WATERMARKASSIGNER(17)
|  |  |        PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.30:34943)})
|  |  |    CENTRALWINDOW(27)
|  |  |      WATERMARKASSIGNER(14)
|  |  |        PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:46353)})
|  |    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:42483 1::54::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:46353)})
|  |    SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38951 1::60::0::0})
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:34213)})
|  |  |    CENTRALWINDOW(28)
|  |  |      WATERMARKASSIGNER(23)
|  |  |        PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:34213)})
|  |  |    CENTRALWINDOW(29)
|  |  |      WATERMARKASSIGNER(20)
|  |  |        PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:54:54.555794] [D] [thread 235001] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[09:54:54.555798] [D] [thread 235001] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:54:54.555835] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555836] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555851] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555853] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555855] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555856] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555859] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555860] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555862] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555863] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555866] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555867] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555872] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555873] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555875] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555876] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555881] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555882] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555886] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555895] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555912] [D] [thread 235001] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[09:54:54.555915] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[09:54:54.555916] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.555918] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.555967] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:40579[m
[36m[09:54:54.555975] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:40579 queryId=1 querySubPlanId = 1[m
[36m[09:54:54.556057] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:44589)})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[09:54:54.556062] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.556131] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.558905] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.559312] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.559410] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.559431] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.559592] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.560166] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.560226] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.560239] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.560243] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.560251] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.560403] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.560428] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.560459] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.560476] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.560570] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:54:54.560581] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.560626] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.560641] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.560663] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.560676] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.560740] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.560752] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.560756] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[09:54:54.560764] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.560767] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.560775] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.560833] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.560885] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.560925] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.560938] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.561015] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[09:54:54.561074] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.561123] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.561266] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.561317] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.561383] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.561434] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.567176] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[09:54:54.567186] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.567188] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.567206] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:35713[m
[36m[09:54:54.567211] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:35713 queryId=1 querySubPlanId = 2[m
[36m[09:54:54.567305] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.12:44589)})
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[09:54:54.567309] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.567340] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.567404] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.567435] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.567468] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.567485] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.567563] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.567584] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.567620] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.567630] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.567634] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.567642] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.567695] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.567710] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.567734] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.567751] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.567812] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:54:54.567820] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.567851] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.567866] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.567888] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.567901] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.567959] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.567970] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.567973] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[09:54:54.567980] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.567984] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.567992] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.568046] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.568097] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.568135] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.568149] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.568218] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[09:54:54.568270] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.568355] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.568482] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.568533] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.568603] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.568653] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.605843] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[09:54:54.605896] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.605899] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.605930] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:37923[m
[36m[09:54:54.605939] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:37923 queryId=1 querySubPlanId = 3[m
[36m[09:54:54.606103] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:34943)})
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[09:54:54.606111] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.606165] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.606322] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.606477] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.606677] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.606988] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.607294] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.607422] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.607497] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.607526] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.607535] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.607556] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.607687] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.607820] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.607999] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.608074] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.608563] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:54:54.608617] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.608768] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.608837] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.608922] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.609067] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.609400] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.609459] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.609545] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[09:54:54.609575] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.609584] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.609604] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.609769] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.610070] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.610204] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.610348] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.610702] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[09:54:54.610913] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.611097] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.611625] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.611780] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.612001] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.612389] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.619105] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[09:54:54.619237] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.619239] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.619257] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:41929[m
[36m[09:54:54.619262] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:41929 queryId=1 querySubPlanId = 4[m
[36m[09:54:54.619353] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.30:34943)})
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[09:54:54.619357] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.619387] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.619471] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.619604] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.619684] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.619714] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.619927] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.619994] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.620033] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.620057] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.620063] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.620073] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.620128] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.620156] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.620221] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.620284] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.620453] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:54:54.620500] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.620581] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.620620] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.620650] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.620683] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.620813] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.620840] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.620885] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[09:54:54.620897] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.620901] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.620909] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.621014] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.621153] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.621221] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.621288] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.621445] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[09:54:54.621537] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.621636] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.621840] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.621935] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.622027] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.622137] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.625601] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[09:54:54.625639] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.625641] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.625657] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:36447[m
[36m[09:54:54.625661] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:36447 queryId=1 querySubPlanId = 5[m
[36m[09:54:54.625868] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:34213)})
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:54:54.625885] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.625935] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.626114] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.626187] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.626273] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.626304] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.626467] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.626532] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.626606] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.626629] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.626635] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.626643] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.626742] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.626773] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.626838] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.626904] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.627042] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:54:54.627064] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.627140] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.627242] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.627323] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.627346] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.627545] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.627617] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.627633] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[09:54:54.627647] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.627651] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.627659] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.627767] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.627849] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.627936] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.628020] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.628186] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[09:54:54.628306] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.628406] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.628624] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.628718] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.628808] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.628924] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.632398] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[09:54:54.632537] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.632548] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.632568] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:43627[m
[36m[09:54:54.632573] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:43627 queryId=1 querySubPlanId = 6[m
[36m[09:54:54.632679] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:34213)})
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:54:54.632693] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.632775] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.632905] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.632948] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.633055] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.633086] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.633209] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.633243] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.633269] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.633278] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.633283] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.633291] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.633382] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.633401] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.633438] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.633504] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.633705] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:54:54.633730] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.633795] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.633826] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.633868] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.633893] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.634000] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:54:54.634034] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.634066] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[09:54:54.634079] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.634084] [D] [thread 235001] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:54:54.634092] [D] [thread 235001] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:54:54.634191] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.634314] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.634433] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.634485] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.634629] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[09:54:54.634724] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.634813] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.634993] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.635127] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.635209] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:54:54.635317] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.638796] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[09:54:54.638872] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.638874] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.638892] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:42913[m
[36m[09:54:54.638897] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:42913 queryId=1 querySubPlanId = 7[m
[36m[09:54:54.639117] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(5: {FileSinkDescriptor()})
  SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::33::0::0})
  SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::39::0::0})
  SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::45::0::0})
  SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::51::0::0})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::57::0::0})
  SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::63::0::0})
[m
[36m[09:54:54.639172] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.639202] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.639423] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.639498] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.639537] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.639581] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.639711] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::33::0::0}[m
[36m[09:54:54.639795] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.639866] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.639996] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.640055] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.640094] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.640197] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.640401] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::39::0::0}[m
[36m[09:54:54.640470] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.640503] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.640567] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.640597] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.640636] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.640693] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.640812] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::45::0::0}[m
[36m[09:54:54.640902] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.640968] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.641036] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.641107] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.641165] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.641202] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.641328] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::51::0::0}[m
[36m[09:54:54.641396] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.641457] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.641552] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.641614] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.641681] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.641734] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.641877] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::57::0::0}[m
[36m[09:54:54.641911] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.641966] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.642058] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.642101] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.642161] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.642196] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.642322] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::63::0::0}[m
[36m[09:54:54.642385] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.642416] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.642500] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.642543] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.642599] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.642662] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.646364] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[09:54:54.646395] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.646397] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.646416] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:35433[m
[36m[09:54:54.646421] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:35433 queryId=1 querySubPlanId = 8[m
[36m[09:54:54.646490] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:46353)})
  SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:36617 1::30::0::0})
[m
[36m[09:54:54.646494] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.646524] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.646599] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.646656] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.646715] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.646793] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.646948] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:36617 1::30::0::0}[m
[36m[09:54:54.646986] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.647103] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.647174] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.647203] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.647271] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.647311] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.649167] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:35433 queryId=1 querySubPlanId = 9[m
[36m[09:54:54.649407] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:46353)})
  SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:40499 1::36::0::0})
[m
[36m[09:54:54.649421] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.649452] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.649565] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.649609] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.649688] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.649729] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.649877] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:40499 1::36::0::0}[m
[36m[09:54:54.649945] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.650020] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.650098] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.650227] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.650309] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.650349] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.652050] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[09:54:54.652176] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.652192] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.652210] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:45679[m
[36m[09:54:54.652214] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:45679 queryId=1 querySubPlanId = 10[m
[36m[09:54:54.652286] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:46353)})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:39633 1::42::0::0})
[m
[36m[09:54:54.652302] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.652359] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.652480] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.652572] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.652650] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.652720] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.652945] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:39633 1::42::0::0}[m
[36m[09:54:54.653007] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.653040] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.653107] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.653136] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.653173] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.653231] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.655180] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:45679 queryId=1 querySubPlanId = 11[m
[36m[09:54:54.655434] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:46353)})
  SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:42123 1::48::0::0})
[m
[36m[09:54:54.655464] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.655503] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.655645] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.655728] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.655825] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.655870] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.656075] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:42123 1::48::0::0}[m
[36m[09:54:54.656187] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.656228] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.656313] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.656424] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.656461] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.656469] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:54.656478] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.658615] [D] [thread 235001] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[09:54:54.658660] [D] [thread 235001] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:54:54.658662] [D] [thread 235001] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:54:54.658685] [D] [thread 235001] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:35543[m
[36m[09:54:54.658690] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35543 queryId=1 querySubPlanId = 12[m
[36m[09:54:54.658762] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:46353)})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:42483 1::54::0::0})
[m
[36m[09:54:54.658767] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.658799] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.658897] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.658937] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.659075] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.659154] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.659398] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:42483 1::54::0::0}[m
[36m[09:54:54.659442] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.659468] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.659548] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.659571] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.659597] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.659618] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.661920] [D] [thread 235001] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35543 queryId=1 querySubPlanId = 13[m
[36m[09:54:54.662041] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:46353)})
  SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38951 1::60::0::0})
[m
[36m[09:54:54.662045] [D] [thread 235001] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:54:54.662080] [D] [thread 235001] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:54:54.662159] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.662228] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.662275] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.662315] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.662533] [D] [thread 235001] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:38951 1::60::0::0}[m
[36m[09:54:54.662577] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.662686] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.662764] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.662794] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.662866] [D] [thread 235001] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:54.662909] [D] [thread 235001] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:54:54.665209] [D] [thread 235001] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[09:54:54.944609] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:54.944797] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:55.208689] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:55.208911] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:55.677786] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:55.678004] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:56.055984] [D] [thread 235017] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:54:56.056207] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.056558] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:54:56.056629] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[09:54:56.056644] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.056876] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.056926] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.057261] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.058922] [D] [thread 235017] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:54:56.058957] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.059061] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:54:56.059089] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[09:54:56.059096] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.059192] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.059209] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.059301] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:54:56.059936] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[09:54:56.059957] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.060059] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.060075] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.060177] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.060907] [D] [thread 235017] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:54:56.060941] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.061043] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:54:56.061059] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[09:54:56.061064] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.061149] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.061167] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.061268] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.062073] [D] [thread 235017] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:54:56.062105] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.062204] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:54:56.062228] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[09:54:56.062233] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.062326] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.062341] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.062433] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.063227] [D] [thread 235017] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:54:56.063259] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.063367] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:54:56.063395] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[09:54:56.063401] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.063499] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.063516] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.063611] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.064537] [D] [thread 235017] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:54:56.064580] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.064693] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:54:56.064724] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[09:54:56.064732] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.064828] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.064848] [D] [thread 235017] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:54:56.064943] [D] [thread 235017] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:54:56.065592] [D] [thread 235017] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(68: {FileSinkDescriptor()})
  SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::33::0::0})
  SOURCE(67,,NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::39::0::0})
  SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::45::0::0})
  SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::51::0::0})
  SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::57::0::0})
  SOURCE(72,,NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::63::0::0})
[m
[32m[09:54:56.065616] [I] [thread 235017] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[32m[09:54:56.065639] [I] [thread 235017] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
Dumping queryPlan: [36m[09:54:56.065729] [D] [thread 235017] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 7[m
[36m[09:54:56.065747] [D] [thread 235017] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-17 09:54:56 - 1. LogicalQueryPlan[m
SINK(68: {FileSinkDescriptor()})
  SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::33::0::0})
  SOURCE(67,,NetworkSourceDescriptor{tcp://192.168.2.12:44589 1::39::0::0})
  SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::45::0::0})
  SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.30:34943 1::51::0::0})
  SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::57::0::0})
  SOURCE(72,,NetworkSourceDescriptor{tcp://192.168.2.31:34213 1::63::0::0})

[32m[09:54:56.065894] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[32m[09:54:56.065921] [I] [thread 235017] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[09:54:56.065924] [I] [thread 235017] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[09:54:56.065925] [I] [thread 235017] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:54:56.065928] [I] [thread 235017] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:56.065929] [I] [thread 235017] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
Dumping queryPlan: PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[32m[09:54:56.065930] [I] [thread 235017] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:56.065931] [I] [thread 235017] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:56.065932] [I] [thread 235017] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:56.065933] [I] [thread 235017] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:54:56.065952] [I] [thread 235017] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:54:56.066059] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[09:54:56.066086] [D] [thread 235017] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[09:54:56.066088] [I] [thread 235017] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:54:56.066090] [I] [thread 235017] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
Dumping pipelineQueryPlan: [36m[09:54:56.066108] [D] [thread 235017] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:54:56.066111] [D] [thread 235017] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[09:54:56.066121] [D] [thread 235017] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[09:54:56.066124] [D] [thread 235017] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 7
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5, 6, 7, 8
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


Dumping pipelineQueryPlan: PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 7
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5, 6, 7, 8
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[09:54:56.066147] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[09:54:56.066156] [D] [thread 235017] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:54:56.066158] [D] [thread 235017] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:54:56.066164] [I] [thread 235017] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:54:56.066165] [I] [thread 235017] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:56.066167] [I] [thread 235017] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:54:56.066185] [D] [thread 235017] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:54:56.066187] [D] [thread 235017] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:54:56.066194] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[09:54:56.066199] [D] [thread 235017] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:54:56.066200] [D] [thread 235017] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:54:56.066206] [I] [thread 235017] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
2023-11-17 09:54:56.68 setup: queryId=1, querySubPlanId=7; 
[32m[09:54:56.066207] [I] [thread 235017] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
2023-11-17 09:54:56.68 start: queryId=1, querySubPlanId=7; 
[32m[09:54:56.066208] [I] [thread 235017] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:54:56.066224] [D] [thread 235017] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:54:56.066226] [D] [thread 235017] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:54:56.066233] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[09:54:56.066237] [D] [thread 235017] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:54:56.066239] [D] [thread 235017] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:54:56.066246] [I] [thread 235017] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:54:56.066247] [I] [thread 235017] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:56.066248] [I] [thread 235017] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:54:56.066263] [D] [thread 235017] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:54:56.066264] [D] [thread 235017] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:54:56.066270] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[09:54:56.066275] [D] [thread 235017] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:54:56.066277] [D] [thread 235017] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:54:56.066285] [I] [thread 235017] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:54:56.066286] [I] [thread 235017] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:56.066287] [I] [thread 235017] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:54:56.066304] [D] [thread 235017] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:54:56.066305] [D] [thread 235017] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:54:56.066311] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[09:54:56.066316] [D] [thread 235017] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:54:56.066318] [D] [thread 235017] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:54:56.066328] [I] [thread 235017] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:54:56.066329] [I] [thread 235017] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:56.066330] [I] [thread 235017] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:54:56.066345] [D] [thread 235017] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:54:56.066347] [D] [thread 235017] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:54:56.066353] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[09:54:56.066359] [D] [thread 235017] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:54:56.066360] [D] [thread 235017] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:54:56.066371] [I] [thread 235017] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:54:56.066372] [I] [thread 235017] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:54:56.066373] [I] [thread 235017] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:54:56.066389] [D] [thread 235017] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:54:56.066391] [D] [thread 235017] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[09:54:56.066409] [D] [thread 235017] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-17 09:54:56 - 2. PhysicalQueryPlan[m
[36m[09:54:56.066596] [D] [thread 235017] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[32m[09:54:56.066640] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[09:54:56.066662] [D] [thread 235017] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[09:54:56.066665] [D] [thread 235017] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:56.066666] [D] [thread 235017] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:56.066725] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[09:54:56.066735] [D] [thread 235017] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:54:56.066738] [D] [thread 235017] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:56.066739] [D] [thread 235017] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:56.066747] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[09:54:56.066754] [D] [thread 235017] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:54:56.066755] [D] [thread 235017] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:56.066760] [D] [thread 235017] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:56.066767] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[09:54:56.066775] [D] [thread 235017] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:54:56.066776] [D] [thread 235017] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:56.066777] [D] [thread 235017] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:56.066784] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[09:54:56.066790] [D] [thread 235017] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:54:56.066791] [D] [thread 235017] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:56.066792] [D] [thread 235017] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:56.066798] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[09:54:56.066804] [D] [thread 235017] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:54:56.066806] [D] [thread 235017] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:56.066806] [D] [thread 235017] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:54:56.066813] [I] [thread 235017] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[09:54:56.066820] [D] [thread 235017] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:54:56.066821] [D] [thread 235017] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:54:56.066822] [D] [thread 235017] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:54:56.066831] [D] [thread 235017] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-17 09:54:56 - 3. AfterPipelinedQueryPlan[m
[36m[09:54:56.067016] [D] [thread 235017] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-17 09:54:56 - 4. AfterAddScanAndEmitPhase[m
[36m[09:54:56.067109] [D] [thread 235017] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 7[m
[36m[09:54:56.067159] [D] [thread 235017] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  74[m
[32m[09:54:56.067171] [I] [thread 235017] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[09:54:56.067475] [D] [thread 235017] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/bottomUpDebsThreeLevel.out[m
[32m[09:54:56.067626] [I] [thread 235017] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:54:56.067750] [D] [thread 235017] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:56.067869] [I] [thread 235017] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:54:56.067908] [D] [thread 235017] [DataSource.cpp:75] [DataSource] DataSource  39 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:56.067933] [I] [thread 235017] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:54:56.067958] [D] [thread 235017] [DataSource.cpp:75] [DataSource] DataSource  45 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:56.067977] [I] [thread 235017] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:54:56.068003] [D] [thread 235017] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:56.068021] [I] [thread 235017] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:54:56.068044] [D] [thread 235017] [DataSource.cpp:75] [DataSource] DataSource  57 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:54:56.068061] [I] [thread 235017] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:54:56.068085] [D] [thread 235017] [DataSource.cpp:75] [DataSource] DataSource  63 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:54:56.068163] [D] [thread 235017] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[09:54:56.068175] [D] [thread 235017] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[09:54:56.068178] [D] [thread 235017] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[36m[09:54:56.068183] [D] [thread 235017] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
[36m[09:54:56.068186] [D] [thread 235017] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[09:54:56.068225] [D] [thread 235017] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  39  not found. Creating new element with with qep [m
[36m[09:54:56.068226] [D] [thread 235017] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  45  not found. Creating new element with with qep [m
[36m[09:54:56.068228] [D] [thread 235017] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[09:54:56.068230] [D] [thread 235017] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  57  not found. Creating new element with with qep [m
[36m[09:54:56.068231] [D] [thread 235017] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  63  not found. Creating new element with with qep [m
[36m[09:54:56.068235] [D] [thread 235017] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
[36m[09:54:56.068394] [D] [thread 235017] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
[36m[09:54:56.068443] [D] [thread 235017] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[09:54:56.068492] [D] [thread 235017] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.12[m
[36m[09:54:56.068533] [D] [thread 235017] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[09:54:56.068537] [D] [thread 235017] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24013570  started successfully[m
[36m[09:54:56.068545] [D] [thread 235017] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::39::0::0 from 192.168.2.12[m
[36m[09:54:56.068550] [D] [thread 235017] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::39::0::0=1[m
[36m[09:54:56.068551] [D] [thread 235017] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24018000  started successfully[m
[36m[09:54:56.068558] [D] [thread 235017] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::45::0::0 from 192.168.2.30[m
[36m[09:54:56.068562] [D] [thread 235017] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::45::0::0=1[m
[36m[09:54:56.068563] [D] [thread 235017] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff240183c0  started successfully[m
[36m[09:54:56.068569] [D] [thread 235017] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.30[m
[36m[09:54:56.068573] [D] [thread 235017] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[09:54:56.068575] [D] [thread 235017] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24018860  started successfully[m
[36m[09:54:56.068581] [D] [thread 235017] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::57::0::0 from 192.168.2.31[m
[36m[09:54:56.068585] [D] [thread 235017] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::57::0::0=1[m
[36m[09:54:56.068586] [D] [thread 235017] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24018f80  started successfully[m
[36m[09:54:56.068592] [D] [thread 235017] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::63::0::0 from 192.168.2.31[m
[36m[09:54:56.068596] [D] [thread 235017] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::63::0::0=1[m
[36m[09:54:56.068597] [D] [thread 235017] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff240198f0  started successfully[m
[36m[09:54:56.068611] [D] [thread 235017] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.068627] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.068661] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.068958] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[09:54:56.068979] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[36m[09:54:56.068995] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=0) REGISTERED[m
[36m[09:54:56.069018] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[09:54:56.069051] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 3:1::39::0::0[m
[36m[09:54:56.069052] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[32m[09:54:56.069057] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[36m[09:54:56.069059] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 1:1::39::0::0[m
[36m[09:54:56.069061] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=3) REGISTERED[m
[32m[09:54:56.069068] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[36m[09:54:56.069072] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[09:54:56.069074] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=1) REGISTERED[m
[36m[09:54:56.069101] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[09:54:56.069106] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[36m[09:54:56.069111] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=2) REGISTERED[m
[36m[09:54:56.069140] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[09:54:56.069203] [D] [thread 235017] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[09:54:56.069215] [D] [thread 235017] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.069218] [D] [thread 235017] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24013570  started successfully[m
[36m[09:54:56.069228] [D] [thread 235017] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.069238] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.069266] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.069405] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[09:54:56.069405] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[09:54:56.069425] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[09:54:56.069429] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[09:54:56.069504] [D] [thread 235017] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[09:54:56.069513] [D] [thread 235017] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.069514] [D] [thread 235017] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24018000  started successfully[m
[36m[09:54:56.069521] [D] [thread 235017] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.069526] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.069537] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.069633] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[09:54:56.069637] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[09:54:56.069653] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[09:54:56.069657] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[09:54:56.069715] [D] [thread 235017] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[09:54:56.069720] [D] [thread 235017] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.069722] [D] [thread 235017] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff240183c0  started successfully[m
[36m[09:54:56.069789] [D] [thread 235017] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.069796] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.069804] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.069898] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[09:54:56.069899] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[09:54:56.069917] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[09:54:56.069919] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[09:54:56.069978] [D] [thread 235017] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[09:54:56.069982] [D] [thread 235017] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.069984] [D] [thread 235017] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24018860  started successfully[m
[36m[09:54:56.070049] [D] [thread 235017] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.070055] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.070063] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.070155] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[09:54:56.070157] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[09:54:56.070174] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[09:54:56.070176] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[09:54:56.070235] [D] [thread 235017] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[09:54:56.070239] [D] [thread 235017] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.070241] [D] [thread 235017] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24018f80  started successfully[m
[36m[09:54:56.070307] [D] [thread 235017] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.070312] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.070321] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:54:56.070413] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[09:54:56.070415] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[09:54:56.070432] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[09:54:56.070433] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[09:54:56.070493] [D] [thread 235017] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[09:54:56.070497] [D] [thread 235017] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[09:54:56.070499] [D] [thread 235017] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff240198f0  started successfully[m
[36m[09:54:56.070566] [D] [thread 235017] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[09:54:56.070601] [D] [thread 235017] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[09:54:56.070610] [D] [thread 235017] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[09:54:56.073432] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[09:54:56.073447] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[09:54:56.073456] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[09:54:56.073654] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[09:54:56.073663] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[36m[09:54:56.073669] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[09:54:56.073780] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[09:54:56.073787] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[09:54:56.073793] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[09:54:56.074011] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[09:54:56.074017] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[36m[09:54:56.074022] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[09:54:56.076723] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[09:54:56.076736] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[36m[09:54:56.076744] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[09:54:56.077490] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[09:54:56.077504] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[09:54:56.077512] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[36m[09:54:56.077581] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[09:54:56.077588] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[09:54:56.077592] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[09:54:56.077632] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[09:54:56.077636] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[09:54:56.077640] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[09:54:56.078182] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 3:1::63::0::0[m
[32m[09:54:56.078192] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=3) Data[m
[36m[09:54:56.078198] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=3) REGISTERED[m
[36m[09:54:56.078867] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 2:1::63::0::0[m
[32m[09:54:56.078889] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=2) Data[m
[36m[09:54:56.078897] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=2) REGISTERED[m
[36m[09:54:56.079259] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 0:1::63::0::0[m
[36m[09:54:56.079259] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 1:1::63::0::0[m
[32m[09:54:56.079276] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=1) Data[m
[32m[09:54:56.079282] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=0) Data[m
[36m[09:54:56.079283] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=1) REGISTERED[m
[36m[09:54:56.079288] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=0) REGISTERED[m
[36m[09:54:56.083920] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[09:54:56.083952] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[36m[09:54:56.083962] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=1) REGISTERED[m
[36m[09:54:56.083984] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[09:54:56.083992] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[36m[09:54:56.083998] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=2) REGISTERED[m
[36m[09:54:56.084086] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[09:54:56.084093] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[36m[09:54:56.084098] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=3) REGISTERED[m
[36m[09:54:56.084631] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[09:54:56.084653] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[36m[09:54:56.084662] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=0) REGISTERED[m
[36m[09:54:56.084730] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 2:1::57::0::0[m
[32m[09:54:56.084738] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) Data[m
[36m[09:54:56.084743] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=2) REGISTERED[m
[36m[09:54:56.084833] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[09:54:56.084861] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[36m[09:54:56.084867] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=0) REGISTERED[m
[36m[09:54:56.084954] [D] [thread 235011] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 1:1::57::0::0[m
[32m[09:54:56.084967] [I] [thread 235011] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) Data[m
[36m[09:54:56.084972] [D] [thread 235011] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=1) REGISTERED[m
[36m[09:54:56.085148] [D] [thread 235010] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): ClientAnnouncement received for channel 3:1::57::0::0[m
[32m[09:54:56.085164] [I] [thread 235010] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) Data[m
[36m[09:54:56.085169] [D] [thread 235010] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=3) REGISTERED[m
[36m[09:54:56.679177] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:56.794218] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:56.794614] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:57.795756] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:57.995997] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:57.996307] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:58.927163] [D] [thread 235001] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[09:54:58.927263] [D] [thread 235001] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[09:54:58.927847] [D] [thread 235001] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[09:54:58.927895] [D] [thread 235001] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[09:54:58.927904] [D] [thread 235001] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[09:54:58.927937] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[09:54:58.927947] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:40579 queryId=1[m
[36m[09:54:58.929777] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[09:54:58.929968] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:35713 queryId=1[m
[36m[09:54:58.931335] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[09:54:58.931380] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:37923 queryId=1[m
[36m[09:54:58.933103] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[09:54:58.933144] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:41929 queryId=1[m
[36m[09:54:58.934513] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[09:54:58.934685] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:36447 queryId=1[m
[36m[09:54:58.936022] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[09:54:58.936068] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:43627 queryId=1[m
[36m[09:54:58.937653] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[09:54:58.937838] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:42913 queryId=1[m
[36m[09:54:58.939357] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[09:54:58.939482] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:35433 queryId=1[m
[36m[09:54:58.940533] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[09:54:58.940562] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:45679 queryId=1[m
[36m[09:54:58.942778] [D] [thread 235001] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[09:54:58.942818] [D] [thread 235001] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:35543 queryId=1[m
[36m[09:54:58.943693] [D] [thread 235001] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[09:54:58.980441] [D] [thread 235067] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[09:54:58.980507] [D] [thread 235067] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[09:54:58.980519] [D] [thread 235067] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[09:54:58.980544] [D] [thread 235067] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1700214898980[m
[36m[09:54:58.980546] [D] [thread 235067] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[09:54:58.980552] [D] [thread 235067] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[09:54:58.983548] [D] [thread 235001] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[09:54:58.983599] [D] [thread 235001] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[09:54:58.983869] [I] [thread 235001] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[09:54:58.983894] [D] [thread 235001] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[09:54:58.997698] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:59.126340] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:54:59.126663] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:00.127894] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:01.047160] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:01.047406] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:01.048272] [D] [thread 235076] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:01.048299] [I] [thread 235076] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:01.048304] [I] [thread 235076] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:01.048344] [I] [thread 235076] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:01.048346] [I] [thread 235076] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:01.244198] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:01.244417] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:02.245598] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:03.109265] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:03.109452] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:03.110344] [D] [thread 235081] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:03.110367] [I] [thread 235081] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:03.110371] [I] [thread 235081] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:03.110382] [I] [thread 235081] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:03.110383] [I] [thread 235081] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:03.273102] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:03.273308] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:04.274460] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:04.548675] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:04.548900] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:04.549708] [D] [thread 235086] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:04.549732] [I] [thread 235086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:04.549735] [I] [thread 235086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:04.549746] [I] [thread 235086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:04.549747] [I] [thread 235086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:04.643226] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:04.643458] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:05.644618] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:05.906824] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:05.907003] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:05.908525] [D] [thread 235091] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:05.908547] [I] [thread 235091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:05.908550] [I] [thread 235091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:05.908562] [I] [thread 235091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:05.908563] [I] [thread 235091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:06.039853] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:06.040034] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:07.041191] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:07.318350] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:07.318562] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:07.319460] [D] [thread 235096] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:07.319483] [I] [thread 235096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:07.319487] [I] [thread 235096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:07.319498] [I] [thread 235096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:07.319499] [I] [thread 235096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:07.469758] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:07.469944] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:08.471117] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:08.741949] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:08.742155] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:08.743016] [D] [thread 235101] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:08.743038] [I] [thread 235101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:08.743041] [I] [thread 235101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:08.743052] [I] [thread 235101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:08.743053] [I] [thread 235101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:08.840285] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:08.840523] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:09.841708] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:10.062201] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:10.062446] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:10.063325] [D] [thread 235106] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:10.063349] [I] [thread 235106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:10.063352] [I] [thread 235106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:10.063363] [I] [thread 235106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:10.063364] [I] [thread 235106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:10.160146] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:10.160368] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:11.161526] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:11.489225] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:11.489445] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:11.490304] [D] [thread 235111] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:11.490327] [I] [thread 235111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:11.490332] [I] [thread 235111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:11.490343] [I] [thread 235111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:11.490344] [I] [thread 235111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:11.591586] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:11.591823] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:12.593001] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:12.860800] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:12.860988] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:12.861870] [D] [thread 235116] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:12.861898] [I] [thread 235116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:12.861901] [I] [thread 235116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:12.861919] [I] [thread 235116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:12.861920] [I] [thread 235116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:12.997590] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:12.997774] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:13.998966] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:14.264736] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:14.264927] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:14.265828] [D] [thread 235121] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:14.265850] [I] [thread 235121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:14.265853] [I] [thread 235121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:14.265863] [I] [thread 235121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:14.265864] [I] [thread 235121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:14.397417] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:14.397621] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:15.398828] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:15.672348] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:15.672543] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:15.673460] [D] [thread 235126] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:15.673483] [I] [thread 235126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:15.673493] [I] [thread 235126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:15.673505] [I] [thread 235126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:15.673506] [I] [thread 235126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:15.805508] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:15.805702] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:16.806875] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:17.132437] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:17.132628] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:17.133496] [D] [thread 235131] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:17.133525] [I] [thread 235131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:17.133528] [I] [thread 235131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:17.133540] [I] [thread 235131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:17.133541] [I] [thread 235131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:17.262487] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:17.262672] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:18.263851] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:18.591538] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:18.591770] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:18.592704] [D] [thread 235136] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:18.592727] [I] [thread 235136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:18.592731] [I] [thread 235136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:18.592748] [I] [thread 235136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:18.592749] [I] [thread 235136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:18.727777] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:18.727959] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:19.729138] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:20.021712] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:20.021897] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:20.022810] [D] [thread 235141] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:20.022833] [I] [thread 235141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:20.022836] [I] [thread 235141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:20.022847] [I] [thread 235141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:20.022848] [I] [thread 235141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:20.155623] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:20.155813] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:21.157004] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:21.442924] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:21.443152] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:21.444162] [D] [thread 235146] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:21.444200] [I] [thread 235146] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:21.444204] [I] [thread 235146] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:21.444218] [I] [thread 235146] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:21.444219] [I] [thread 235146] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:21.580385] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:21.580588] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:22.581763] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:22.958683] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:22.958862] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:22.959788] [D] [thread 235151] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:22.959810] [I] [thread 235151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:22.959814] [I] [thread 235151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:22.959825] [I] [thread 235151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:22.959826] [I] [thread 235151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:23.090970] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:23.091153] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:24.092428] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:24.412728] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:24.412966] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:24.413831] [D] [thread 235156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:24.413853] [I] [thread 235156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:24.413856] [I] [thread 235156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:24.413867] [I] [thread 235156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:24.413868] [I] [thread 235156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:24.508400] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:24.508594] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:25.509779] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:25.817126] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:25.817400] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:25.818229] [D] [thread 235161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:25.818252] [I] [thread 235161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:25.818256] [I] [thread 235161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:25.818267] [I] [thread 235161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:25.818268] [I] [thread 235161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:25.953800] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:25.954001] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:26.955153] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:27.264671] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:27.264853] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:27.266387] [D] [thread 235166] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:27.266409] [I] [thread 235166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:27.266415] [I] [thread 235166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:27.266426] [I] [thread 235166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:27.266427] [I] [thread 235166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:27.367799] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:27.367980] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:28.369156] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:28.666208] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:28.666393] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:28.667246] [D] [thread 235171] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:28.667267] [I] [thread 235171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:28.667270] [I] [thread 235171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:28.667316] [I] [thread 235171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:28.667317] [I] [thread 235171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:28.763315] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:28.763500] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:29.764680] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:29.991591] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:29.991766] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:29.993246] [D] [thread 235176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:29.993283] [I] [thread 235176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:29.993287] [I] [thread 235176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:29.993298] [I] [thread 235176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:29.993299] [I] [thread 235176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:30.120202] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:30.120424] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:31.121659] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:31.373909] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:31.374096] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:31.374957] [D] [thread 235181] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:31.374979] [I] [thread 235181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:31.374983] [I] [thread 235181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:31.374994] [I] [thread 235181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:31.374995] [I] [thread 235181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:31.506500] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:31.506679] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:32.507826] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:32.799383] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:32.799593] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:32.801123] [D] [thread 235186] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:32.801147] [I] [thread 235186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:32.801151] [I] [thread 235186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:32.801163] [I] [thread 235186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:32.801164] [I] [thread 235186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:32.913597] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:32.913804] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:33.914950] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:34.252972] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:34.253182] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:34.254141] [D] [thread 235191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:34.254168] [I] [thread 235191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:34.254171] [I] [thread 235191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:34.254189] [I] [thread 235191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:34.254190] [I] [thread 235191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:34.348102] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:34.348344] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:35.349440] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:35.626025] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:35.626274] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:35.627107] [D] [thread 235196] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:35.627130] [I] [thread 235196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:35.627136] [I] [thread 235196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:35.627147] [I] [thread 235196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:35.627148] [I] [thread 235196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:35.755647] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:35.755864] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:36.757026] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:37.016173] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:37.016386] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:37.017338] [D] [thread 235201] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:37.017361] [I] [thread 235201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:37.017365] [I] [thread 235201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:37.017376] [I] [thread 235201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:37.017377] [I] [thread 235201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:37.148300] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:37.148539] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:38.149726] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:38.392287] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:38.392555] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:38.393480] [D] [thread 235206] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:38.393504] [I] [thread 235206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:38.393514] [I] [thread 235206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:38.393525] [I] [thread 235206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:38.393526] [I] [thread 235206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:38.496722] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:38.496923] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:39.498068] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:39.781884] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:39.782162] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:39.782954] [D] [thread 235211] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:39.782979] [I] [thread 235211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:39.782982] [I] [thread 235211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:39.782994] [I] [thread 235211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:39.782995] [I] [thread 235211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:39.882452] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:39.882650] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:40.883822] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:41.241934] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:41.242145] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:41.243067] [D] [thread 235217] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:41.243090] [I] [thread 235217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:41.243093] [I] [thread 235217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:41.243104] [I] [thread 235217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:41.243105] [I] [thread 235217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:41.373502] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:41.373704] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:42.374884] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:42.642485] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:42.642759] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:42.643657] [D] [thread 235222] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:42.643681] [I] [thread 235222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:42.643685] [I] [thread 235222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:42.643696] [I] [thread 235222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:42.643697] [I] [thread 235222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:42.772151] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:42.772367] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:43.773515] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:44.077916] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:44.078106] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:44.079044] [D] [thread 235227] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:44.079069] [I] [thread 235227] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:44.079072] [I] [thread 235227] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:44.079084] [I] [thread 235227] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:44.079085] [I] [thread 235227] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:44.131032] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:44.131236] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:45.132461] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:45.389649] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:45.389828] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:45.390715] [D] [thread 235232] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:45.390737] [I] [thread 235232] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:45.390741] [I] [thread 235232] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:45.390755] [I] [thread 235232] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:45.390756] [I] [thread 235232] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:45.520787] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:45.520967] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:45.921056] [D] [thread 235015] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:55:45.921523] [D] [thread 235015] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10620000,10680000,100,1700214898972,1700214945921
[m
[36m[09:55:45.921742] [D] [thread 235015] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1700214945921[m
[36m[09:55:46.522186] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:46.789864] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:46.790041] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:46.790922] [D] [thread 235237] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:46.790947] [I] [thread 235237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:46.790950] [I] [thread 235237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:46.790967] [I] [thread 235237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:46.790968] [I] [thread 235237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:46.893772] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:46.893974] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:46.992066] [D] [thread 235013] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:55:46.992100] [D] [thread 235013] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:55:46.992274] [D] [thread 235013] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10620000,10680000,54,1700214898980,1700214946992
[m
[36m[09:55:47.895156] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:47.943863] [D] [thread 235014] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:55:47.943893] [D] [thread 235014] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:55:47.944025] [D] [thread 235014] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10620000,10680000,63,1700214898954,1700214947943
[m
[36m[09:55:48.136096] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:48.136307] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:48.137283] [D] [thread 235242] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:48.137306] [I] [thread 235242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:48.137309] [I] [thread 235242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:48.137323] [I] [thread 235242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:48.137324] [I] [thread 235242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:48.261507] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:48.261717] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:49.080590] [D] [thread 235012] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:55:49.080627] [D] [thread 235012] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:55:49.080786] [D] [thread 235012] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10620000,10680000,47,1700214898969,1700214949080
[m
[36m[09:55:49.131557] [D] [thread 235015] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:55:49.131590] [D] [thread 235015] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:55:49.131729] [D] [thread 235015] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10620000,10680000,24,1700214898977,1700214949131
[m
[36m[09:55:49.262858] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:49.528605] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:49.528809] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:49.529741] [D] [thread 235247] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:49.529764] [I] [thread 235247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:49.529767] [I] [thread 235247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:49.529778] [I] [thread 235247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:49.529779] [I] [thread 235247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:49.659970] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:49.660179] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:50.661337] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:50.922481] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:50.922688] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:50.923568] [D] [thread 235252] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:50.923589] [I] [thread 235252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:50.923592] [I] [thread 235252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:50.923603] [I] [thread 235252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:50.923604] [I] [thread 235252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:51.057625] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:51.057844] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:51.367985] [D] [thread 235013] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:55:51.368026] [D] [thread 235013] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:55:51.368206] [D] [thread 235013] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10620000,10680000,13,1700214898965,1700214951368
[m
[36m[09:55:52.058999] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:52.285418] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:52.285630] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:52.286504] [D] [thread 235257] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:52.286526] [I] [thread 235257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:52.286530] [I] [thread 235257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:52.286541] [I] [thread 235257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:52.286542] [I] [thread 235257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:52.461789] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:52.461983] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:53.463255] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:53.697148] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:53.697349] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:53.698219] [D] [thread 235262] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:53.698241] [I] [thread 235262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:53.698245] [I] [thread 235262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:53.698256] [I] [thread 235262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:53.698257] [I] [thread 235262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:53.796279] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:53.796540] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:54.797738] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:55.117642] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:55.117950] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:55.118683] [D] [thread 235268] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:55.118707] [I] [thread 235268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:55.118710] [I] [thread 235268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:55.118727] [I] [thread 235268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:55.118728] [I] [thread 235268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:55.251863] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:55.252049] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:56.253212] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:56.553823] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:56.554022] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:56.554929] [D] [thread 235274] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:56.554951] [I] [thread 235274] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:56.554957] [I] [thread 235274] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:56.554967] [I] [thread 235274] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:56.554969] [I] [thread 235274] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:56.688362] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:56.688537] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:57.689710] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:57.999366] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:57.999585] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:58.000440] [D] [thread 235279] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:58.000463] [I] [thread 235279] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:58.000466] [I] [thread 235279] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:58.000483] [I] [thread 235279] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:58.000484] [I] [thread 235279] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:58.098207] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:58.098423] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:59.099608] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:59.534224] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:59.534403] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:59.535315] [D] [thread 235284] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:55:59.535338] [I] [thread 235284] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:59.535341] [I] [thread 235284] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:55:59.535352] [I] [thread 235284] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:55:59.535353] [I] [thread 235284] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:55:59.668281] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:55:59.668545] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:00.669719] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:00.943141] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:00.943328] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:00.944170] [D] [thread 235291] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:00.944192] [I] [thread 235291] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:00.944196] [I] [thread 235291] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:00.944207] [I] [thread 235291] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:00.944208] [I] [thread 235291] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:01.039034] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:01.039211] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:02.040389] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:02.298754] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:02.298962] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:02.299802] [D] [thread 235296] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:02.299825] [I] [thread 235296] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:02.299828] [I] [thread 235296] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:02.299839] [I] [thread 235296] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:02.299840] [I] [thread 235296] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:02.399335] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:02.399541] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:03.400761] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:03.671799] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:03.672006] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:03.672932] [D] [thread 235301] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:03.672955] [I] [thread 235301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:03.672959] [I] [thread 235301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:03.672969] [I] [thread 235301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:03.672971] [I] [thread 235301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:03.804453] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:03.804655] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:04.805829] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:05.120923] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:05.121140] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:05.122001] [D] [thread 235306] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:05.122024] [I] [thread 235306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:05.122027] [I] [thread 235306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:05.122038] [I] [thread 235306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:05.122039] [I] [thread 235306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:05.250355] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:05.250556] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:06.251797] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:06.580657] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:06.580833] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:06.582250] [D] [thread 235311] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:06.582273] [I] [thread 235311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:06.582276] [I] [thread 235311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:06.582287] [I] [thread 235311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:06.582289] [I] [thread 235311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:06.687109] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:06.687288] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:07.688480] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:07.954524] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:07.954745] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:07.956176] [D] [thread 235316] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:07.956201] [I] [thread 235316] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:07.956205] [I] [thread 235316] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:07.956222] [I] [thread 235316] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:07.956223] [I] [thread 235316] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:08.052191] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:08.052397] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:09.053582] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:09.302416] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:09.302597] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:09.303486] [D] [thread 235321] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:09.303508] [I] [thread 235321] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:09.303511] [I] [thread 235321] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:09.303522] [I] [thread 235321] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:09.303523] [I] [thread 235321] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:09.399789] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:09.399990] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:10.401154] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:10.682342] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:10.682521] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:10.683449] [D] [thread 235326] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:10.683480] [I] [thread 235326] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:10.683483] [I] [thread 235326] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:10.683493] [I] [thread 235326] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:10.683495] [I] [thread 235326] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:10.776721] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:10.776908] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:11.778009] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:12.103474] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:12.103731] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:12.104617] [D] [thread 235331] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:12.104642] [I] [thread 235331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:12.104645] [I] [thread 235331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:12.104663] [I] [thread 235331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:12.104664] [I] [thread 235331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:12.203467] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:12.203669] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:13.204862] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:13.436537] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:13.436747] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:13.437567] [D] [thread 235336] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:13.437590] [I] [thread 235336] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:13.437593] [I] [thread 235336] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:13.437603] [I] [thread 235336] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:13.437604] [I] [thread 235336] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:13.568597] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:13.568890] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:14.570069] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:14.858667] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:14.858872] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:14.859794] [D] [thread 235341] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:14.859818] [I] [thread 235341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:14.859822] [I] [thread 235341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:14.859832] [I] [thread 235341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:14.859833] [I] [thread 235341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:14.957399] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:14.957598] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:15.958774] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:16.221221] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:16.221408] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:16.222388] [D] [thread 235346] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:16.222411] [I] [thread 235346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:16.222415] [I] [thread 235346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:16.222426] [I] [thread 235346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:16.222427] [I] [thread 235346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:16.314357] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:16.314538] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:17.315703] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:17.610762] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:17.610966] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:17.611879] [D] [thread 235351] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:17.611902] [I] [thread 235351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:17.611906] [I] [thread 235351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:17.611917] [I] [thread 235351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:17.611918] [I] [thread 235351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:17.704360] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:17.704558] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:18.705712] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:19.038768] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:19.039046] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:19.039846] [D] [thread 235356] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:19.039870] [I] [thread 235356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:19.039873] [I] [thread 235356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:19.039890] [I] [thread 235356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:19.039891] [I] [thread 235356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:19.153612] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:19.153889] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:20.155041] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:20.365182] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:20.365390] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:20.366288] [D] [thread 235361] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:20.366313] [I] [thread 235361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:20.366316] [I] [thread 235361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:20.366327] [I] [thread 235361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:20.366328] [I] [thread 235361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:20.496743] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:20.496935] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:21.498132] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:21.735310] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:21.735566] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:21.736373] [D] [thread 235366] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:21.736395] [I] [thread 235366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:21.736398] [I] [thread 235366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:21.736408] [I] [thread 235366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:21.736410] [I] [thread 235366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:21.867188] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:21.867422] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:22.868605] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:23.189649] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:23.189927] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:23.190737] [D] [thread 235371] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:23.190759] [I] [thread 235371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:23.190762] [I] [thread 235371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:23.190773] [I] [thread 235371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:23.190774] [I] [thread 235371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:23.330525] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:23.330737] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:24.331890] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:24.611840] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:24.612017] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:24.613031] [D] [thread 235376] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:24.613058] [I] [thread 235376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:24.613062] [I] [thread 235376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:24.613072] [I] [thread 235376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:24.613074] [I] [thread 235376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:24.713790] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:24.714050] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:25.715232] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:25.985215] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:25.985418] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:25.986324] [D] [thread 235381] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:25.986347] [I] [thread 235381] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:25.986350] [I] [thread 235381] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:25.986361] [I] [thread 235381] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:25.986362] [I] [thread 235381] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:26.080622] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:26.080819] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:27.082007] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:27.350029] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:27.350245] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:27.351166] [D] [thread 235386] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:27.351190] [I] [thread 235386] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:27.351194] [I] [thread 235386] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:27.351204] [I] [thread 235386] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:27.351205] [I] [thread 235386] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:27.413628] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:27.413816] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:28.414980] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:28.704681] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:28.704879] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:28.705766] [D] [thread 235391] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:28.705788] [I] [thread 235391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:28.705791] [I] [thread 235391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:28.705802] [I] [thread 235391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:28.705803] [I] [thread 235391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:28.831323] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:28.831526] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:29.832703] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:30.048381] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:30.048561] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:30.049493] [D] [thread 235396] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:30.049515] [I] [thread 235396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:30.049519] [I] [thread 235396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:30.049535] [I] [thread 235396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:30.049536] [I] [thread 235396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:30.179999] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:30.180231] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:31.181418] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:31.505146] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:31.505356] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:31.506794] [D] [thread 235401] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:31.506817] [I] [thread 235401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:31.506820] [I] [thread 235401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:31.506832] [I] [thread 235401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:31.506833] [I] [thread 235401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:31.623895] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:31.624095] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:32.625252] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:32.980590] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:32.980770] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:32.981691] [D] [thread 235406] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:32.981715] [I] [thread 235406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:32.981722] [I] [thread 235406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:32.981733] [I] [thread 235406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:32.981734] [I] [thread 235406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:33.078835] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:33.079015] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:34.080189] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:34.379350] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:34.379557] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:34.380437] [D] [thread 235411] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:34.380461] [I] [thread 235411] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:34.380466] [I] [thread 235411] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:34.380479] [I] [thread 235411] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:34.380480] [I] [thread 235411] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:34.480096] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:34.480308] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:35.481564] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:35.797468] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:35.797661] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:35.798558] [D] [thread 235416] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:35.798582] [I] [thread 235416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:35.798585] [I] [thread 235416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:35.798596] [I] [thread 235416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:35.798598] [I] [thread 235416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:35.933206] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:35.933411] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:36.934554] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:37.184048] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:37.184228] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:37.185201] [D] [thread 235421] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:37.185223] [I] [thread 235421] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:37.185227] [I] [thread 235421] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:37.185238] [I] [thread 235421] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:37.185239] [I] [thread 235421] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:37.317788] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:37.318039] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:38.319219] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:38.812246] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:38.812481] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:38.813430] [D] [thread 235426] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:38.813454] [I] [thread 235426] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:38.813457] [I] [thread 235426] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:38.813468] [I] [thread 235426] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:38.813469] [I] [thread 235426] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:38.911178] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:38.911380] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:39.912567] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:40.193602] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:40.193806] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:40.194649] [D] [thread 235432] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:40.194671] [I] [thread 235432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:40.194673] [I] [thread 235432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:40.194685] [I] [thread 235432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:40.194686] [I] [thread 235432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:40.292859] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:40.293039] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:41.294198] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:41.565479] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:41.565681] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:41.566601] [D] [thread 235437] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:41.566625] [I] [thread 235437] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:41.566630] [I] [thread 235437] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:41.566641] [I] [thread 235437] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:41.566642] [I] [thread 235437] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:41.662241] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:41.662444] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:42.231698] [D] [thread 235014] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:56:42.231736] [D] [thread 235014] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:56:42.231903] [D] [thread 235014] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10680000,10740000,100,1700214945866,1700215002231
[m
[36m[09:56:42.663633] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:42.907760] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:42.907985] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:42.908839] [D] [thread 235442] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:42.908862] [I] [thread 235442] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:42.908865] [I] [thread 235442] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:42.908876] [I] [thread 235442] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:42.908877] [I] [thread 235442] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:43.036200] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:43.036442] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:44.037615] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:44.564184] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:44.564436] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:44.565248] [D] [thread 235447] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:44.565270] [I] [thread 235447] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:44.565274] [I] [thread 235447] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:44.565285] [I] [thread 235447] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:44.565286] [I] [thread 235447] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:44.696819] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:44.697089] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:45.698263] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:46.003226] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:46.003555] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:46.004389] [D] [thread 235452] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:46.004412] [I] [thread 235452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:46.004415] [I] [thread 235452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:46.004426] [I] [thread 235452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:46.004427] [I] [thread 235452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:46.096793] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:46.097020] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:47.098254] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:47.344452] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:47.344671] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:47.345522] [D] [thread 235457] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:47.345544] [I] [thread 235457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:47.345547] [I] [thread 235457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:47.345558] [I] [thread 235457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:47.345559] [I] [thread 235457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:47.442883] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:47.443119] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:48.444255] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:48.657657] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:48.657878] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:48.658704] [D] [thread 235462] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:48.658726] [I] [thread 235462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:48.658730] [I] [thread 235462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:48.658746] [I] [thread 235462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:48.658747] [I] [thread 235462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:48.752411] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:48.752588] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:49.753768] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:49.976775] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:49.976952] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:49.977844] [D] [thread 235467] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:49.977866] [I] [thread 235467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:49.977870] [I] [thread 235467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:49.977880] [I] [thread 235467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:49.977881] [I] [thread 235467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:50.220873] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:50.221078] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:51.222228] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:51.548472] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:51.548665] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:51.550119] [D] [thread 235472] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:51.550143] [I] [thread 235472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:51.550153] [I] [thread 235472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:51.550164] [I] [thread 235472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:51.550165] [I] [thread 235472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:51.660118] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:51.660294] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:51.798041] [D] [thread 235012] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:56:51.798082] [D] [thread 235012] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:56:51.798243] [D] [thread 235012] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10680000,10740000,54,1700214946916,1700215011798
[m
[36m[09:56:52.661478] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:52.928637] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:52.928855] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:52.929789] [D] [thread 235477] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:52.929814] [I] [thread 235477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:52.929817] [I] [thread 235477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:52.929834] [I] [thread 235477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:52.929835] [I] [thread 235477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:53.010332] [D] [thread 235015] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:56:53.010356] [D] [thread 235015] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:56:53.010466] [D] [thread 235015] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10680000,10740000,63,1700214947886,1700215013010
[m
[36m[09:56:53.025324] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:53.025502] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:54.026676] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:54.261624] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:54.261810] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:54.262689] [D] [thread 235482] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:54.262710] [I] [thread 235482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:54.262713] [I] [thread 235482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:54.262724] [I] [thread 235482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:54.262725] [I] [thread 235482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:54.395182] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:54.395370] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:54.986447] [D] [thread 235013] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:56:54.986481] [D] [thread 235013] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:56:54.986640] [D] [thread 235013] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10680000,10740000,47,1700214949008,1700215014986
[m
[36m[09:56:55.396561] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:55.640829] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:55.641036] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:55.641909] [D] [thread 235487] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:55.641930] [I] [thread 235487] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:55.641934] [I] [thread 235487] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:55.641945] [I] [thread 235487] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:55.641946] [I] [thread 235487] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:55.954501] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:55.954713] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:56.268161] [D] [thread 235014] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:56:56.268201] [D] [thread 235014] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:56:56.268401] [D] [thread 235014] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10680000,10740000,24,1700214949076,1700215016268
[m
[36m[09:56:56.955907] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:57.208169] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:57.208419] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:57.209334] [D] [thread 235492] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:57.209358] [I] [thread 235492] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:57.209364] [I] [thread 235492] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:57.209375] [I] [thread 235492] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:57.209376] [I] [thread 235492] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:57.308222] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:57.308471] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:58.309636] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:58.641264] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:58.641484] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:58.642396] [D] [thread 235498] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:58.642421] [I] [thread 235498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:58.642424] [I] [thread 235498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:58.642436] [I] [thread 235498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:58.642437] [I] [thread 235498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:56:58.745206] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:58.745407] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:59.746565] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:59.961684] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:59.961881] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:56:59.962883] [D] [thread 235503] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:56:59.963018] [I] [thread 235503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:59.963022] [I] [thread 235503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:56:59.963034] [I] [thread 235503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:56:59.963035] [I] [thread 235503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:00.059845] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:00.060050] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:00.810915] [D] [thread 235012] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:57:00.810958] [D] [thread 235012] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:57:00.811113] [D] [thread 235012] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10680000,10740000,13,1700214951308,1700215020810
[m
[36m[09:57:01.061335] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:01.289596] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:01.289805] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:01.290675] [D] [thread 235508] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:01.290689] [I] [thread 235508] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:01.290692] [I] [thread 235508] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:01.290702] [I] [thread 235508] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:01.290703] [I] [thread 235508] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:01.385515] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:01.385746] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:02.386904] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:02.860429] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:02.860689] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:02.861582] [D] [thread 235513] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:02.861607] [I] [thread 235513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:02.861611] [I] [thread 235513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:02.861622] [I] [thread 235513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:02.861623] [I] [thread 235513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:02.997279] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:02.997471] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:03.998679] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:04.246878] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:04.247224] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:04.248032] [D] [thread 235518] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:04.248070] [I] [thread 235518] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:04.248074] [I] [thread 235518] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:04.248085] [I] [thread 235518] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:04.248086] [I] [thread 235518] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:04.384654] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:04.384851] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:05.386029] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:05.610250] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:05.610470] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:05.611288] [D] [thread 235523] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:05.611310] [I] [thread 235523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:05.611314] [I] [thread 235523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:05.611330] [I] [thread 235523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:05.611332] [I] [thread 235523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:05.744208] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:05.744510] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:06.745682] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:07.040391] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:07.040566] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:07.042042] [D] [thread 235528] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:07.042064] [I] [thread 235528] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:07.042070] [I] [thread 235528] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:07.042080] [I] [thread 235528] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:07.042081] [I] [thread 235528] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:07.153689] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:07.153873] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:08.155049] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:08.466533] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:08.466716] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:08.467945] [D] [thread 235533] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:08.467966] [I] [thread 235533] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:08.467971] [I] [thread 235533] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:08.467982] [I] [thread 235533] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:08.467983] [I] [thread 235533] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:08.537209] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:08.537387] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:09.538556] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:09.796356] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:09.796560] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:09.797433] [D] [thread 235538] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:09.797455] [I] [thread 235538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:09.797459] [I] [thread 235538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:09.797469] [I] [thread 235538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:09.797470] [I] [thread 235538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:09.895472] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:09.895658] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:10.896845] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:11.175906] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:11.176120] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:11.177053] [D] [thread 235543] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:11.177075] [I] [thread 235543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:11.177079] [I] [thread 235543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:11.177090] [I] [thread 235543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:11.177092] [I] [thread 235543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:11.275669] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:11.275877] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:12.277060] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:12.545389] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:12.545579] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:12.546494] [D] [thread 235548] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:12.546517] [I] [thread 235548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:12.546521] [I] [thread 235548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:12.546532] [I] [thread 235548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:12.546533] [I] [thread 235548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:12.675492] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:12.675706] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:13.676522] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:13.936169] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:13.936405] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:13.937356] [D] [thread 235553] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:13.937380] [I] [thread 235553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:13.937384] [I] [thread 235553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:13.937395] [I] [thread 235553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:13.937396] [I] [thread 235553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:13.996190] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:13.996418] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:14.997546] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:15.321709] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:15.321912] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:15.322762] [D] [thread 235558] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:15.322783] [I] [thread 235558] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:15.322789] [I] [thread 235558] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:15.322801] [I] [thread 235558] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:15.322802] [I] [thread 235558] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:15.456288] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:15.456498] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:16.457683] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:16.764007] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:16.764190] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:16.765855] [D] [thread 235563] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:16.765878] [I] [thread 235563] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:16.765882] [I] [thread 235563] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:16.765893] [I] [thread 235563] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:16.765894] [I] [thread 235563] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:16.862348] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:16.862569] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:17.863752] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:18.160180] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:18.160373] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:18.161337] [D] [thread 235568] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:18.161365] [I] [thread 235568] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:18.161369] [I] [thread 235568] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:18.161380] [I] [thread 235568] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:18.161381] [I] [thread 235568] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:18.272401] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:18.272615] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:19.273781] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:19.571653] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:19.571902] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:19.572773] [D] [thread 235573] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:19.572795] [I] [thread 235573] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:19.572799] [I] [thread 235573] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:19.572810] [I] [thread 235573] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:19.572811] [I] [thread 235573] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:19.673230] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:19.673426] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:20.674595] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:20.917372] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:20.917568] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:20.918466] [D] [thread 235578] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:20.918489] [I] [thread 235578] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:20.918492] [I] [thread 235578] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:20.918510] [I] [thread 235578] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:20.918511] [I] [thread 235578] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:21.024107] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:21.024308] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:22.025536] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:22.336545] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:22.336771] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:22.337628] [D] [thread 235583] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:22.337649] [I] [thread 235583] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:22.337659] [I] [thread 235583] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:22.337670] [I] [thread 235583] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:22.337671] [I] [thread 235583] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:22.466985] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:22.467180] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:23.468406] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:23.796216] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:23.796428] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:23.797358] [D] [thread 235589] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:23.797379] [I] [thread 235589] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:23.797383] [I] [thread 235589] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:23.797394] [I] [thread 235589] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:23.797395] [I] [thread 235589] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:23.934407] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:23.934588] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:24.935740] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:25.213092] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:25.213310] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:25.214292] [D] [thread 235595] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:25.214316] [I] [thread 235595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:25.214319] [I] [thread 235595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:25.214330] [I] [thread 235595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:25.214331] [I] [thread 235595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:25.304074] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:25.304263] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:26.305534] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:26.624740] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:26.624961] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:26.625929] [D] [thread 235601] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:26.625953] [I] [thread 235601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:26.625957] [I] [thread 235601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:26.625968] [I] [thread 235601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:26.625969] [I] [thread 235601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:26.730412] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:26.730578] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:27.731742] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:27.999740] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:27.999944] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:28.000807] [D] [thread 235606] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:28.000830] [I] [thread 235606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:28.000834] [I] [thread 235606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:28.000845] [I] [thread 235606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:28.000846] [I] [thread 235606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:28.099593] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:28.099780] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:29.100944] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:29.358996] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:29.359183] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:29.360108] [D] [thread 235612] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:29.360131] [I] [thread 235612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:29.360136] [I] [thread 235612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:29.360147] [I] [thread 235612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:29.360148] [I] [thread 235612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:29.408167] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:29.408372] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:30.409525] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:30.685975] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:30.686193] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:30.687082] [D] [thread 235617] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:30.687102] [I] [thread 235617] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:30.687106] [I] [thread 235617] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:30.687117] [I] [thread 235617] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:30.687119] [I] [thread 235617] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:30.782838] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:30.783041] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:31.784230] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:32.086335] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:32.086742] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:32.087449] [D] [thread 235622] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:32.087484] [I] [thread 235622] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:32.087487] [I] [thread 235622] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:32.087498] [I] [thread 235622] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:32.087499] [I] [thread 235622] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:32.188138] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:32.188358] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:33.189535] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:33.466477] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:33.466661] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:33.468168] [D] [thread 235628] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:33.468191] [I] [thread 235628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:33.468195] [I] [thread 235628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:33.468205] [I] [thread 235628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:33.468206] [I] [thread 235628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:33.603948] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:33.604155] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:34.431455] [D] [thread 235015] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:57:34.431497] [D] [thread 235015] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:57:34.431661] [D] [thread 235015] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10740000,10800000,100,1700215002190,1700215054431
[m
[36m[09:57:34.605295] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:34.816145] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:34.816376] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:34.817295] [D] [thread 235633] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:34.817317] [I] [thread 235633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:34.817322] [I] [thread 235633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:34.817333] [I] [thread 235633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:34.817334] [I] [thread 235633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:34.946983] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:34.947169] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:35.948383] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:36.231458] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:36.231645] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:36.232562] [D] [thread 235639] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:36.232586] [I] [thread 235639] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:36.232589] [I] [thread 235639] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:36.232600] [I] [thread 235639] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:36.232601] [I] [thread 235639] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:36.329679] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:36.329891] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:37.331061] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:37.621189] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:37.621379] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:37.622277] [D] [thread 235645] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:37.622300] [I] [thread 235645] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:37.622304] [I] [thread 235645] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:37.622315] [I] [thread 235645] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:37.622316] [I] [thread 235645] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:37.752994] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:37.753193] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:38.754361] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:38.981786] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:38.982089] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:38.982858] [D] [thread 235650] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:38.982881] [I] [thread 235650] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:38.982886] [I] [thread 235650] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:38.982897] [I] [thread 235650] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:38.982898] [I] [thread 235650] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:39.085866] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:39.086070] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:40.087271] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:40.344250] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:40.344534] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:40.345350] [D] [thread 235655] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:40.345374] [I] [thread 235655] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:40.345377] [I] [thread 235655] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:40.345387] [I] [thread 235655] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:40.345388] [I] [thread 235655] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:40.476106] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:40.476299] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:41.477444] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:41.747484] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:41.747662] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:41.748698] [D] [thread 235660] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:41.748726] [I] [thread 235660] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:41.748729] [I] [thread 235660] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:41.748748] [I] [thread 235660] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:41.748749] [I] [thread 235660] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:41.844480] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:41.844677] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:42.845872] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:43.146697] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:43.146900] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:43.147806] [D] [thread 235666] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:43.147829] [I] [thread 235666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:43.147832] [I] [thread 235666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:43.147842] [I] [thread 235666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:43.147843] [I] [thread 235666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:43.213320] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:43.213509] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:44.214698] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:44.572218] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:44.572510] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:44.573328] [D] [thread 235671] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:44.573349] [I] [thread 235671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:44.573353] [I] [thread 235671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:44.573364] [I] [thread 235671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:44.573365] [I] [thread 235671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:44.704390] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:44.704569] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:45.705746] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:46.007491] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:46.007713] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:46.009523] [D] [thread 235677] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:46.009601] [I] [thread 235677] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:46.009608] [I] [thread 235677] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:46.009632] [I] [thread 235677] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:46.009634] [I] [thread 235677] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:46.105695] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:46.105901] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:47.107017] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:47.326491] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:47.326760] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:47.327570] [D] [thread 235682] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:47.327592] [I] [thread 235682] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:47.327596] [I] [thread 235682] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:47.327607] [I] [thread 235682] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:47.327608] [I] [thread 235682] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:47.541478] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:47.541668] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:48.542828] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:49.273243] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:49.273447] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:49.274292] [D] [thread 235688] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:49.274315] [I] [thread 235688] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:49.274319] [I] [thread 235688] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:49.274336] [I] [thread 235688] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:49.274338] [I] [thread 235688] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:49.408652] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:49.408926] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:50.410120] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:50.666004] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:50.666259] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:50.667133] [D] [thread 235693] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:50.667156] [I] [thread 235693] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:50.667164] [I] [thread 235693] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:50.667175] [I] [thread 235693] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:50.667176] [I] [thread 235693] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:50.795927] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:50.796127] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:51.797286] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:52.016467] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:52.016673] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:52.017572] [D] [thread 235700] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:52.017595] [I] [thread 235700] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:52.017598] [I] [thread 235700] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:52.017610] [I] [thread 235700] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:52.017611] [I] [thread 235700] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:52.148247] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:52.148503] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:53.149654] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:53.624633] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:53.624836] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:53.625691] [D] [thread 235705] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:53.625714] [I] [thread 235705] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:53.625717] [I] [thread 235705] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:53.625729] [I] [thread 235705] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:53.625730] [I] [thread 235705] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:53.761012] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:53.761298] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:54.762518] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:55.100643] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:55.100842] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:55.101685] [D] [thread 235712] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:55.101707] [I] [thread 235712] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:55.101711] [I] [thread 235712] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:55.101722] [I] [thread 235712] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:55.101723] [I] [thread 235712] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:55.208881] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:55.209109] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:56.210288] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:56.468408] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:56.468589] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:56.469617] [D] [thread 235717] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:56.469640] [I] [thread 235717] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:56.469644] [I] [thread 235717] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:56.469655] [I] [thread 235717] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:56.469656] [I] [thread 235717] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:56.600349] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:56.600536] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:56.916617] [D] [thread 235013] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:57:56.916654] [D] [thread 235013] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:57:56.916813] [D] [thread 235013] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10740000,10800000,63,1700215012951,1700215076916
[m
[36m[09:57:57.601679] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:57.814443] [D] [thread 235014] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:57:57.814481] [D] [thread 235014] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:57:57.814652] [D] [thread 235014] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10740000,10800000,54,1700215011745,1700215077814
[m
[36m[09:57:57.839522] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:57.839736] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:57.840668] [D] [thread 235723] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:57.840718] [I] [thread 235723] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:57.840721] [I] [thread 235723] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:57.840732] [I] [thread 235723] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:57.840733] [I] [thread 235723] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:57.938418] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:57.938649] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:58.939826] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:59.405745] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:59.406011] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:59.406874] [D] [thread 235728] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:57:59.406897] [I] [thread 235728] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:59.406901] [I] [thread 235728] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:57:59.406912] [I] [thread 235728] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:57:59.406913] [I] [thread 235728] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:57:59.507934] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:59.508111] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:57:59.942565] [D] [thread 235012] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:57:59.942592] [D] [thread 235012] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:57:59.942702] [D] [thread 235012] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10740000,10800000,47,1700215014932,1700215079942
[m
[36m[09:58:00.509272] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:00.763869] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:00.764142] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:00.765046] [D] [thread 235733] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:00.765071] [I] [thread 235733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:00.765075] [I] [thread 235733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:00.765085] [I] [thread 235733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:00.765086] [I] [thread 235733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:00.892527] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:00.892725] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:01.893918] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:02.254288] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:02.254532] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:02.255360] [D] [thread 235739] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:02.255382] [I] [thread 235739] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:02.255386] [I] [thread 235739] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:02.255397] [I] [thread 235739] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:02.255398] [I] [thread 235739] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:02.361072] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:02.361275] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:03.251442] [D] [thread 235015] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:58:03.251480] [D] [thread 235015] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:58:03.251650] [D] [thread 235015] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10740000,10800000,24,1700215016213,1700215083251
[m
[36m[09:58:03.362474] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:03.593320] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:03.593562] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:03.594388] [D] [thread 235744] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:03.594412] [I] [thread 235744] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:03.594415] [I] [thread 235744] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:03.594433] [I] [thread 235744] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:03.594434] [I] [thread 235744] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:03.727799] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:03.728099] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:04.729270] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:05.061888] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:05.062074] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:05.063303] [D] [thread 235751] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:05.063327] [I] [thread 235751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:05.063330] [I] [thread 235751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:05.063342] [I] [thread 235751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:05.063343] [I] [thread 235751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:05.167606] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:05.167790] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:06.168965] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:06.453674] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:06.453866] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:06.454779] [D] [thread 235758] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:06.454803] [I] [thread 235758] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:06.454806] [I] [thread 235758] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:06.454817] [I] [thread 235758] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:06.454818] [I] [thread 235758] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:06.593817] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:06.594005] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:07.595146] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:07.790013] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:07.790217] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:07.791051] [D] [thread 235764] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:07.791074] [I] [thread 235764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:07.791077] [I] [thread 235764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:07.791094] [I] [thread 235764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:07.791095] [I] [thread 235764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:07.838929] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:07.839101] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:08.171398] [D] [thread 235013] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:58:08.171433] [D] [thread 235013] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:58:08.171592] [D] [thread 235013] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10740000,10800000,13,1700215020757,1700215088171
[m
[36m[09:58:08.840253] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:09.067596] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:09.067808] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:09.068838] [D] [thread 235769] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:09.068861] [I] [thread 235769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:09.068866] [I] [thread 235769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:09.068877] [I] [thread 235769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:09.068878] [I] [thread 235769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:09.162845] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:09.163021] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:10.163528] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:10.440738] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:10.440916] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:10.441908] [D] [thread 235775] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:10.441938] [I] [thread 235775] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:10.441941] [I] [thread 235775] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:10.441951] [I] [thread 235775] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:10.441953] [I] [thread 235775] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:10.622472] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:10.622656] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:11.623781] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:11.947522] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:11.947799] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:11.948656] [D] [thread 235782] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:11.948679] [I] [thread 235782] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:11.948683] [I] [thread 235782] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:11.948694] [I] [thread 235782] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:11.948695] [I] [thread 235782] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:12.051812] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:12.051996] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:13.053154] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:13.350894] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:13.351082] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:13.352629] [D] [thread 235787] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:13.352654] [I] [thread 235787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:13.352658] [I] [thread 235787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:13.352670] [I] [thread 235787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:13.352671] [I] [thread 235787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:13.483580] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:13.483777] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:14.485015] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:14.767402] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:14.767582] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:14.769119] [D] [thread 235793] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:14.769143] [I] [thread 235793] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:14.769146] [I] [thread 235793] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:14.769158] [I] [thread 235793] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:14.769159] [I] [thread 235793] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:14.904567] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:14.904747] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:15.905911] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:16.113581] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:16.113782] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:16.114649] [D] [thread 235798] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:16.114671] [I] [thread 235798] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:16.114674] [I] [thread 235798] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:16.114685] [I] [thread 235798] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:16.114686] [I] [thread 235798] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:16.323098] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:16.323340] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:17.324525] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:17.601605] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:17.601799] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:17.602650] [D] [thread 235803] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:17.602673] [I] [thread 235803] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:17.602677] [I] [thread 235803] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:17.602688] [I] [thread 235803] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:17.602689] [I] [thread 235803] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:17.704481] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:17.704666] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:18.705842] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:19.032878] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:19.033088] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:19.033981] [D] [thread 235809] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:19.034004] [I] [thread 235809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:19.034008] [I] [thread 235809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:19.034018] [I] [thread 235809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:19.034019] [I] [thread 235809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:19.166903] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:19.167118] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:20.168297] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:20.446031] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:20.446277] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:20.447658] [D] [thread 235814] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:20.447682] [I] [thread 235814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:20.447685] [I] [thread 235814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:20.447699] [I] [thread 235814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:20.447700] [I] [thread 235814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:20.549653] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:20.549836] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:21.551016] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:21.861292] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:21.861479] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:21.862329] [D] [thread 235819] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:21.862350] [I] [thread 235819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:21.862354] [I] [thread 235819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:21.862366] [I] [thread 235819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:21.862367] [I] [thread 235819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:22.097496] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:22.097718] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:23.098870] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:23.415026] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:23.415246] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:23.416149] [D] [thread 235824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:23.416173] [I] [thread 235824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:23.416176] [I] [thread 235824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:23.416187] [I] [thread 235824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:23.416188] [I] [thread 235824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:23.510194] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:23.510417] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:24.511625] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:24.773388] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:24.773626] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:24.774458] [D] [thread 235829] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:24.774484] [I] [thread 235829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:24.774488] [I] [thread 235829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:24.774499] [I] [thread 235829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:24.774500] [I] [thread 235829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:24.871449] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:24.871716] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:25.872902] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:26.159425] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:26.159628] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:26.160551] [D] [thread 235836] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:26.160574] [I] [thread 235836] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:26.160579] [I] [thread 235836] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:26.160595] [I] [thread 235836] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:26.160596] [I] [thread 235836] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:26.294719] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:26.294925] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:27.296128] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:27.568313] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:27.568568] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:27.569446] [D] [thread 235842] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:27.569469] [I] [thread 235842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:27.569472] [I] [thread 235842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:27.569489] [I] [thread 235842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:27.569490] [I] [thread 235842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:27.667058] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:27.667286] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:28.668469] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:28.989392] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:28.989622] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:28.990441] [D] [thread 235847] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:28.990466] [I] [thread 235847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:28.990470] [I] [thread 235847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:28.990481] [I] [thread 235847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:28.990482] [I] [thread 235847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:29.089371] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:29.089568] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:30.090756] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:30.360250] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:30.360471] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:30.361394] [D] [thread 235853] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:30.361417] [I] [thread 235853] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:30.361420] [I] [thread 235853] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:30.361431] [I] [thread 235853] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:30.361432] [I] [thread 235853] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:30.491399] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:30.491639] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:31.492852] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:31.761037] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:31.761236] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:31.762079] [D] [thread 235860] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:31.762103] [I] [thread 235860] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:31.762106] [I] [thread 235860] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:31.762124] [I] [thread 235860] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:31.762125] [I] [thread 235860] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:31.861577] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:31.861799] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:32.862980] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:33.125093] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:33.125353] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:33.126291] [D] [thread 235867] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:33.126322] [I] [thread 235867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:33.126326] [I] [thread 235867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:33.126337] [I] [thread 235867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:33.126338] [I] [thread 235867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:33.216117] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:33.216365] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:34.217645] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:34.545059] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:34.545244] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:34.546748] [D] [thread 235872] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:34.546773] [I] [thread 235872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:34.546776] [I] [thread 235872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:34.546789] [I] [thread 235872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:34.546790] [I] [thread 235872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:34.652010] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:34.652201] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:35.125345] [D] [thread 235014] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:58:35.125377] [D] [thread 235014] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:58:35.125533] [D] [thread 235014] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10800000,10860000,100,1700215054381,1700215115125
[m
[36m[09:58:35.653343] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:35.905465] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:35.905653] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:35.906596] [D] [thread 235877] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:35.906620] [I] [thread 235877] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:35.906623] [I] [thread 235877] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:35.906634] [I] [thread 235877] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:35.906635] [I] [thread 235877] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:36.004016] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:36.004217] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:37.005372] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:37.333345] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:37.333557] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:37.334439] [D] [thread 235883] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:37.334463] [I] [thread 235883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:37.334467] [I] [thread 235883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:37.334478] [I] [thread 235883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:37.334479] [I] [thread 235883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:37.459667] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:37.459879] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:38.460416] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:38.725925] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:38.726131] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:38.726970] [D] [thread 235889] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:38.726993] [I] [thread 235889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:38.726996] [I] [thread 235889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:38.727007] [I] [thread 235889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:38.727008] [I] [thread 235889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:38.859553] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:38.859756] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:39.860997] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:40.173871] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:40.174122] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:40.175150] [D] [thread 235896] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:40.175173] [I] [thread 235896] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:40.175212] [I] [thread 235896] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:40.175223] [I] [thread 235896] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:40.175225] [I] [thread 235896] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:40.305386] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:40.305588] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:41.306772] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:41.604146] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:41.604348] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:41.605870] [D] [thread 235903] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:41.605894] [I] [thread 235903] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:41.605900] [I] [thread 235903] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:41.605911] [I] [thread 235903] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:41.605912] [I] [thread 235903] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:41.731178] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:41.731368] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:42.732578] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:43.036354] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:43.036520] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:43.037479] [D] [thread 235909] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:43.037503] [I] [thread 235909] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:43.037506] [I] [thread 235909] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:43.037517] [I] [thread 235909] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:43.037519] [I] [thread 235909] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:43.137927] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:43.138129] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:44.139311] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:44.404256] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:44.404484] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:44.405471] [D] [thread 235915] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:44.405496] [I] [thread 235915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:44.405500] [I] [thread 235915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:44.405511] [I] [thread 235915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:44.405512] [I] [thread 235915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:44.494984] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:44.495203] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:45.496432] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:45.773903] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:45.774110] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:45.775040] [D] [thread 235923] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:45.775063] [I] [thread 235923] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:45.775066] [I] [thread 235923] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:45.775077] [I] [thread 235923] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:45.775078] [I] [thread 235923] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:45.904454] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:45.904634] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:46.905036] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:47.173521] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:47.173700] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:47.174936] [D] [thread 235929] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:47.174958] [I] [thread 235929] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:47.174962] [I] [thread 235929] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:47.174973] [I] [thread 235929] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:47.174974] [I] [thread 235929] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:47.269788] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:47.269997] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:48.271189] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:48.566267] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:48.566443] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:48.567419] [D] [thread 235934] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:48.567446] [I] [thread 235934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:48.567449] [I] [thread 235934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:48.567460] [I] [thread 235934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:48.567461] [I] [thread 235934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:48.696248] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:48.696476] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:49.697597] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:50.009463] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:50.009668] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:50.010556] [D] [thread 235940] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:50.010579] [I] [thread 235940] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:50.010583] [I] [thread 235940] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:50.010594] [I] [thread 235940] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:50.010595] [I] [thread 235940] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:50.112211] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:50.112440] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:51.113608] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:51.434569] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:51.434752] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:51.435659] [D] [thread 235945] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:51.435681] [I] [thread 235945] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:51.435684] [I] [thread 235945] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:51.435695] [I] [thread 235945] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:51.435696] [I] [thread 235945] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:51.530455] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:51.530667] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:52.531870] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:52.803730] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:52.803948] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:52.805012] [D] [thread 235950] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:52.805038] [I] [thread 235950] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:52.805042] [I] [thread 235950] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:52.805053] [I] [thread 235950] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:52.805054] [I] [thread 235950] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:52.904794] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:52.904990] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:53.906168] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:54.162398] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:54.162585] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:54.163637] [D] [thread 235956] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:54.163663] [I] [thread 235956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:54.163666] [I] [thread 235956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:54.163678] [I] [thread 235956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:54.163679] [I] [thread 235956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:54.250673] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:54.250881] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:55.252053] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:55.521882] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:55.522091] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:55.522998] [D] [thread 235961] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:55.523022] [I] [thread 235961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:55.523025] [I] [thread 235961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:55.523036] [I] [thread 235961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:55.523037] [I] [thread 235961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:55.615607] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:55.615933] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:56.617077] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:56.978235] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:56.978440] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:56.979299] [D] [thread 235967] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:56.979321] [I] [thread 235967] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:56.979325] [I] [thread 235967] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:56.979338] [I] [thread 235967] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:56.979339] [I] [thread 235967] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:57.036177] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:57.036383] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:58.037611] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:58.351381] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:58.351568] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:58.352461] [D] [thread 235974] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:58.352482] [I] [thread 235974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:58.352486] [I] [thread 235974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:58.352504] [I] [thread 235974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:58.352505] [I] [thread 235974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:58.452279] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:58.452490] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:58.760413] [D] [thread 235012] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:58:58.760453] [D] [thread 235012] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:58:58.760609] [D] [thread 235012] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10800000,10860000,63,1700215076855,1700215138760
[m
[36m[09:58:59.453649] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:59.681711] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:59.681914] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:59.682802] [D] [thread 235979] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:58:59.682826] [I] [thread 235979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:59.682829] [I] [thread 235979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:58:59.682840] [I] [thread 235979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:58:59.682842] [I] [thread 235979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:58:59.813598] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:58:59.813770] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:00.814930] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:01.094623] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:01.094808] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:01.095763] [D] [thread 235986] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:01.095788] [I] [thread 235986] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:01.095791] [I] [thread 235986] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:01.095802] [I] [thread 235986] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:01.095803] [I] [thread 235986] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:01.183320] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:01.183538] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:02.184716] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:02.704239] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:02.704447] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:02.705414] [D] [thread 235991] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:02.705445] [I] [thread 235991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:02.705448] [I] [thread 235991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:02.705460] [I] [thread 235991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:02.705461] [I] [thread 235991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:02.804006] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:02.804190] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:03.794158] [D] [thread 235015] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:59:03.794195] [D] [thread 235015] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:59:03.794349] [D] [thread 235015] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10800000,10860000,54,1700215077751,1700215143794
[m
[36m[09:59:03.805461] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:04.097321] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:04.097529] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:04.098420] [D] [thread 235997] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:04.098471] [I] [thread 235997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:04.098475] [I] [thread 235997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:04.098486] [I] [thread 235997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:04.098487] [I] [thread 235997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:04.224917] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:04.225181] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:04.807537] [D] [thread 235013] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:59:04.807574] [D] [thread 235013] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:59:04.807730] [D] [thread 235013] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10800000,10860000,47,1700215079887,1700215144807
[m
[36m[09:59:05.226265] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:05.466897] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:05.467097] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:05.467934] [D] [thread 236002] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:05.467958] [I] [thread 236002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:05.467961] [I] [thread 236002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:05.467978] [I] [thread 236002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:05.467979] [I] [thread 236002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:05.573744] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:05.573977] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:06.575176] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:07.170034] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:07.170307] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:07.171126] [D] [thread 236009] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:07.171148] [I] [thread 236009] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:07.171158] [I] [thread 236009] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:07.171170] [I] [thread 236009] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:07.171171] [I] [thread 236009] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:07.275992] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:07.276164] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:08.277343] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:08.680686] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:08.680882] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:08.681736] [D] [thread 236015] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:08.681758] [I] [thread 236015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:08.681762] [I] [thread 236015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:08.681773] [I] [thread 236015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:08.681774] [I] [thread 236015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:08.846400] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:08.846600] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:09.847870] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:10.163922] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:10.164188] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:10.165068] [D] [thread 236023] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:10.165093] [I] [thread 236023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:10.165098] [I] [thread 236023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:10.165109] [I] [thread 236023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:10.165111] [I] [thread 236023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:10.294506] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:10.294700] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:11.295854] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:11.304068] [D] [thread 235014] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:59:11.304099] [D] [thread 235014] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:59:11.304256] [D] [thread 235014] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10800000,10860000,24,1700215083202,1700215151304
[m
[36m[09:59:11.580685] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:11.580865] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:11.581781] [D] [thread 236029] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:11.581805] [I] [thread 236029] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:11.581812] [I] [thread 236029] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:11.581823] [I] [thread 236029] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:11.581824] [I] [thread 236029] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:11.710034] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:11.710239] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:12.711749] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:12.923179] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:12.923393] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:12.924660] [D] [thread 236036] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:12.924682] [I] [thread 236036] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:12.924686] [I] [thread 236036] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:12.924697] [I] [thread 236036] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:12.924698] [I] [thread 236036] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:13.025896] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:13.026096] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:14.027285] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:14.295360] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:14.295568] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:14.296426] [D] [thread 236042] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:14.296450] [I] [thread 236042] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:14.296454] [I] [thread 236042] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:14.296465] [I] [thread 236042] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:14.296466] [I] [thread 236042] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:14.405988] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:14.406188] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:15.407376] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:16.298450] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:16.298732] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:16.299489] [D] [thread 236049] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:16.299513] [I] [thread 236049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:16.299517] [I] [thread 236049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:16.299530] [I] [thread 236049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:16.299531] [I] [thread 236049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:16.445042] [D] [thread 235012] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:59:16.445090] [D] [thread 235012] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:59:16.445279] [D] [thread 235012] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10800000,10860000,13,1700215088122,1700215156445
[m
[36m[09:59:16.477163] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:16.477360] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:17.478560] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:18.182120] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:18.182320] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:18.183246] [D] [thread 236055] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:18.183271] [I] [thread 236055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:18.183282] [I] [thread 236055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:18.183292] [I] [thread 236055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:18.183294] [I] [thread 236055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:18.345018] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:18.345212] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:19.346420] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:19.787782] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:19.788009] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:19.788866] [D] [thread 236061] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:19.788890] [I] [thread 236061] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:19.788894] [I] [thread 236061] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:19.788905] [I] [thread 236061] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:19.788906] [I] [thread 236061] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:19.889534] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:19.889741] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:20.890901] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:21.163092] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:21.163336] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:21.164198] [D] [thread 236068] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:21.164219] [I] [thread 236068] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:21.164229] [I] [thread 236068] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:21.164239] [I] [thread 236068] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:21.164240] [I] [thread 236068] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:21.273642] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:21.273815] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:22.274983] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:22.853253] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:22.853479] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:22.854405] [D] [thread 236073] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:22.854430] [I] [thread 236073] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:22.854433] [I] [thread 236073] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:22.854444] [I] [thread 236073] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:22.854445] [I] [thread 236073] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:23.013089] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:23.013303] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:24.014486] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:24.308241] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:24.308446] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:24.309478] [D] [thread 236080] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:24.309501] [I] [thread 236080] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:24.309506] [I] [thread 236080] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:24.309517] [I] [thread 236080] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:24.309518] [I] [thread 236080] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:24.377314] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:24.377496] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:25.378666] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:25.658711] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:25.658891] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:25.659765] [D] [thread 236086] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:25.659786] [I] [thread 236086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:25.659789] [I] [thread 236086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:25.659802] [I] [thread 236086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:25.659803] [I] [thread 236086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:25.786968] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:25.787198] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:26.788371] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:27.109722] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:27.109915] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:27.110762] [D] [thread 236091] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:27.110784] [I] [thread 236091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:27.110787] [I] [thread 236091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:27.110806] [I] [thread 236091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:27.110807] [I] [thread 236091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:27.218332] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:27.218513] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:28.219686] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:28.552686] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:28.552863] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:28.553793] [D] [thread 236096] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:28.553816] [I] [thread 236096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:28.553820] [I] [thread 236096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:28.553831] [I] [thread 236096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:28.553832] [I] [thread 236096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:28.653924] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:28.654128] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:29.655307] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:29.933286] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:29.933486] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:29.934331] [D] [thread 236101] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:29.934380] [I] [thread 236101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:29.934384] [I] [thread 236101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:29.934396] [I] [thread 236101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:29.934397] [I] [thread 236101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:30.036143] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:30.036377] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:31.037628] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:31.684999] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:31.685199] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:31.686041] [D] [thread 236108] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:31.686067] [I] [thread 236108] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:31.686070] [I] [thread 236108] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:31.686087] [I] [thread 236108] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:31.686088] [I] [thread 236108] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:31.828763] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:31.828950] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:32.830100] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:33.158689] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:33.158924] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:33.159800] [D] [thread 236115] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:33.159824] [I] [thread 236115] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:33.159827] [I] [thread 236115] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:33.159838] [I] [thread 236115] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:33.159839] [I] [thread 236115] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:33.289155] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:33.289355] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:33.623668] [D] [thread 235015] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[09:59:33.623707] [D] [thread 235015] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:59:33.623872] [D] [thread 235015] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel.out following content 10860000,10920000,100,1700215115048,1700215173623
[m
[36m[09:59:34.290545] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:34.618294] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:34.618540] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:34.619994] [D] [thread 236120] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:34.620017] [I] [thread 236120] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:34.620026] [I] [thread 236120] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:34.620037] [I] [thread 236120] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:34.620038] [I] [thread 236120] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:34.758581] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:34.758787] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:35.759980] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:36.002149] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:36.002357] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:36.003258] [D] [thread 236126] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:36.003279] [I] [thread 236126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:36.003283] [I] [thread 236126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:36.003294] [I] [thread 236126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:36.003295] [I] [thread 236126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:36.131418] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:36.131623] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:37.132798] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:37.488463] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:37.488711] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:37.489707] [D] [thread 236132] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:37.489732] [I] [thread 236132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:37.489742] [I] [thread 236132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:37.489752] [I] [thread 236132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:37.489753] [I] [thread 236132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:37.590505] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:37.590682] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:38.591877] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:38.902300] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:38.902508] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:38.903422] [D] [thread 236139] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:38.903445] [I] [thread 236139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:38.903449] [I] [thread 236139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:38.903460] [I] [thread 236139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:38.903461] [I] [thread 236139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:39.030496] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:39.030690] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:40.031841] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:40.290858] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:40.291040] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:40.292619] [D] [thread 236145] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:40.292642] [I] [thread 236145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:40.292646] [I] [thread 236145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:40.292657] [I] [thread 236145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:40.292658] [I] [thread 236145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:40.404654] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:40.404828] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:41.405986] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:41.696040] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:41.696265] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:41.697181] [D] [thread 236151] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:41.697206] [I] [thread 236151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:41.697212] [I] [thread 236151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:41.697223] [I] [thread 236151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:41.697224] [I] [thread 236151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:41.823690] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:41.823891] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:42.824496] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:43.184483] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:43.184684] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:43.185588] [D] [thread 236156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:43.185611] [I] [thread 236156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:43.185618] [I] [thread 236156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:43.185629] [I] [thread 236156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:43.185630] [I] [thread 236156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:43.291035] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:43.291240] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:44.292455] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:44.618745] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:44.618942] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:44.619864] [D] [thread 236162] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:44.619887] [I] [thread 236162] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:44.619891] [I] [thread 236162] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:44.619902] [I] [thread 236162] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:44.619903] [I] [thread 236162] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:44.716148] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:44.716345] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:45.717531] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:46.044644] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:46.044842] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:46.045720] [D] [thread 236167] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:46.045741] [I] [thread 236167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:46.045744] [I] [thread 236167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:46.045755] [I] [thread 236167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:46.045756] [I] [thread 236167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:46.146656] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:46.146855] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:47.148052] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:47.413948] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:47.414150] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:47.415029] [D] [thread 236173] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:47.415051] [I] [thread 236173] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:47.415054] [I] [thread 236173] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:47.415071] [I] [thread 236173] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:47.415072] [I] [thread 236173] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:47.529321] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:47.529524] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:48.530712] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:48.897651] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:48.897848] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:48.898737] [D] [thread 236178] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:48.898758] [I] [thread 236178] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:48.898769] [I] [thread 236178] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:48.898779] [I] [thread 236178] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:48.898780] [I] [thread 236178] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:48.999555] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:48.999748] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:50.000905] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:50.221105] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:50.221279] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:50.222681] [D] [thread 236185] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:50.222710] [I] [thread 236185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:50.222713] [I] [thread 236185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:50.222723] [I] [thread 236185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:50.222725] [I] [thread 236185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:50.328922] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:50.329105] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:51.330167] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:51.632293] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:51.632510] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:51.634030] [D] [thread 236190] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:51.634052] [I] [thread 236190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:51.634055] [I] [thread 236190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:51.634066] [I] [thread 236190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:51.634068] [I] [thread 236190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:51.729717] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:51.729922] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:52.731106] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:53.010089] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:53.010274] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:53.011305] [D] [thread 236196] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:53.011329] [I] [thread 236196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:53.011332] [I] [thread 236196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:53.011342] [I] [thread 236196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:53.011344] [I] [thread 236196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:53.112546] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:53.112722] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:54.113869] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:54.401463] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:54.401656] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:54.402668] [D] [thread 236203] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:54.402691] [I] [thread 236203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:54.402695] [I] [thread 236203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:54.402705] [I] [thread 236203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:54.402706] [I] [thread 236203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:54.504599] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:54.504777] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:55.505947] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:55.765524] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:55.765720] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:55.766618] [D] [thread 236208] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:55.766643] [I] [thread 236208] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:55.766647] [I] [thread 236208] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:55.766657] [I] [thread 236208] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:55.766658] [I] [thread 236208] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:55.871529] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:55.871738] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:56.872881] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:57.223117] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:57.223320] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:57.224199] [D] [thread 236213] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:57.224222] [I] [thread 236213] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:57.224225] [I] [thread 236213] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:57.224236] [I] [thread 236213] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:57.224237] [I] [thread 236213] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:57.328120] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:57.328359] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:58.329513] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:58.605784] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:58.605963] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:58.606895] [D] [thread 236219] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:59:58.606918] [I] [thread 236219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:58.606922] [I] [thread 236219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:59:58.606933] [I] [thread 236219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:59:58.606934] [I] [thread 236219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:59:58.679165] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:58.679364] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:59.245175] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:59:59.245402] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:59:59.246578] [I] [thread 236223] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[09:59:59.246601] [D] [thread 236223] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[09:59:59.246618] [I] [thread 236223] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[09:59:59.246620] [I] [thread 236223] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[09:59:59.246643] [I] [thread 235001] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[09:59:59.246650] [I] [thread 235001] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[09:59:59.246655] [I] [thread 235001] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[09:59:59.246669] [I] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[09:59:59.246673] [D] [thread 235001] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[09:59:59.246678] [D] [thread 235001] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[09:59:59.246717] [D] [thread 235001] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(5: {FileSinkDescriptor()}) as root operator.[m
[36m[09:59:59.246769] [D] [thread 235001] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[09:59:59.246773] [D] [thread 235001] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[09:59:59.246777] [D] [thread 235001] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[09:59:59.246779] [D] [thread 235001] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[09:59:59.246780] [D] [thread 235001] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[09:59:59.246787] [D] [thread 235001] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[09:59:59.246789] [D] [thread 235001] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:59:59.246792] [D] [thread 235001] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[09:59:59.246796] [D] [thread 235001] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[09:59:59.246817] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:40579[m
[36m[09:59:59.246823] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:40579 queryId=1[m
[36m[09:59:59.248025] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:35713[m
[36m[09:59:59.248061] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:35713 queryId=1[m
[36m[09:59:59.249182] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:37923[m
[36m[09:59:59.249211] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:37923 queryId=1[m
[36m[09:59:59.250314] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:41929[m
[36m[09:59:59.250446] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:41929 queryId=1[m
[36m[09:59:59.251275] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:36447[m
[36m[09:59:59.251301] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:36447 queryId=1[m
[36m[09:59:59.252096] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:43627[m
[36m[09:59:59.252117] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:43627 queryId=1[m
[36m[09:59:59.252933] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:42913[m
[36m[09:59:59.252960] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:42913 queryId=1[m
[36m[09:59:59.253829] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:35433[m
[36m[09:59:59.253858] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:35433 queryId=1[m
[36m[09:59:59.254663] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:45679[m
[36m[09:59:59.254692] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:45679 queryId=1[m
[36m[09:59:59.255409] [D] [thread 235001] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:35543[m
[36m[09:59:59.255433] [D] [thread 235001] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:35543 queryId=1[m
[36m[09:59:59.256113] [D] [thread 235001] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[09:59:59.433110] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.433140] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.433189] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[36m[09:59:59.433190] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[09:59:59.433225] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[36m[09:59:59.433304] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=2) but there is still some active subpartition: 4[m
[36m[09:59:59.433318] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.433344] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[32m[09:59:59.433354] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[36m[09:59:59.433363] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=1) but there is still some active subpartition: 3[m
[32m[09:59:59.433413] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[09:59:59.433432] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[09:59:59.433446] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.433455] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[32m[09:59:59.433464] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[09:59:59.433470] [D] [thread 235010] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[09:59:59.433496] [D] [thread 235010] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:59:59.433501] [W] [thread 235010] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[09:59:59.436052] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.436113] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=3)[m
[32m[09:59:59.436129] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(4)[m
[36m[09:59:59.436140] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=3) but there is still some active subpartition: 4[m
[36m[09:59:59.436151] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.436154] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.436178] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=2)[m
[36m[09:59:59.436182] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=0)[m
[32m[09:59:59.436192] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(3)[m
[36m[09:59:59.436237] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=2) but there is still some active subpartition: 3[m
[36m[09:59:59.436252] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.436262] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=1)[m
[32m[09:59:59.436266] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(2)[m
[36m[09:59:59.436383] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=0) but there is still some active subpartition: 2[m
[32m[09:59:59.436446] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(1)[m
[36m[09:59:59.436456] [D] [thread 235011] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::39::0::0, counter is at 1.[m
[36m[09:59:59.436469] [D] [thread 235011] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:59:59.436474] [W] [thread 235011] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[09:59:59.476950] [E] [thread 236200] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::30::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaac7241ee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffb3163d4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaac7242e13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffbaa34c23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffba8cb13f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffb487ee9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffb364e043, in NES::collectAndPrintStacktrace[abi:cxx11]()
] callstack=
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaac7241ee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffb3163d4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaac7242e13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffbaa34c23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffba8cb13f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffb487ee9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffb364e043, in NES::collectAndPrintStacktrace[abi:cxx11]()
[m
[36m[09:59:59.621064] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.621092] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.621128] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=3)[m
[36m[09:59:59.621128] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=0)[m
[32m[09:59:59.621158] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(4)[m
[36m[09:59:59.621199] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=3) but there is still some active subpartition: 4[m
[32m[09:59:59.621209] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(3)[m
[36m[09:59:59.621213] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.621222] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=1)[m
[36m[09:59:59.621227] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=0) but there is still some active subpartition: 3[m
[32m[09:59:59.621232] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(2)[m
[36m[09:59:59.621241] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[09:59:59.621243] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.621253] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=2)[m
[32m[09:59:59.621263] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(1)[m
[36m[09:59:59.621285] [D] [thread 235010] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::45::0::0, counter is at 1.[m
[36m[09:59:59.621298] [D] [thread 235010] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:59:59.621303] [W] [thread 235010] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[09:59:59.623930] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.623974] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.623983] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=1)[m
[36m[09:59:59.623997] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=2)[m
[32m[09:59:59.623998] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(4)[m
[32m[09:59:59.624026] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(3)[m
[36m[09:59:59.624102] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=2) but there is still some active subpartition: 3[m
[36m[09:59:59.624117] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.624121] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=1) but there is still some active subpartition: 3[m
[36m[09:59:59.624126] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[32m[09:59:59.624136] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(2)[m
[36m[09:59:59.624140] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.624144] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[09:59:59.624157] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=3)[m
[32m[09:59:59.624167] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[09:59:59.624175] [D] [thread 235010] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[09:59:59.624186] [D] [thread 235010] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:59:59.624191] [W] [thread 235010] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[09:59:59.664832] [E] [thread 236200] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::42::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaacb085ee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff810a9d4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaacb086e13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8897ac23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8881113f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff827c4e9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff81594043, in NES::collectAndPrintStacktrace[abi:cxx11]()
] callstack=
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaacb085ee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff810a9d4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaacb086e13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8897ac23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8881113f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff827c4e9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff81594043, in NES::collectAndPrintStacktrace[abi:cxx11]()
[m
[36m[09:59:59.797147] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.797178] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.797208] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=1)[m
[36m[09:59:59.797208] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=0)[m
[32m[09:59:59.797236] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(4)[m
[32m[09:59:59.797285] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(3)[m
[36m[09:59:59.797324] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[09:59:59.797340] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=1) but there is still some active subpartition: 3[m
[36m[09:59:59.797341] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.797359] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.797366] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=2)[m
[36m[09:59:59.797372] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=3)[m
[32m[09:59:59.797375] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(2)[m
[32m[09:59:59.797396] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(1)[m
[36m[09:59:59.797403] [D] [thread 235011] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::57::0::0, counter is at 1.[m
[36m[09:59:59.797439] [D] [thread 235011] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:59:59.797445] [W] [thread 235011] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[09:59:59.797456] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=2) but there is still some active subpartition: 1[m
[36m[09:59:59.799461] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.799492] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=0)[m
[32m[09:59:59.799504] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(4)[m
[36m[09:59:59.799514] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=0) but there is still some active subpartition: 4[m
[36m[09:59:59.799524] [D] [thread 235010] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.799528] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.799533] [D] [thread 235010] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=3)[m
[32m[09:59:59.799541] [I] [thread 235010] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(3)[m
[36m[09:59:59.799548] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=2)[m
[36m[09:59:59.799550] [D] [thread 235010] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=3) but there is still some active subpartition: 3[m
[32m[09:59:59.799560] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(2)[m
[36m[09:59:59.799570] [D] [thread 235011] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[09:59:59.799580] [D] [thread 235011] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:46353): EndOfStream received for channel [m
[36m[09:59:59.799599] [D] [thread 235011] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=1)[m
[32m[09:59:59.799608] [I] [thread 235011] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(1)[m
[36m[09:59:59.799614] [D] [thread 235011] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::63::0::0, counter is at 1.[m
[36m[09:59:59.799625] [D] [thread 235011] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:59:59.799630] [W] [thread 235011] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[09:59:59.845832] [E] [thread 235021] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Transport closed[m
[33m[1m[09:59:59.846005] [W] [thread 235021] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:35433 went dead so we remove it[m
[32m[09:59:59.846072] [I] [thread 235021] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[09:59:59.846086] [I] [thread 235021] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:59:59.846090] [I] [thread 235021] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:59:59.846091] [I] [thread 235021] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:59:59.846094] [I] [thread 235021] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:59:59.846095] [I] [thread 235021] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[09:59:59.846115] [D] [thread 235021] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[09:59:59.847558] [E] [thread 235021] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Transport closed[m
[33m[1m[09:59:59.847692] [W] [thread 235021] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:45679 went dead so we remove it[m
[32m[09:59:59.847739] [I] [thread 235021] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[09:59:59.847772] [I] [thread 235021] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:59:59.847776] [I] [thread 235021] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:59:59.847777] [I] [thread 235021] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:59:59.847779] [I] [thread 235021] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:59:59.847780] [I] [thread 235021] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[09:59:59.847783] [D] [thread 235021] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:00:00.246544] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:00:00.679821] [D] [thread 235017] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[10:00:00.679882] [D] [thread 235017] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[10:00:00.679903] [D] [thread 235017] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[10:00:00.679914] [D] [thread 235017] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[10:00:00.679934] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.679971] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680103] [D] [thread 235017] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 33 is notifying completion: HardStop[m
[36m[10:00:00.680114] [D] [thread 235017] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 33 is terminated; tokens left = 7[m
[36m[10:00:00.680127] [D] [thread 235017] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[10:00:00.680147] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680162] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680186] [D] [thread 235017] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:00:00.680195] [D] [thread 235017] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:00:00.680201] [D] [thread 235017] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[10:00:00.680208] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680223] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680245] [D] [thread 235017] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 39 is notifying completion: HardStop[m
[36m[10:00:00.680249] [D] [thread 235017] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 39 is terminated; tokens left = 6[m
[36m[10:00:00.680255] [D] [thread 235017] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 39 terminationType=HardStop[m
[36m[10:00:00.680261] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680271] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680287] [D] [thread 235017] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=39 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:00:00.680293] [D] [thread 235017] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:00:00.680298] [D] [thread 235017] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[10:00:00.680303] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680314] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680440] [D] [thread 235017] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 45 is notifying completion: HardStop[m
[36m[10:00:00.680448] [D] [thread 235017] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 45 is terminated; tokens left = 5[m
[36m[10:00:00.680454] [D] [thread 235017] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 45 terminationType=HardStop[m
[36m[10:00:00.680461] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680475] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680490] [D] [thread 235017] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=45 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:00:00.680497] [D] [thread 235017] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:00:00.680502] [D] [thread 235017] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[10:00:00.680508] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680517] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680535] [D] [thread 235017] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 51 is notifying completion: HardStop[m
[36m[10:00:00.680538] [D] [thread 235017] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 51 is terminated; tokens left = 4[m
[36m[10:00:00.680543] [D] [thread 235017] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[10:00:00.680548] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680557] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680568] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:00:00.680572] [D] [thread 235017] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:00:00.680578] [D] [thread 235017] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:00:00.680568] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:00:00.680583] [D] [thread 235017] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[10:00:00.680588] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
2023-11-17 10:00:00.683 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=25 processedTuple=25 processedBuffers=25 processedWatermarks=0 latencyAVG=1700215050156 queueSizeAVG=0 availableGlobalBufferAVG=511 availableFixedBufferAVG=0
[36m[10:00:00.680597] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680615] [D] [thread 235017] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 57 is notifying completion: HardStop[m
[36m[10:00:00.680619] [D] [thread 235017] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 57 is terminated; tokens left = 3[m
[36m[10:00:00.680618] [D] [thread 235012] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 3[m
[36m[10:00:00.680624] [D] [thread 235017] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 57 terminationType=HardStop[m
[36m[10:00:00.680569] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:00:00.680631] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680628] [D] [thread 235015] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[10:00:00.680652] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680657] [D] [thread 235013] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 2[m
[36m[10:00:00.680669] [D] [thread 235017] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=57 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:00:00.680675] [D] [thread 235017] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:00:00.680680] [D] [thread 235017] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[10:00:00.680686] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680696] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:00:00.680715] [D] [thread 235017] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 63 is notifying completion: HardStop[m
[36m[10:00:00.680719] [D] [thread 235017] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 63 is terminated; tokens left = 2[m
[36m[10:00:00.680724] [D] [thread 235017] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 63 terminationType=HardStop[m
[36m[10:00:00.680729] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680738] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.680738] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:00:00.680749] [D] [thread 235014] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 1[m
[36m[10:00:00.680752] [D] [thread 235017] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=63 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:00:00.680757] [D] [thread 235014] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[10:00:00.680758] [D] [thread 235017] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:00:00.680764] [D] [thread 235014] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[10:00:00.680777] [D] [thread 235014] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[10:00:00.680828] [I] [thread 235014] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[10:00:00.681037] [D] [thread 235013] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:00:00.681134] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:00:00.681145] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:00:00.681146] [D] [thread 235014] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 1[m
[36m[10:00:00.681162] [D] [thread 235013] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 2[m
[36m[10:00:00.681164] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:00:00.681177] [D] [thread 235015] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 0[m
[36m[10:00:00.681249] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:00:00.681259] [D] [thread 235012] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 3[m
[36m[10:00:00.681266] [D] [thread 235012] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[10:00:00.681272] [D] [thread 235012] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::39::0::0[m
[36m[10:00:00.681279] [D] [thread 235012] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::39::0::0[m
[32m[10:00:00.681312] [I] [thread 235012] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(0)[m
[36m[10:00:00.681513] [D] [thread 235013] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:00:00.681638] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:00:00.681639] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:00:00.681640] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:00:00.681650] [D] [thread 235012] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 3[m
[36m[10:00:00.681662] [D] [thread 235013] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 2[m
[36m[10:00:00.681666] [D] [thread 235014] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 1[m
[36m[10:00:00.681733] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:00:00.681742] [D] [thread 235015] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 0[m
[36m[10:00:00.681750] [D] [thread 235015] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[10:00:00.681756] [D] [thread 235015] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::45::0::0[m
[36m[10:00:00.681763] [D] [thread 235015] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::45::0::0[m
[32m[10:00:00.681771] [I] [thread 235015] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(0)[m
[36m[10:00:00.681937] [D] [thread 235014] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:00:00.682027] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:00:00.682029] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:00:00.682032] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:00:00.682038] [D] [thread 235014] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 1[m
[36m[10:00:00.682040] [D] [thread 235013] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 2[m
[36m[10:00:00.682043] [D] [thread 235015] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[10:00:00.682114] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:00:00.682123] [D] [thread 235012] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 3[m
[36m[10:00:00.682130] [D] [thread 235012] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[10:00:00.682137] [D] [thread 235012] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[10:00:00.682143] [D] [thread 235012] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[10:00:00.682151] [I] [thread 235012] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[10:00:00.682308] [D] [thread 235015] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:00:00.682395] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[10:00:00.682403] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[10:00:00.682405] [D] [thread 235015] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 0[m
[36m[10:00:00.682409] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[10:00:00.682414] [D] [thread 235013] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 2[m
[36m[10:00:00.682420] [D] [thread 235012] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 3[m
[36m[10:00:00.682484] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[10:00:00.682494] [D] [thread 235014] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 1[m
[36m[10:00:00.682501] [D] [thread 235014] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[10:00:00.682507] [D] [thread 235014] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::57::0::0[m
[36m[10:00:00.682514] [D] [thread 235014] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::57::0::0[m
[32m[10:00:00.682522] [I] [thread 235014] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(0)[m
[36m[10:00:00.682675] [D] [thread 235012] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:00:00.682764] [D] [thread 235012] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[10:00:00.682767] [D] [thread 235015] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[10:00:00.682768] [D] [thread 235014] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[10:00:00.682774] [D] [thread 235012] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 3[m
[36m[10:00:00.682779] [D] [thread 235015] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 0[m
[36m[10:00:00.682783] [D] [thread 235014] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 1[m
[36m[10:00:00.682851] [D] [thread 235013] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[10:00:00.682860] [D] [thread 235013] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 2[m
[36m[10:00:00.682868] [D] [thread 235013] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[10:00:00.682873] [D] [thread 235013] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::63::0::0[m
[36m[10:00:00.682879] [D] [thread 235013] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::63::0::0[m
[32m[10:00:00.682909] [I] [thread 235013] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(0)[m
[36m[10:00:00.683064] [D] [thread 235014] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:00:00.683100] [D] [thread 235014] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[10:00:00.683114] [D] [thread 235014] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.683135] [D] [thread 235014] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:00:00.683237] [D] [thread 235014] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[10:00:00.683625] [D] [thread 235014] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[10:00:00.683637] [D] [thread 235014] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[10:00:00.683640] [D] [thread 235014] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[10:00:00.683713] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[10:00:00.683740] [D] [thread 235017] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[10:00:00.684121] [D] [thread 235017] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[10:00:00.684136] [D] [thread 235017] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[10:00:00.684140] [D] [thread 235017] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[10:00:00.684144] [D] [thread 235017] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[31m[1m[10:00:00.908535] [E] [thread 235021] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:00:00.908680] [W] [thread 235021] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:35433 went dead so we remove it[m
[32m[10:00:00.908732] [I] [thread 235021] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[10:00:00.908745] [W] [thread 235021] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[10:00:00.909923] [E] [thread 235021] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:00:00.910055] [W] [thread 235021] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:45679 went dead so we remove it[m
[32m[10:00:00.910101] [I] [thread 235021] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[10:00:00.910107] [W] [thread 235021] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[10:00:01.247729] [D] [thread 235020] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
