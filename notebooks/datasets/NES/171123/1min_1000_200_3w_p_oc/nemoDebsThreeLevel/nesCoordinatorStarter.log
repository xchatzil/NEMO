
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[11:32:20.403783] [I] [thread 237982] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: DEFAULT_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[11:32:20.403835] [I] [thread 237982] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[11:32:20.403879] [D] [thread 237982] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[11:32:20.404539] [D] [thread 237982] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[11:32:20.404709] [I] [thread 237982] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[11:32:20.404803] [D] [thread 237982] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[11:32:20.404821] [D] [thread 237982] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[11:32:20.404952] [D] [thread 237982] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[11:32:20.404970] [D] [thread 237982] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[11:32:20.404989] [D] [thread 237982] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[11:32:20.405013] [D] [thread 237982] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[11:32:20.405019] [D] [thread 237982] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[11:32:20.436717] [D] [thread 237982] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[11:32:20.436766] [D] [thread 237982] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:32:20.436817] [D] [thread 237982] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:32:20.436871] [D] [thread 237982] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:32:20.436934] [D] [thread 237982] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:32:20.436963] [D] [thread 237982] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:32:20.436978] [D] [thread 237982] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:32:20.437001] [D] [thread 237982] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[11:32:20.437165] [D] [thread 237982] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[11:32:20.437181] [D] [thread 237982] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[11:32:20.437211] [D] [thread 237982] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[11:32:20.437303] [D] [thread 237982] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[11:32:20.437351] [D] [thread 237982] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[11:32:20.437733] [D] [thread 237982] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[11:32:20.437801] [D] [thread 237982] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[11:32:20.437832] [D] [thread 237982] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[11:32:20.437855] [D] [thread 237982] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[11:32:20.437863] [W] [thread 237982] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[11:32:20.437872] [I] [thread 237982] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[11:32:20.437877] [D] [thread 237982] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[11:32:20.438124] [D] [thread 237982] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[11:32:20.438167] [I] [thread 237990] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[11:32:20.438177] [D] [thread 237990] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:32:20.438419] [D] [thread 237991] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[11:32:20.440041] [D] [thread 237982] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[11:32:20.440042] [D] [thread 237991] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[11:32:20.440064] [D] [thread 237982] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[11:32:20.440069] [D] [thread 237982] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[11:32:20.440070] [D] [thread 237982] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[11:32:20.440187] [D] [thread 237982] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[11:32:20.440206] [D] [thread 237982] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[11:32:20.440208] [D] [thread 237982] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[11:32:20.440228] [D] [thread 237982] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[11:32:20.440247] [D] [thread 237982] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[11:32:20.440253] [D] [thread 237982] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[11:32:20.440277] [I] [thread 237982] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:32:20.440580] [I] [thread 237982] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[11:32:20.440590] [I] [thread 237982] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:32:20.440649] [I] [thread 237982] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[11:32:20.440655] [I] [thread 237982] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:32:20.440812] [I] [thread 237982] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[11:32:20.440829] [I] [thread 237982] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:32:20.441037] [I] [thread 237982] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[11:32:20.441129] [D] [thread 237982] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[11:32:20.441166] [D] [thread 237982] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[11:32:20.441172] [W] [thread 237982] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[11:32:20.450367] [D] [thread 237982] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[11:32:20.458199] [D] [thread 237982] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[11:32:20.497149] [D] [thread 237982] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[36m[11:32:20.497711] [D] [thread 237982] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[11:32:20.497859] [I] [thread 237982] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[11:32:20.497899] [D] [thread 237982] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:32:20.497907] [D] [thread 237982] [DefaultPhaseFactory.cpp:66] [createLowerPhysicalToGeneratableOperatorsPhase] Create default lower pipeline plan phase[m
[36m[11:32:20.497918] [D] [thread 237982] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:32:20.497927] [D] [thread 237982] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:32:20.497932] [D] [thread 237982] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:32:20.497935] [D] [thread 237982] [DefaultPhaseFactory.cpp:91] [createBufferOptimizationPhase] Create buffer optimization phase[m
[36m[11:32:20.497943] [D] [thread 237982] [DefaultPhaseFactory.cpp:95] [createPredicationOptimizationPhase] Create predication optimization phase[m
[36m[11:32:20.497950] [D] [thread 237982] [DefaultPhaseFactory.cpp:72] [createCodeGenerationPhase] Create default code generation phase[m
[36m[11:32:20.498009] [D] [thread 237982] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[11:32:20.498020] [D] [thread 237982] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[11:32:20.498059] [D] [thread 237982] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[11:32:20.498098] [D] [thread 237982] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[11:32:20.498105] [D] [thread 237982] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[11:32:20.499263] [D] [thread 237996] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[11:32:20.500134] [D] [thread 237996] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[11:32:20.500190] [D] [thread 237996] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 40445[m
[36m[11:32:20.500812] [D] [thread 237999] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 40445[m
[36m[11:32:20.500812] [D] [thread 238000] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 40445[m
[32m[11:32:20.501106] [I] [thread 237982] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:40445[m
[36m[11:32:20.501126] [D] [thread 237982] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1700064987  with numThreads= 4[m
[36m[11:32:20.501150] [D] [thread 237982] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[11:32:20.501914] [D] [thread 237982] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[11:32:20.501929] [D] [thread 237982] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[11:32:20.501944] [D] [thread 237982] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[11:32:20.501949] [D] [thread 237982] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[11:32:20.501990] [D] [thread 238003] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 1 pins to queue 0[m
[36m[11:32:20.501990] [D] [thread 238002] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 2 pins to queue 0[m
[36m[11:32:20.501995] [D] [thread 238001] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[11:32:20.502012] [D] [thread 238001] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[11:32:20.502498] [D] [thread 238004] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 3 pins to queue 0[m
[36m[11:32:20.502527] [D] [thread 238002] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[11:32:20.502647] [D] [thread 238003] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[11:32:20.502730] [D] [thread 238005] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[11:32:20.502824] [D] [thread 238005] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[11:32:20.503003] [D] [thread 238004] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[11:32:20.503614] [D] [thread 238005] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 32901[m
[36m[11:32:20.503630] [D] [thread 237982] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:32901: 32901[m
[36m[11:32:20.503634] [D] [thread 237982] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[11:32:20.503644] [D] [thread 237982] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[11:32:20.503651] [D] [thread 237982] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[11:32:20.504018] [D] [thread 237982] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[11:32:20.504177] [W] [thread 237982] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[11:32:20.504192] [D] [thread 237982] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[11:32:20.505917] [D] [thread 238005] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[11:32:20.506111] [D] [thread 237982] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 32901
dataPort: 40445
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:20.509133] [D] [thread 237992] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 32901
dataPort: 40445
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:20.509207] [D] [thread 237992] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 32901
dataPort: 40445
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:20.509225] [D] [thread 237992] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[11:32:20.509230] [W] [thread 237992] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[11:32:20.509231] [D] [thread 237992] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:20.509233] [D] [thread 237992] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:20.509244] [D] [thread 237992] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[11:32:20.509291] [D] [thread 237992] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[11:32:20.509337] [I] [thread 237992] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[11:32:20.509348] [D] [thread 237992] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:20.509387] [D] [thread 237992] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:20.509399] [I] [thread 237992] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:32:20.509401] [D] [thread 237992] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:32:20.509409] [D] [thread 237992] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:20.509411] [D] [thread 237992] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:20.509415] [D] [thread 237992] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:20.509546] [D] [thread 237992] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[11:32:20.510198] [D] [thread 237982] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[11:32:20.510230] [D] [thread 237982] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[11:32:20.510329] [D] [thread 237982] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[11:32:20.510337] [D] [thread 237982] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[11:32:20.537982] [D] [thread 237982] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[11:32:20.538033] [D] [thread 237982] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[11:32:20.538036] [D] [thread 237982] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[11:32:20.538431] [D] [thread 237982] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[11:32:20.538464] [D] [thread 237982] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[11:32:20.538784] [D] [thread 237982] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[11:32:20.538842] [I] [thread 238009] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[11:32:20.541006] [I] [thread 238009] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[11:32:20.541064] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:20.563503] [D] [thread 237982] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[11:32:20.563553] [D] [thread 237982] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[11:32:20.563555] [D] [thread 237982] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[11:32:20.563938] [D] [thread 237982] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[11:32:21.542215] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:22.543406] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:23.544599] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:24.472043] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:24.472917] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:24.473494] [D] [thread 238012] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[11:32:24.473791] [D] [thread 238012] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[11:32:24.473805] [D] [thread 238012] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[11:32:24.473854] [D] [thread 238012] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[11:32:24.474889] [D] [thread 238013] [File.cpp:27] [createFile] Create File to file:///tmp/query_17-11-2023_11-32-24_1206808.cpp[m
[36m[11:32:24.480727] [D] [thread 238013] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:32:24.480947] [D] [thread 238013] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_17-11-2023_11-32-24_1206808.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_17-11-2023_11-32-24_1206808.cpp'[m
[36m[11:32:25.474074] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:26.203871] [I] [thread 238013] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1729.085685ms[m
[36m[11:32:26.204959] [D] [thread 238012] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[11:32:26.204999] [D] [thread 238012] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[11:32:26.205005] [D] [thread 238012] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[11:32:26.205025] [D] [thread 238012] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[11:32:26.364004] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:26.364289] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:26.364830] [I] [thread 238019] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:26.365010] [I] [thread 238019] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:26.512249] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:26.512531] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:26.513117] [I] [thread 238020] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:26.513210] [I] [thread 238020] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:26.670203] [D] [thread 237992] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 46829
dataPort: 40843
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:26.670288] [D] [thread 237992] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 46829
dataPort: 40843
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:26.670304] [D] [thread 237992] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:26.670376] [D] [thread 237992] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:26.670380] [D] [thread 237992] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:26.670415] [D] [thread 237992] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[11:32:26.670445] [D] [thread 237992] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:26.670472] [I] [thread 237992] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:26.670511] [I] [thread 237992] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:26.670568] [D] [thread 237992] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[11:32:26.670600] [D] [thread 237992] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:26.670650] [D] [thread 237992] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:26.670660] [I] [thread 237992] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:32:26.670663] [D] [thread 237992] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:32:26.670670] [D] [thread 237992] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:26.670673] [D] [thread 237992] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:26.670692] [D] [thread 237992] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:26.670761] [D] [thread 237992] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[11:32:27.513706] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:28.514903] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:29.489719] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:29.490120] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:29.490860] [I] [thread 238021] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:29.490966] [I] [thread 238021] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:29.599683] [D] [thread 238007] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 40105
dataPort: 46325
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:29.599774] [D] [thread 238007] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 40105
dataPort: 46325
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:29.599790] [D] [thread 238007] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:29.599910] [D] [thread 238007] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:29.599915] [D] [thread 238007] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:29.599925] [D] [thread 238007] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[11:32:29.599950] [D] [thread 238007] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:29.599967] [I] [thread 238007] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:29.599995] [I] [thread 238007] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:29.600006] [D] [thread 238007] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[11:32:29.600018] [D] [thread 238007] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:29.600067] [D] [thread 238007] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:29.600078] [I] [thread 238007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:32:29.600081] [D] [thread 238007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:32:29.600087] [D] [thread 238007] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:29.600090] [D] [thread 238007] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:29.600093] [D] [thread 238007] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:29.600193] [D] [thread 238007] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[11:32:30.491320] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:31.492523] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:32.493724] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:32.720005] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:32.720431] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:32.721134] [I] [thread 238022] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:32.721291] [I] [thread 238022] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:32.840806] [D] [thread 237992] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 36833
dataPort: 36815
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:32.840888] [D] [thread 237992] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 36833
dataPort: 36815
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:32.840903] [D] [thread 237992] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:32.841003] [D] [thread 237992] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:32.841007] [D] [thread 237992] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:32.841017] [D] [thread 237992] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[11:32:32.841043] [D] [thread 237992] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:32.841068] [I] [thread 237992] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:32.841095] [I] [thread 237992] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:32.841106] [D] [thread 237992] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[11:32:32.841118] [D] [thread 237992] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:32.841176] [D] [thread 237992] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:32.841188] [I] [thread 237992] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:32:32.841191] [D] [thread 237992] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:32:32.841197] [D] [thread 237992] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:32.841200] [D] [thread 237992] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:32.841203] [D] [thread 237992] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:32.841270] [D] [thread 237992] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[11:32:33.721603] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:34.722788] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:35.391434] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:35.391836] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:35.392165] [I] [thread 238023] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:35.392435] [I] [thread 238023] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:35.568815] [D] [thread 237992] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 33633
dataPort: 45895
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:35.568895] [D] [thread 237992] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 33633
dataPort: 45895
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:35.568911] [D] [thread 237992] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:35.569023] [D] [thread 237992] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:35.569028] [D] [thread 237992] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:35.569040] [D] [thread 237992] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[11:32:35.569066] [D] [thread 237992] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:35.569083] [I] [thread 237992] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:35.569111] [I] [thread 237992] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:35.569121] [D] [thread 237992] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[11:32:35.569133] [D] [thread 237992] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:35.569201] [D] [thread 237992] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:35.569212] [I] [thread 237992] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:32:35.569224] [D] [thread 237992] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:32:35.569231] [D] [thread 237992] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:35.569234] [D] [thread 237992] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:35.569238] [D] [thread 237992] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:35.569306] [D] [thread 237992] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[11:32:35.593284] [D] [thread 238007] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[11:32:35.593335] [I] [thread 238007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:32:35.593339] [D] [thread 238007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:32:35.593355] [D] [thread 238007] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[11:32:35.593408] [D] [thread 238007] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:32:35.593419] [D] [thread 238007] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[11:32:35.593445] [D] [thread 238007] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[11:32:35.593452] [D] [thread 238007] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:32:35.593462] [D] [thread 238007] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:32:35.593466] [D] [thread 238007] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:32:35.594835] [D] [thread 238024] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[11:32:35.594876] [D] [thread 238024] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[11:32:35.594882] [I] [thread 238024] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:32:35.594885] [D] [thread 238024] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:32:35.594887] [D] [thread 238024] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[11:32:35.594889] [I] [thread 238024] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:32:35.594891] [D] [thread 238024] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:32:35.594894] [D] [thread 238024] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:32:35.594907] [D] [thread 238024] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:32:35.594972] [I] [thread 238024] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:35.594986] [D] [thread 238024] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:32:35.594990] [D] [thread 238024] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:32:35.594996] [D] [thread 238024] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[11:32:35.594998] [I] [thread 238024] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:32:35.595000] [D] [thread 238024] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:32:35.595003] [D] [thread 238024] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[11:32:35.595004] [I] [thread 238024] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:32:35.595006] [D] [thread 238024] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:32:35.595008] [D] [thread 238024] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:32:35.595032] [I] [thread 238024] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[11:32:35.595038] [D] [thread 238024] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:32:35.595106] [D] [thread 238024] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:32:35.595112] [D] [thread 238024] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:32:36.393043] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:37.394259] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:38.395487] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:38.467046] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:38.467435] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:38.467917] [I] [thread 238025] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:38.468116] [I] [thread 238025] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:38.584187] [D] [thread 237992] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 34755
dataPort: 39685
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:38.584277] [D] [thread 237992] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 34755
dataPort: 39685
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:38.584291] [D] [thread 237992] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:38.584557] [D] [thread 237992] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:38.584566] [D] [thread 237992] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:38.584580] [D] [thread 237992] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[11:32:38.584607] [D] [thread 237992] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:38.584659] [I] [thread 237992] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:38.584688] [I] [thread 237992] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:38.584698] [D] [thread 237992] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[11:32:38.584710] [D] [thread 237992] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:38.584881] [D] [thread 237992] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:38.584898] [I] [thread 237992] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:32:38.584924] [D] [thread 237992] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:32:38.584932] [D] [thread 237992] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:38.584936] [D] [thread 237992] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:38.584939] [D] [thread 237992] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:38.585010] [D] [thread 237992] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[11:32:38.608252] [D] [thread 238026] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[11:32:38.608298] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:32:38.608301] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:32:38.608310] [D] [thread 238026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[11:32:38.608380] [D] [thread 238026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:32:38.608387] [D] [thread 238026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[11:32:38.608400] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:32:38.608405] [D] [thread 238026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[11:32:38.608410] [D] [thread 238026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:32:38.608416] [D] [thread 238026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:32:38.608421] [D] [thread 238026] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:32:38.609449] [D] [thread 238026] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[11:32:38.609461] [D] [thread 238026] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[11:32:38.609465] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:32:38.609468] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:32:38.609471] [D] [thread 238026] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[11:32:38.609472] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:32:38.609474] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:32:38.609477] [D] [thread 238026] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:32:38.609489] [D] [thread 238026] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:32:38.609552] [I] [thread 238026] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:38.609558] [D] [thread 238026] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:32:38.609561] [D] [thread 238026] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:32:38.609564] [D] [thread 238026] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[11:32:38.609567] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:32:38.609568] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:32:38.609571] [D] [thread 238026] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[11:32:38.609573] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:32:38.609574] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:32:38.609576] [D] [thread 238026] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:32:38.609601] [I] [thread 238026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[11:32:38.609607] [D] [thread 238026] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:32:38.609690] [D] [thread 238026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:32:38.609695] [D] [thread 238026] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:32:39.468645] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:40.469860] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:41.471068] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:41.933347] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:41.933728] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:41.934222] [I] [thread 238027] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:41.934439] [I] [thread 238027] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:42.090735] [D] [thread 238026] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 32801
dataPort: 45565
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:42.090823] [D] [thread 238026] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 32801
dataPort: 45565
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:42.090838] [D] [thread 238026] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:42.090972] [D] [thread 238026] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:42.090977] [D] [thread 238026] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:42.090986] [D] [thread 238026] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[11:32:42.091041] [D] [thread 238026] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:42.091059] [I] [thread 238026] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:42.091086] [I] [thread 238026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:42.091096] [D] [thread 238026] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[11:32:42.091107] [D] [thread 238026] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:42.091200] [D] [thread 238026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:42.091212] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:32:42.091215] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:32:42.091222] [D] [thread 238026] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:42.091225] [D] [thread 238026] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:42.091228] [D] [thread 238026] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:42.091296] [D] [thread 238026] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[11:32:42.115092] [D] [thread 238026] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[11:32:42.115123] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:32:42.115128] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:32:42.115135] [D] [thread 238026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[11:32:42.115156] [D] [thread 238026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:32:42.115161] [D] [thread 238026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[11:32:42.115167] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:32:42.115170] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:32:42.115173] [D] [thread 238026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[11:32:42.115177] [D] [thread 238026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:32:42.115182] [D] [thread 238026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:32:42.115186] [D] [thread 238026] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:32:42.116476] [D] [thread 238026] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[11:32:42.116521] [D] [thread 238026] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[11:32:42.116529] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:32:42.116533] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:32:42.116541] [D] [thread 238026] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[11:32:42.116544] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:32:42.116546] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:32:42.116549] [D] [thread 238026] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:32:42.116563] [D] [thread 238026] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:32:42.116631] [I] [thread 238026] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:42.116639] [D] [thread 238026] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:32:42.116643] [D] [thread 238026] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:32:42.116646] [D] [thread 238026] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[11:32:42.116649] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:32:42.116651] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:32:42.116654] [D] [thread 238026] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[11:32:42.116671] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:32:42.116673] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:32:42.116676] [D] [thread 238026] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:32:42.116704] [I] [thread 238026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:32:42.116711] [D] [thread 238026] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:32:42.116816] [D] [thread 238026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:32:42.116858] [D] [thread 238026] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:32:42.934901] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:43.936111] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:44.937293] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:45.630040] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:45.630295] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:45.630804] [I] [thread 238030] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:45.631017] [I] [thread 238030] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:45.807101] [D] [thread 238026] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 35887
dataPort: 42091
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:45.807188] [D] [thread 238026] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 35887
dataPort: 42091
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:45.807203] [D] [thread 238026] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:45.807352] [D] [thread 238026] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:45.807356] [D] [thread 238026] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:45.807365] [D] [thread 238026] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[11:32:45.807392] [D] [thread 238026] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:45.807410] [I] [thread 238026] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:45.807437] [I] [thread 238026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:45.807447] [D] [thread 238026] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[11:32:45.807459] [D] [thread 238026] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:45.807562] [D] [thread 238026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:45.807604] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:32:45.807607] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:32:45.807614] [D] [thread 238026] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:45.807617] [D] [thread 238026] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:45.807620] [D] [thread 238026] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:45.807685] [D] [thread 238026] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[11:32:45.831026] [D] [thread 238026] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[11:32:45.831058] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:32:45.831063] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:32:45.831071] [D] [thread 238026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[11:32:45.831095] [D] [thread 238026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:32:45.831101] [D] [thread 238026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[11:32:45.831107] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:32:45.831116] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:32:45.831119] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:32:45.831122] [D] [thread 238026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[11:32:45.831126] [D] [thread 238026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:32:45.831131] [D] [thread 238026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:32:45.831135] [D] [thread 238026] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:32:45.832522] [D] [thread 238026] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[11:32:45.832538] [D] [thread 238026] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[11:32:45.832543] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:32:45.832546] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:32:45.832549] [D] [thread 238026] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[11:32:45.832551] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:32:45.832553] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:32:45.832557] [D] [thread 238026] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:32:45.832571] [D] [thread 238026] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:32:45.832636] [I] [thread 238026] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:45.832644] [D] [thread 238026] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:32:45.832648] [D] [thread 238026] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:32:45.832651] [D] [thread 238026] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[11:32:45.832654] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:32:45.832656] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:32:45.832659] [D] [thread 238026] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[11:32:45.832661] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:32:45.832663] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:32:45.832666] [D] [thread 238026] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:32:45.832693] [I] [thread 238026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:32:45.832700] [D] [thread 238026] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:32:45.832814] [D] [thread 238026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:32:45.832823] [D] [thread 238026] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:32:46.631411] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:47.632457] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:48.633610] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:49.634172] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:50.215435] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:50.215710] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:50.216114] [I] [thread 238034] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:50.216432] [I] [thread 238034] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:50.543130] [D] [thread 238026] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 44833
dataPort: 33703
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:50.543211] [D] [thread 238026] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 44833
dataPort: 33703
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:50.543228] [D] [thread 238026] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:50.543386] [D] [thread 238026] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:50.543391] [D] [thread 238026] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:50.543400] [D] [thread 238026] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[11:32:50.543487] [D] [thread 238026] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:50.543504] [I] [thread 238026] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:50.543531] [I] [thread 238026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:50.543540] [D] [thread 238026] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[11:32:50.543552] [D] [thread 238026] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:50.543668] [D] [thread 238026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:50.543680] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:32:50.543683] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:32:50.543690] [D] [thread 238026] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:50.543693] [D] [thread 238026] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:50.543696] [D] [thread 238026] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:50.543762] [D] [thread 238026] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[11:32:50.567625] [D] [thread 238031] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[11:32:50.567668] [I] [thread 238031] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:32:50.567673] [D] [thread 238031] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:32:50.567683] [D] [thread 238031] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[11:32:50.567707] [D] [thread 238031] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:32:50.567713] [D] [thread 238031] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[11:32:50.567721] [D] [thread 238031] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:32:50.567725] [D] [thread 238031] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:32:50.567728] [D] [thread 238031] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:32:50.567730] [D] [thread 238031] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:32:50.567734] [D] [thread 238031] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[11:32:50.567738] [D] [thread 238031] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:32:50.567745] [D] [thread 238031] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:32:50.567750] [D] [thread 238031] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:32:50.568901] [D] [thread 238026] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[11:32:50.568941] [D] [thread 238026] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[11:32:50.568946] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:32:50.568949] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:32:50.568961] [D] [thread 238026] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[11:32:50.568963] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:32:50.568965] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:32:50.568968] [D] [thread 238026] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:32:50.568983] [D] [thread 238026] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:32:50.569051] [I] [thread 238026] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:50.569059] [D] [thread 238026] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:32:50.569063] [D] [thread 238026] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:32:50.569066] [D] [thread 238026] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[11:32:50.569069] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:32:50.569071] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:32:50.569074] [D] [thread 238026] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[11:32:50.569076] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:32:50.569077] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:32:50.569080] [D] [thread 238026] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[11:32:50.569106] [I] [thread 238026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:32:50.569113] [D] [thread 238026] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:32:50.569238] [D] [thread 238026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:32:50.569299] [D] [thread 238026] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:32:51.216905] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:52.218117] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:53.219327] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:53.414248] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:53.414513] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:53.414975] [I] [thread 238035] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:53.415251] [I] [thread 238035] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:53.648501] [D] [thread 238026] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 42857
dataPort: 41005
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:53.648574] [D] [thread 238026] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 42857
dataPort: 41005
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:32:53.648588] [D] [thread 238026] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:32:53.648742] [D] [thread 238026] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:32:53.648746] [D] [thread 238026] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:32:53.648755] [D] [thread 238026] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[11:32:53.648777] [D] [thread 238026] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:32:53.648793] [I] [thread 238026] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:32:53.648816] [I] [thread 238026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:53.648825] [D] [thread 238026] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[11:32:53.648836] [D] [thread 238026] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:32:53.648979] [D] [thread 238026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:32:53.649099] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:32:53.649103] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:32:53.649109] [D] [thread 238026] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:32:53.649112] [D] [thread 238026] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:32:53.649114] [D] [thread 238026] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:32:53.649175] [D] [thread 238026] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[11:32:53.673234] [D] [thread 238026] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[11:32:53.673278] [I] [thread 238026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:32:53.673282] [D] [thread 238026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:32:53.673292] [D] [thread 238026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[11:32:53.673319] [D] [thread 238026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:32:53.673326] [D] [thread 238026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[11:32:53.673333] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:32:53.673337] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:32:53.673340] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:32:53.673342] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:32:53.673345] [D] [thread 238026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[11:32:53.673349] [D] [thread 238026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[11:32:53.673353] [D] [thread 238026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:32:53.673358] [D] [thread 238026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:32:53.673362] [D] [thread 238026] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:32:53.674823] [D] [thread 238036] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[11:32:53.674868] [D] [thread 238036] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[11:32:53.674874] [I] [thread 238036] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:32:53.674878] [D] [thread 238036] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:32:53.674882] [D] [thread 238036] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[11:32:53.674884] [I] [thread 238036] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:32:53.674887] [D] [thread 238036] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:32:53.674889] [D] [thread 238036] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:32:53.674905] [D] [thread 238036] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:32:53.674974] [I] [thread 238036] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:32:53.674982] [D] [thread 238036] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:32:53.674986] [D] [thread 238036] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:32:53.674989] [D] [thread 238036] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[11:32:53.674992] [I] [thread 238036] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:32:53.674994] [D] [thread 238036] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:32:53.674997] [D] [thread 238036] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[11:32:53.674999] [I] [thread 238036] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:32:53.675001] [D] [thread 238036] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:32:53.675003] [D] [thread 238036] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[11:32:53.675033] [I] [thread 238036] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:32:53.675040] [D] [thread 238036] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:32:53.675188] [D] [thread 238036] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:32:53.675195] [D] [thread 238036] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:32:54.415691] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:55.416867] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:55.528231] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:55.528565] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:55.529084] [I] [thread 238037] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:32:55.529415] [I] [thread 238037] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:32:56.437490] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:56.437695] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:56.508419] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:56.508790] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:56.509378] [D] [thread 238042] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[11:32:56.509422] [I] [thread 238042] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[11:32:56.509468] [I] [thread 238042] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[11:32:56.509477] [D] [thread 238042] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[11:32:56.509520] [D] [thread 238042] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[11:32:56.509557] [D] [thread 238042] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));[m
[36m[11:32:56.509567] [D] [thread 238042] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel.out","CSV_FORMAT","OVERWRITE", true));
}
}
[m
[36m[11:32:56.510607] [D] [thread 238043] [File.cpp:27] [createFile] Create File to file:///tmp/query_17-11-2023_11-32-56_8604305.cpp[m
[36m[11:32:56.511069] [D] [thread 238043] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:32:56.511111] [D] [thread 238043] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[11:32:56.511224] [D] [thread 238043] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -o/tmp/query_17-11-2023_11-32-56_8604305.so -DFMT_HEADER_ONLY /tmp/query_17-11-2023_11-32-56_8604305.cpp'[m
[36m[11:32:57.509946] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:58.511098] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:32:59.439445] [I] [thread 238043] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2928.905005ms[m
[36m[11:32:59.439603] [D] [thread 238042] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[11:32:59.439625] [D] [thread 238042] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[11:32:59.439687] [I] [thread 238042] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.439819] [D] [thread 238042] [Query.cpp:237] [project] Query: add projection to query[m
[36m[11:32:59.439833] [D] [thread 238042] [QueryPlanBuilder.cpp:51] [addProjection] QueryPlanBuilder: add projection operator to query plan[m
[32m[11:32:59.439846] [I] [thread 238042] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:32:59.439884] [D] [thread 238042] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PROJECTION(2, schema=) as new root of the plan.[m
[36m[11:32:59.439924] [D] [thread 238042] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.439926] [D] [thread 238042] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.440013] [D] [thread 238042] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[11:32:59.440052] [D] [thread 238042] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[11:32:59.440082] [I] [thread 238042] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:32:59.440098] [D] [thread 238042] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(3) as new root of the plan.[m
[36m[11:32:59.440116] [D] [thread 238042] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.440118] [D] [thread 238042] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:32:59.440145] [I] [thread 238042] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:32:59.440165] [D] [thread 238042] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-4, Min;) as new root of the plan.[m
[36m[11:32:59.440178] [D] [thread 238042] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.440180] [D] [thread 238042] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.440194] [D] [thread 238042] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[11:32:59.440202] [I] [thread 238042] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[11:32:59.440213] [D] [thread 238042] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[11:32:59.440227] [D] [thread 238042] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.440228] [D] [thread 238042] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.440994] [D] [thread 238042] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.441046] [D] [thread 238042] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.441055] [D] [thread 238042] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.441071] [D] [thread 238042] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.441077] [D] [thread 238042] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.441079] [D] [thread 238042] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.441089] [D] [thread 238042] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:32:59.441096] [D] [thread 238042] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.441100] [D] [thread 238042] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.441102] [D] [thread 238042] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.441221] [D] [thread 238042] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.441228] [D] [thread 238042] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.441235] [D] [thread 238042] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.441488] [D] [thread 238042] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.441586] [D] [thread 238042] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.441674] [D] [thread 238042] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:32:59.441759] [I] [thread 238042] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[11:32:59.441856] [I] [thread 238042] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[11:32:59.441869] [I] [thread 238042] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:32:59.441899] [I] [thread 237990] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:32:59.441912] [I] [thread 237990] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:32:59.441917] [I] [thread 237990] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:32:59.441953] [I] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[11:32:59.441965] [D] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:32:59.441968] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.441979] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.441983] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.441989] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.441992] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.442202] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.442275] [D] [thread 237990] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.442340] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.442354] [D] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:32:59.442359] [D] [thread 237990] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:32:59.442407] [D] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[11:32:59.442416] [I] [thread 237990] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:32:59.442435] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[11:32:59.442459] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:32:59.442503] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:32:59.442529] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:32:59.442569] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.442621] [D] [thread 237990] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[11:32:59.442707] [D] [thread 237990] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.442778] [D] [thread 237990] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[11:32:59.442829] [I] [thread 237990] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.442853] [D] [thread 237990] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:32:59.442855] [I] [thread 237990] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:32:59.442863] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[11:32:59.442870] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:32:59.442895] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:32:59.442915] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:32:59.442948] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.442983] [D] [thread 237990] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[11:32:59.443028] [I] [thread 237990] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.443040] [D] [thread 237990] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:32:59.443041] [I] [thread 237990] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:32:59.443046] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[11:32:59.443051] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:32:59.443071] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:32:59.443090] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:32:59.443121] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.443154] [D] [thread 237990] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[11:32:59.443194] [I] [thread 237990] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[11:32:59.443233] [I] [thread 237990] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.443273] [D] [thread 237990] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[11:32:59.443313] [D] [thread 237990] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.443351] [D] [thread 237990] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.443367] [D] [thread 237990] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[11:32:59.443405] [D] [thread 237990] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.443443] [D] [thread 237990] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.443475] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.443484] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.443487] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.443492] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.443496] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.443670] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.443741] [D] [thread 237990] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.443803] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:32:59.443814] [I] [thread 237990] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[11:32:59.443861] [I] [thread 237990] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:32:59.443867] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.443874] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.443878] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[11:32:59.443979] [I] [thread 237990] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:32:59.443995] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.444003] [D] [thread 237990] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:32:59.444008] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444013] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:32:59.444018] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444021] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:32:59.444089] [D] [thread 237990] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:32:59.444154] [I] [thread 237990] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:32:59.444158] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.444162] [D] [thread 237990] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:32:59.444164] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444166] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:32:59.444170] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444172] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:32:59.444229] [D] [thread 237990] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:32:59.444260] [I] [thread 237990] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:32:59.444263] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.444267] [D] [thread 237990] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:32:59.444269] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444272] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:32:59.444275] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444278] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:32:59.444398] [D] [thread 237990] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:32:59.444463] [I] [thread 237990] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:32:59.444468] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.444475] [D] [thread 237990] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:32:59.444477] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444480] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:32:59.444485] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444487] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:32:59.444547] [D] [thread 237990] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:32:59.444585] [I] [thread 237990] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:32:59.444588] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.444592] [D] [thread 237990] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:32:59.444594] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444597] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:32:59.444601] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444603] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:32:59.444672] [D] [thread 237990] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:32:59.444710] [I] [thread 237990] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:32:59.444713] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:32:59.444717] [D] [thread 237990] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:32:59.444719] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444721] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:32:59.444724] [D] [thread 237990] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:32:59.444726] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:32:59.444782] [D] [thread 237990] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[11:32:59.444993] [D] [thread 237990] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[11:32:59.445008] [I] [thread 237990] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[11:32:59.445163] [D] [thread 237990] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:32:59.445223] [D] [thread 237990] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[11:32:59.445386] [D] [thread 237990] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:32:59.445403] [D] [thread 237990] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[11:32:59.445559] [D] [thread 237990] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:32:59.445623] [D] [thread 237990] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[11:32:59.445632] [D] [thread 237990] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-4, Min;)[m
[36m[11:32:59.445643] [D] [thread 237990] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-4, Min;)[m
[32m[11:32:59.445664] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:32:59.445667] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[11:32:59.445692] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:32:59.445693] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[11:32:59.445704] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:32:59.445706] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[11:32:59.445716] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:32:59.445717] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[11:32:59.445727] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:32:59.445729] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[11:32:59.445739] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:32:59.445740] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[11:32:59.445776] [I] [thread 237990] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:32:59.445779] [I] [thread 237990] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:32:59.445780] [I] [thread 237990] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:32:59.445781] [I] [thread 237990] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:32:59.445782] [I] [thread 237990] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:32:59.445784] [I] [thread 237990] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:32:59.445785] [I] [thread 237990] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:32:59.445788] [I] [thread 237990] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:32:59.445791] [I] [thread 237990] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:32:59.445792] [I] [thread 237990] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:32:59.445800] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[11:32:59.445824] [D] [thread 237990] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[11:32:59.445868] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[11:32:59.445881] [D] [thread 237990] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[11:32:59.445920] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[11:32:59.445932] [D] [thread 237990] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[36m[11:32:59.446134] [D] [thread 237990] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:32:59.446293] [D] [thread 237990] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:32:59.446332] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.446353] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.446358] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[11:32:59.446365] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.446369] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.446537] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.446735] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.446789] [D] [thread 237990] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:32:59.446820] [I] [thread 237990] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:32:59.446842] [I] [thread 237990] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.447001] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.447173] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.447233] [D] [thread 237990] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:32:59.447249] [I] [thread 237990] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:32:59.447269] [I] [thread 237990] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.447419] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.447603] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.447653] [D] [thread 237990] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:32:59.447671] [I] [thread 237990] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:32:59.447692] [I] [thread 237990] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.447706] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.447826] [D] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:32:59.447839] [D] [thread 237990] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:32:59.447910] [D] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:32:59.447925] [D] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[11:32:59.447929] [D] [thread 237990] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[11:32:59.447937] [I] [thread 237990] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[11:32:59.447945] [I] [thread 237990] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:32:59.447957] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[11:32:59.447971] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[11:32:59.448020] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[11:32:59.448044] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[11:32:59.448087] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[11:32:59.448108] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[11:32:59.448125] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[11:32:59.448141] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[11:32:59.448159] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[11:32:59.448177] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[11:32:59.448207] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[11:32:59.448251] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[11:32:59.448282] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[11:32:59.448312] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[11:32:59.448382] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[11:32:59.448416] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[11:32:59.448465] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[11:32:59.448539] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[11:32:59.448588] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[11:32:59.448636] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[11:32:59.448678] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[11:32:59.448726] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:32:59.448834] [D] [thread 237990] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:32:59.448847] [D] [thread 237990] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:32:59.448853] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448858] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448860] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448863] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448866] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448869] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448872] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448874] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448877] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448879] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448882] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448884] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448887] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448889] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448892] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448894] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448897] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448898] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.448901] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448903] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.448905] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448907] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.448909] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448910] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.448913] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448914] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.448916] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.448918] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.449064] [D] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:32:59.449068] [D] [thread 237990] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:32:59.449076] [D] [thread 237990] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:32:59.449079] [D] [thread 237990] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:32:59.449080] [D] [thread 237990] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[11:32:59.449083] [D] [thread 237990] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[11:32:59.449088] [I] [thread 237990] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[11:32:59.449331] [D] [thread 237990] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:32:59.449335] [D] [thread 237990] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:32:59.449337] [D] [thread 237990] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:32:59.449341] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449345] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449348] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449350] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449353] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449356] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449358] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449361] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449364] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449366] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449369] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449371] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449373] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449376] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449379] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449382] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449394] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449396] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.449398] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449400] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.449402] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449404] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.449406] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449408] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.449411] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449412] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.449414] [D] [thread 237990] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:32:59.449416] [D] [thread 237990] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:32:59.449450] [D] [thread 237990] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[11:32:59.449456] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:32:59.449458] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[11:32:59.449464] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:32:59.449465] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[11:32:59.449467] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:32:59.449468] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[11:32:59.449470] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:32:59.449472] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[11:32:59.449473] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:32:59.449475] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[11:32:59.449476] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:32:59.449478] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[11:32:59.449480] [I] [thread 237990] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:32:59.449482] [D] [thread 237990] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[11:32:59.449490] [I] [thread 237990] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[11:32:59.449517] [D] [thread 237990] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:32:59.449538] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449550] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449560] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449578] [D] [thread 237990] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:32:59.449584] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449602] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449610] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449626] [D] [thread 237990] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:32:59.449631] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449637] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449644] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449657] [D] [thread 237990] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:32:59.449669] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449675] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449682] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449696] [D] [thread 237990] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:32:59.449702] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449708] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449714] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449734] [D] [thread 237990] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:32:59.449740] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449744] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449751] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[11:32:59.449757] [I] [thread 237990] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[11:32:59.449759] [D] [thread 237990] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[11:32:59.449789] [D] [thread 237990] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[11:32:59.449791] [D] [thread 237990] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:32:59.449796] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449798] [D] [thread 237990] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:32:59.449800] [D] [thread 237990] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:32:59.449808] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449817] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449821] [D] [thread 237990] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:32:59.449833] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449834] [D] [thread 237990] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:32:59.449836] [D] [thread 237990] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:32:59.449843] [W] [thread 237990] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:32:59.449844] [D] [thread 237990] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:32:59.449849] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449850] [D] [thread 237990] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:32:59.449852] [D] [thread 237990] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:32:59.449857] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449862] [D] [thread 237990] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:32:59.449867] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449868] [D] [thread 237990] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:32:59.449870] [D] [thread 237990] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:32:59.449874] [W] [thread 237990] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:32:59.449876] [D] [thread 237990] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:32:59.449880] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449881] [D] [thread 237990] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:32:59.449883] [D] [thread 237990] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:32:59.449895] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449901] [D] [thread 237990] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:32:59.449905] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:32:59.449906] [D] [thread 237990] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:32:59.449908] [D] [thread 237990] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:32:59.449912] [W] [thread 237990] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:32:59.449921] [D] [thread 237990] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:32:59.449923] [D] [thread 237990] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:32:59.449924] [D] [thread 237990] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:32:59.449925] [D] [thread 237990] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[11:32:59.449927] [D] [thread 237990] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:32:59.449928] [D] [thread 237990] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:32:59.449930] [D] [thread 237990] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:32:59.449955] [D] [thread 237990] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[11:32:59.449967] [D] [thread 237990] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[11:32:59.449984] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[11:32:59.449991] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450022] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[11:32:59.450025] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450037] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[11:32:59.450040] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450051] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[11:32:59.450053] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450059] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:32:59.450065] [W] [thread 237990] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:32:59.450068] [W] [thread 237990] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:32:59.450076] [D] [thread 237990] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[11:32:59.450084] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[11:32:59.450086] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450107] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[11:32:59.450110] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450119] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(11)[m
[36m[11:32:59.450122] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450131] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[11:32:59.450133] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450135] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:32:59.450140] [D] [thread 237990] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:32:59.450145] [D] [thread 237990] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:32:59.450147] [D] [thread 237990] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:32:59.450172] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[11:32:59.450174] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450177] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:32:59.450184] [D] [thread 237990] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:32:59.450186] [D] [thread 237990] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:32:59.450187] [D] [thread 237990] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:32:59.450201] [D] [thread 237990] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:32:59.450210] [D] [thread 237990] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[11:32:59.450217] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[11:32:59.450220] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450242] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[11:32:59.450244] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450256] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[11:32:59.450258] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450275] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[11:32:59.450278] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450280] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:32:59.450284] [W] [thread 237990] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:32:59.450286] [W] [thread 237990] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:32:59.450293] [D] [thread 237990] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[11:32:59.450300] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[11:32:59.450302] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450323] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[11:32:59.450326] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450336] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(17)[m
[36m[11:32:59.450338] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450348] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[11:32:59.450350] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450352] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:32:59.450360] [D] [thread 237990] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:32:59.450361] [D] [thread 237990] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:32:59.450363] [D] [thread 237990] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:32:59.450379] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[11:32:59.450381] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450383] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:32:59.450390] [D] [thread 237990] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:32:59.450392] [D] [thread 237990] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:32:59.450393] [D] [thread 237990] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:32:59.450406] [D] [thread 237990] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:32:59.450414] [D] [thread 237990] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[11:32:59.450421] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[11:32:59.450423] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450445] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[11:32:59.450448] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450459] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[11:32:59.450461] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450471] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[11:32:59.450473] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450475] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:32:59.450479] [W] [thread 237990] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:32:59.450481] [W] [thread 237990] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:32:59.450487] [D] [thread 237990] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[11:32:59.450495] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[11:32:59.450496] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450517] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[11:32:59.450520] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450530] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(23)[m
[36m[11:32:59.450532] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450541] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[11:32:59.450543] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450546] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:32:59.450550] [D] [thread 237990] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:32:59.450552] [D] [thread 237990] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:32:59.450553] [D] [thread 237990] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:32:59.450567] [D] [thread 237990] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[11:32:59.450569] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.450571] [D] [thread 237990] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:32:59.450578] [D] [thread 237990] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:32:59.450579] [D] [thread 237990] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:32:59.450581] [D] [thread 237990] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:32:59.450592] [D] [thread 237990] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:32:59.450595] [D] [thread 237990] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.450599] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.450609] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450616] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:32:59.450644] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[11:32:59.450650] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.450652] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.450688] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[11:32:59.450708] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[11:32:59.450711] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.450712] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.450716] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.450718] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.450730] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:32:59.450738] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.450740] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:32:59.450744] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:32:59.450754] [D] [thread 237990] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[11:32:59.450766] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.450769] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.450775] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:32:59.450777] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.450785] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.450811] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.450814] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:32:59.450826] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:32:59.450827] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:32:59.450847] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 5[m
[36m[11:32:59.450849] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.450850] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.450854] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.450855] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.450860] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.450861] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.450874] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.450876] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.450878] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.450885] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[11:32:59.450897] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.450899] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.450903] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:32:59.450905] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[11:32:59.450950] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[11:32:59.450964] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.450965] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.450968] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:32:59.450970] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.450971] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:32:59.450972] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:32:59.450978] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:32:59.450981] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.450983] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.450984] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:32:59.450986] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.450990] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.450999] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.451001] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:32:59.451010] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:32:59.451012] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:32:59.451018] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 5[m
[36m[11:32:59.451019] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451021] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.451022] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451026] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.451028] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451029] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.451049] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.451050] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451052] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.451057] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[11:32:59.451067] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451068] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.451070] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[11:32:59.451072] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[11:32:59.451116] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[11:32:59.451134] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451136] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.451138] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:32:59.451139] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.451140] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:32:59.451141] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:32:59.451155] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:32:59.451158] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.451160] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.451162] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:32:59.451163] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.451168] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.451177] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:32:59.451181] [W] [thread 237990] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:32:59.451183] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.451185] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.451186] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.451195] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.451197] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:32:59.451208] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[11:32:59.451214] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.451216] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.451221] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[11:32:59.451237] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[11:32:59.451239] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.451240] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.451242] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451243] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.451246] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:32:59.451248] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.451249] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:32:59.451251] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:32:59.451253] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[11:32:59.451262] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.451263] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.451265] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:32:59.451267] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.451271] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.451294] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.451297] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:32:59.451306] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:32:59.451308] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:32:59.451326] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 6[m
[36m[11:32:59.451328] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451329] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.451330] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451331] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.451334] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451335] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.451343] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.451347] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451349] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.451354] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[11:32:59.451363] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451365] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.451367] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[11:32:59.451368] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[11:32:59.451404] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[11:32:59.451413] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451414] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.451417] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:32:59.451418] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.451420] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:32:59.451421] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:32:59.451423] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:32:59.451426] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.451428] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.451429] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:32:59.451431] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.451435] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.451443] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.451445] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:32:59.451454] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:32:59.451456] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:32:59.451461] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(11) on execution node with id 6[m
[36m[11:32:59.451463] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451464] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.451465] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451467] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.451470] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451471] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.451490] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.451491] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451492] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.451509] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[11:32:59.451519] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451521] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.451524] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:32:59.451525] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[11:32:59.451570] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[11:32:59.451589] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451591] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.451593] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:32:59.451594] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.451596] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:32:59.451597] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:32:59.451599] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:32:59.451602] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.451604] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.451605] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:32:59.451607] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.451620] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.451630] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.451636] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:32:59.451646] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 2[m
[36m[11:32:59.451647] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.451648] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.451653] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[11:32:59.451671] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(24) as new root of the plan.[m
[36m[11:32:59.451673] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.451674] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.451676] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451677] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.451681] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:32:59.451682] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.451684] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:32:59.451685] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:32:59.451687] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[11:32:59.451691] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.451693] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.451694] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 2[m
[36m[11:32:59.451696] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.451700] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.451709] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:32:59.451713] [W] [thread 237990] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:32:59.451714] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.451716] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.451717] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.451718] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.451727] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.451730] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:32:59.451738] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[11:32:59.451740] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.451741] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.451745] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[11:32:59.451759] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[11:32:59.451760] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.451761] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.451763] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451764] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.451767] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:32:59.451768] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.451770] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:32:59.451771] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:32:59.451773] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[11:32:59.451777] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.451778] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.451780] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:32:59.451782] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.451786] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.451809] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.451811] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:32:59.451820] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:32:59.451821] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:32:59.451839] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 7[m
[36m[11:32:59.451841] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451842] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.451844] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451845] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.451848] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451849] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.451856] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.451858] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451859] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.451863] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[11:32:59.451872] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451873] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.451876] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:32:59.451877] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[11:32:59.451914] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[11:32:59.451922] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451923] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.451925] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:32:59.451927] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.451928] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:32:59.451929] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:32:59.451931] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:32:59.451934] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.451936] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.451937] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:32:59.451938] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.451946] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.451955] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.451957] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:32:59.451965] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:32:59.451967] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:32:59.451973] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[11:32:59.451974] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.451975] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.451976] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451979] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.451981] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.451989] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.452010] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.452012] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452013] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.452028] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[11:32:59.452038] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452040] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.452042] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[11:32:59.452044] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[11:32:59.452089] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[11:32:59.452109] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452110] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.452112] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:32:59.452114] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.452115] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:32:59.452117] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:32:59.452120] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:32:59.452123] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.452124] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.452126] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:32:59.452127] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.452133] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.452142] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:32:59.452145] [W] [thread 237990] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:32:59.452146] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.452148] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.452149] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.452157] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.452165] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:32:59.452176] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[11:32:59.452177] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.452178] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.452183] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[11:32:59.452197] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[11:32:59.452199] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.452200] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.452202] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452203] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.452206] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:32:59.452207] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.452209] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:32:59.452210] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:32:59.452213] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[11:32:59.452216] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.452218] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.452220] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:32:59.452221] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.452226] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.452248] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.452250] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:32:59.452259] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:32:59.452260] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:32:59.452279] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 8[m
[36m[11:32:59.452281] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452282] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.452283] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452284] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.452287] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452288] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.452295] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.452297] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452298] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.452302] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[11:32:59.452310] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452312] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.452314] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[11:32:59.452316] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[11:32:59.452398] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[11:32:59.452408] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452409] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.452421] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:32:59.452423] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.452424] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:32:59.452426] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:32:59.452429] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:32:59.452433] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.452435] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.452436] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:32:59.452438] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.452443] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.452453] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.452456] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:32:59.452465] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:32:59.452467] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:32:59.452473] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(17) on execution node with id 8[m
[36m[11:32:59.452475] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452476] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.452477] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452480] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.452488] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452489] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.452509] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.452510] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452512] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.452516] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[11:32:59.452528] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452530] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.452538] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:32:59.452540] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[11:32:59.452585] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[11:32:59.452604] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452605] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.452607] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:32:59.452609] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.452610] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:32:59.452611] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:32:59.452614] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:32:59.452616] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.452618] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.452620] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:32:59.452622] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.452627] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.452635] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.452639] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:32:59.452648] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 3[m
[36m[11:32:59.452650] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.452651] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.452678] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[11:32:59.452695] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(25) as new root of the plan.[m
[36m[11:32:59.452697] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.452698] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.452701] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452702] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.452706] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:32:59.452707] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.452709] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:32:59.452710] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:32:59.452712] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[11:32:59.452717] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.452719] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.452720] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 3[m
[36m[11:32:59.452722] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.452726] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.452735] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:32:59.452740] [W] [thread 237990] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:32:59.452741] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.452742] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.452744] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.452745] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.452755] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.452757] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:32:59.452767] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[11:32:59.452768] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.452770] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.452774] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[11:32:59.452789] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[11:32:59.452790] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.452791] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.452793] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452794] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.452797] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:32:59.452807] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.452808] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:32:59.452809] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:32:59.452813] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[11:32:59.452817] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.452819] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.452820] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:32:59.452822] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.452827] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.452852] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.452854] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:32:59.452863] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:32:59.452865] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:32:59.452883] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 9[m
[36m[11:32:59.452885] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452886] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.452887] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452888] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.452891] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452893] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.452900] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.452901] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452903] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.452908] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[11:32:59.452918] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.452919] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.452922] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[11:32:59.452923] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[11:32:59.452960] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[11:32:59.452968] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.452970] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.452972] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:32:59.452973] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.452975] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:32:59.452976] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:32:59.452978] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:32:59.452981] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.452983] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.452984] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:32:59.452986] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.452990] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.452998] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.453000] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:32:59.453009] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:32:59.453010] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:32:59.453017] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 9[m
[36m[11:32:59.453018] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453020] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.453021] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453024] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.453026] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453027] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.453046] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.453048] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453049] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.453065] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[11:32:59.453075] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453077] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.453079] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[11:32:59.453080] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[11:32:59.453133] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[11:32:59.453152] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453154] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.453157] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:32:59.453158] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.453160] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:32:59.453161] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:32:59.453164] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:32:59.453167] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.453169] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.453170] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:32:59.453172] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.453177] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.453186] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:32:59.453189] [W] [thread 237990] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:32:59.453190] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.453192] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.453193] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.453201] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.453204] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:32:59.453213] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[11:32:59.453215] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.453216] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.453224] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:32:59.453239] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[11:32:59.453241] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.453242] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.453244] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453246] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.453248] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:32:59.453250] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.453251] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:32:59.453252] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:32:59.453255] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[11:32:59.453259] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.453261] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.453263] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:32:59.453265] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.453269] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.453292] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.453295] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:32:59.453303] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:32:59.453305] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:32:59.453324] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 10[m
[36m[11:32:59.453325] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453327] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.453328] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453329] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.453332] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453334] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.453341] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.453343] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453344] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.453349] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[11:32:59.453358] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453359] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.453361] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[11:32:59.453363] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[11:32:59.453399] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[11:32:59.453406] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453408] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.453410] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:32:59.453412] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.453413] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:32:59.453421] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:32:59.453424] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[11:32:59.453427] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.453429] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.453430] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:32:59.453432] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.453437] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.453448] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:32:59.453451] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:32:59.453459] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:32:59.453461] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:32:59.453467] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(23) on execution node with id 10[m
[36m[11:32:59.453468] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453470] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.453471] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453473] [D] [thread 237990] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:32:59.453476] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453478] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.453498] [D] [thread 237990] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:32:59.453499] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453500] [D] [thread 237990] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:32:59.453509] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[11:32:59.453518] [D] [thread 237990] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:32:59.453520] [D] [thread 237990] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:32:59.453522] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[11:32:59.453523] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[11:32:59.453569] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[11:32:59.453588] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453589] [D] [thread 237990] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:32:59.453592] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:32:59.453593] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.453595] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:32:59.453596] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:32:59.453598] [D] [thread 237990] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[11:32:59.453602] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.453603] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.453604] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:32:59.453606] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.453611] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.453619] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.453624] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:32:59.453633] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 4[m
[36m[11:32:59.453634] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.453638] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.453654] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[11:32:59.453670] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(26) as new root of the plan.[m
[36m[11:32:59.453672] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.453673] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.453675] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453676] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.453679] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:32:59.453681] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.453682] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:32:59.453683] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:32:59.453686] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[11:32:59.453690] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.453691] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.453693] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[11:32:59.453694] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.453699] [D] [thread 237990] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:32:59.453707] [D] [thread 237990] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:32:59.453712] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:32:59.453721] [D] [thread 237990] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(5: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[11:32:59.453722] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:32:59.453723] [W] [thread 237990] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:32:59.453728] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[11:32:59.453741] [D] [thread 237990] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[11:32:59.453747] [D] [thread 237990] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:32:59.453748] [D] [thread 237990] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:32:59.453749] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453751] [D] [thread 237990] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:32:59.453753] [D] [thread 237990] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:32:59.453755] [D] [thread 237990] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:32:59.453756] [W] [thread 237990] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:32:59.453757] [D] [thread 237990] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:32:59.453760] [D] [thread 237990] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[11:32:59.453764] [D] [thread 237990] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:32:59.453766] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:32:59.453767] [I] [thread 237990] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:32:59.453769] [D] [thread 237990] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:32:59.453771] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.453772] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.453773] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.453774] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.453776] [D] [thread 237990] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:32:59.453784] [D] [thread 237990] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[11:32:59.453792] [I] [thread 237990] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[11:32:59.453798] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.453809] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[11:32:59.453821] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.453824] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:32:59.453826] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[11:32:59.453827] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.453851] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.453855] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.453857] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[11:32:59.453871] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.453883] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.453885] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.453886] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.453896] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:32:59.453911] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:32:59.453913] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:32:59.453915] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453917] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.453919] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:32:59.453920] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[11:32:59.453939] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[11:32:59.453975] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[11:32:59.453984] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:32:59.453992] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:32:59.453994] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:32:59.453995] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.453997] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.454030] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[11:32:59.454034] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[11:32:59.454035] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[11:32:59.454064] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:32:59.454066] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:32:59.454068] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:32:59.454069] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.454073] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:32:59.454079] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454085] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:32:59.454090] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454094] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[11:32:59.454095] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[11:32:59.454097] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454110] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.454115] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.454118] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.454121] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454127] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.454129] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454130] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.454134] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:32:59.454144] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:32:59.454146] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:32:59.454147] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454156] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.454158] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[11:32:59.454159] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[32m[11:32:59.454164] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[11:32:59.454189] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(11) as root operator.[m
[36m[11:32:59.454197] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:32:59.454205] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:32:59.454206] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:32:59.454207] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454209] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.454215] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[11:32:59.454218] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[11:32:59.454219] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[11:32:59.454241] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:32:59.454243] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:32:59.454245] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:32:59.454246] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.454252] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:32:59.454256] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454269] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.454271] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.454272] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[11:32:59.454274] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454278] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.454280] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454281] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.454285] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:32:59.454307] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:32:59.454309] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:32:59.454310] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454311] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.454313] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[11:32:59.454314] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[11:32:59.454318] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[11:32:59.454342] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[11:32:59.454352] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:32:59.454360] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:32:59.454361] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:32:59.454363] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454364] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.454396] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[11:32:59.454400] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[11:32:59.454401] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[11:32:59.454424] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:32:59.454426] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:32:59.454427] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:32:59.454428] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.454431] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:32:59.454435] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454439] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[11:32:59.454444] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454447] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:32:59.454449] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[11:32:59.454450] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454463] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.454466] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.454467] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[11:32:59.454469] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454474] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.454483] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454484] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.454488] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:32:59.454498] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:32:59.454500] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:32:59.454502] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454503] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.454504] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:32:59.454506] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[11:32:59.454510] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[11:32:59.454535] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[11:32:59.454542] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:32:59.454549] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:32:59.454551] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:32:59.454552] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454553] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.454559] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[11:32:59.454561] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[11:32:59.454563] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[11:32:59.454589] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:32:59.454594] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:32:59.454596] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:32:59.454597] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.454599] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:32:59.454603] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454607] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:32:59.454612] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454615] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:32:59.454616] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[11:32:59.454618] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454630] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.454633] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.454636] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.454639] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454644] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.454645] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454646] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.454650] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:32:59.454661] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:32:59.454663] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:32:59.454664] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454665] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.454667] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:32:59.454668] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[32m[11:32:59.454672] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[11:32:59.454696] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(17) as root operator.[m
[36m[11:32:59.454703] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:32:59.454711] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:32:59.454713] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:32:59.454714] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454715] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.454752] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[11:32:59.454756] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[11:32:59.454757] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[11:32:59.454782] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:32:59.454784] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:32:59.454785] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:32:59.454787] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.454790] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:32:59.454794] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454806] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.454810] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.454813] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.454815] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454819] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.454821] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454822] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.454825] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:32:59.454835] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:32:59.454837] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:32:59.454838] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454839] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.454841] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[11:32:59.454842] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[11:32:59.454847] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[11:32:59.454870] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[11:32:59.454877] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:32:59.454885] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:32:59.454887] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:32:59.454888] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454889] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.454895] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[11:32:59.454898] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[11:32:59.454899] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[11:32:59.454922] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:32:59.454924] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:32:59.454925] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:32:59.454926] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.454929] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:32:59.454932] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454936] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[11:32:59.454941] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454944] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[11:32:59.454945] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[11:32:59.454947] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.454960] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.454962] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.454963] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[11:32:59.454965] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454970] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.454972] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.454973] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.454976] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:32:59.454985] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:32:59.454986] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:32:59.454988] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.454989] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.454990] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[11:32:59.454992] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[11:32:59.454995] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[11:32:59.455019] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[11:32:59.455026] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:32:59.455033] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:32:59.455035] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:32:59.455036] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.455037] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.455060] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[11:32:59.455063] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[11:32:59.455064] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[11:32:59.455087] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:32:59.455089] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:32:59.455090] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[11:32:59.455099] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.455102] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:32:59.455106] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.455110] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[11:32:59.455115] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.455118] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:32:59.455120] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[11:32:59.455122] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.455134] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.455138] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.455140] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.455143] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.455148] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.455150] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.455151] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.455155] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:32:59.455166] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:32:59.455167] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:32:59.455169] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.455170] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.455172] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:32:59.455173] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[11:32:59.455177] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[11:32:59.455202] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(23) as root operator.[m
[36m[11:32:59.455209] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:32:59.455217] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:32:59.455218] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:32:59.455220] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.455221] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.455226] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[11:32:59.455229] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[11:32:59.455230] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[11:32:59.455252] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:32:59.455254] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:32:59.455255] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[11:32:59.455256] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.455259] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:32:59.455262] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.455274] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.455278] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.455281] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[11:32:59.455283] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.455287] [D] [thread 237990] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:32:59.455289] [D] [thread 237990] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:32:59.455290] [D] [thread 237990] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:32:59.455293] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:32:59.455303] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:32:59.455304] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:32:59.455306] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.455307] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.455308] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[11:32:59.455309] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[11:32:59.455314] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[11:32:59.455337] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[11:32:59.455343] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:32:59.455351] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:32:59.455352] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:32:59.455354] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.455355] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:32:59.455378] [I] [thread 237990] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[11:32:59.455381] [D] [thread 237990] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[11:32:59.455382] [D] [thread 237990] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[11:32:59.455409] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:32:59.455411] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:32:59.455412] [D] [thread 237990] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:32:59.455413] [D] [thread 237990] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:32:59.455416] [D] [thread 237990] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:32:59.455419] [D] [thread 237990] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:32:59.455425] [D] [thread 237990] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[11:32:59.455427] [D] [thread 237990] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:32:59.455428] [D] [thread 237990] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:32:59.455432] [D] [thread 237990] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[11:32:59.455434] [D] [thread 237990] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:32:59.455446] [D] [thread 237990] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[11:32:59.455450] [D] [thread 237990] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:32:59.455453] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.455454] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.455482] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.455486] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.455488] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.455494] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.455497] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.455695] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.455738] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.455743] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.455745] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.455760] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.455764] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.455766] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.455770] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.455772] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.455946] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.455973] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.455976] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.455977] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.455992] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.455996] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.455999] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[11:32:59.456003] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.456005] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.456034] [D] [thread 237990] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:32:59.456064] [I] [thread 237990] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:32:59.456087] [I] [thread 237990] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.456097] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.456100] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.456101] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.456115] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.456124] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.456126] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.456129] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.456131] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.456306] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.456377] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.456383] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.456385] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.456401] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.456405] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.456408] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.456411] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.456414] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.456594] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.456624] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.456627] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.456628] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.456643] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.456647] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.456650] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[11:32:59.456653] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.456655] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.456687] [D] [thread 237990] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:32:59.456707] [I] [thread 237990] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:32:59.456728] [I] [thread 237990] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.456739] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.456742] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.456743] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.456756] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.456760] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.456762] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.456765] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.456767] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.456942] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.456984] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.456987] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.456988] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.457003] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.457007] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.457009] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:32:59.457012] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.457014] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.457171] [D] [thread 237990] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[11:32:59.457211] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.457214] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.457216] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.457229] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.457234] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.457236] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[11:32:59.457239] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.457241] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.457270] [D] [thread 237990] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:32:59.457288] [I] [thread 237990] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:32:59.457309] [I] [thread 237990] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.457318] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.457320] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.457322] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.457334] [D] [thread 237990] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:32:59.457339] [D] [thread 237990] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:32:59.457341] [D] [thread 237990] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[11:32:59.457345] [D] [thread 237990] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:32:59.457347] [D] [thread 237990] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:32:59.457366] [D] [thread 237990] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:32:59.457374] [D] [thread 237990] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[11:32:59.457915] [D] [thread 237990] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:10)
|  SINK(5: {FileSinkDescriptor()})
|    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:40843 1::33::0::0})
|    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.30:46325 1::42::0::0})
|    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:36815 1::51::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:40445)})
|  |    CENTRALWINDOW(24)
|  |      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.32:45895 1::27::0::0})
|  |      SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:39685 1::30::0::0})
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.12:40843)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:40843)})
|  |  |    WATERMARKASSIGNER(11)
|  |  |      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.11:40445)})
|  |    CENTRALWINDOW(25)
|  |      SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:45565 1::36::0::0})
|  |      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.35:42091 1::39::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:46325)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.30:46325)})
|  |  |    WATERMARKASSIGNER(17)
|  |  |      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:40445)})
|  |    CENTRALWINDOW(26)
|  |      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.37:33703 1::45::0::0})
|  |      SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:41005 1::48::0::0})
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.31:36815)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:36815)})
|  |  |    WATERMARKASSIGNER(23)
|  |  |      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:32:59.457937] [D] [thread 237990] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[11:32:59.457941] [D] [thread 237990] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:32:59.457977] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.457978] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.457994] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.457995] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.457999] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.457999] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458002] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.458003] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458006] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.458015] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458018] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.458019] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458022] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.458023] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458025] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.458026] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458030] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.458033] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458036] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.458037] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458054] [D] [thread 237990] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[11:32:59.458056] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[11:32:59.458058] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.458059] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.458084] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:33633[m
[36m[11:32:59.458092] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:33633 queryId=1 querySubPlanId = 1[m
[36m[11:32:59.458193] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.12:40843)})
  WATERMARKASSIGNER(8)
    PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[11:32:59.458197] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.458270] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.461178] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.461649] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.461715] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.461731] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.461886] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:32:59.462454] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.462536] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.462556] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.462581] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.462595] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.462673] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.462687] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.462691] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[11:32:59.462699] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.462702] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.462711] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.462772] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.462821] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.462857] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.462871] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.462947] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[11:32:59.463033] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.463085] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.463229] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.463278] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.463344] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.463394] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.468612] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[11:32:59.468622] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.468624] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.468642] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:34755[m
[36m[11:32:59.468646] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:34755 queryId=1 querySubPlanId = 2[m
[36m[11:32:59.468734] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:40843)})
  WATERMARKASSIGNER(11)
    PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[11:32:59.468738] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.468768] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.468831] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.468857] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.468886] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.468899] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.468987] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:32:59.469004] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.469041] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.469057] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.469078] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.469090] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.469143] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.469153] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.469157] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[11:32:59.469164] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.469168] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.469175] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.469229] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.469279] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.469317] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.469331] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.469397] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[11:32:59.469449] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.469498] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.469612] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.469661] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.469725] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.469776] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.493231] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[11:32:59.493268] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.493270] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.493291] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:46829[m
[36m[11:32:59.493297] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:46829 queryId=1 querySubPlanId = 3[m
[36m[11:32:59.493391] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:40445)})
  CENTRALWINDOW(24)
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.32:45895 1::27::0::0})
    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:39685 1::30::0::0})
[m
[36m[11:32:59.493397] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.493434] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.493523] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.493563] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.493608] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.493633] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.493751] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.493787] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.493845] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.493885] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.493893] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.493905] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.494022] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.494064] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.494104] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.494129] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.494216] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:45895 1::27::0::0}[m
[36m[11:32:59.494273] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.494300] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.494373] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.494411] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.494445] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.494464] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.494538] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:39685 1::30::0::0}[m
[36m[11:32:59.494570] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.494593] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.494644] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.494664] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.494702] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.494721] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.497690] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[11:32:59.497731] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.497733] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.497752] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:32801[m
[36m[11:32:59.497758] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:32801 queryId=1 querySubPlanId = 4[m
[36m[11:32:59.497867] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:46325)})
  WATERMARKASSIGNER(14)
    PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[11:32:59.497873] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.497909] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.497984] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.498018] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.498057] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.498077] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.498173] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:32:59.498228] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.498279] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.498304] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.498338] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.498357] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.498441] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.498457] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.498462] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[11:32:59.498473] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.498479] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.498491] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.498570] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.498644] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.498713] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.498752] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.498865] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[11:32:59.498953] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.499040] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.499207] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.499417] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.499535] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.499624] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.503470] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[11:32:59.503512] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.503514] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.503533] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:35887[m
[36m[11:32:59.503537] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:35887 queryId=1 querySubPlanId = 5[m
[36m[11:32:59.503635] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.30:46325)})
  WATERMARKASSIGNER(17)
    PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[11:32:59.503640] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.503673] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.503741] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.503772] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.503807] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.503824] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.503912] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:32:59.503950] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.503994] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.504014] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.504041] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.504057] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.504126] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.504140] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.504145] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[11:32:59.504154] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.504158] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.504168] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.504236] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.504299] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.504394] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.504434] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.504530] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[11:32:59.504606] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.504681] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.504835] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.504911] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.505003] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.505076] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.508590] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[11:32:59.508626] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.508628] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.508647] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:40105[m
[36m[11:32:59.508652] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:40105 queryId=1 querySubPlanId = 6[m
[36m[11:32:59.508735] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.11:40445)})
  CENTRALWINDOW(25)
    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:45565 1::36::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.35:42091 1::39::0::0})
[m
[36m[11:32:59.508739] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.508771] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.508847] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.508882] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.508921] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.508941] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.509030] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.509072] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.509102] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.509114] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.509119] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.509129] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.509189] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.509207] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.509242] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.509263] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.509331] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:45565 1::36::0::0}[m
[36m[11:32:59.509357] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.509375] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.509427] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.509462] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.509490] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.509506] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.509565] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:42091 1::39::0::0}[m
[36m[11:32:59.509601] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.509622] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.509663] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.509698] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.509725] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.509741] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.511541] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:59.512154] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[11:32:59.512178] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.512180] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.512196] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:44833[m
[36m[11:32:59.512200] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:44833 queryId=1 querySubPlanId = 7[m
[36m[11:32:59.512288] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.31:36815)})
  WATERMARKASSIGNER(20)
    PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[11:32:59.512291] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.512344] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.512417] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.512442] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.512473] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.512487] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.512566] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:32:59.512590] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.512627] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.512657] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.512681] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.512695] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.512757] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.512781] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.512786] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[11:32:59.512793] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.512797] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.512805] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.512861] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.512912] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.512958] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.512972] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.513052] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[11:32:59.513120] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.513181] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.513309] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.513372] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.513446] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.513505] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.516585] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[11:32:59.516617] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.516619] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.516636] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:42857[m
[36m[11:32:59.516640] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:42857 queryId=1 querySubPlanId = 8[m
[36m[11:32:59.516727] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:36815)})
  WATERMARKASSIGNER(23)
    PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:32:59.516731] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.516761] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.516824] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.516853] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.516882] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.516896] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.516971] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:32:59.516995] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.517030] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.517082] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.517107] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.517120] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.517181] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.517205] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.517211] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[11:32:59.517219] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.517222] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.517230] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.517288] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.517339] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.517383] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.517398] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.517469] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[11:32:59.517530] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.517591] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.517720] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.517781] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.517856] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:32:59.517927] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.520914] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[11:32:59.520945] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.520947] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.520963] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:36833[m
[36m[11:32:59.520968] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36833 queryId=1 querySubPlanId = 9[m
[36m[11:32:59.521043] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:40445)})
  CENTRALWINDOW(26)
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.37:33703 1::45::0::0})
    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:41005 1::48::0::0})
[m
[36m[11:32:59.521047] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.521076] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.521146] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521176] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521208] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521223] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521298] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:32:59.521350] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.521377] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.521386] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.521390] [D] [thread 237990] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:32:59.521399] [D] [thread 237990] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:32:59.521452] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521466] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521490] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521506] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521564] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:33703 1::45::0::0}[m
[36m[11:32:59.521597] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521613] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521660] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521685] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521707] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521720] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521765] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:41005 1::48::0::0}[m
[36m[11:32:59.521791] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521806] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521840] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521853] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.521874] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.521887] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524008] [D] [thread 237990] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[11:32:59.524043] [D] [thread 237990] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:32:59.524045] [D] [thread 237990] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:32:59.524061] [D] [thread 237990] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:32901[m
[36m[11:32:59.524065] [D] [thread 237990] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:32901 queryId=1 querySubPlanId = 10[m
[36m[11:32:59.524133] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(5: {FileSinkDescriptor()})
  SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:40843 1::33::0::0})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.30:46325 1::42::0::0})
  SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:36815 1::51::0::0})
[m
[36m[11:32:59.524137] [D] [thread 237990] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:32:59.524162] [D] [thread 237990] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:32:59.524281] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.524380] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524433] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.524461] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524539] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:40843 1::33::0::0}[m
[36m[11:32:59.524575] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.524596] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524650] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.524678] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524704] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.524719] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524774] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:46325 1::42::0::0}[m
[36m[11:32:59.524794] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.524811] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524850] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.524881] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524906] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.524922] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.524974] [D] [thread 237990] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:36815 1::51::0::0}[m
[36m[11:32:59.525003] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.525022] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.525060] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.525086] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.525111] [D] [thread 237990] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:32:59.525127] [D] [thread 237990] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:32:59.527604] [D] [thread 237990] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[11:32:59.735639] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:59.735824] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:59.991129] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:32:59.991335] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:00.513385] [D] [thread 238006] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:33:00.513450] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.513613] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:33:00.513655] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[11:33:00.513665] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.513791] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:33:00.513821] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.513942] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:33:00.515020] [D] [thread 238006] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:33:00.515060] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.515187] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:33:00.515218] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[11:33:00.515224] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.515344] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:33:00.515364] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.515493] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:33:00.516566] [D] [thread 238006] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:33:00.516603] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.516730] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:33:00.516760] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[11:33:00.516767] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.516885] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:33:00.516905] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.517022] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:33:00.517805] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[11:33:00.517829] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.517956] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:33:00.517976] [D] [thread 238006] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:33:00.518104] [D] [thread 238006] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:33:00.518616] [D] [thread 238006] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(57: {FileSinkDescriptor()})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.12:40843 1::33::0::0})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.30:46325 1::42::0::0})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:36815 1::51::0::0})
[m
[32m[11:33:00.518643] [I] [thread 238006] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 10 [m
[32m[11:33:00.518659] [I] [thread 238006] [DefaultQueryCompiler.cpp:61] [compileQuery] Compile Query with Default Compiler[m
[36m[11:33:00.518854] [D] [thread 238006] [DefaultQueryCompiler.cpp:75] [compileQuery] compile query with id: 1 subPlanId: 10[m
[36m[11:33:00.518877] [D] [thread 238006] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-10-2023-11-17 11:33:00 - 1. LogicalQueryPlan[m
[36m[11:33:00.518886] [D] [thread 238006] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 10 for context QueryCompilation-1-10-2023-11-17 11:33:00 and scope 1. LogicalQueryPlan[m
[32m[11:33:00.519628] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[32m[11:33:00.519682] [I] [thread 238006] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:33:00.519685] [I] [thread 238006] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:33:00.519687] [I] [thread 238006] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:33:00.519690] [I] [thread 238006] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:33:00.519691] [I] [thread 238006] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:33:00.519692] [I] [thread 238006] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:33:00.519724] [I] [thread 238006] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:33:00.519807] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[11:33:00.519841] [D] [thread 238006] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:33:00.519843] [I] [thread 238006] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:33:00.519845] [I] [thread 238006] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[11:33:00.519865] [D] [thread 238006] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:33:00.519868] [D] [thread 238006] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:33:00.519881] [D] [thread 238006] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:33:00.519884] [D] [thread 238006] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:33:00.519911] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[11:33:00.519920] [D] [thread 238006] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:33:00.519922] [D] [thread 238006] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:33:00.519930] [I] [thread 238006] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:33:00.519931] [I] [thread 238006] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:33:00.519932] [I] [thread 238006] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:33:00.519953] [D] [thread 238006] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:33:00.519956] [D] [thread 238006] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:33:00.519964] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[11:33:00.519971] [D] [thread 238006] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:33:00.519973] [D] [thread 238006] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:33:00.519981] [I] [thread 238006] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:33:00.519982] [I] [thread 238006] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:33:00.519984] [I] [thread 238006] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:33:00.520003] [D] [thread 238006] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:33:00.520005] [D] [thread 238006] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:33:00.520014] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[11:33:00.520020] [D] [thread 238006] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:33:00.520022] [D] [thread 238006] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:33:00.520032] [I] [thread 238006] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:33:00.520033] [I] [thread 238006] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:33:00.520034] [I] [thread 238006] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:33:00.520054] [D] [thread 238006] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:33:00.520056] [D] [thread 238006] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[11:33:00.520073] [D] [thread 238006] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-10-2023-11-17 11:33:00 - 2. PhysicalQueryPlan[m
[36m[11:33:00.520077] [D] [thread 238006] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 10 for context QueryCompilation-1-10-2023-11-17 11:33:00 and scope 2. PhysicalQueryPlan[m
[36m[11:33:00.520483] [D] [thread 238006] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 10[m
[32m[11:33:00.520545] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[11:33:00.520571] [D] [thread 238006] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[11:33:00.520574] [D] [thread 238006] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:33:00.520576] [D] [thread 238006] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:33:00.520644] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[11:33:00.520656] [D] [thread 238006] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:33:00.520658] [D] [thread 238006] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:33:00.520659] [D] [thread 238006] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:33:00.520669] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[11:33:00.520677] [D] [thread 238006] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:33:00.520690] [D] [thread 238006] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:33:00.520692] [D] [thread 238006] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:33:00.520700] [I] [thread 238006] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[11:33:00.520710] [D] [thread 238006] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:33:00.520712] [D] [thread 238006] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:33:00.520713] [D] [thread 238006] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:33:00.520724] [D] [thread 238006] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 11:33:00 - 3. AfterPipelinedQueryPlan[m
[36m[11:33:00.520751] [D] [thread 238006] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 11:33:00[m
[36m[11:33:00.521080] [D] [thread 238006] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 11:33:00 - 4. AfterAddScanAndEmitPhase[m
[36m[11:33:00.521086] [D] [thread 238006] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 11:33:00[m
[36m[11:33:00.521336] [D] [thread 238006] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 11:33:00 - 5. GeneratableOperators[m
[36m[11:33:00.521355] [D] [thread 238006] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 11:33:00[m
[36m[11:33:00.521580] [D] [thread 238006] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 11:33:00 - 6. BufferOptimizationPhase[m
[36m[11:33:00.521595] [D] [thread 238006] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 11:33:00[m
[36m[11:33:00.521809] [D] [thread 238006] [PredicationOptimizationPhase.cpp:41] [apply] PredicationOptimizationPhase: No optimization requested or applied.[m
[36m[11:33:00.521821] [D] [thread 238006] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 11:33:00 - 7. PredicationOptimizationPhase[m
[36m[11:33:00.521824] [D] [thread 238006] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 11:33:00[m
[36m[11:33:00.522039] [D] [thread 238006] [CodeGenerationPhase.cpp:44] [apply] Generate code for query plan 1 - 10[m
[36m[11:33:00.522051] [D] [thread 238006] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-17 11:33:00 - 8. ExecutableOperatorPlan[m
[36m[11:33:00.522054] [D] [thread 238006] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 10 for scope QueryCompilation-1-10-2023-11-17 11:33:00[m
[32m[11:33:00.522367] [I] [thread 238006] [DefaultQueryCompiler.cpp:108] [compileQuery] DefaultQueryCompiler Runtime:
overall runtime: 3.40571 ms
DefaultQueryCompiler_LogicalQueryPlan:	0.69429 ms
DefaultQueryCompiler_PhysicalQueryPlan:	0.908954 ms
DefaultQueryCompiler_AfterPipelinedQueryPlan:	0.593772 ms
DefaultQueryCompiler_AfterAddScanAndEmitPhase:	0.258534 ms
DefaultQueryCompiler_GeneratableOperators:	0.24059 ms
DefaultQueryCompiler_BufferOptimizationPhase:	0.228683 ms
DefaultQueryCompiler_PredicationOptimizationPhase:	0.228165 ms
DefaultQueryCompiler_ExecutableOperatorPlan:	0.249424 ms[m
[36m[11:33:00.522428] [D] [thread 238006] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  59[m
[32m[11:33:00.522447] [I] [thread 238006] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[11:33:00.522702] [D] [thread 238006] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/nemoDebsThreeLevel.out[m
[32m[11:33:00.522828] [I] [thread 238006] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:33:00.522955] [D] [thread 238006] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:33:00.523065] [I] [thread 238006] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:33:00.523112] [D] [thread 238006] [DataSource.cpp:75] [DataSource] DataSource  42 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:33:00.523138] [I] [thread 238006] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:33:00.523165] [D] [thread 238006] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:33:00.523232] [D] [thread 238006] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 10[m
[36m[11:33:00.523254] [D] [thread 238006] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  10  as a singleton[m
[36m[11:33:00.523257] [D] [thread 238006] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=10[m
[36m[11:33:00.523261] [D] [thread 238006] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 3[m
[36m[11:33:00.523263] [D] [thread 238006] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[11:33:00.523275] [D] [thread 238006] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  42  not found. Creating new element with with qep [m
2023-11-17 11:33:00.523 setup: queryId=1, querySubPlanId=10; [36m
[11:33:00.523280] [D] [thread 238006] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[11:33:00.523284] [D] [thread 238006] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 10  pair queryId= 1  subplanId= 10[m
[36m[11:33:00.523424] [D] [thread 238006] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=10[m
2023-11-17 11:33:00.523 start: queryId=1, querySubPlanId=10; 
[36m[11:33:00.523490] [D] [thread 238006] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=10[m
[36m[11:33:00.523540] [D] [thread 238006] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.12[m
[36m[11:33:00.523589] [D] [thread 238006] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[11:33:00.523603] [D] [thread 238006] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24010a40  started successfully[m
[36m[11:33:00.523615] [D] [thread 238006] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::42::0::0 from 192.168.2.30[m
[36m[11:33:00.523620] [D] [thread 238006] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::42::0::0=1[m
[36m[11:33:00.523622] [D] [thread 238006] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24010c80  started successfully[m
[36m[11:33:00.523629] [D] [thread 238006] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[11:33:00.523633] [D] [thread 238006] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[11:33:00.523634] [D] [thread 238006] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff240112a0  started successfully[m
[36m[11:33:00.523647] [D] [thread 238006] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:33:00.523662] [D] [thread 238006] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[11:33:00.523696] [D] [thread 238006] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[11:33:00.523891] [D] [thread 238003] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:33:00.523892] [D] [thread 238002] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:33:00.523891] [D] [thread 238004] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:33:00.523933] [D] [thread 238001] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:33:00.524008] [D] [thread 238006] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[11:33:00.524020] [D] [thread 238006] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:33:00.524023] [D] [thread 238006] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24010a40  started successfully[m
[36m[11:33:00.524031] [D] [thread 238006] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[11:33:00.524038] [D] [thread 238006] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[11:33:00.524052] [D] [thread 238006] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[11:33:00.524164] [D] [thread 238002] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[11:33:00.524164] [D] [thread 238003] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[11:33:00.524189] [D] [thread 238004] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[11:33:00.524190] [D] [thread 238001] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[11:33:00.524256] [D] [thread 238006] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::42::0::0[m
[36m[11:33:00.524260] [D] [thread 238006] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[11:33:00.524262] [D] [thread 238006] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24010c80  started successfully[m
[36m[11:33:00.524313] [D] [thread 238006] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:33:00.524350] [D] [thread 238006] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[11:33:00.524360] [D] [thread 238006] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[11:33:00.524465] [D] [thread 238001] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:33:00.524466] [D] [thread 238002] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:33:00.524486] [D] [thread 238003] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:33:00.524488] [D] [thread 238004] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:33:00.524553] [D] [thread 238006] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[11:33:00.524557] [D] [thread 238006] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:33:00.524559] [D] [thread 238006] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff240112a0  started successfully[m
[36m[11:33:00.524609] [D] [thread 238006] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[11:33:00.524641] [D] [thread 238006] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  10  succeeded[m
[36m[11:33:00.524650] [D] [thread 238006] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[11:33:00.611323] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:00.611628] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:01.612814] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:01.782034] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:01.782238] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:02.783399] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:02.901066] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:02.901275] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:03.902450] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:04.006863] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:04.007061] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:05.008223] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:05.146445] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:05.146638] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:06.147816] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:06.257144] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:06.257347] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:07.258538] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:07.404916] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:07.405118] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:08.406301] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:08.545276] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:08.545479] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:09.546661] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:09.641782] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:09.641983] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:10.643228] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:10.762355] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:10.762592] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:11.763762] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:11.906192] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:11.906421] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:12.907612] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:13.005722] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:13.005930] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:14.007084] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:14.146883] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:14.147086] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:15.148269] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:15.398979] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:15.399226] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:16.400389] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:16.505484] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:16.505662] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:17.506861] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:17.617495] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:17.617690] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:18.618836] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:18.723453] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:18.723661] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:19.724839] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:19.854476] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:19.854726] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:20.855906] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:20.969953] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:20.970203] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:21.971378] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:22.040109] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:22.040294] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:23.041453] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:23.113447] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:23.113631] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:24.114791] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:24.213258] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:24.213436] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:25.214598] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:25.318123] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:25.318387] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:26.319632] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:26.467577] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:26.467819] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:27.468998] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:27.573839] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:27.574029] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:28.575209] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:28.726334] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:28.726538] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:29.727679] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:29.825347] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:29.825558] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:30.826730] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:30.973135] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:30.973332] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:31.974494] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:32.094167] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:32.094383] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:33.095559] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:33.204826] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:33.205024] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:34.206175] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:34.351836] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:34.352046] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:35.353204] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:35.454680] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:35.454915] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:36.456060] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:36.562318] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:36.562492] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:37.563661] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:37.617589] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:37.617765] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:38.618907] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:38.723814] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:38.724025] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:39.724415] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:39.848588] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:39.848860] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:40.850115] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:40.961530] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:40.961753] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:41.962920] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:42.106604] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:42.106808] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:43.108012] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:43.208276] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:43.208494] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:44.209700] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:44.314145] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:44.314422] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:45.315633] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:45.412986] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:45.413179] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:46.414359] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:46.511176] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:46.511413] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:47.512571] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:47.621565] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:47.621745] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:48.622928] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:48.765716] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:48.765921] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:49.766184] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:49.889911] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:49.890085] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:50.689982] [D] [thread 238000] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 3:1::51::0::0[m
[36m[11:33:50.689983] [D] [thread 237999] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[11:33:50.690050] [I] [thread 238000] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[32m[11:33:50.690049] [I] [thread 237999] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[11:33:50.690080] [D] [thread 238000] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[36m[11:33:50.690082] [D] [thread 237999] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[11:33:50.691409] [D] [thread 237999] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[11:33:50.691457] [I] [thread 237999] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[11:33:50.691455] [D] [thread 238000] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[11:33:50.691471] [D] [thread 237999] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[32m[11:33:50.691481] [I] [thread 238000] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[36m[11:33:50.691495] [D] [thread 238000] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[11:33:50.703253] [D] [thread 237999] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 3:1::42::0::0[m
[36m[11:33:50.703262] [D] [thread 238000] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 0:1::42::0::0[m
[32m[11:33:50.703277] [I] [thread 238000] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=0) Data[m
[36m[11:33:50.703287] [D] [thread 238000] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=0) REGISTERED[m
[32m[11:33:50.703289] [I] [thread 237999] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=3) Data[m
[36m[11:33:50.703297] [D] [thread 237999] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=3) REGISTERED[m
[36m[11:33:50.704304] [D] [thread 237999] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 1:1::42::0::0[m
[32m[11:33:50.704355] [I] [thread 237999] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=1) Data[m
[36m[11:33:50.704358] [D] [thread 238000] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 2:1::42::0::0[m
[36m[11:33:50.704364] [D] [thread 237999] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=1) REGISTERED[m
[32m[11:33:50.704368] [I] [thread 238000] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=2) Data[m
[36m[11:33:50.704376] [D] [thread 238000] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=2) REGISTERED[m
[36m[11:33:50.891236] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:51.004106] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:51.004306] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:51.039997] [D] [thread 237999] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[11:33:51.040053] [I] [thread 237999] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[11:33:51.040069] [D] [thread 237999] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[11:33:51.040730] [D] [thread 238000] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[11:33:51.040777] [I] [thread 238000] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[36m[11:33:51.040791] [D] [thread 238000] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[11:33:51.040857] [D] [thread 238000] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[11:33:51.040867] [I] [thread 238000] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[11:33:51.040875] [D] [thread 238000] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[11:33:51.041242] [D] [thread 237999] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[11:33:51.041279] [I] [thread 237999] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[36m[11:33:51.041292] [D] [thread 237999] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[11:33:52.005484] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:52.088662] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:52.088869] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:52.684482] [D] [thread 237990] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[11:33:52.684539] [D] [thread 237990] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[11:33:52.685025] [D] [thread 237990] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[11:33:52.685072] [D] [thread 237990] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[11:33:52.685081] [D] [thread 237990] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[11:33:52.685113] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[11:33:52.685127] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:33633 queryId=1[m
[36m[11:33:52.687048] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[11:33:52.687105] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:34755 queryId=1[m
[36m[11:33:52.688578] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[11:33:52.688619] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:46829 queryId=1[m
[36m[11:33:52.690056] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[11:33:52.690102] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:32801 queryId=1[m
[36m[11:33:52.691006] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[11:33:52.691029] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:35887 queryId=1[m
[36m[11:33:52.691733] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[11:33:52.691758] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:40105 queryId=1[m
[36m[11:33:52.692488] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[11:33:52.692513] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:44833 queryId=1[m
[36m[11:33:52.693207] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[11:33:52.693232] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:42857 queryId=1[m
[36m[11:33:52.693897] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[11:33:52.693918] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:36833 queryId=1[m
[36m[11:33:52.694579] [D] [thread 237990] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[11:33:52.694603] [D] [thread 237990] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:32901 queryId=1[m
[36m[11:33:52.695397] [D] [thread 237990] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[11:33:52.718410] [D] [thread 238058] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[11:33:52.718480] [D] [thread 238058] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[11:33:52.718492] [D] [thread 238058] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  10   1[m
[36m[11:33:52.718513] [D] [thread 238058] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1700220832718[m
[36m[11:33:52.718516] [D] [thread 238058] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  10  succeeded[m
[36m[11:33:52.718520] [D] [thread 238058] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[11:33:52.719460] [D] [thread 237990] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[11:33:52.719495] [D] [thread 237990] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[11:33:52.719829] [I] [thread 237990] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[11:33:52.719857] [D] [thread 237990] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:33:53.090043] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:53.152380] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:53.152558] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:54.153732] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:54.419475] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:54.419684] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:54.420735] [D] [thread 238165] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:33:54.420765] [I] [thread 238165] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:33:54.420772] [I] [thread 238165] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:33:54.420786] [I] [thread 238165] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:33:54.420787] [I] [thread 238165] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:33:54.519532] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:54.519733] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:55.520891] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:55.980224] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:55.980458] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:55.981391] [D] [thread 238171] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:33:55.981416] [I] [thread 238171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:33:55.981419] [I] [thread 238171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:33:55.981430] [I] [thread 238171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:33:55.981431] [I] [thread 238171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:33:56.110292] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:56.110509] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:57.111694] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:57.427098] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:57.427293] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:57.428200] [D] [thread 238176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:33:57.428222] [I] [thread 238176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:33:57.428226] [I] [thread 238176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:33:57.428236] [I] [thread 238176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:33:57.428237] [I] [thread 238176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:33:57.559351] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:57.559531] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:58.560706] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:58.878545] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:58.878723] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:58.879607] [D] [thread 238182] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:33:58.879635] [I] [thread 238182] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:33:58.879639] [I] [thread 238182] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:33:58.879650] [I] [thread 238182] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:33:58.879651] [I] [thread 238182] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:33:59.011739] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:33:59.011917] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:00.013076] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:00.323730] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:00.323959] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:00.324894] [D] [thread 238187] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:00.324920] [I] [thread 238187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:00.324923] [I] [thread 238187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:00.324934] [I] [thread 238187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:00.324935] [I] [thread 238187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:00.423487] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:00.423715] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:01.424871] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:01.679931] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:01.680127] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:01.681121] [D] [thread 238192] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:01.681145] [I] [thread 238192] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:01.681149] [I] [thread 238192] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:01.681161] [I] [thread 238192] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:01.681162] [I] [thread 238192] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:01.800042] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:01.800222] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:02.801374] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:03.085074] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:03.085259] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:03.086146] [D] [thread 238198] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:03.086167] [I] [thread 238198] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:03.086171] [I] [thread 238198] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:03.086182] [I] [thread 238198] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:03.086183] [I] [thread 238198] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:03.187419] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:03.187597] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:04.188789] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:04.445060] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:04.445237] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:04.446109] [D] [thread 238203] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:04.446132] [I] [thread 238203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:04.446135] [I] [thread 238203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:04.446146] [I] [thread 238203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:04.446147] [I] [thread 238203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:04.581865] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:04.582045] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:05.583229] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:05.853837] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:05.854017] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:05.854888] [D] [thread 238209] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:05.854910] [I] [thread 238209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:05.854914] [I] [thread 238209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:05.854925] [I] [thread 238209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:05.854926] [I] [thread 238209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:05.955612] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:05.955791] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:06.956510] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:07.303272] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:07.303522] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:07.304435] [D] [thread 238215] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:07.304458] [I] [thread 238215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:07.304461] [I] [thread 238215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:07.304472] [I] [thread 238215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:07.304473] [I] [thread 238215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:07.396024] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:07.396199] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:08.397364] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:08.621184] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:08.621369] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:08.622356] [D] [thread 238220] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:08.622382] [I] [thread 238220] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:08.622386] [I] [thread 238220] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:08.622397] [I] [thread 238220] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:08.622398] [I] [thread 238220] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:08.727361] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:08.727547] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:09.728741] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:10.032245] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:10.032456] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:10.033424] [D] [thread 238226] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:10.033447] [I] [thread 238226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:10.033451] [I] [thread 238226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:10.033461] [I] [thread 238226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:10.033463] [I] [thread 238226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:10.129936] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:10.130140] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:11.131299] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:11.397900] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:11.398110] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:11.399533] [D] [thread 238231] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:11.399556] [I] [thread 238231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:11.399566] [I] [thread 238231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:11.399577] [I] [thread 238231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:11.399578] [I] [thread 238231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:11.530194] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:11.530403] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:12.531557] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:13.086287] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:13.086490] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:13.087386] [D] [thread 238236] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:13.087406] [I] [thread 238236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:13.087411] [I] [thread 238236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:13.087422] [I] [thread 238236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:13.087423] [I] [thread 238236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:13.198081] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:13.198281] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:14.199462] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:14.793986] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:14.794177] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:14.795135] [D] [thread 238242] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:14.795160] [I] [thread 238242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:14.795164] [I] [thread 238242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:14.795175] [I] [thread 238242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:14.795176] [I] [thread 238242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:14.901722] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:14.901925] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:15.903069] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:16.411605] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:16.411886] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:16.412745] [D] [thread 238247] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:16.412768] [I] [thread 238247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:16.412776] [I] [thread 238247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:16.412787] [I] [thread 238247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:16.412788] [I] [thread 238247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:16.559894] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:16.560136] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:17.561313] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:17.940491] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:17.940691] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:17.941546] [D] [thread 238253] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:17.941568] [I] [thread 238253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:17.941571] [I] [thread 238253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:17.941583] [I] [thread 238253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:17.941584] [I] [thread 238253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:18.048956] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:18.049193] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:19.050370] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:19.417770] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:19.417958] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:19.418802] [D] [thread 238259] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:19.418824] [I] [thread 238259] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:19.418828] [I] [thread 238259] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:19.418839] [I] [thread 238259] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:19.418840] [I] [thread 238259] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:19.543560] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:19.543733] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:20.544888] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:20.814841] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:20.815015] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:20.815907] [D] [thread 238264] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:20.815929] [I] [thread 238264] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:20.815933] [I] [thread 238264] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:20.815943] [I] [thread 238264] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:20.815944] [I] [thread 238264] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:20.924298] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:20.924489] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:21.925643] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:22.214032] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:22.214257] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:22.215149] [D] [thread 238271] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:22.215173] [I] [thread 238271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:22.215176] [I] [thread 238271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:22.215187] [I] [thread 238271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:22.215189] [I] [thread 238271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:22.308236] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:22.308438] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:23.309622] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:23.508392] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:23.508584] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:23.509599] [D] [thread 238277] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:23.509623] [I] [thread 238277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:23.509627] [I] [thread 238277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:23.509639] [I] [thread 238277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:23.509640] [I] [thread 238277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:23.602016] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:23.602208] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:24.603397] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:24.920704] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:24.920900] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:24.921766] [D] [thread 238283] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:24.921788] [I] [thread 238283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:24.921791] [I] [thread 238283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:24.921803] [I] [thread 238283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:24.921804] [I] [thread 238283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:25.023533] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:25.023710] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:26.024882] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:26.272723] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:26.272958] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:26.273823] [D] [thread 238288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:26.273848] [I] [thread 238288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:26.273858] [I] [thread 238288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:26.273869] [I] [thread 238288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:26.273870] [I] [thread 238288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:26.402865] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:26.403062] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:27.404213] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:27.640068] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:27.640258] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:27.641980] [D] [thread 238294] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:27.642019] [I] [thread 238294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:27.642023] [I] [thread 238294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:27.642037] [I] [thread 238294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:27.642039] [I] [thread 238294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:27.773955] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:27.774136] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:28.775298] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:29.029677] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:29.029864] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:29.030818] [D] [thread 238301] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:29.030842] [I] [thread 238301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:29.030846] [I] [thread 238301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:29.030857] [I] [thread 238301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:29.030858] [I] [thread 238301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:29.125859] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:29.126054] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:30.127209] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:30.610294] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:30.610492] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:30.611365] [D] [thread 238306] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:30.611388] [I] [thread 238306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:30.611392] [I] [thread 238306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:30.611403] [I] [thread 238306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:30.611404] [I] [thread 238306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:30.713707] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:30.713896] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:31.715039] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:32.128110] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:32.128284] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:32.129228] [D] [thread 238312] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:32.129255] [I] [thread 238312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:32.129258] [I] [thread 238312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:32.129269] [I] [thread 238312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:32.129270] [I] [thread 238312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:32.225247] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:32.225426] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:33.226603] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:33.501661] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:33.501877] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:33.502831] [D] [thread 238317] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:33.502856] [I] [thread 238317] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:33.502859] [I] [thread 238317] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:33.502870] [I] [thread 238317] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:33.502871] [I] [thread 238317] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:33.600419] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:33.600603] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:34.601782] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:34.868618] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:34.868809] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:34.869678] [D] [thread 238322] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:34.869701] [I] [thread 238322] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:34.869704] [I] [thread 238322] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:34.869716] [I] [thread 238322] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:34.869717] [I] [thread 238322] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:34.962914] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:34.963128] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:35.964280] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:36.241540] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:36.241767] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:36.242591] [D] [thread 238327] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:36.242614] [I] [thread 238327] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:36.242618] [I] [thread 238327] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:36.242635] [I] [thread 238327] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:36.242636] [I] [thread 238327] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:36.391596] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:36.391833] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:37.393106] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:37.649873] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:37.650162] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:37.650975] [D] [thread 238332] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:37.650998] [I] [thread 238332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:37.651002] [I] [thread 238332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:37.651013] [I] [thread 238332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:37.651014] [I] [thread 238332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:37.783524] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:37.783727] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:38.784890] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:39.066824] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:39.067105] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:39.067879] [D] [thread 238338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:39.067903] [I] [thread 238338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:39.067907] [I] [thread 238338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:39.067918] [I] [thread 238338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:39.067919] [I] [thread 238338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:39.200487] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:39.200688] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:40.201872] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:40.420601] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:40.420825] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:40.421720] [D] [thread 238343] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:40.421746] [I] [thread 238343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:40.421751] [I] [thread 238343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:40.421762] [I] [thread 238343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:40.421764] [I] [thread 238343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:40.550286] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:40.550554] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:41.032273] [E] [thread 238336] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 4 Reason for failure: onFatalException: exception=[Failed assertion on (unsigned long) now >= creation error message: timestamp is in the past:: callstack:
Stack trace (most recent call last) in thread 83263:
#10   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#9    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff7c18b49b, in 
#8    Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff7c54d623, in start_thread
#7    Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff7c31ff9b, in 
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838e813b, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/thread", line 195, in operator()
    |   194: 	void
[35m    | > 195: 	_M_run() { _M_func(); }
[39m    |   196:       };
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/thread", line 251, in _M_invoke<0UL>
    |   249: 	  using _Indices
    |   250: 	    = typename _Build_index_tuple<tuple_size<_Tuple>::value>::__type;
[35m    | > 251: 	  return _M_invoke(_Indices());
[39m    |   252: 	}
    |   253:       };
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/thread", line 244, in __invoke<(lambda at /home/ubuntu/git/nebulastream/nes-core/src/Runtime/ThreadPool.cpp:110:30)>
    |   242: 	  typename __result<_Tuple>::type
    |   243: 	  _M_invoke(_Index_tuple<_Ind...>)
[35m    | > 244: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
[39m    |   245: 
    |   246: 	typename __result<_Tuple>::type
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h", line 95, in __invoke_impl<void, (lambda at /home/ubuntu/git/nebulastream/nes-core/src/Runtime/ThreadPool.cpp:110:30)>
    |    93:       using __type = typename __result::type;
    |    94:       using __tag = typename __result::__invoke_type;
[35m    | >  95:       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
[39m    |    96: 					std::forward<_Args>(__args)...);
    |    97:     }
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h", line 60, in operator()
    |    58:     constexpr _Res
    |    59:     __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
[35m    | >  60:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
[39m    |    61: 
    |    62:   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/ThreadPool.cpp", line 148, in _M_run
        145:             // TODO (2310) properly initialize the profiler with a file, thread, and core id
        146:             auto workerId = NesThread::getId();
        147:             NES_DEBUG("worker {} with workerId {} pins to queue {}", i, workerId, queueIdx);
[33m      > 148:             runningRoutine(WorkerContext(workerId, localBufferManager, numberOfBuffersPerWorker, queueIdx));
[39m        149:         });
        150:     }
        151:     barrier->wait();
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838e5ff3, in NES::Runtime::ThreadPool::runningRoutine(NES::Runtime::WorkerContext&&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/ThreadPool.cpp", line 62, in runningRoutine
         59: void ThreadPool::runningRoutine(WorkerContext&& workerContext) {
         60:     while (running) {
         61:         try {
[33m      >  62:             switch (queryManager->processNextTask(running, workerContext)) {
[39m         63:                 case ExecutionResult::Finished:
         64:                 case ExecutionResult::Ok: {
         65:                     break;
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838d2b7b, in NES::Runtime::DynamicQueryManager::processNextTask(bool, NES::Runtime::WorkerContext&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/QueryManagerTaskScheduler.cpp", line 110, in processNextTask
        107:         switch (result) {
        108:             //OK comes from sinks and intermediate operators
        109:             case ExecutionResult::Ok: {
[33m      > 110:                 completedWork(task, workerContext);
[39m        111:                 return ExecutionResult::Ok;
        112:             }
        113:             //Finished indicate that the processing is done
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838d2f97, in NES::Runtime::AbstractQueryManager::completedWork(NES::Runtime::Task&, NES::Runtime::WorkerContext&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/QueryManagerTaskScheduler.cpp", line 351, in __assert_fail
        348:         NES_TRACE("AbstractQueryManager::completedWork: task for exec pipeline isreconfig={}",
        349:                   (*executablePipeline)->isReconfiguration());
        350:     }
[33m      > 351:     updateStatistics(task, queryId, querySubPlanId, pipelineId, wtx);
[39m        352: }
        353: 
        354: bool MultiQueueQueryManager::addReconfigurationMessage(QueryId queryId,
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838d4fcb, in NES::Runtime::DynamicQueryManager::updateStatistics(NES::Runtime::Task const&, unsigned long, unsigned long, unsigned long, NES::Runtime::WorkerContext&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/QueryManagerTaskScheduler.cpp", line 263, in updateStatistics
        260:                                            QuerySubPlanId querySubPlanId,
        261:                                            PipelineId pipelineId,
        262:                                            WorkerContext& workerContext) {
[33m      > 263:     AbstractQueryManager::updateStatistics(task, queryId, querySubPlanId, pipelineId, workerContext);
[39m        264: #ifndef LIGHT_WEIGHT_STATISTICS
        265:     if (queryToStatisticsMap.contains(querySubPlanId)) {
        266:         auto statistics = queryToStatisticsMap.find(querySubPlanId);
#1    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838d5427, in NES::Runtime::AbstractQueryManager::updateStatistics(NES::Runtime::Task const&, unsigned long, unsigned long, unsigned long, NES::Runtime::WorkerContext&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/QueryManagerTaskScheduler.cpp", line 308, in updateStatistics
        305:         statistics->incProcessedTasks();
        306:         statistics->incProcessedBuffers();
        307:         auto creation = task.getBufferRef().getCreationTimestampInMS();
[33m      > 308:         NES_ASSERT((unsigned long) now >= creation, "timestamp is in the past");
[39m        309:         statistics->incLatencySum(now - creation);
        310: 
        311:         for (auto& bufferManager : bufferManagers) {
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff7c627fb7, in NES::collectAndPrintStacktrace[abi:cxx11]()
] callstack=
Stack trace (most recent call last) in thread 83263:
#10   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#9    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff7c18b49b, in 
#8    Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff7c54d623, in start_thread
#7    Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff7c31ff9b, in 
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838e813b, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/thread", line 195, in operator()
    |   194: 	void
[35m    | > 195: 	_M_run() { _M_func(); }
[39m    |   196:       };
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/thread", line 251, in _M_invoke<0UL>
    |   249: 	  using _Indices
    |   250: 	    = typename _Build_index_tuple<tuple_size<_Tuple>::value>::__type;
[35m    | > 251: 	  return _M_invoke(_Indices());
[39m    |   252: 	}
    |   253:       };
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/thread", line 244, in __invoke<(lambda at /home/ubuntu/git/nebulastream/nes-core/src/Runtime/ThreadPool.cpp:110:30)>
    |   242: 	  typename __result<_Tuple>::type
    |   243: 	  _M_invoke(_Index_tuple<_Ind...>)
[35m    | > 244: 	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
[39m    |   245: 
    |   246: 	typename __result<_Tuple>::type
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h", line 95, in __invoke_impl<void, (lambda at /home/ubuntu/git/nebulastream/nes-core/src/Runtime/ThreadPool.cpp:110:30)>
    |    93:       using __type = typename __result::type;
    |    94:       using __tag = typename __result::__invoke_type;
[35m    | >  95:       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
[39m    |    96: 					std::forward<_Args>(__args)...);
    |    97:     }
    | Source "/usr/lib/gcc/aarch64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h", line 60, in operator()
    |    58:     constexpr _Res
    |    59:     __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
[35m    | >  60:     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
[39m    |    61: 
    |    62:   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/ThreadPool.cpp", line 148, in _M_run
        145:             // TODO (2310) properly initialize the profiler with a file, thread, and core id
        146:             auto workerId = NesThread::getId();
        147:             NES_DEBUG("worker {} with workerId {} pins to queue {}", i, workerId, queueIdx);
[33m      > 148:             runningRoutine(WorkerContext(workerId, localBufferManager, numberOfBuffersPerWorker, queueIdx));
[39m        149:         });
        150:     }
        151:     barrier->wait();
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838e5ff3, in NES::Runtime::ThreadPool::runningRoutine(NES::Runtime::WorkerContext&&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/ThreadPool.cpp", line 62, in runningRoutine
         59: void ThreadPool::runningRoutine(WorkerContext&& workerContext) {
         60:     while (running) {
         61:         try {
[33m      >  62:             switch (queryManager->processNextTask(running, workerContext)) {
[39m         63:                 case ExecutionResult::Finished:
         64:                 case ExecutionResult::Ok: {
         65:                     break;
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838d2b7b, in NES::Runtime::DynamicQueryManager::processNextTask(bool, NES::Runtime::WorkerContext&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/QueryManagerTaskScheduler.cpp", line 110, in processNextTask
        107:         switch (result) {
        108:             //OK comes from sinks and intermediate operators
        109:             case ExecutionResult::Ok: {
[33m      > 110:                 completedWork(task, workerContext);
[39m        111:                 return ExecutionResult::Ok;
        112:             }
        113:             //Finished indicate that the processing is done
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838d2f97, in NES::Runtime::AbstractQueryManager::completedWork(NES::Runtime::Task&, NES::Runtime::WorkerContext&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/QueryManagerTaskScheduler.cpp", line 351, in __assert_fail
        348:         NES_TRACE("AbstractQueryManager::completedWork: task for exec pipeline isreconfig={}",
        349:                   (*executablePipeline)->isReconfiguration());
        350:     }
[33m      > 351:     updateStatistics(task, queryId, querySubPlanId, pipelineId, wtx);
[39m        352: }
        353: 
        354: bool MultiQueueQueryManager::addReconfigurationMessage(QueryId queryId,
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838d4fcb, in NES::Runtime::DynamicQueryManager::updateStatistics(NES::Runtime::Task const&, unsigned long, unsigned long, unsigned long, NES::Runtime::WorkerContext&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/QueryManagerTaskScheduler.cpp", line 263, in updateStatistics
        260:                                            QuerySubPlanId querySubPlanId,
        261:                                            PipelineId pipelineId,
        262:                                            WorkerContext& workerContext) {
[33m      > 263:     AbstractQueryManager::updateStatistics(task, queryId, querySubPlanId, pipelineId, workerContext);
[39m        264: #ifndef LIGHT_WEIGHT_STATISTICS
        265:     if (queryToStatisticsMap.contains(querySubPlanId)) {
        266:         auto statistics = queryToStatisticsMap.find(querySubPlanId);
#1    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff838d5427, in NES::Runtime::AbstractQueryManager::updateStatistics(NES::Runtime::Task const&, unsigned long, unsigned long, unsigned long, NES::Runtime::WorkerContext&)
      Source "/home/ubuntu/git/nebulastream/nes-core/src/Runtime/QueryManagerTaskScheduler.cpp", line 308, in updateStatistics
        305:         statistics->incProcessedTasks();
        306:         statistics->incProcessedBuffers();
        307:         auto creation = task.getBufferRef().getCreationTimestampInMS();
[33m      > 308:         NES_ASSERT((unsigned long) now >= creation, "timestamp is in the past");
[39m        309:         statistics->incLatencySum(now - creation);
        310: 
        311:         for (auto& bufferManager : bufferManagers) {
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff7c627fb7, in NES::collectAndPrintStacktrace[abi:cxx11]()
[m
[36m[11:34:41.410184] [D] [thread 238001] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:34:41.410722] [D] [thread 238001] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10620000,10680000,24,1700220832699,1700220881410
10620000,10680000,47,1700220832707,1700220881410
[m
[36m[11:34:41.410982] [D] [thread 238001] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1700220881410[m
[31m[1m[11:34:41.435009] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:41.435152] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:41.435210] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[32m[11:34:41.435223] [I] [thread 238010] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:34:41.435227] [I] [thread 238010] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:34:41.435229] [I] [thread 238010] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:34:41.435231] [I] [thread 238010] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:34:41.435233] [I] [thread 238010] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:34:41.435239] [D] [thread 238010] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[11:34:41.551757] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:42.006370] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:42.006569] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:42.007750] [D] [thread 238348] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:42.007775] [I] [thread 238348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:42.007778] [I] [thread 238348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:42.007789] [I] [thread 238348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:42.007791] [I] [thread 238348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:42.144715] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:42.144903] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:42.496464] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:42.496602] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:42.496654] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:42.496663] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:43.146088] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:43.405680] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:43.405874] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:43.406775] [D] [thread 238353] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:43.406802] [I] [thread 238353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:43.406805] [I] [thread 238353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:43.406818] [I] [thread 238353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:43.406819] [I] [thread 238353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:43.462685] [D] [thread 238002] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:34:43.462720] [D] [thread 238002] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:34:43.462933] [D] [thread 238002] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10620000,10680000,13,1700220832697,1700220883462
10620000,10680000,100,1700220832702,1700220883462
[m
[31m[1m[11:34:43.557508] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:43.557669] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:43.557723] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:43.557740] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:43.562027] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:43.562227] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:44.563378] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:44.619007] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:44.619144] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:44.619194] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:44.619203] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:44.814674] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:44.814884] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:44.816271] [D] [thread 238358] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:44.816294] [I] [thread 238358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:44.816297] [I] [thread 238358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:44.816309] [I] [thread 238358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:44.816310] [I] [thread 238358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:44.918057] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:44.918257] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:45.681654] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:45.681786] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:45.681827] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:45.681842] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:45.919405] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:46.156559] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:46.156752] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:46.157691] [D] [thread 238364] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:46.157715] [I] [thread 238364] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:46.157725] [I] [thread 238364] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:46.157736] [I] [thread 238364] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:46.157737] [I] [thread 238364] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:46.256178] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:46.256411] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:46.743206] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:46.743344] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:46.743396] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:46.743411] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:47.257598] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:47.806864] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:47.807002] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:47.807055] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:47.807070] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:47.944026] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:47.944209] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:47.945153] [D] [thread 238369] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:47.945177] [I] [thread 238369] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:47.945181] [I] [thread 238369] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:47.945198] [I] [thread 238369] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:47.945199] [I] [thread 238369] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:48.068697] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:48.068895] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:48.868712] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:48.868858] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:48.868905] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:48.868920] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:49.070059] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:49.284907] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:49.285089] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:49.286340] [D] [thread 238375] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:49.286363] [I] [thread 238375] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:49.286366] [I] [thread 238375] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:49.286378] [I] [thread 238375] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:49.286379] [I] [thread 238375] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:49.380696] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:49.380874] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:49.931344] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:49.931489] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:49.931542] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:49.931558] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:50.382034] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:50.628448] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:50.628644] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:50.630118] [D] [thread 238380] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:50.630141] [I] [thread 238380] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:50.630144] [I] [thread 238380] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:50.630156] [I] [thread 238380] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:50.630157] [I] [thread 238380] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:50.729203] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:50.729386] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:50.992651] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:50.992789] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:50.992841] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:50.992857] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:51.730553] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:51.996124] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:51.996343] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:51.997845] [D] [thread 238385] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:51.997869] [I] [thread 238385] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:51.997875] [I] [thread 238385] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:51.997886] [I] [thread 238385] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:51.997887] [I] [thread 238385] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:34:52.054113] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:52.054249] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:52.054298] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:52.054311] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:52.136779] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:52.136957] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:53.115413] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:53.115552] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:53.115605] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:53.115613] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:53.138123] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:53.434104] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:53.434307] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:53.435174] [D] [thread 238391] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:53.435197] [I] [thread 238391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:53.435202] [I] [thread 238391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:53.435212] [I] [thread 238391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:53.435213] [I] [thread 238391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:53.524150] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:53.524375] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:54.177118] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:54.177256] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:54.177302] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:54.177307] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:54.525560] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:54.765557] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:54.765758] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:54.766613] [D] [thread 238396] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:54.766664] [I] [thread 238396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:54.766667] [I] [thread 238396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:54.766679] [I] [thread 238396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:54.766680] [I] [thread 238396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:54.899273] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:54.899483] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:55.239040] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:55.239176] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:55.239223] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:55.239237] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:55.900628] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:56.301033] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:56.301173] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:56.301220] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:56.301235] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:56.501894] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:56.502102] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:56.502973] [D] [thread 238401] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:56.502997] [I] [thread 238401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:56.503000] [I] [thread 238401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:56.503012] [I] [thread 238401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:56.503013] [I] [thread 238401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:56.636358] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:56.636555] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:57.362956] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:57.363087] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:57.363130] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:57.363138] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:57.637740] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:57.901744] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:57.901982] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:57.902787] [D] [thread 238406] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:57.902810] [I] [thread 238406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:57.902813] [I] [thread 238406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:57.902825] [I] [thread 238406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:57.902827] [I] [thread 238406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:58.036994] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:58.037221] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:58.424484] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:58.424625] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:58.424678] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:58.424695] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:34:59.038386] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:59.303378] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:59.303605] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:59.304567] [D] [thread 238412] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:34:59.304581] [I] [thread 238412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:59.304584] [I] [thread 238412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:34:59.304595] [I] [thread 238412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:34:59.304596] [I] [thread 238412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:34:59.395852] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:34:59.396055] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:34:59.486385] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:34:59.486519] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:34:59.486562] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:34:59.486575] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:00.397253] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:00.548989] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:00.549128] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:00.549180] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:00.549194] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:00.642146] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:00.642329] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:00.643575] [D] [thread 238417] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:00.643597] [I] [thread 238417] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:00.643601] [I] [thread 238417] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:00.643618] [I] [thread 238417] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:00.643620] [I] [thread 238417] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:00.776561] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:00.776739] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:01.610248] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:01.610384] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:01.610433] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:01.610448] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:01.777894] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:02.005280] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:02.005465] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:02.006730] [D] [thread 238423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:02.006751] [I] [thread 238423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:02.006761] [I] [thread 238423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:02.006772] [I] [thread 238423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:02.006774] [I] [thread 238423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:02.137929] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:02.138113] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:02.673354] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:02.673494] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:02.673545] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:02.673555] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:03.139270] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:03.369558] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:03.369779] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:03.370698] [D] [thread 238428] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:03.370722] [I] [thread 238428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:03.370726] [I] [thread 238428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:03.370738] [I] [thread 238428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:03.370739] [I] [thread 238428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:03.470109] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:03.470300] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:03.735121] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:03.735253] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:03.735302] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:03.735316] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:04.471493] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:04.798636] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:04.798808] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:04.798867] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:04.798876] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:04.815738] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:04.815912] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:04.816876] [D] [thread 238433] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:04.816909] [I] [thread 238433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:04.816912] [I] [thread 238433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:04.816924] [I] [thread 238433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:04.816925] [I] [thread 238433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:04.918994] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:04.919205] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:05.863709] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:05.863853] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:05.863905] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:05.863915] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:05.920403] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:06.174517] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:06.174760] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:06.175653] [D] [thread 238439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:06.175676] [I] [thread 238439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:06.175680] [I] [thread 238439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:06.175691] [I] [thread 238439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:06.175693] [I] [thread 238439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:06.307338] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:06.307532] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:06.926119] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:06.926258] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:06.926313] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:06.926328] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:07.308715] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:07.554460] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:07.554671] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:07.555548] [D] [thread 238445] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:07.555571] [I] [thread 238445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:07.555576] [I] [thread 238445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:07.555587] [I] [thread 238445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:07.555588] [I] [thread 238445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:07.689422] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:07.689621] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:07.988245] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:07.988433] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:07.988491] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:07.988503] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:08.690778] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:09.050778] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:09.050916] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:09.050969] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:09.050982] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:09.143656] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:09.143856] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:09.144804] [D] [thread 238450] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:09.144829] [I] [thread 238450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:09.144835] [I] [thread 238450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:09.144846] [I] [thread 238450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:09.144847] [I] [thread 238450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:09.278467] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:09.278652] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:10.111980] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:10.112121] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:10.112166] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:10.112172] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:10.279840] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:10.686271] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:10.686466] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:10.687881] [D] [thread 238456] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:10.687903] [I] [thread 238456] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:10.687906] [I] [thread 238456] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:10.687917] [I] [thread 238456] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:10.687918] [I] [thread 238456] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:10.835170] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:10.835349] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:11.174048] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:11.174192] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:11.174233] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:11.174238] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:11.836518] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:12.182986] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:12.183162] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:12.184745] [D] [thread 238462] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:12.184769] [I] [thread 238462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:12.184774] [I] [thread 238462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:12.184785] [I] [thread 238462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:12.184786] [I] [thread 238462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:35:12.235592] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:12.235729] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:12.235778] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:12.235785] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:12.329697] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:12.329889] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:13.298252] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:13.298396] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:13.298443] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:13.298457] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:13.330253] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:13.629484] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:13.629692] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:13.630580] [D] [thread 238467] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:13.630604] [I] [thread 238467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:13.630607] [I] [thread 238467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:13.630619] [I] [thread 238467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:13.630620] [I] [thread 238467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:13.720035] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:13.720237] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:14.359650] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:14.359788] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:14.359840] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:14.359854] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:14.721398] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:14.941986] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:14.942208] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:14.943120] [D] [thread 238472] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:14.943145] [I] [thread 238472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:14.943148] [I] [thread 238472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:14.943159] [I] [thread 238472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:14.943160] [I] [thread 238472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:15.035270] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:15.035462] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:15.421219] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:15.421360] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:15.421415] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:15.421421] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:16.036618] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:16.484832] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:16.485010] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:16.485068] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:16.485076] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:16.501924] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:16.502103] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:16.502967] [D] [thread 238479] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:16.502992] [I] [thread 238479] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:16.502996] [I] [thread 238479] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:16.503007] [I] [thread 238479] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:16.503008] [I] [thread 238479] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:16.605937] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:16.606117] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:17.548832] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:17.548970] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:17.549027] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:17.549042] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:17.607329] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:17.848759] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:17.848958] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:17.849828] [D] [thread 238485] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:17.849851] [I] [thread 238485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:17.849855] [I] [thread 238485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:17.849867] [I] [thread 238485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:17.849868] [I] [thread 238485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:17.943101] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:17.943305] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:18.609657] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:18.609802] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:18.609848] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:18.609862] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:18.944525] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:19.163298] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:19.163526] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:19.164506] [D] [thread 238492] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:19.164529] [I] [thread 238492] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:19.164533] [I] [thread 238492] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:19.164544] [I] [thread 238492] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:19.164545] [I] [thread 238492] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:19.266257] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:19.266477] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:19.669502] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:19.669635] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:19.669686] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:19.669701] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:20.267650] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:20.523302] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:20.523493] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:20.524433] [D] [thread 238497] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:20.524455] [I] [thread 238497] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:20.524461] [I] [thread 238497] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:20.524472] [I] [thread 238497] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:20.524473] [I] [thread 238497] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:20.664859] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:20.665042] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:20.729909] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:20.730042] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:20.730092] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:20.730100] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:21.666220] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:21.791938] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:21.792079] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:21.792130] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:21.792135] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:22.069372] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:22.069566] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:22.070462] [D] [thread 238504] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:22.070485] [I] [thread 238504] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:22.070488] [I] [thread 238504] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:22.070500] [I] [thread 238504] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:22.070501] [I] [thread 238504] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:22.189062] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:22.189257] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:22.851997] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:22.852138] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:22.852192] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:22.852200] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:23.190438] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:23.407296] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:23.407534] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:23.408465] [D] [thread 238509] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:23.408490] [I] [thread 238509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:23.408493] [I] [thread 238509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:23.408512] [I] [thread 238509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:23.408513] [I] [thread 238509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:23.540559] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:23.540755] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:23.914167] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:23.914309] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:23.914364] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:23.914372] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:24.541914] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:24.744534] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:24.744802] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:24.745647] [D] [thread 238514] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:24.745670] [I] [thread 238514] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:24.745673] [I] [thread 238514] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:24.745685] [I] [thread 238514] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:24.745686] [I] [thread 238514] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:24.880407] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:24.880591] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:24.977072] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:24.977215] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:24.977269] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:24.977286] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:25.881746] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:26.039502] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:26.039643] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:26.039688] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:26.039697] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:26.133514] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:26.133688] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:26.135282] [D] [thread 238521] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:26.135303] [I] [thread 238521] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:26.135306] [I] [thread 238521] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:26.135318] [I] [thread 238521] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:26.135319] [I] [thread 238521] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:26.237353] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:26.237563] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:27.102081] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:27.102209] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:27.102251] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:27.102267] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:27.238734] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:27.453257] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:27.453455] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:27.454364] [D] [thread 238528] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:27.454386] [I] [thread 238528] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:27.454390] [I] [thread 238528] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:27.454401] [I] [thread 238528] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:27.454402] [I] [thread 238528] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:27.560930] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:27.561120] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:28.164454] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:28.164601] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:28.164654] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:28.164663] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:28.562273] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:28.807069] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:28.807252] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:28.808139] [D] [thread 238533] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:28.808162] [I] [thread 238533] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:28.808166] [I] [thread 238533] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:28.808177] [I] [thread 238533] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:28.808178] [I] [thread 238533] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:28.949562] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:28.949739] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:29.225499] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:29.225633] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:29.225676] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:29.225690] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:29.950882] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:30.189992] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:30.190189] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:30.191139] [D] [thread 238538] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:30.191164] [I] [thread 238538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:30.191167] [I] [thread 238538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:30.191178] [I] [thread 238538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:30.191179] [I] [thread 238538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:35:30.287986] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:30.288179] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:30.288239] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:30.288248] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:30.293845] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:30.294043] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:31.295198] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:31.352140] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:31.352285] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:31.352357] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:31.352374] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:31.503485] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:31.503668] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:31.504545] [D] [thread 238543] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:31.504568] [I] [thread 238543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:31.504572] [I] [thread 238543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:31.504582] [I] [thread 238543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:31.504584] [I] [thread 238543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:31.610098] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:31.610283] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:32.414884] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:32.415031] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:32.415080] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:32.415096] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:32.611471] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:32.834669] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:32.834858] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:32.835863] [D] [thread 238548] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:32.835889] [I] [thread 238548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:32.835893] [I] [thread 238548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:32.835904] [I] [thread 238548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:32.835906] [I] [thread 238548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:32.940413] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:32.940625] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:33.477383] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:33.477519] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:33.477563] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:33.477578] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:33.941812] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:34.151301] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:34.151530] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:34.152375] [D] [thread 238553] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:34.152397] [I] [thread 238553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:34.152401] [I] [thread 238553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:34.152414] [I] [thread 238553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:34.152415] [I] [thread 238553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:34.285033] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:34.285315] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:34.539438] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:34.539581] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:34.539637] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:34.539647] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:35.286505] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:35.540576] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:35.540844] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:35.541662] [D] [thread 238558] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:35.541684] [I] [thread 238558] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:35.541688] [I] [thread 238558] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:35.541699] [I] [thread 238558] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:35.541700] [I] [thread 238558] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:35:35.601532] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:35.601665] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:35.601715] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:35.601729] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:35.686810] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:35.686998] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:36.663637] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:36.663775] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:36.663827] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:36.663841] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:36.688175] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:36.989899] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:36.990106] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:36.990965] [D] [thread 238565] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:36.990989] [I] [thread 238565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:36.990993] [I] [thread 238565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:36.991004] [I] [thread 238565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:36.991005] [I] [thread 238565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:37.127300] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:37.127500] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:37.725732] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:37.725874] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:37.725925] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:37.725930] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:38.128656] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:38.347717] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:38.347952] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:38.348862] [D] [thread 238570] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:38.348885] [I] [thread 238570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:38.348888] [I] [thread 238570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:38.348899] [I] [thread 238570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:38.348900] [I] [thread 238570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:38.479323] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:38.479526] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:38.787886] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:38.788035] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:38.788088] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:38.788096] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:39.480711] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:39.753317] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:39.753549] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:39.754417] [D] [thread 238576] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:39.754466] [I] [thread 238576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:39.754470] [I] [thread 238576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:39.754481] [I] [thread 238576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:39.754482] [I] [thread 238576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:35:39.851015] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:39.851196] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:39.851254] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:39.851270] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:39.884014] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:39.884219] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:40.885397] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:40.915047] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:40.915182] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:40.915233] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:40.915246] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:41.200221] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:41.200468] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:41.201378] [D] [thread 238585] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:41.201401] [I] [thread 238585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:41.201405] [I] [thread 238585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:41.201419] [I] [thread 238585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:41.201420] [I] [thread 238585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:41.298155] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:41.298337] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:41.977862] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:41.978001] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:41.978056] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:41.978062] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:42.299514] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:42.599359] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:42.599544] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:42.600435] [D] [thread 238591] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:42.600458] [I] [thread 238591] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:42.600462] [I] [thread 238591] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:42.600476] [I] [thread 238591] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:42.600477] [I] [thread 238591] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:42.698173] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:42.698356] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:43.040540] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:43.040692] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:43.040745] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:43.040762] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:43.699540] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:43.905553] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:43.905743] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:43.906635] [D] [thread 238597] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:43.906659] [I] [thread 238597] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:43.906662] [I] [thread 238597] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:43.906672] [I] [thread 238597] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:43.906673] [I] [thread 238597] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:44.006068] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:44.006265] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:44.102654] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:44.102796] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:44.102838] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:44.102842] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:45.007386] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:45.165476] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:45.165616] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:45.165667] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:45.165675] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:45.297284] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:45.297486] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:45.298355] [D] [thread 238604] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:45.298379] [I] [thread 238604] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:45.298384] [I] [thread 238604] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:45.298395] [I] [thread 238604] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:45.298396] [I] [thread 238604] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:45.397786] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:45.397979] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:46.227085] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:46.227230] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:46.227287] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:46.227294] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:46.399154] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:46.548499] [D] [thread 238003] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:35:46.548537] [D] [thread 238003] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:35:46.548741] [D] [thread 238003] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10680000,10740000,24,1700220881322,1700220946548
10680000,10740000,47,1700220881350,1700220946548
[m
[36m[11:35:46.674592] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:46.674776] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:46.675685] [D] [thread 238609] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:46.675710] [I] [thread 238609] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:46.675713] [I] [thread 238609] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:46.675724] [I] [thread 238609] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:46.675725] [I] [thread 238609] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:46.787765] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:46.787952] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:47.289030] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:47.289176] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:47.289223] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:47.289228] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:47.789116] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:48.105058] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:48.105240] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:48.106692] [D] [thread 238616] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:48.106713] [I] [thread 238616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:48.106722] [I] [thread 238616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:48.106733] [I] [thread 238616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:48.106735] [I] [thread 238616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:48.215674] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:48.215866] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:48.351059] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:48.351191] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:48.351236] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:48.351249] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:49.217028] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:49.413922] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:49.414109] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:49.414156] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:49.414181] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:49.419854] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:49.420053] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:49.421119] [D] [thread 238621] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:49.421149] [I] [thread 238621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:49.421153] [I] [thread 238621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:49.421176] [I] [thread 238621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:49.421179] [I] [thread 238621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:49.477543] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:49.477741] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:50.477086] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:50.477230] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:50.477287] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:50.477291] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:50.478829] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:50.732850] [D] [thread 238004] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:35:50.732888] [D] [thread 238004] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:35:50.733092] [D] [thread 238004] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10680000,10740000,13,1700220883405,1700220950732
10680000,10740000,100,1700220878222,1700220950732
[m
[36m[11:35:50.879436] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:50.879633] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:50.880600] [D] [thread 238626] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:50.880625] [I] [thread 238626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:50.880629] [I] [thread 238626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:50.880640] [I] [thread 238626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:50.880641] [I] [thread 238626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:50.987853] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:50.988054] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:51.539538] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:51.539687] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:51.539742] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:51.539752] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:51.989241] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:52.245791] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:52.245996] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:52.246844] [D] [thread 238633] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:52.246865] [I] [thread 238633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:52.246869] [I] [thread 238633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:52.246880] [I] [thread 238633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:52.246881] [I] [thread 238633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:52.376468] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:52.376671] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:52.601534] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:52.601669] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:52.601720] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:52.601735] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:53.377839] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:53.621332] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:53.621572] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:53.622445] [D] [thread 238638] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:53.622467] [I] [thread 238638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:53.622471] [I] [thread 238638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:53.622481] [I] [thread 238638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:53.622482] [I] [thread 238638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:35:53.662717] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:53.662855] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:53.662905] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:53.662921] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:53.753660] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:53.753861] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:54.725462] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:54.725598] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:54.725642] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:54.725655] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:54.755042] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:55.014133] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:55.014318] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:55.015209] [D] [thread 238644] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:55.015232] [I] [thread 238644] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:55.015236] [I] [thread 238644] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:55.015246] [I] [thread 238644] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:55.015247] [I] [thread 238644] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:55.152409] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:55.152584] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:55.788939] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:55.789087] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:55.789140] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:55.789148] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:56.153737] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:56.375127] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:56.375371] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:56.376189] [D] [thread 238650] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:56.376214] [I] [thread 238650] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:56.376217] [I] [thread 238650] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:56.376230] [I] [thread 238650] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:56.376231] [I] [thread 238650] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:56.474515] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:56.474700] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:56.851508] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:56.851654] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:56.851709] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:56.851717] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:57.475879] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:57.690181] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:57.690383] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:57.691276] [D] [thread 238655] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:57.691298] [I] [thread 238655] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:57.691301] [I] [thread 238655] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:57.691313] [I] [thread 238655] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:57.691314] [I] [thread 238655] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:57.821668] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:57.821864] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:57.913471] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:57.913632] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:57.913687] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:57.913692] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:58.823038] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:35:58.975370] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:35:58.975508] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:35:58.975561] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:35:58.975577] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:35:59.192385] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:59.192572] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:59.194233] [D] [thread 238660] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:35:59.194256] [I] [thread 238660] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:59.194259] [I] [thread 238660] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:35:59.194270] [I] [thread 238660] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:35:59.194271] [I] [thread 238660] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:35:59.334281] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:59.334482] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:00.036148] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:00.036292] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:00.036380] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:00.036385] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:00.335668] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:00.618003] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:00.618182] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:00.619053] [D] [thread 238666] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:00.619073] [I] [thread 238666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:00.619077] [I] [thread 238666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:00.619088] [I] [thread 238666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:00.619090] [I] [thread 238666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:00.756219] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:00.756436] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:01.097510] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:01.097641] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:01.097689] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:01.097702] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:01.757587] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:01.991445] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:01.991632] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:01.992556] [D] [thread 238672] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:01.992579] [I] [thread 238672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:01.992582] [I] [thread 238672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:01.992593] [I] [thread 238672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:01.992594] [I] [thread 238672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:02.092105] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:02.092284] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:02.158034] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:02.158169] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:02.158222] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:02.158235] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:03.093419] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:03.220094] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:03.220233] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:03.220279] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:03.220296] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:03.325203] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:03.325429] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:03.326334] [D] [thread 238679] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:03.326358] [I] [thread 238679] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:03.326362] [I] [thread 238679] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:03.326373] [I] [thread 238679] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:03.326374] [I] [thread 238679] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:03.425525] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:03.425699] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:04.281163] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:04.281307] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:04.281355] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:04.281371] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:04.426873] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:04.671907] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:04.672121] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:04.673080] [D] [thread 238684] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:04.673104] [I] [thread 238684] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:04.673109] [I] [thread 238684] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:04.673120] [I] [thread 238684] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:04.673121] [I] [thread 238684] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:04.776850] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:04.777036] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:05.342553] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:05.342692] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:05.342745] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:05.342752] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:05.778218] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:06.030157] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:06.030346] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:06.031251] [D] [thread 238689] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:06.031274] [I] [thread 238689] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:06.031278] [I] [thread 238689] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:06.031289] [I] [thread 238689] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:06.031290] [I] [thread 238689] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:06.121703] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:06.121907] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:06.404626] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:06.404765] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:06.404816] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:06.404825] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:07.123087] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:07.368208] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:07.368436] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:07.369418] [D] [thread 238694] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:07.369441] [I] [thread 238694] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:07.369444] [I] [thread 238694] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:07.369455] [I] [thread 238694] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:07.369456] [I] [thread 238694] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:36:07.467401] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:07.467677] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:07.467750] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:07.467759] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:07.475356] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:07.475640] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:08.476793] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:08.529262] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:08.529396] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:08.529447] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:08.529464] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:08.721783] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:08.722000] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:08.722837] [D] [thread 238700] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:08.722858] [I] [thread 238700] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:08.722861] [I] [thread 238700] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:08.722872] [I] [thread 238700] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:08.722873] [I] [thread 238700] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:08.849829] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:08.850036] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:09.592970] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:09.593106] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:09.593161] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:09.593178] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:09.851230] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:10.092276] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:10.092491] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:10.093715] [D] [thread 238706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:10.093736] [I] [thread 238706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:10.093746] [I] [thread 238706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:10.093757] [I] [thread 238706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:10.093758] [I] [thread 238706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:10.181400] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:10.181604] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:10.655408] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:10.655549] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:10.655602] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:10.655611] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:11.182758] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:11.413943] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:11.414161] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:11.415087] [D] [thread 238712] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:11.415110] [I] [thread 238712] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:11.415113] [I] [thread 238712] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:11.415127] [I] [thread 238712] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:11.415129] [I] [thread 238712] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:11.522942] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:11.523123] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:11.717439] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:11.717582] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:11.717635] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:11.717642] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:12.524275] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:12.748270] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:12.748486] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:12.749399] [D] [thread 238718] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:12.749421] [I] [thread 238718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:12.749430] [I] [thread 238718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:12.749441] [I] [thread 238718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:12.749442] [I] [thread 238718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:36:12.777286] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:12.777425] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:12.777476] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:12.777491] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:12.885489] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:12.885680] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:13.840446] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:13.840591] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:13.840639] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:13.840645] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:13.886824] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:14.167311] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:14.167501] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:14.168581] [D] [thread 238725] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:14.168605] [I] [thread 238725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:14.168608] [I] [thread 238725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:14.168621] [I] [thread 238725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:14.168622] [I] [thread 238725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:14.266761] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:14.266949] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:14.903097] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:14.903235] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:14.903285] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:14.903303] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:15.268127] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:15.517805] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:15.518010] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:15.518871] [D] [thread 238730] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:15.518894] [I] [thread 238730] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:15.518897] [I] [thread 238730] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:15.518916] [I] [thread 238730] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:15.518917] [I] [thread 238730] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:15.647919] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:15.648150] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:15.965490] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:15.965623] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:15.965674] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:15.965688] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:16.649338] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:16.860389] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:16.860567] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:16.861878] [D] [thread 238735] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:16.861900] [I] [thread 238735] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:16.861903] [I] [thread 238735] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:16.861914] [I] [thread 238735] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:16.861915] [I] [thread 238735] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:16.964366] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:16.964535] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:17.027397] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:17.027536] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:17.027584] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:17.027600] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:17.965713] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:18.089634] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:18.089768] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:18.089814] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:18.089827] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:18.176454] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:18.176631] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:18.177955] [D] [thread 238740] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:18.177981] [I] [thread 238740] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:18.177984] [I] [thread 238740] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:18.177995] [I] [thread 238740] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:18.177996] [I] [thread 238740] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:18.309790] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:18.309975] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:19.151101] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:19.151241] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:19.151284] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:19.151288] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:19.311156] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:19.681677] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:19.681862] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:19.682744] [D] [thread 238745] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:19.682794] [I] [thread 238745] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:19.682797] [I] [thread 238745] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:19.682809] [I] [thread 238745] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:19.682810] [I] [thread 238745] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:19.776753] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:19.776957] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:20.214639] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:20.214779] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:20.214836] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:20.214851] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:20.778141] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:21.000129] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:21.000371] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:21.001427] [D] [thread 238750] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:21.001450] [I] [thread 238750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:21.001454] [I] [thread 238750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:21.001465] [I] [thread 238750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:21.001466] [I] [thread 238750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:21.077807] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:21.077973] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:21.276407] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:21.276561] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:21.276607] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:21.276612] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:22.079117] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:22.294220] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:22.294429] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:22.295264] [D] [thread 238755] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:22.295287] [I] [thread 238755] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:22.295290] [I] [thread 238755] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:22.295302] [I] [thread 238755] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:22.295303] [I] [thread 238755] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:36:22.337423] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:22.337555] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:22.337605] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:22.337619] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:22.425278] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:22.425505] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:23.399621] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:23.399760] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:23.399806] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:23.399820] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:23.426792] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:23.710389] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:23.710597] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:23.711498] [D] [thread 238760] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:23.711520] [I] [thread 238760] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:23.711523] [I] [thread 238760] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:23.711534] [I] [thread 238760] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:23.711536] [I] [thread 238760] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:23.856127] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:23.856417] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:24.461455] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:24.461598] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:24.461646] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:24.461651] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:24.857577] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:25.295448] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:25.295642] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:25.296519] [D] [thread 238767] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:25.296544] [I] [thread 238767] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:25.296547] [I] [thread 238767] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:25.296559] [I] [thread 238767] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:25.296560] [I] [thread 238767] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:25.501082] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:25.501282] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:25.519808] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:25.519949] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:25.520000] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:25.520013] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:26.502453] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:26.581453] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:26.581600] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:26.581653] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:26.581660] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:26.753639] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:26.753834] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:26.754687] [D] [thread 238773] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:26.754713] [I] [thread 238773] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:26.754717] [I] [thread 238773] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:26.754731] [I] [thread 238773] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:26.754732] [I] [thread 238773] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:26.887145] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:26.887339] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:27.644107] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:27.644264] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:27.644358] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:27.644376] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:27.888538] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:28.115901] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:28.116082] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:28.117607] [D] [thread 238778] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:28.117629] [I] [thread 238778] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:28.117639] [I] [thread 238778] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:28.117650] [I] [thread 238778] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:28.117651] [I] [thread 238778] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:28.231684] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:28.231860] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:28.706914] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:28.707053] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:28.707105] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:28.707121] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:29.233015] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:29.475999] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:29.476387] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:29.477119] [D] [thread 238783] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:29.477131] [I] [thread 238783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:29.477134] [I] [thread 238783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:29.477145] [I] [thread 238783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:29.477146] [I] [thread 238783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:29.587003] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:29.587210] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:29.769379] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:29.769508] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:29.769559] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:29.769572] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:30.588385] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:30.823320] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:30.823523] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:30.824508] [D] [thread 238789] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:30.824536] [I] [thread 238789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:30.824542] [I] [thread 238789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:30.824555] [I] [thread 238789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:30.824556] [I] [thread 238789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:36:30.829979] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:30.830112] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:30.830163] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:30.830176] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:30.928151] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:30.928394] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:31.891590] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:31.891728] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:31.891781] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:31.891785] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:31.929519] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:32.219344] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:32.219561] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:32.220545] [D] [thread 238794] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:32.220569] [I] [thread 238794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:32.220573] [I] [thread 238794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:32.220584] [I] [thread 238794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:32.220585] [I] [thread 238794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:32.326578] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:32.326760] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:32.954230] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:32.954378] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:32.954432] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:32.954442] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:33.327930] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:33.577826] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:33.578013] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:33.579007] [D] [thread 238800] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:33.579031] [I] [thread 238800] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:33.579035] [I] [thread 238800] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:33.579046] [I] [thread 238800] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:33.579047] [I] [thread 238800] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:33.675893] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:33.676103] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:34.016574] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:34.016718] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:34.016775] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:34.016780] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:34.677262] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:35.058536] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:35.058768] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:35.059754] [D] [thread 238806] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:35.059788] [I] [thread 238806] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:35.059792] [I] [thread 238806] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:35.059807] [I] [thread 238806] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:35.059808] [I] [thread 238806] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:36:35.075529] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:35.075665] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:35.075712] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:35.075727] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:35.145512] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:35.145722] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:36.138043] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:36.138178] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:36.138222] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:36.138235] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:36.146828] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:36.451774] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:36.451978] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:36.453003] [D] [thread 238811] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:36.453028] [I] [thread 238811] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:36.453038] [I] [thread 238811] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:36.453049] [I] [thread 238811] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:36.453051] [I] [thread 238811] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:36.590656] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:36.590837] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:37.200136] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:37.200291] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:37.200371] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:37.200376] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:37.592018] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:37.856655] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:37.856863] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:37.857755] [D] [thread 238817] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:37.857777] [I] [thread 238817] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:37.857780] [I] [thread 238817] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:37.857792] [I] [thread 238817] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:37.857793] [I] [thread 238817] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:37.988531] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:37.988726] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:38.261345] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:38.261483] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:38.261528] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:38.261541] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:38.989907] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:39.318983] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:39.319181] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:39.320058] [D] [thread 238823] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:39.320088] [I] [thread 238823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:39.320092] [I] [thread 238823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:39.320112] [I] [thread 238823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:39.320113] [I] [thread 238823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:36:39.321105] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:39.321309] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:39.321380] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:39.321386] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:39.436451] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:39.436635] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:40.382110] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:40.382248] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:40.382296] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:40.382300] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:40.437799] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:40.729789] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:40.730056] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:40.730903] [D] [thread 238829] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:40.730926] [I] [thread 238829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:40.730931] [I] [thread 238829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:40.730942] [I] [thread 238829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:40.730943] [I] [thread 238829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:40.864230] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:40.864451] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:41.444480] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:41.444618] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:41.444668] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:41.444676] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:41.865631] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:42.125821] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:42.126000] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:42.126975] [D] [thread 238834] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:42.127003] [I] [thread 238834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:42.127007] [I] [thread 238834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:42.127023] [I] [thread 238834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:42.127024] [I] [thread 238834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:42.224600] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:42.224789] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:42.505287] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:42.505426] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:42.505476] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:42.505492] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:43.225970] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:43.454914] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:43.455117] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:43.456032] [D] [thread 238841] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:43.456054] [I] [thread 238841] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:43.456064] [I] [thread 238841] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:43.456074] [I] [thread 238841] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:43.456075] [I] [thread 238841] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:43.551247] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:43.551475] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:43.565395] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:43.565539] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:43.565591] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:43.565607] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:44.552637] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:44.624112] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:44.624254] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:44.624307] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:44.624312] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:44.757731] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:44.757915] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:44.758788] [D] [thread 238846] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:44.758808] [I] [thread 238846] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:44.758816] [I] [thread 238846] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:44.758826] [I] [thread 238846] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:44.758828] [I] [thread 238846] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:44.825200] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:44.825381] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:45.685327] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:45.685461] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:45.685503] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:45.685521] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:45.826570] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:46.045640] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:46.045868] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:46.046804] [D] [thread 238851] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:46.046829] [I] [thread 238851] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:46.046832] [I] [thread 238851] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:46.046843] [I] [thread 238851] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:46.046844] [I] [thread 238851] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:46.155207] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:46.155396] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:46.749232] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:46.749378] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:46.749433] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:46.749451] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:47.156465] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:47.409828] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:47.410016] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:47.410922] [D] [thread 238856] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:47.410945] [I] [thread 238856] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:47.410948] [I] [thread 238856] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:47.410959] [I] [thread 238856] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:47.410960] [I] [thread 238856] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:47.521976] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:47.522157] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:47.812026] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:47.812168] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:47.812219] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:47.812228] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:48.523336] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:48.793435] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:48.793638] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:48.794550] [D] [thread 238861] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:48.794574] [I] [thread 238861] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:48.794582] [I] [thread 238861] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:48.794592] [I] [thread 238861] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:48.794593] [I] [thread 238861] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:36:48.875318] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:48.875496] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:48.875556] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:48.875572] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:48.892791] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:48.892981] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:49.894153] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:49.937557] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:49.937691] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:49.937741] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:49.937754] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:50.205540] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:50.205766] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:50.206596] [D] [thread 238866] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:50.206618] [I] [thread 238866] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:50.206624] [I] [thread 238866] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:50.206640] [I] [thread 238866] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:50.206641] [I] [thread 238866] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:50.322016] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:50.322225] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:50.999487] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:50.999624] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:50.999672] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:50.999678] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:51.323387] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:51.606640] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:51.606839] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:51.607731] [D] [thread 238871] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:51.607756] [I] [thread 238871] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:51.607760] [I] [thread 238871] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:51.607771] [I] [thread 238871] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:51.607772] [I] [thread 238871] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:51.713440] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:51.713609] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:51.722787] [D] [thread 238001] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:36:51.722810] [D] [thread 238001] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:36:51.722927] [D] [thread 238001] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10740000,10800000,24,1700220946497,1700221011722
10740000,10800000,47,1700220945553,1700221011722
[m
[31m[1m[11:36:52.061381] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:52.061515] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:52.061568] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:52.061580] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:52.714775] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:52.951675] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:52.951856] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:52.952806] [D] [thread 238876] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:52.952829] [I] [thread 238876] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:52.952833] [I] [thread 238876] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:52.952845] [I] [thread 238876] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:52.952846] [I] [thread 238876] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:53.045866] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:53.046042] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:53.123052] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:53.123193] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:53.123245] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:53.123259] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:54.047220] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:54.185852] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:54.185987] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:54.186036] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:54.186051] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:54.298405] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:54.298584] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:54.299959] [D] [thread 238881] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:54.299981] [I] [thread 238881] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:54.299990] [I] [thread 238881] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:54.300001] [I] [thread 238881] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:54.300002] [I] [thread 238881] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:54.415295] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:54.415473] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:55.246695] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:55.246833] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:55.246884] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:55.246899] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:55.416668] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:55.654097] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:55.654324] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:55.655269] [D] [thread 238887] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:55.655293] [I] [thread 238887] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:55.655297] [I] [thread 238887] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:55.655315] [I] [thread 238887] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:55.655316] [I] [thread 238887] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:55.750471] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:55.750655] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:55.923451] [D] [thread 238002] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:36:55.923488] [D] [thread 238002] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:36:55.923688] [D] [thread 238002] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10740000,10800000,13,1700220950669,1700221015923
10740000,10800000,100,1700220933071,1700221015923
[m
[31m[1m[11:36:56.309375] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:56.309512] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:56.309558] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:56.309563] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:56.751836] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:57.102255] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:57.102458] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:57.103384] [D] [thread 238893] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:57.103407] [I] [thread 238893] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:57.103410] [I] [thread 238893] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:57.103422] [I] [thread 238893] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:57.103423] [I] [thread 238893] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:36:57.206333] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:57.206517] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:57.370939] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:57.371083] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:57.371133] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:57.371148] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:58.207788] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:58.418156] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:58.418397] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:58.419311] [D] [thread 238899] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:36:58.419345] [I] [thread 238899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:58.419349] [I] [thread 238899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:36:58.419364] [I] [thread 238899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:36:58.419365] [I] [thread 238899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:36:58.430221] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:58.430357] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:58.430404] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:58.430418] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:58.549218] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:58.549399] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:36:59.492418] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:36:59.492563] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:36:59.492614] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:36:59.492622] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:36:59.550574] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:00.069551] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:00.069735] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:00.070645] [D] [thread 238905] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:00.070669] [I] [thread 238905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:00.070672] [I] [thread 238905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:00.070684] [I] [thread 238905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:00.070685] [I] [thread 238905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:00.203276] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:00.203482] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:00.555095] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:00.555235] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:00.555281] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:00.555294] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:01.204634] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:01.452054] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:01.452264] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:01.453158] [D] [thread 238911] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:01.453172] [I] [thread 238911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:01.453175] [I] [thread 238911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:01.453186] [I] [thread 238911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:01.453187] [I] [thread 238911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:01.519631] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:01.519862] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:01.617730] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:01.617875] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:01.617931] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:01.617949] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:02.521040] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:02.680937] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:02.681079] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:02.681131] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:02.681148] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:02.769478] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:02.769662] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:02.771133] [D] [thread 238916] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:02.771156] [I] [thread 238916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:02.771160] [I] [thread 238916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:02.771171] [I] [thread 238916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:02.771172] [I] [thread 238916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:02.862602] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:02.862779] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:03.743889] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:03.744029] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:03.744076] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:03.744091] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:03.863930] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:04.078917] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:04.079090] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:04.080684] [D] [thread 238921] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:04.080709] [I] [thread 238921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:04.080713] [I] [thread 238921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:04.080724] [I] [thread 238921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:04.080726] [I] [thread 238921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:04.216002] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:04.216249] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:04.806499] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:04.806636] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:04.806689] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:04.806697] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:05.217416] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.430167] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.430437] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.431281] [D] [thread 238927] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:05.431304] [I] [thread 238927] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:05.431308] [I] [thread 238927] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:05.431319] [I] [thread 238927] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:05.431320] [I] [thread 238927] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:05.594145] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.594353] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:05.869048] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:05.869189] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:05.869241] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:05.869257] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:06.595551] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:06.898168] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:06.898361] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:06.899890] [D] [thread 238932] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:06.899914] [I] [thread 238932] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:06.899918] [I] [thread 238932] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:06.899932] [I] [thread 238932] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:06.899933] [I] [thread 238932] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:37:06.928838] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:06.928981] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:06.929034] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:06.929050] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:07.035821] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:07.036029] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:07.991310] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:07.991446] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:07.991498] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:07.991511] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:08.036488] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:08.306265] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:08.306470] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:08.307310] [D] [thread 238937] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:08.307332] [I] [thread 238937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:08.307335] [I] [thread 238937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:08.307354] [I] [thread 238937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:08.307355] [I] [thread 238937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:08.416369] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:08.416562] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:09.053627] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:09.053780] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:09.053825] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:09.053841] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:09.417728] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:09.649966] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:09.650145] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:09.651736] [D] [thread 238942] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:09.651760] [I] [thread 238942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:09.651763] [I] [thread 238942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:09.651775] [I] [thread 238942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:09.651776] [I] [thread 238942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:09.784964] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:09.785140] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:10.116178] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:10.116353] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:10.116396] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:10.116406] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:10.786322] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:11.178967] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:11.179107] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:11.179150] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:11.179171] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:11.390204] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:11.390387] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:11.391310] [D] [thread 238947] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:11.391334] [I] [thread 238947] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:11.391338] [I] [thread 238947] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:11.391349] [I] [thread 238947] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:11.391350] [I] [thread 238947] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:11.495991] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:11.496171] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:12.241615] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:12.241752] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:12.241799] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:12.241803] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:12.497319] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:12.722290] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:12.722551] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:12.723888] [D] [thread 238952] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:12.723911] [I] [thread 238952] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:12.723920] [I] [thread 238952] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:12.723932] [I] [thread 238952] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:12.723933] [I] [thread 238952] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:12.831193] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:12.831392] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:13.305365] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:13.305499] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:13.305545] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:13.305559] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:13.832573] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:14.050933] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:14.051144] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:14.052027] [D] [thread 238958] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:14.052050] [I] [thread 238958] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:14.052054] [I] [thread 238958] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:14.052065] [I] [thread 238958] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:14.052066] [I] [thread 238958] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:14.150338] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:14.150545] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:14.367265] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:14.367403] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:14.367457] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:14.367474] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:15.151734] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:15.369605] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:15.369812] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:15.370719] [D] [thread 238964] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:15.370742] [I] [thread 238964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:15.370745] [I] [thread 238964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:15.370757] [I] [thread 238964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:15.370758] [I] [thread 238964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:37:15.428613] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:15.428773] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:15.428829] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:15.428835] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:15.520903] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:15.521106] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:16.490563] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:16.490704] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:16.490751] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:16.490765] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:16.522249] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:16.806351] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:16.806530] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:16.807403] [D] [thread 238970] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:16.807425] [I] [thread 238970] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:16.807430] [I] [thread 238970] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:16.807441] [I] [thread 238970] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:16.807442] [I] [thread 238970] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:16.899228] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:16.899411] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:17.551837] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:17.551975] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:17.552024] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:17.552029] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:17.900596] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:18.109975] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:18.110187] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:18.111089] [D] [thread 238975] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:18.111112] [I] [thread 238975] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:18.111116] [I] [thread 238975] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:18.111127] [I] [thread 238975] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:18.111128] [I] [thread 238975] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:18.238857] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:18.239064] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:18.613211] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:18.613343] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:18.613397] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:18.613410] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:19.240213] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:19.465400] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:19.465644] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:19.466493] [D] [thread 238983] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:19.466517] [I] [thread 238983] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:19.466527] [I] [thread 238983] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:19.466538] [I] [thread 238983] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:19.466539] [I] [thread 238983] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:19.539000] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:19.539177] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:19.674507] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:19.674650] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:19.674702] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:19.674716] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:20.540385] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:20.736651] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:20.736797] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:20.736853] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:20.736872] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:20.831817] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:20.832037] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:20.833002] [D] [thread 238989] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:20.833027] [I] [thread 238989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:20.833030] [I] [thread 238989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:20.833042] [I] [thread 238989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:20.833043] [I] [thread 238989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:20.930613] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:20.930818] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:21.797881] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:21.798021] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:21.798069] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:21.798083] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:21.932049] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:22.144888] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:22.145136] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:22.146048] [D] [thread 238994] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:22.146072] [I] [thread 238994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:22.146075] [I] [thread 238994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:22.146086] [I] [thread 238994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:22.146087] [I] [thread 238994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:22.244936] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:22.245137] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:22.859058] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:22.859200] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:22.859253] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:22.859270] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:23.246272] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:23.488402] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:23.488583] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:23.489562] [D] [thread 238999] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:23.489585] [I] [thread 238999] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:23.489589] [I] [thread 238999] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:23.489600] [I] [thread 238999] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:23.489601] [I] [thread 238999] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:23.592207] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:23.592412] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:23.920391] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:23.920535] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:23.920586] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:23.920593] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:24.593582] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:24.861856] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:24.862075] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:24.862990] [D] [thread 239005] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:24.863013] [I] [thread 239005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:24.863017] [I] [thread 239005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:24.863029] [I] [thread 239005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:24.863030] [I] [thread 239005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:24.961012] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:24.961217] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:24.977791] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:24.977952] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:24.978007] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:24.978016] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:25.962386] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:26.036534] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:26.036672] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:26.036723] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:26.036738] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:26.161815] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:26.162015] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:26.162902] [D] [thread 239011] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:26.162924] [I] [thread 239011] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:26.162928] [I] [thread 239011] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:26.162939] [I] [thread 239011] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:26.162940] [I] [thread 239011] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:26.317438] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:26.317640] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:27.097401] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:27.097534] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:27.097579] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:27.097593] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:27.318794] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:27.570723] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:27.570926] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:27.571831] [D] [thread 239017] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:27.571855] [I] [thread 239017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:27.571864] [I] [thread 239017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:27.571876] [I] [thread 239017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:27.571877] [I] [thread 239017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:27.661319] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:27.661513] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:28.159073] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:28.159216] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:28.159273] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:28.159281] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:28.662682] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:28.913989] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:28.914191] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:28.915046] [D] [thread 239022] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:28.915069] [I] [thread 239022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:28.915072] [I] [thread 239022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:28.915089] [I] [thread 239022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:28.915090] [I] [thread 239022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:29.002247] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:29.002489] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:29.220972] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:29.221112] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:29.221154] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:29.221159] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:30.003666] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:30.282176] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:30.282319] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:30.282371] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:30.282387] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:30.369188] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:30.369376] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:30.370237] [D] [thread 239027] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:30.370260] [I] [thread 239027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:30.370270] [I] [thread 239027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:30.370281] [I] [thread 239027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:30.370282] [I] [thread 239027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:30.459945] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:30.460158] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:31.343943] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:31.344086] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:31.344133] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:31.344147] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:31.461304] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:31.723919] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:31.724104] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:31.725096] [D] [thread 239033] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:31.725122] [I] [thread 239033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:31.725125] [I] [thread 239033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:31.725137] [I] [thread 239033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:31.725138] [I] [thread 239033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:31.826166] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:31.826405] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:32.405241] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:32.405381] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:32.405437] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:32.405452] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:32.827589] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:33.034163] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:33.034380] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:33.035320] [D] [thread 239038] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:33.035345] [I] [thread 239038] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:33.035348] [I] [thread 239038] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:33.035359] [I] [thread 239038] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:33.035360] [I] [thread 239038] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:33.125711] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:33.125897] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:33.466118] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:33.466253] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:33.466304] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:33.466319] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:34.127079] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:34.526864] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:34.526996] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:34.527036] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:34.527052] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:34.770125] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:34.770333] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:34.771157] [D] [thread 239043] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:34.771180] [I] [thread 239043] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:34.771183] [I] [thread 239043] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:34.771195] [I] [thread 239043] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:34.771196] [I] [thread 239043] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:34.910563] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:34.910787] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:35.588525] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:35.588665] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:35.588722] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:35.588730] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:35.911971] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:36.148775] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:36.148960] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:36.149858] [D] [thread 239048] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:36.149882] [I] [thread 239048] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:36.149891] [I] [thread 239048] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:36.149903] [I] [thread 239048] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:36.149904] [I] [thread 239048] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:36.280120] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:36.280303] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:36.650589] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:36.650729] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:36.650781] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:36.650798] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:37.281553] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:37.505246] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:37.505450] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:37.506358] [D] [thread 239055] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:37.506381] [I] [thread 239055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:37.506385] [I] [thread 239055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:37.506396] [I] [thread 239055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:37.506397] [I] [thread 239055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:37.606665] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:37.606873] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:37.712449] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:37.712591] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:37.712642] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:37.712658] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:38.608026] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:38.774401] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:38.774543] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:38.774596] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:38.774611] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:38.873269] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:38.873467] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:38.874365] [D] [thread 239060] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:38.874415] [I] [thread 239060] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:38.874419] [I] [thread 239060] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:38.874430] [I] [thread 239060] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:38.874431] [I] [thread 239060] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:39.013224] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:39.013466] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:39.836122] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:39.836262] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:39.836311] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:39.836316] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:40.014666] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:40.585761] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:40.585963] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:40.586806] [D] [thread 239065] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:40.586828] [I] [thread 239065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:40.586831] [I] [thread 239065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:40.586843] [I] [thread 239065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:40.586844] [I] [thread 239065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:40.698249] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:40.698454] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:40.898441] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:40.898579] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:40.898624] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:40.898638] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:41.699724] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:41.915449] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:41.915653] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:41.916598] [D] [thread 239071] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:41.916621] [I] [thread 239071] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:41.916624] [I] [thread 239071] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:41.916636] [I] [thread 239071] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:41.916637] [I] [thread 239071] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:37:41.959317] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:41.959450] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:41.959502] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:41.959516] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:42.086317] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:42.086636] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:43.022385] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:43.022530] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:43.022577] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:43.022595] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:43.087790] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:43.594369] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:43.594682] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:43.595505] [D] [thread 239077] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:43.595527] [I] [thread 239077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:43.595530] [I] [thread 239077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:43.595541] [I] [thread 239077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:43.595542] [I] [thread 239077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:43.831019] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:43.831215] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:44.084401] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:44.084545] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:44.084598] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:44.084613] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:44.832426] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:45.146069] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:45.146204] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:45.146246] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:45.146256] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:45.316490] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:45.316683] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:45.318242] [D] [thread 239082] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:45.318274] [I] [thread 239082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:45.318278] [I] [thread 239082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:45.318290] [I] [thread 239082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:45.318291] [I] [thread 239082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:45.430167] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:45.430371] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:46.207849] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:46.207995] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:46.208051] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:46.208061] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:46.431531] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:46.654083] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:46.654289] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:46.655478] [D] [thread 239087] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:46.655502] [I] [thread 239087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:46.655505] [I] [thread 239087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:46.655517] [I] [thread 239087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:46.655518] [I] [thread 239087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:46.750294] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:46.750501] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:47.270553] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:47.270698] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:47.270746] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:47.270761] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:47.751678] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:47.990867] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:47.991071] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:47.992004] [D] [thread 239092] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:47.992028] [I] [thread 239092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:47.992034] [I] [thread 239092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:47.992045] [I] [thread 239092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:47.992046] [I] [thread 239092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:48.119838] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:48.120046] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:48.333242] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:48.333382] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:48.333436] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:48.333450] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:49.121222] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:49.330650] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:49.330853] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:49.332300] [D] [thread 239097] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:49.332347] [I] [thread 239097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:49.332351] [I] [thread 239097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:49.332363] [I] [thread 239097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:49.332364] [I] [thread 239097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:37:49.393899] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:49.394035] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:49.394085] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:49.394098] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:49.474671] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:49.474887] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:50.455609] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:50.455749] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:50.455799] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:50.455803] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:50.476010] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:50.747719] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:50.747902] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:50.749162] [D] [thread 239102] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:50.749184] [I] [thread 239102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:50.749188] [I] [thread 239102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:50.749199] [I] [thread 239102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:50.749200] [I] [thread 239102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:50.855613] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:50.855792] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:51.518224] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:51.518363] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:51.518410] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:51.518424] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:51.856962] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:52.070992] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:52.071172] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:52.072065] [D] [thread 239107] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:52.072087] [I] [thread 239107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:52.072091] [I] [thread 239107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:52.072102] [I] [thread 239107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:52.072103] [I] [thread 239107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:52.209514] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:52.209727] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:52.580005] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:52.580142] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:52.580194] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:52.580202] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:53.210907] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:53.422070] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:53.422274] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:53.423121] [D] [thread 239113] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:53.423145] [I] [thread 239113] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:53.423148] [I] [thread 239113] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:53.423159] [I] [thread 239113] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:53.423161] [I] [thread 239113] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:53.518090] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:53.518279] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:53.642334] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:53.642475] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:53.642528] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:53.642544] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:54.519432] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:54.705277] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:54.705458] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:54.705518] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:54.705527] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:54.722199] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:54.722452] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:54.723361] [D] [thread 239118] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:54.723389] [I] [thread 239118] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:54.723392] [I] [thread 239118] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:54.723410] [I] [thread 239118] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:54.723412] [I] [thread 239118] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:54.850119] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:54.850320] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:55.767854] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:55.767988] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:55.768028] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:55.768037] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:55.851487] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:56.104309] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:56.104539] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:56.105446] [D] [thread 239124] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:56.105470] [I] [thread 239124] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:56.105473] [I] [thread 239124] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:56.105484] [I] [thread 239124] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:56.105486] [I] [thread 239124] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:56.253986] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:56.254167] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:56.829301] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:56.829442] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:56.829487] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:56.829500] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:57.255333] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:57.703718] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:57.703896] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:57.704876] [D] [thread 239129] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:57.704899] [I] [thread 239129] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:57.704903] [I] [thread 239129] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:57.704921] [I] [thread 239129] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:57.704922] [I] [thread 239129] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:57.812683] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:57.812867] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:57.889959] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:57.890092] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:57.890147] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:57.890161] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:57.922336] [D] [thread 238003] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:37:57.922364] [D] [thread 238003] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:37:57.922529] [D] [thread 238003] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10800000,10860000,24,1700221011673,1700221077922
10800000,10860000,47,1700221008682,1700221077922
[m
[36m[11:37:58.814037] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:37:58.951540] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:37:58.951678] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:37:58.951732] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:37:58.951741] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:37:59.086120] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:59.086328] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:59.087166] [D] [thread 239134] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:37:59.087188] [I] [thread 239134] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:59.087193] [I] [thread 239134] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:37:59.087204] [I] [thread 239134] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:37:59.087205] [I] [thread 239134] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:37:59.185875] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:59.186057] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:00.011423] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:00.011564] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:00.011621] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:00.011635] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:00.187266] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:00.441338] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:00.441527] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:00.442524] [D] [thread 239139] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:00.442548] [I] [thread 239139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:00.442558] [I] [thread 239139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:00.442569] [I] [thread 239139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:00.442570] [I] [thread 239139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:00.531272] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:00.531479] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:01.071929] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:01.072066] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:01.072113] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:01.072117] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:01.532522] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:01.754105] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:01.754307] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:01.755183] [D] [thread 239144] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:01.755206] [I] [thread 239144] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:01.755216] [I] [thread 239144] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:01.755228] [I] [thread 239144] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:01.755229] [I] [thread 239144] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:01.855972] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:01.856147] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:02.133037] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:02.133178] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:02.133222] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:02.133237] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:02.145270] [D] [thread 238004] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:38:02.145296] [D] [thread 238004] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:38:02.145428] [D] [thread 238004] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel.out following content 10800000,10860000,13,1700221015869,1700221082145
10800000,10860000,100,1700220983766,1700221082145
[m
[36m[11:38:02.857304] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:03.194371] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:03.194511] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:03.194559] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:03.194574] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:03.303223] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:03.303438] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:03.304691] [D] [thread 239149] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:03.304715] [I] [thread 239149] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:03.304718] [I] [thread 239149] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:03.304729] [I] [thread 239149] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:03.304730] [I] [thread 239149] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:03.408062] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:03.408247] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:04.255663] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:04.255802] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:04.255848] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:04.255862] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:04.409401] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:04.876191] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:04.876430] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:04.877392] [D] [thread 239154] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:04.877415] [I] [thread 239154] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:04.877418] [I] [thread 239154] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:04.877429] [I] [thread 239154] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:04.877430] [I] [thread 239154] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:04.971692] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:04.971873] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:05.317095] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:05.317240] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:05.317287] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:05.317301] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:05.973051] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:06.170970] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:06.171156] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:06.172826] [D] [thread 239159] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:06.172840] [I] [thread 239159] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:06.172843] [I] [thread 239159] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:06.172854] [I] [thread 239159] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:06.172855] [I] [thread 239159] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:06.277751] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:06.277952] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:06.378362] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:06.378501] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:06.378551] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:06.378565] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:07.279132] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:07.438278] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:07.438417] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:07.438468] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:07.438484] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:07.532421] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:07.532603] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:07.533546] [D] [thread 239164] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:07.533572] [I] [thread 239164] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:07.533575] [I] [thread 239164] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:07.533593] [I] [thread 239164] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:07.533594] [I] [thread 239164] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:07.635852] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:07.636026] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:08.500747] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:08.500884] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:08.500926] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:08.500941] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:08.637192] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.197764] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.197970] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.198836] [D] [thread 239169] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:09.198860] [I] [thread 239169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:09.198863] [I] [thread 239169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:09.198881] [I] [thread 239169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:09.198882] [I] [thread 239169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:09.300390] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.300565] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:09.562025] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:09.562156] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:09.562207] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:09.562221] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:10.301723] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:10.511230] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:10.511411] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:10.512969] [D] [thread 239174] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:10.512992] [I] [thread 239174] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:10.512995] [I] [thread 239174] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:10.513007] [I] [thread 239174] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:10.513008] [I] [thread 239174] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:10.619162] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:10.619359] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:10.621829] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:10.622032] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:10.622102] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:10.622120] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:11.620512] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:11.683988] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:11.684128] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:11.684181] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:11.684190] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:11.826810] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:11.826995] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:11.828202] [D] [thread 239180] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:11.828228] [I] [thread 239180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:11.828232] [I] [thread 239180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:11.828243] [I] [thread 239180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:11.828244] [I] [thread 239180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:11.932292] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:11.932534] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:12.746469] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:12.746617] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:12.746675] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:12.746680] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:12.933750] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:13.312091] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:13.312293] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:13.313300] [D] [thread 239185] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:13.313325] [I] [thread 239185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:13.313328] [I] [thread 239185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:13.313339] [I] [thread 239185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:13.313340] [I] [thread 239185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:13.447883] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:13.448086] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:13.808241] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:13.808406] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:13.808454] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:13.808467] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:14.449266] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:14.870428] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:14.870576] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:14.870631] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:14.870638] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:15.006799] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:15.006999] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:15.008601] [D] [thread 239190] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:15.008625] [I] [thread 239190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:15.008629] [I] [thread 239190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:15.008640] [I] [thread 239190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:15.008641] [I] [thread 239190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:15.108069] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:15.108245] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:15.932521] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:15.932664] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:15.932716] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:15.932724] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:16.109460] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:16.433992] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:16.434190] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:16.435077] [D] [thread 239195] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:16.435101] [I] [thread 239195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:16.435107] [I] [thread 239195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:16.435118] [I] [thread 239195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:16.435119] [I] [thread 239195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:16.566343] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:16.566561] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:16.994374] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:16.994506] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:16.994555] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:16.994569] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:17.567736] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:17.875135] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:17.875400] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:17.876265] [D] [thread 239200] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:17.876289] [I] [thread 239200] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:17.876294] [I] [thread 239200] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:17.876305] [I] [thread 239200] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:17.876306] [I] [thread 239200] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:17.977064] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:17.977256] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:18.056903] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:18.057044] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:18.057091] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:18.057106] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:18.978429] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:19.119256] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:19.119389] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:19.119435] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:19.119448] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:19.272855] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:19.273036] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:19.274485] [D] [thread 239205] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:19.274507] [I] [thread 239205] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:19.274510] [I] [thread 239205] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:19.274522] [I] [thread 239205] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:19.274523] [I] [thread 239205] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:19.380615] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:19.380798] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:20.181259] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:20.181394] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:20.181446] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:20.181460] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:20.381940] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:20.872833] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:20.873015] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:20.874418] [D] [thread 239210] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:20.874439] [I] [thread 239210] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:20.874443] [I] [thread 239210] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:20.874454] [I] [thread 239210] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:20.874455] [I] [thread 239210] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:20.973992] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:20.974172] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:21.244020] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:21.244163] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:21.244222] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:21.244239] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:21.975328] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.196590] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.196801] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.197695] [D] [thread 239215] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:22.197721] [I] [thread 239215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:22.197724] [I] [thread 239215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:22.197735] [I] [thread 239215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:22.197736] [I] [thread 239215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:38:22.307036] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:22.307210] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:22.307275] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:22.307295] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:22.328760] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.328955] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.330133] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:23.371241] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:23.371402] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:23.371457] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:23.371473] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:23.540537] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.540753] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.541606] [D] [thread 239220] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:23.541630] [I] [thread 239220] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:23.541634] [I] [thread 239220] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:23.541645] [I] [thread 239220] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:23.541646] [I] [thread 239220] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:23.639244] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.639450] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:24.433259] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:24.433406] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:24.433456] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:24.433469] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:24.640608] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:24.886166] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:24.886375] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:24.887297] [D] [thread 239225] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:24.887322] [I] [thread 239225] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:24.887325] [I] [thread 239225] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:24.887336] [I] [thread 239225] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:24.887337] [I] [thread 239225] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:24.986022] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:24.986252] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:25.495377] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:25.495511] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:25.495556] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:25.495569] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:25.987413] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.477807] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.477994] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.479214] [D] [thread 239230] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:26.479236] [I] [thread 239230] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:26.479239] [I] [thread 239230] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:26.479250] [I] [thread 239230] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:26.479251] [I] [thread 239230] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[11:38:26.558837] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:26.559020] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:26.559082] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:26.559100] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:26.575517] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.575687] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:27.576845] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:27.621097] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:27.621236] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:27.621292] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:27.621300] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:27.876632] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:27.876811] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:27.877675] [D] [thread 239235] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:27.877697] [I] [thread 239235] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:27.877701] [I] [thread 239235] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:27.877713] [I] [thread 239235] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:27.877714] [I] [thread 239235] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:27.982607] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:27.982828] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:28.684084] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:28.684223] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:28.684269] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:28.684283] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:28.983988] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.202226] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.202412] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.203271] [D] [thread 239240] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:29.203293] [I] [thread 239240] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:29.203297] [I] [thread 239240] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:29.203307] [I] [thread 239240] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:29.203308] [I] [thread 239240] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:29.307959] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.308131] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:29.746384] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:29.746523] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:29.746568] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:29.746583] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:30.309298] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.512256] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.512456] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.513434] [D] [thread 239245] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:30.513457] [I] [thread 239245] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:30.513460] [I] [thread 239245] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:30.513471] [I] [thread 239245] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:30.513472] [I] [thread 239245] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:30.649977] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.650164] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:30.808590] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:30.808726] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:30.808776] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:30.808791] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:31.651318] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:31.870940] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:31.871080] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:31.871134] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:31.871143] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:32.016230] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:32.016452] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:32.017372] [D] [thread 239250] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:32.017394] [I] [thread 239250] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:32.017398] [I] [thread 239250] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:32.017408] [I] [thread 239250] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:32.017411] [I] [thread 239250] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:32.148830] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:32.149028] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:32.933228] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:32.933365] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:32.933412] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:32.933421] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:33.150199] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:33.482270] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:33.482510] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:33.483630] [D] [thread 239255] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:33.483656] [I] [thread 239255] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:33.483660] [I] [thread 239255] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:33.483671] [I] [thread 239255] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:33.483672] [I] [thread 239255] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:33.590759] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:33.590938] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:33.995492] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:33.995637] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:33.995690] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:33.995707] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:34.592094] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.823987] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.824198] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.825152] [D] [thread 239260] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:34.825177] [I] [thread 239260] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:34.825181] [I] [thread 239260] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:34.825192] [I] [thread 239260] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:34.825194] [I] [thread 239260] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:34.957579] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.957761] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:35.057392] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:35.057532] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:35.057588] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:35.057604] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:35.958931] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:36.119424] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:36.119562] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:36.119614] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:36.119627] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:36.213867] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:36.214074] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:36.214936] [D] [thread 239265] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:36.214959] [I] [thread 239265] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:36.214968] [I] [thread 239265] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:36.214980] [I] [thread 239265] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:36.214981] [I] [thread 239265] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:36.343683] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:36.343889] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:37.181087] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:37.181225] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:37.181270] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:37.181286] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:37.345090] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:37.585666] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:37.585881] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:37.586804] [D] [thread 239270] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:37.586829] [I] [thread 239270] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:37.586832] [I] [thread 239270] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:37.586843] [I] [thread 239270] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:37.586844] [I] [thread 239270] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:37.813383] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:37.813580] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:38.243089] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:38.243234] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:38.243283] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:38.243294] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:38.814774] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:39.066727] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:39.066969] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:39.068448] [D] [thread 239275] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:39.068473] [I] [thread 239275] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:39.068476] [I] [thread 239275] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:39.068487] [I] [thread 239275] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:39.068488] [I] [thread 239275] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:39.195746] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:39.195957] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:39.306407] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:39.306555] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:39.306610] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:39.306619] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:40.197107] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:40.369339] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:40.369480] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:40.369536] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:40.369551] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:40.451952] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:40.452200] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:40.453752] [D] [thread 239280] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:40.453775] [I] [thread 239280] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:40.453779] [I] [thread 239280] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:40.453791] [I] [thread 239280] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:40.453792] [I] [thread 239280] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:40.551950] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:40.552166] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:41.431724] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:41.431863] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:41.431907] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:41.431911] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:41.553327] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:41.765652] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:41.765901] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:41.767079] [D] [thread 239285] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:41.767102] [I] [thread 239285] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:41.767105] [I] [thread 239285] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:41.767118] [I] [thread 239285] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:41.767119] [I] [thread 239285] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:41.863128] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:41.863307] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:42.494566] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:42.494708] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:42.494749] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:42.494767] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:42.864465] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:43.057239] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:43.057416] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:43.058321] [D] [thread 239290] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:43.058344] [I] [thread 239290] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:43.058351] [I] [thread 239290] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:43.058362] [I] [thread 239290] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:43.058363] [I] [thread 239290] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:43.191316] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:43.191501] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:43.555923] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:43.556062] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:43.556105] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:43.556109] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:44.192678] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:44.402348] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:44.402558] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:44.403430] [D] [thread 239295] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:44.403453] [I] [thread 239295] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:44.403462] [I] [thread 239295] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:44.403473] [I] [thread 239295] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:44.403474] [I] [thread 239295] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:44.532703] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:44.532910] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:44.618031] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:44.618163] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:44.618213] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:44.618228] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:45.534068] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:45.679269] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:45.679411] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:45.679464] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:45.679479] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:45.809911] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:45.810089] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:45.810967] [D] [thread 239300] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:45.810990] [I] [thread 239300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:45.810994] [I] [thread 239300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:45.811005] [I] [thread 239300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:45.811006] [I] [thread 239300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:45.906586] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:45.906801] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:46.741111] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:46.741254] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:46.741300] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:46.741313] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:46.907993] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:47.109958] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:47.110167] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:47.111074] [D] [thread 239305] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:47.111097] [I] [thread 239305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:47.111102] [I] [thread 239305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:47.111113] [I] [thread 239305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:47.111114] [I] [thread 239305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:47.241544] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:47.241752] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:47.803177] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:47.803316] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:47.803367] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:47.803380] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:48.242935] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:48.491492] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:48.491706] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:48.493148] [D] [thread 239310] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:48.493173] [I] [thread 239310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:48.493183] [I] [thread 239310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:48.493194] [I] [thread 239310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:48.493195] [I] [thread 239310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:48.594370] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:48.594572] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:48.866698] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:48.866843] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:48.866894] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:48.866902] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:49.595742] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:49.814370] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:49.814569] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:49.815487] [D] [thread 239315] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:49.815510] [I] [thread 239315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:49.815513] [I] [thread 239315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:49.815524] [I] [thread 239315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:49.815525] [I] [thread 239315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:49.920581] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:49.920785] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:49.927285] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:49.927421] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:49.927471] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:49.927486] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:50.921955] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:50.986388] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:50.986529] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:50.986583] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:50.986597] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:51.119995] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:51.120220] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:51.121136] [D] [thread 239320] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:51.121161] [I] [thread 239320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:51.121164] [I] [thread 239320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:51.121181] [I] [thread 239320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:51.121182] [I] [thread 239320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:51.223514] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:51.223743] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:52.049685] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:52.049828] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:52.049886] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:52.049895] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:52.224879] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:52.721794] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:52.722065] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:52.722841] [D] [thread 239325] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:52.722864] [I] [thread 239325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:52.722868] [I] [thread 239325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:52.722886] [I] [thread 239325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:52.722887] [I] [thread 239325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:52.860557] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:52.860750] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:38:53.113443] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:53.113590] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:53.113643] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:53.113659] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:53.204926] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:53.205206] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:38:53.206043] [I] [thread 239329] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[11:38:53.206069] [D] [thread 239329] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[11:38:53.206092] [I] [thread 239329] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[11:38:53.206094] [I] [thread 239329] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:38:53.206122] [I] [thread 237990] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:38:53.206130] [I] [thread 237990] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:38:53.206135] [I] [thread 237990] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:38:53.206148] [I] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[11:38:53.206152] [D] [thread 237990] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[11:38:53.206157] [D] [thread 237990] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[11:38:53.206195] [D] [thread 237990] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(5: {FileSinkDescriptor()}) as root operator.[m
[36m[11:38:53.206246] [D] [thread 237990] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:38:53.206248] [D] [thread 237990] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:38:53.206252] [D] [thread 237990] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:38:53.206254] [D] [thread 237990] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:38:53.206258] [D] [thread 237990] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[11:38:53.206265] [D] [thread 237990] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[11:38:53.206267] [D] [thread 237990] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:38:53.206270] [D] [thread 237990] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[11:38:53.206274] [D] [thread 237990] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[11:38:53.206297] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:33633[m
[36m[11:38:53.206303] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:33633 queryId=1[m
[36m[11:38:53.207309] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:34755[m
[36m[11:38:53.207341] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:34755 queryId=1[m
[36m[11:38:53.208311] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:46829[m
[36m[11:38:53.208389] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:46829 queryId=1[m
[36m[11:38:53.209370] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:32801[m
[36m[11:38:53.209407] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:32801 queryId=1[m
[36m[11:38:53.210455] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:35887[m
[36m[11:38:53.210494] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:35887 queryId=1[m
[36m[11:38:53.211403] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:40105[m
[36m[11:38:53.211433] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:40105 queryId=1[m
[36m[11:38:53.212177] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:44833[m
[36m[11:38:53.212202] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:44833 queryId=1[m
[36m[11:38:53.212996] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:42857[m
[36m[11:38:53.213020] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:42857 queryId=1[m
[36m[11:38:53.213698] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:36833[m
[36m[11:38:53.213722] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:36833 queryId=1[m
[36m[11:38:53.214403] [D] [thread 237990] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:32901[m
[36m[11:38:53.214462] [D] [thread 237990] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:32901 queryId=1[m
[36m[11:38:53.215270] [D] [thread 237990] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[11:38:53.439188] [D] [thread 237999] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): EndOfStream received for channel [m
[36m[11:38:53.439264] [D] [thread 237999] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[36m[11:38:53.439283] [D] [thread 238000] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): EndOfStream received for channel [m
[32m[11:38:53.439286] [I] [thread 237999] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[36m[11:38:53.439302] [D] [thread 237999] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=3) but there is still some active subpartition: 4[m
[36m[11:38:53.439306] [D] [thread 238000] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[36m[11:38:53.439318] [D] [thread 237999] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): EndOfStream received for channel [m
[32m[11:38:53.439320] [I] [thread 238000] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[36m[11:38:53.439329] [D] [thread 237999] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[36m[11:38:53.439332] [D] [thread 238000] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=1) but there is still some active subpartition: 3[m
[32m[11:38:53.439338] [I] [thread 237999] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[11:38:53.439343] [D] [thread 238000] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): EndOfStream received for channel [m
[36m[11:38:53.439348] [D] [thread 237999] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[11:38:53.439352] [D] [thread 238000] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[11:38:53.439361] [I] [thread 238000] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[11:38:53.439368] [D] [thread 238000] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[11:38:53.439395] [D] [thread 238000] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:38:53.439400] [W] [thread 238000] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[11:38:53.478889] [E] [thread 239052] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::30::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaae8d43ee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffa731dd4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaae8d44e13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffaebeec23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffaea8513f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa8a38e9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa7808043, in NES::collectAndPrintStacktrace[abi:cxx11]()
] callstack=
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaae8d43ee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffa731dd4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaae8d44e13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffaebeec23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffaea8513f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa8a38e9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa7808043, in NES::collectAndPrintStacktrace[abi:cxx11]()
[m
[36m[11:38:53.646605] [D] [thread 237999] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): EndOfStream received for channel [m
[36m[11:38:53.646634] [D] [thread 238000] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): EndOfStream received for channel [m
[36m[11:38:53.646673] [D] [thread 238000] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=1)[m
[36m[11:38:53.646673] [D] [thread 237999] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=0)[m
[32m[11:38:53.646704] [I] [thread 238000] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(4)[m
[36m[11:38:53.646751] [D] [thread 238000] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=1) but there is still some active subpartition: 4[m
[32m[11:38:53.646766] [I] [thread 237999] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(3)[m
[36m[11:38:53.646784] [D] [thread 237999] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[11:38:53.646801] [D] [thread 237999] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): EndOfStream received for channel [m
[36m[11:38:53.646811] [D] [thread 237999] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=3)[m
[32m[11:38:53.646820] [I] [thread 237999] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(2)[m
[36m[11:38:53.646829] [D] [thread 237999] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=3) but there is still some active subpartition: 2[m
[36m[11:38:53.647542] [D] [thread 238000] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:40445): EndOfStream received for channel [m
[36m[11:38:53.647567] [D] [thread 238000] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=2)[m
[32m[11:38:53.647578] [I] [thread 238000] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(1)[m
[36m[11:38:53.647585] [D] [thread 238000] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::42::0::0, counter is at 1.[m
[36m[11:38:53.647599] [D] [thread 238000] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:38:53.647604] [W] [thread 238000] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[11:38:53.686804] [E] [thread 239330] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::39::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaad212dee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff9c19dd4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaad212ee13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa3a6ec23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa390513f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d8b8e9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9c688043, in NES::collectAndPrintStacktrace[abi:cxx11]()
] callstack=
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaad212dee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff9c19dd4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaad212ee13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa3a6ec23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa390513f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d8b8e9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9c688043, in NES::collectAndPrintStacktrace[abi:cxx11]()
[m
[31m[1m[11:38:54.170244] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Transport closed[m
[33m[1m[11:38:54.170390] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:46829 went dead so we remove it[m
[32m[11:38:54.170439] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=1][m
[32m[11:38:54.170444] [I] [thread 238010] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:38:54.170447] [I] [thread 238010] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:38:54.170448] [I] [thread 238010] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:38:54.170451] [I] [thread 238010] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:38:54.170452] [I] [thread 238010] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:38:54.170455] [D] [thread 238010] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:38:54.171761] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Transport closed[m
[33m[1m[11:38:54.171900] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:40105 went dead so we remove it[m
[32m[11:38:54.171948] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[32m[11:38:54.171954] [I] [thread 238010] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:38:54.171957] [I] [thread 238010] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:38:54.171959] [I] [thread 238010] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:38:54.171961] [I] [thread 238010] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:38:54.171963] [I] [thread 238010] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:38:54.171965] [D] [thread 238010] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:38:54.172928] [E] [thread 238010] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:38:54.173060] [W] [thread 238010] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36833 went dead so we remove it[m
[32m[11:38:54.173107] [I] [thread 238010] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[11:38:54.173117] [W] [thread 238010] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[36m[11:38:54.206344] [D] [thread 238009] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
