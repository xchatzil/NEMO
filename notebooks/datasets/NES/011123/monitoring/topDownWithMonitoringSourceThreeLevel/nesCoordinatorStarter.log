
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[10:55:26.759468] [I] [thread 129803] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 1
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1000
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[10:55:26.759664] [I] [thread 129803] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[10:55:26.759909] [D] [thread 129803] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[10:55:26.761020] [D] [thread 129803] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[10:55:26.761463] [I] [thread 129803] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[10:55:26.762535] [D] [thread 129803] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[10:55:26.762617] [D] [thread 129803] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[10:55:26.763454] [D] [thread 129803] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[10:55:26.763551] [D] [thread 129803] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[10:55:26.763655] [D] [thread 129803] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[10:55:26.764086] [D] [thread 129803] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[10:55:26.764243] [D] [thread 129803] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[10:55:26.817596] [D] [thread 129803] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[10:55:26.817694] [D] [thread 129803] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:55:26.818304] [D] [thread 129803] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:55:26.818771] [D] [thread 129803] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:55:26.819157] [D] [thread 129803] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:55:26.819515] [D] [thread 129803] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:55:26.819713] [D] [thread 129803] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:55:26.820173] [D] [thread 129803] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[10:55:26.821421] [D] [thread 129803] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[10:55:26.821499] [D] [thread 129803] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[10:55:26.821796] [D] [thread 129803] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[10:55:26.822256] [D] [thread 129803] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[10:55:26.822580] [D] [thread 129803] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[10:55:26.823673] [D] [thread 129803] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[10:55:26.824274] [D] [thread 129803] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= true[m
[36m[10:55:26.824499] [D] [thread 129803] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[10:55:26.824845] [D] [thread 129803] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= true , storage= NewestEntry [m
[32m[10:55:26.825695] [I] [thread 129803] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedCpuMetrics[m
[32m[10:55:26.826344] [I] [thread 129803] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source DiskMetric[m
[32m[10:55:26.826926] [I] [thread 129803] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source MemoryMetric[m
[32m[10:55:26.827843] [I] [thread 129803] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedNetworkMetrics[m
[32m[10:55:26.827979] [I] [thread 129803] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[10:55:26.827995] [D] [thread 129803] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[10:55:26.828448] [D] [thread 129803] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[10:55:26.828476] [I] [thread 129811] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[10:55:26.828532] [D] [thread 129811] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:55:26.828957] [D] [thread 129812] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[10:55:26.835706] [D] [thread 129812] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[10:55:26.835732] [D] [thread 129803] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[10:55:26.835779] [D] [thread 129803] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[10:55:26.836282] [D] [thread 129803] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedCpuMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[36m[10:55:26.836370] [D] [thread 129803] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedCpuMetrics already exist.[m
[36m[10:55:26.836407] [D] [thread 129803] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedCpuMetrics[m
[36m[10:55:26.836593] [D] [thread 129803] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= DiskMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[36m[10:55:26.836679] [D] [thread 129803] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source DiskMetric already exist.[m
[36m[10:55:26.836763] [D] [thread 129803] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source DiskMetric[m
[36m[10:55:26.837138] [D] [thread 129803] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= MemoryMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[36m[10:55:26.837212] [D] [thread 129803] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source MemoryMetric already exist.[m
[36m[10:55:26.837237] [D] [thread 129803] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source MemoryMetric[m
[36m[10:55:26.837564] [D] [thread 129803] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedNetworkMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:55:26.837606] [D] [thread 129803] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedNetworkMetrics already exist.[m
[36m[10:55:26.837659] [D] [thread 129803] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedNetworkMetrics[m
[36m[10:55:26.837713] [D] [thread 129803] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[10:55:26.837724] [D] [thread 129803] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[10:55:26.838580] [D] [thread 129803] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[10:55:26.838755] [D] [thread 129803] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[10:55:26.838773] [D] [thread 129803] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[10:55:26.838800] [D] [thread 129803] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=true[m
[36m[10:55:26.839190] [D] [thread 129803] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[10:55:26.839314] [D] [thread 129803] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[10:55:26.839405] [I] [thread 129803] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:55:26.840181] [I] [thread 129803] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[10:55:26.840259] [I] [thread 129803] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:55:26.840590] [I] [thread 129803] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[10:55:26.840681] [I] [thread 129803] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:55:26.841339] [I] [thread 129803] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[10:55:26.841402] [I] [thread 129803] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:55:26.842283] [I] [thread 129803] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:55:26.842700] [D] [thread 129803] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[10:55:26.843041] [D] [thread 129803] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=true[m
[32m[10:55:26.843356] [I] [thread 129803] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config DiskMetric _ph with wait time 1000[m
[32m[10:55:26.843676] [I] [thread 129803] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config MemoryMetric _ph with wait time 1000[m
[32m[10:55:26.843830] [I] [thread 129803] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedCpuMetrics _ph with wait time 1000[m
[32m[10:55:26.843925] [I] [thread 129803] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedNetworkMetrics _ph with wait time 1000[m
[36m[10:55:26.855409] [D] [thread 129803] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975446528 available bytes[m
[36m[10:55:26.867646] [D] [thread 129803] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[10:55:26.917291] [D] [thread 129803] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[33m[1m[10:55:26.917718] [W] [thread 129803] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[10:55:26.917854] [D] [thread 129803] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:55:26.918072] [D] [thread 129803] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:55:26.918220] [D] [thread 129803] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:55:26.918303] [D] [thread 129803] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:55:26.918721] [D] [thread 129803] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[10:55:26.918834] [D] [thread 129803] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[10:55:26.919210] [D] [thread 129803] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[10:55:26.919447] [D] [thread 129803] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[10:55:26.919485] [W] [thread 129803] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[10:55:26.919585] [D] [thread 129803] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[10:55:26.922053] [D] [thread 129817] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[10:55:26.923687] [D] [thread 129817] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[10:55:26.923841] [D] [thread 129817] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 34047[m
[36m[10:55:26.924996] [D] [thread 129820] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 34047[m
[32m[10:55:26.925137] [I] [thread 129803] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:34047[m
[36m[10:55:26.925235] [D] [thread 129803] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1698944406  with numThreads= 1[m
[36m[10:55:26.925573] [D] [thread 129803] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[10:55:26.926286] [D] [thread 129803] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[10:55:26.926341] [D] [thread 129803] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[10:55:26.926372] [D] [thread 129821] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[10:55:26.926499] [D] [thread 129803] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[10:55:26.926535] [D] [thread 129803] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[10:55:26.926655] [D] [thread 129821] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[10:55:26.927053] [D] [thread 129822] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[10:55:26.927578] [D] [thread 129822] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[10:55:26.930744] [D] [thread 129822] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 39397[m
[36m[10:55:26.930776] [D] [thread 129803] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:39397: 39397[m
[36m[10:55:26.930812] [D] [thread 129803] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[10:55:26.930878] [D] [thread 129803] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[10:55:26.930988] [D] [thread 129803] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[10:55:26.933181] [D] [thread 129822] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[10:55:26.933583] [D] [thread 129803] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[32m[10:55:26.934817] [I] [thread 129803] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[36m[10:55:26.934890] [D] [thread 129803] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[10:55:26.938412] [D] [thread 129803] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 39397
dataPort: 34047
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1655616384
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:26.951445] [D] [thread 129813] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 39397
dataPort: 34047
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1655616384
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:26.951765] [D] [thread 129813] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 39397
dataPort: 34047
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1655616384
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:26.951914] [D] [thread 129813] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[10:55:26.952027] [W] [thread 129813] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[10:55:26.952051] [D] [thread 129813] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:26.952077] [D] [thread 129813] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:26.952163] [D] [thread 129813] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[10:55:26.952478] [D] [thread 129813] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[10:55:26.952606] [I] [thread 129813] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[10:55:26.952761] [D] [thread 129813] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:26.953133] [D] [thread 129813] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:26.953247] [I] [thread 129813] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:26.953286] [D] [thread 129813] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:26.953338] [D] [thread 129813] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:26.953350] [D] [thread 129813] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:26.953385] [D] [thread 129813] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:26.954835] [D] [thread 129813] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[10:55:26.956734] [D] [thread 129803] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[10:55:26.956809] [D] [thread 129803] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[10:55:26.956910] [D] [thread 129803] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[10:55:26.956925] [D] [thread 129803] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[10:55:26.991016] [D] [thread 129803] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[10:55:26.991137] [D] [thread 129803] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[10:55:26.991153] [D] [thread 129803] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[10:55:26.991669] [D] [thread 129803] [NesWorker.cpp:377] [connect] NesWorker: start with register source[m
[36m[10:55:26.991732] [D] [thread 129803] [NesWorker.cpp:458] [waitForConnect] NesWorker::waitForConnect()[m
[36m[10:55:26.991753] [D] [thread 129803] [NesWorker.cpp:462] [waitForConnect] waitForConnect: check connect[m
[36m[10:55:26.991761] [D] [thread 129803] [NesWorker.cpp:467] [waitForConnect] waitForConnect: connected[m
[36m[10:55:26.991794] [D] [thread 129803] [CoordinatorRPCClient.cpp:168] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources: got 4 physical sources to register for worker with id 1[m
[36m[10:55:26.992051] [D] [thread 129803] [CoordinatorRPCClient.cpp:180] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources request=workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[36m[10:55:26.994392] [D] [thread 129813] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:55:26.994485] [I] [thread 129813] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:26.994506] [D] [thread 129813] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:26.994588] [D] [thread 129813] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:55:26.994806] [D] [thread 129813] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:55:26.994890] [D] [thread 129813] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:55:26.995207] [D] [thread 129813] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:55:26.995322] [D] [thread 129813] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:26.995392] [D] [thread 129813] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:55:26.995445] [D] [thread 129813] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:55:26.995626] [D] [thread 129813] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:55:26.995733] [D] [thread 129813] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:55:26.995868] [D] [thread 129813] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:55:26.995950] [D] [thread 129813] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:26.996017] [D] [thread 129813] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:55:26.996068] [D] [thread 129813] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:55:26.996218] [D] [thread 129813] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:55:26.996312] [D] [thread 129813] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:55:26.996427] [D] [thread 129813] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:55:26.996503] [D] [thread 129813] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:26.996577] [D] [thread 129813] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:55:26.996667] [D] [thread 129813] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:55:26.996842] [D] [thread 129813] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:55:26.996933] [D] [thread 129813] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:55:26.997025] [D] [thread 129813] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:55:26.997050] [D] [thread 129813] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:26.997079] [D] [thread 129813] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:55:26.997092] [D] [thread 129813] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:55:26.998380] [D] [thread 129803] [CoordinatorRPCClient.cpp:129] [onSuccess] CoordinatorRPCClient::: status ok return success=true[m
[36m[10:55:26.998501] [D] [thread 129803] [NesWorker.cpp:419] [registerPhysicalSources] NesWorker::registerPhysicalSources success=true[m
[36m[10:55:26.998518] [D] [thread 129803] [NesWorker.cpp:379] [connect] registered= true[m
[36m[10:55:26.998566] [D] [thread 129803] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[10:55:26.998692] [D] [thread 129803] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[10:55:26.999318] [D] [thread 129803] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[10:55:26.999400] [I] [thread 129827] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[10:55:27.015041] [I] [thread 129827] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[10:55:27.015194] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:27.032034] [D] [thread 129803] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[10:55:27.032126] [D] [thread 129803] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[10:55:27.032139] [D] [thread 129803] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[10:55:27.032612] [D] [thread 129803] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[10:55:28.016381] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:29.017656] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:29.695945] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:29.697285] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:29.699291] [D] [thread 129830] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[10:55:29.702394] [D] [thread 129830] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[10:55:29.702510] [D] [thread 129830] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[10:55:29.702625] [D] [thread 129830] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));;}
}
[m
[36m[10:55:29.704933] [D] [thread 129831] [File.cpp:27] [createFile] Create File to file:///tmp/query_01-11-2023_10-55-29_8795270.cpp[m
[36m[10:55:29.706089] [D] [thread 129831] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:55:29.707117] [D] [thread 129831] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -o/tmp/query_01-11-2023_10-55-29_8795270.so -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_01-11-2023_10-55-29_8795270.cpp'[m
[36m[10:55:30.698536] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:31.434256] [I] [thread 129831] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1729.464363ms[m
[36m[10:55:31.435992] [D] [thread 129830] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[10:55:31.436089] [D] [thread 129830] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[10:55:31.436121] [D] [thread 129830] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[10:55:31.436174] [D] [thread 129830] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[10:55:31.664003] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:31.664516] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:31.665180] [I] [thread 129836] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:31.666496] [I] [thread 129836] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:32.012229] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:32.012670] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:32.013294] [I] [thread 129837] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:32.013873] [I] [thread 129837] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:32.164102] [D] [thread 129826] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 43477
dataPort: 42957
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:55:32.164431] [D] [thread 129826] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 43477
dataPort: 42957
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:55:32.164511] [D] [thread 129826] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:32.164802] [D] [thread 129826] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:32.164835] [D] [thread 129826] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:32.164891] [D] [thread 129826] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[10:55:32.165044] [D] [thread 129826] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:32.165143] [I] [thread 129826] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:32.165340] [I] [thread 129826] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:32.165544] [D] [thread 129826] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[10:55:32.165833] [D] [thread 129826] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:32.166080] [D] [thread 129826] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:32.166165] [I] [thread 129826] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:55:32.166259] [D] [thread 129826] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:55:32.166313] [D] [thread 129826] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:32.166337] [D] [thread 129826] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:32.166376] [D] [thread 129826] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:32.167013] [D] [thread 129826] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[10:55:33.013959] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:34.015250] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:35.016540] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:35.078283] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:35.078756] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:35.079637] [I] [thread 129838] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:35.080235] [I] [thread 129838] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:35.233020] [D] [thread 129813] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 43211
dataPort: 44541
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:55:35.233304] [D] [thread 129813] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 43211
dataPort: 44541
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:55:35.233389] [D] [thread 129813] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:35.233728] [D] [thread 129813] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:35.233766] [D] [thread 129813] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:35.233974] [D] [thread 129813] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[10:55:35.234558] [D] [thread 129813] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:35.234823] [I] [thread 129813] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:35.235119] [I] [thread 129813] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:35.235245] [D] [thread 129813] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[10:55:35.235396] [D] [thread 129813] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:35.236050] [D] [thread 129813] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:35.236278] [I] [thread 129813] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:55:35.236329] [D] [thread 129813] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:55:35.236386] [D] [thread 129813] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:35.236411] [D] [thread 129813] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:35.236439] [D] [thread 129813] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:35.237586] [D] [thread 129813] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[10:55:36.080049] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:37.081385] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:38.082689] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:38.178101] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:38.178628] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:38.179681] [I] [thread 129840] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:38.180862] [I] [thread 129840] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:38.320408] [D] [thread 129826] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 32925
dataPort: 41617
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689588747
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:38.320645] [D] [thread 129826] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 32925
dataPort: 41617
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689588747
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:38.320708] [D] [thread 129826] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:38.320959] [D] [thread 129826] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:38.320981] [D] [thread 129826] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:38.321043] [D] [thread 129826] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[10:55:38.321163] [D] [thread 129826] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:38.321229] [I] [thread 129826] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:38.321338] [I] [thread 129826] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:38.321407] [D] [thread 129826] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[10:55:38.321490] [D] [thread 129826] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:38.321690] [D] [thread 129826] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:38.321764] [I] [thread 129826] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:55:38.321787] [D] [thread 129826] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:55:38.321818] [D] [thread 129826] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:38.321836] [D] [thread 129826] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:38.321857] [D] [thread 129826] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:38.322396] [D] [thread 129826] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[10:55:38.358480] [D] [thread 129826] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 4
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream3"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:55:38.358642] [I] [thread 129826] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:55:38.358683] [D] [thread 129826] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:55:38.358772] [D] [thread 129826] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= test_stream3 logical source= debs[m
[36m[10:55:38.358981] [D] [thread 129826] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:55:38.359032] [D] [thread 129826] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream3[m
[36m[10:55:38.359124] [D] [thread 129826] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream3 does not exist, try to add[m
[36m[10:55:38.359175] [D] [thread 129826] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:38.359229] [D] [thread 129826] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:55:38.359285] [D] [thread 129826] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:55:38.359405] [D] [thread 129826] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:55:38.359447] [D] [thread 129826] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:55:38.359538] [D] [thread 129826] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:55:38.359589] [D] [thread 129826] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:55:38.359617] [D] [thread 129826] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:38.359680] [D] [thread 129826] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:55:38.359733] [D] [thread 129826] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:55:38.359855] [D] [thread 129826] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:55:38.359924] [D] [thread 129826] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:55:38.359979] [D] [thread 129826] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:55:38.360016] [D] [thread 129826] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:55:38.360064] [D] [thread 129826] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:38.360111] [D] [thread 129826] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:55:38.360166] [D] [thread 129826] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:55:38.360334] [D] [thread 129826] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:55:38.360384] [D] [thread 129826] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:55:38.360437] [D] [thread 129826] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:38.360472] [D] [thread 129826] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:55:38.360501] [D] [thread 129826] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:38.360547] [D] [thread 129826] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:55:38.360625] [D] [thread 129826] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:55:38.360774] [D] [thread 129826] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:55:38.360823] [D] [thread 129826] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:55:38.360876] [D] [thread 129826] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:38.360912] [D] [thread 129826] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:55:38.360940] [D] [thread 129826] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:38.360982] [D] [thread 129826] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:55:38.361009] [D] [thread 129826] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:55:38.365137] [D] [thread 129826] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 2
[m
[36m[10:55:38.365270] [D] [thread 129826] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[10:55:38.365305] [I] [thread 129826] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:55:38.365337] [D] [thread 129826] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:55:38.365370] [D] [thread 129826] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[10:55:38.365389] [I] [thread 129826] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:38.365409] [D] [thread 129826] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:38.365432] [D] [thread 129826] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:55:38.365519] [D] [thread 129826] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:55:38.365685] [I] [thread 129826] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:38.365754] [D] [thread 129826] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:55:38.365782] [D] [thread 129826] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:55:38.365816] [D] [thread 129826] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 2[m
[32m[10:55:38.365838] [I] [thread 129826] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:55:38.365862] [D] [thread 129826] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:55:38.365886] [D] [thread 129826] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[10:55:38.365905] [I] [thread 129826] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:55:38.365937] [D] [thread 129826] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:55:38.365961] [D] [thread 129826] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:55:38.366082] [I] [thread 129826] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:55:38.366143] [D] [thread 129826] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:55:38.366518] [D] [thread 129826] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:55:38.366564] [D] [thread 129826] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:55:39.179880] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:40.181204] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:41.182526] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:41.354857] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:41.355283] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:41.356487] [I] [thread 129842] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:41.357855] [I] [thread 129842] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:41.498728] [D] [thread 129841] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 34475
dataPort: 41831
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689464912
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:41.499021] [D] [thread 129841] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 34475
dataPort: 41831
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689464912
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:41.499097] [D] [thread 129841] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:41.499467] [D] [thread 129841] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:41.499497] [D] [thread 129841] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:41.499585] [D] [thread 129841] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[10:55:41.499752] [D] [thread 129841] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:41.499841] [I] [thread 129841] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:41.499980] [I] [thread 129841] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:41.500058] [D] [thread 129841] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[10:55:41.500172] [D] [thread 129841] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:41.500498] [D] [thread 129841] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:41.500560] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:55:41.500591] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:55:41.500633] [D] [thread 129841] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:41.500657] [D] [thread 129841] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:41.500702] [D] [thread 129841] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:41.501299] [D] [thread 129841] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[10:55:41.539248] [D] [thread 129841] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:55:41.539375] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:55:41.539421] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:55:41.539510] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[10:55:41.539749] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:55:41.539809] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[10:55:41.539887] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:55:41.539927] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[10:55:41.539959] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:41.540011] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:55:41.540064] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:55:41.540189] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:55:41.540233] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:55:41.540285] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:55:41.540317] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:55:41.540347] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:55:41.540373] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:41.540416] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:55:41.540507] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:55:41.540650] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:55:41.540697] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:55:41.540751] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:55:41.540783] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:55:41.540815] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:55:41.540843] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:41.540890] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:55:41.540945] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:55:41.541073] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:55:41.541117] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:55:41.541170] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:41.541200] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:41.541231] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:55:41.541257] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:41.541302] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:55:41.541352] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:55:41.541476] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:55:41.541522] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:55:41.541571] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:41.541602] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:41.541632] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:55:41.541658] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:41.541702] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:55:41.541728] [D] [thread 129841] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:55:41.546491] [D] [thread 129841] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[10:55:41.546575] [D] [thread 129841] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[10:55:41.546597] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:55:41.546618] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:55:41.546638] [D] [thread 129841] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[10:55:41.546648] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:41.546659] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:41.546672] [D] [thread 129841] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:55:41.546728] [D] [thread 129841] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:55:41.546832] [I] [thread 129841] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:41.546861] [D] [thread 129841] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:55:41.546876] [D] [thread 129841] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:55:41.546891] [D] [thread 129841] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[10:55:41.546903] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:55:41.546924] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:55:41.546939] [D] [thread 129841] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[10:55:41.546949] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:55:41.546960] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:55:41.546972] [D] [thread 129841] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:55:41.547048] [I] [thread 129841] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:55:41.547090] [D] [thread 129841] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:55:41.547301] [D] [thread 129841] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:55:41.547324] [D] [thread 129841] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:55:42.356672] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:43.357971] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:44.359252] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:44.619909] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:44.620374] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:44.621188] [I] [thread 129844] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:44.622942] [I] [thread 129844] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:44.770086] [D] [thread 129841] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 45093
dataPort: 45341
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689154419
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:44.770420] [D] [thread 129841] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 45093
dataPort: 45341
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689154419
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:44.770503] [D] [thread 129841] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:44.770921] [D] [thread 129841] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:44.771003] [D] [thread 129841] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:44.771077] [D] [thread 129841] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[10:55:44.771246] [D] [thread 129841] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:44.771334] [I] [thread 129841] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:44.771499] [I] [thread 129841] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:44.771582] [D] [thread 129841] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[10:55:44.771682] [D] [thread 129841] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:44.772061] [D] [thread 129841] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:44.772121] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:55:44.772153] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:55:44.772195] [D] [thread 129841] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:44.772240] [D] [thread 129841] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:44.772267] [D] [thread 129841] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:44.772853] [D] [thread 129841] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[10:55:44.808556] [D] [thread 129841] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:55:44.808714] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:55:44.808755] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:55:44.808844] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[10:55:44.809051] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:55:44.809104] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[10:55:44.809182] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:55:44.809216] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:55:44.809251] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[10:55:44.809282] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:44.809336] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:55:44.809389] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:55:44.809506] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:55:44.809549] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:55:44.809600] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:55:44.809631] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:55:44.809657] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:55:44.809689] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:55:44.809716] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:44.809745] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:55:44.809793] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:55:44.809915] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:55:44.809961] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:55:44.810015] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:55:44.810046] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:55:44.810073] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:55:44.810104] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:55:44.810132] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:44.810163] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:55:44.810288] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:55:44.810476] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:55:44.810529] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:55:44.810594] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:44.810629] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:44.810655] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:44.810687] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:55:44.810717] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:44.810751] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:55:44.810804] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:55:44.810947] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:55:44.810995] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:55:44.811052] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:44.811103] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:44.811133] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:44.811167] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:55:44.811198] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:44.811232] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:55:44.811279] [D] [thread 129841] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:55:44.815383] [D] [thread 129845] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[10:55:44.815466] [D] [thread 129845] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[10:55:44.815495] [I] [thread 129845] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:55:44.815528] [D] [thread 129845] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:55:44.815559] [D] [thread 129845] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[10:55:44.815578] [I] [thread 129845] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:44.815598] [D] [thread 129845] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:44.815621] [D] [thread 129845] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:55:44.815700] [D] [thread 129845] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:55:44.815860] [I] [thread 129845] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:44.815933] [D] [thread 129845] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:55:44.815964] [D] [thread 129845] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:55:44.815990] [D] [thread 129845] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[10:55:44.816011] [I] [thread 129845] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:55:44.816052] [D] [thread 129845] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:55:44.816079] [D] [thread 129845] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[10:55:44.816098] [I] [thread 129845] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:55:44.816117] [D] [thread 129845] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:55:44.816140] [D] [thread 129845] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:55:44.816278] [I] [thread 129845] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:55:44.816342] [D] [thread 129845] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:55:44.816742] [D] [thread 129845] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:55:44.816778] [D] [thread 129845] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:55:45.621795] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:46.623075] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:47.624492] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:47.803162] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:47.803685] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:47.804626] [I] [thread 129846] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:47.806740] [I] [thread 129846] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:47.955134] [D] [thread 129845] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 33129
dataPort: 45611
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689077291
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:47.955362] [D] [thread 129845] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 33129
dataPort: 45611
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689077291
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:47.955426] [D] [thread 129845] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:47.956011] [D] [thread 129845] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:47.956067] [D] [thread 129845] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:47.956136] [D] [thread 129845] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[10:55:47.956271] [D] [thread 129845] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:47.956367] [I] [thread 129845] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:47.956605] [I] [thread 129845] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:47.956703] [D] [thread 129845] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[10:55:47.956850] [D] [thread 129845] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:47.957464] [D] [thread 129845] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:47.957556] [I] [thread 129845] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:55:47.957590] [D] [thread 129845] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:55:47.957627] [D] [thread 129845] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:47.957645] [D] [thread 129845] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:47.957667] [D] [thread 129845] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:47.958512] [D] [thread 129845] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[10:55:47.997209] [D] [thread 129845] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:55:47.997298] [I] [thread 129845] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:55:47.997323] [D] [thread 129845] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:55:47.997385] [D] [thread 129845] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[10:55:47.997534] [D] [thread 129845] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:55:47.997567] [D] [thread 129845] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[10:55:47.997622] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:55:47.997688] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:55:47.997705] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:55:47.997726] [D] [thread 129845] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[10:55:47.997746] [D] [thread 129845] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:47.997766] [D] [thread 129845] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:55:47.997814] [D] [thread 129845] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:55:47.998090] [D] [thread 129845] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:55:47.998159] [D] [thread 129845] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:55:47.998454] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:55:47.998542] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:55:47.998585] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:55:47.998648] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:55:47.998680] [D] [thread 129845] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:55:47.998756] [D] [thread 129845] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:47.998807] [D] [thread 129845] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:55:47.998926] [D] [thread 129845] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:55:47.999265] [D] [thread 129845] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:55:47.999367] [D] [thread 129845] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:55:47.999434] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:55:47.999508] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:55:47.999534] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:55:47.999618] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:55:47.999706] [D] [thread 129845] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:55:47.999740] [D] [thread 129845] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:47.999834] [D] [thread 129845] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:55:47.999960] [D] [thread 129845] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:55:48.000398] [D] [thread 129845] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:55:48.000523] [D] [thread 129845] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:55:48.000587] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:48.000607] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:48.000622] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:48.000636] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:48.000659] [D] [thread 129845] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:55:48.000677] [D] [thread 129845] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:48.000710] [D] [thread 129845] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:55:48.000767] [D] [thread 129845] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:55:48.000942] [D] [thread 129845] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:55:48.000973] [D] [thread 129845] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:55:48.001074] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:48.001135] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:48.001173] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:48.001260] [D] [thread 129845] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:48.001338] [D] [thread 129845] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:55:48.001406] [D] [thread 129845] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:48.001500] [D] [thread 129845] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:55:48.001536] [D] [thread 129845] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:55:48.005629] [D] [thread 129841] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 2
[m
[36m[10:55:48.005713] [D] [thread 129841] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[10:55:48.005737] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:55:48.005758] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:55:48.005778] [D] [thread 129841] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[10:55:48.005789] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:48.005800] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:48.005812] [D] [thread 129841] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:55:48.005869] [D] [thread 129841] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:55:48.005973] [I] [thread 129841] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:48.006015] [D] [thread 129841] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:55:48.006031] [D] [thread 129841] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:55:48.006046] [D] [thread 129841] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 2[m
[32m[10:55:48.006059] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:55:48.006073] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:55:48.006087] [D] [thread 129841] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[10:55:48.006097] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:55:48.006108] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:55:48.006120] [D] [thread 129841] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:55:48.006244] [I] [thread 129841] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:55:48.006285] [D] [thread 129841] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:55:48.006606] [D] [thread 129841] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:55:48.006631] [D] [thread 129841] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:55:48.804985] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:49.806252] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:50.807416] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:50.871432] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:50.871834] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:50.872416] [I] [thread 129848] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:50.873522] [I] [thread 129848] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:51.021222] [D] [thread 129841] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.36"
grpcPort: 41269
dataPort: 45379
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689716342
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:51.021493] [D] [thread 129841] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.36"
grpcPort: 41269
dataPort: 45379
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689716342
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:51.021571] [D] [thread 129841] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:51.022392] [D] [thread 129841] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:51.022467] [D] [thread 129841] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:51.022540] [D] [thread 129841] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[10:55:51.022699] [D] [thread 129841] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:51.022819] [I] [thread 129841] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:51.023246] [I] [thread 129841] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:51.023429] [D] [thread 129841] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[10:55:51.023712] [D] [thread 129841] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:51.024514] [D] [thread 129841] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:51.024783] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:55:51.024891] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:55:51.024974] [D] [thread 129841] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:51.025002] [D] [thread 129841] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:51.025029] [D] [thread 129841] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:51.026046] [D] [thread 129841] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[10:55:51.064020] [D] [thread 129841] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:55:51.064128] [I] [thread 129841] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:55:51.064161] [D] [thread 129841] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:55:51.064235] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[10:55:51.064407] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:55:51.064446] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[10:55:51.064512] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:55:51.064574] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:55:51.064598] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:55:51.064618] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:55:51.064644] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[10:55:51.064669] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:51.064811] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:55:51.064919] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:55:51.065096] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:55:51.065140] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:55:51.065248] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:55:51.065554] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:55:51.065651] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:55:51.065687] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:55:51.065708] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:55:51.065762] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:55:51.065801] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:51.065831] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:55:51.065954] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:55:51.066403] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:55:51.066466] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:55:51.066680] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:55:51.066723] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:55:51.067883] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:55:51.067928] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:55:51.067949] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:55:51.067983] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:55:51.068017] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:51.068049] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:55:51.068108] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:55:51.068341] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:55:51.068388] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:55:51.068442] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:51.068466] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:51.068485] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:51.068505] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:51.068524] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:51.068548] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:55:51.068593] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:51.068623] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:55:51.068665] [D] [thread 129841] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:55:51.068782] [D] [thread 129841] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:55:51.068816] [D] [thread 129841] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:55:51.068859] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:51.068882] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:51.068901] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:51.068921] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:51.068940] [D] [thread 129841] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:51.068962] [D] [thread 129841] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:55:51.068982] [D] [thread 129841] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:51.069006] [D] [thread 129841] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:55:51.069023] [D] [thread 129841] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:55:51.072772] [D] [thread 129849] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[10:55:51.072839] [D] [thread 129849] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[10:55:51.072863] [I] [thread 129849] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:55:51.072890] [D] [thread 129849] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:55:51.072915] [D] [thread 129849] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[10:55:51.072929] [I] [thread 129849] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:51.072944] [D] [thread 129849] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:51.072962] [D] [thread 129849] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:55:51.073027] [D] [thread 129849] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:55:51.073164] [I] [thread 129849] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:51.073212] [D] [thread 129849] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:55:51.073235] [D] [thread 129849] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:55:51.073256] [D] [thread 129849] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[10:55:51.073272] [I] [thread 129849] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:55:51.073290] [D] [thread 129849] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:55:51.073310] [D] [thread 129849] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[10:55:51.073324] [I] [thread 129849] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:55:51.073338] [D] [thread 129849] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:55:51.073356] [D] [thread 129849] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:55:51.073450] [I] [thread 129849] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:55:51.073500] [D] [thread 129849] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:55:51.073889] [D] [thread 129849] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:55:51.073918] [D] [thread 129849] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:55:51.873084] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:52.874360] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:53.875640] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:54.043836] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:54.044403] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:54.045329] [I] [thread 129850] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:54.047918] [I] [thread 129850] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:54.193137] [D] [thread 129849] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 38619
dataPort: 43161
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689825089
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:54.193456] [D] [thread 129849] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 38619
dataPort: 43161
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689825089
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:54.193550] [D] [thread 129849] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:54.193889] [D] [thread 129849] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:54.193941] [D] [thread 129849] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:54.194042] [D] [thread 129849] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[10:55:54.194176] [D] [thread 129849] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:54.194295] [I] [thread 129849] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:54.194387] [I] [thread 129849] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:54.194450] [D] [thread 129849] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[10:55:54.264713] [D] [thread 129849] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:54.265197] [D] [thread 129849] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:54.265313] [I] [thread 129849] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:55:54.265341] [D] [thread 129849] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:55:54.265378] [D] [thread 129849] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:54.265388] [D] [thread 129849] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:54.265406] [D] [thread 129849] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:54.265861] [D] [thread 129849] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[10:55:54.303745] [D] [thread 129847] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:55:54.303892] [I] [thread 129847] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:55:54.303935] [D] [thread 129847] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:55:54.304031] [D] [thread 129847] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[10:55:54.304264] [D] [thread 129847] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:55:54.304319] [D] [thread 129847] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[10:55:54.304400] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:55:54.304437] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:55:54.304464] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:55:54.304489] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:55:54.304515] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:55:54.304551] [D] [thread 129847] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[10:55:54.304585] [D] [thread 129847] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:54.304620] [D] [thread 129847] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:55:54.304676] [D] [thread 129847] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:55:54.304820] [D] [thread 129847] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:55:54.304866] [D] [thread 129847] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:55:54.304956] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:55:54.304991] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:55:54.305018] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:55:54.305045] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:55:54.305071] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:55:54.305097] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:55:54.305130] [D] [thread 129847] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:55:54.305159] [D] [thread 129847] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:54.305191] [D] [thread 129847] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:55:54.305247] [D] [thread 129847] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:55:54.305438] [D] [thread 129847] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:55:54.305497] [D] [thread 129847] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:55:54.305557] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:55:54.305588] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:55:54.305614] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:55:54.305640] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:55:54.305666] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:55:54.305692] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:55:54.305724] [D] [thread 129847] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:55:54.305753] [D] [thread 129847] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:54.305785] [D] [thread 129847] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:55:54.305835] [D] [thread 129847] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:55:54.305976] [D] [thread 129847] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:55:54.306023] [D] [thread 129847] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:55:54.306078] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:54.306109] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:54.306135] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:54.306161] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:54.306232] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:54.306275] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:54.306310] [D] [thread 129847] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:55:54.306341] [D] [thread 129847] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:54.306406] [D] [thread 129847] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:55:54.306472] [D] [thread 129847] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:55:54.306639] [D] [thread 129847] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:55:54.306700] [D] [thread 129847] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:55:54.306764] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:54.306796] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:54.306823] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:54.306849] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:54.306875] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:54.306900] [D] [thread 129847] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:54.306935] [D] [thread 129847] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:55:54.306963] [D] [thread 129847] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:54.307017] [D] [thread 129847] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:55:54.307043] [D] [thread 129847] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:55:54.312097] [D] [thread 129852] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 3
[m
[36m[10:55:54.312181] [D] [thread 129852] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[10:55:54.312211] [I] [thread 129852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:55:54.312244] [D] [thread 129852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:55:54.312276] [D] [thread 129852] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[10:55:54.312295] [I] [thread 129852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:54.312315] [D] [thread 129852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:54.312337] [D] [thread 129852] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:55:54.312414] [D] [thread 129852] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:55:54.312576] [I] [thread 129852] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:54.312646] [D] [thread 129852] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:55:54.312674] [D] [thread 129852] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:55:54.312700] [D] [thread 129852] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 3[m
[32m[10:55:54.312721] [I] [thread 129852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:55:54.312745] [D] [thread 129852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:55:54.312770] [D] [thread 129852] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[10:55:54.312788] [I] [thread 129852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:55:54.312808] [D] [thread 129852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:55:54.312830] [D] [thread 129852] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:55:54.312964] [I] [thread 129852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:55:54.313029] [D] [thread 129852] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:55:54.313571] [D] [thread 129852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:55:54.313607] [D] [thread 129852] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:55:55.045692] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:56.046984] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:57.048274] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:57.118849] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:57.119307] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:55:57.120385] [I] [thread 129853] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:55:57.123090] [I] [thread 129853] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:55:57.266436] [D] [thread 129852] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 45685
dataPort: 43409
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689942741
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:57.266704] [D] [thread 129852] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 45685
dataPort: 43409
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689942741
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:55:57.266779] [D] [thread 129852] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:55:57.267354] [D] [thread 129852] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:55:57.267379] [D] [thread 129852] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:55:57.267520] [D] [thread 129852] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[10:55:57.267691] [D] [thread 129852] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:55:57.267761] [I] [thread 129852] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:55:57.267871] [I] [thread 129852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:57.267946] [D] [thread 129852] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[10:55:57.268029] [D] [thread 129852] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:55:57.268506] [D] [thread 129852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:55:57.268589] [I] [thread 129852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:55:57.268619] [D] [thread 129852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:55:57.268658] [D] [thread 129852] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:55:57.268674] [D] [thread 129852] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:55:57.268694] [D] [thread 129852] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:55:57.269207] [D] [thread 129852] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[10:55:57.305366] [D] [thread 129852] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:55:57.305483] [I] [thread 129852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:55:57.305524] [D] [thread 129852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:55:57.305605] [D] [thread 129852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[10:55:57.305796] [D] [thread 129852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:55:57.305840] [D] [thread 129852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[10:55:57.305914] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:55:57.305967] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:55:57.305992] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:55:57.306014] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:55:57.306036] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:55:57.306057] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:55:57.306088] [D] [thread 129852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[10:55:57.306117] [D] [thread 129852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:57.306149] [D] [thread 129852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:55:57.306245] [D] [thread 129852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:55:57.306387] [D] [thread 129852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:55:57.306426] [D] [thread 129852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:55:57.306478] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:55:57.306505] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:55:57.306528] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:55:57.306550] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:55:57.306572] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:55:57.306595] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:55:57.306617] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[10:55:57.306645] [D] [thread 129852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:55:57.306670] [D] [thread 129852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:57.306698] [D] [thread 129852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:55:57.306771] [D] [thread 129852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:55:57.306924] [D] [thread 129852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:55:57.306968] [D] [thread 129852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:55:57.307026] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:55:57.307054] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:55:57.307077] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:55:57.307100] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:55:57.307122] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:55:57.307144] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:55:57.307166] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[10:55:57.307195] [D] [thread 129852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:55:57.307222] [D] [thread 129852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:57.307359] [D] [thread 129852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:55:57.307423] [D] [thread 129852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:55:57.307585] [D] [thread 129852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:55:57.307628] [D] [thread 129852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:55:57.307689] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:57.307718] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:57.307754] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:57.307780] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:57.307803] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:57.307825] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:57.307848] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[10:55:57.307879] [D] [thread 129852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:55:57.307909] [D] [thread 129852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:57.307939] [D] [thread 129852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:55:57.307991] [D] [thread 129852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:55:57.308564] [D] [thread 129852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:55:57.308625] [D] [thread 129852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:55:57.308696] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:57.308726] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:57.308887] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:57.308916] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:57.308938] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:57.308961] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:57.308983] [D] [thread 129852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:55:57.309016] [D] [thread 129852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:55:57.309051] [D] [thread 129852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:55:57.309084] [D] [thread 129852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:55:57.309126] [D] [thread 129852] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:55:57.313212] [D] [thread 129854] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 3
[m
[36m[10:55:57.313307] [D] [thread 129854] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[10:55:57.313334] [I] [thread 129854] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:55:57.313363] [D] [thread 129854] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:55:57.313391] [D] [thread 129854] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[10:55:57.313408] [I] [thread 129854] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:55:57.313425] [D] [thread 129854] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:55:57.313445] [D] [thread 129854] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:55:57.313518] [D] [thread 129854] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:55:57.313681] [I] [thread 129854] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:55:57.313721] [D] [thread 129854] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:55:57.313744] [D] [thread 129854] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:55:57.313784] [D] [thread 129854] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 3[m
[32m[10:55:57.313803] [I] [thread 129854] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:55:57.313824] [D] [thread 129854] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:55:57.313846] [D] [thread 129854] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[10:55:57.313862] [I] [thread 129854] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:55:57.313879] [D] [thread 129854] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:55:57.313899] [D] [thread 129854] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:55:57.313986] [I] [thread 129854] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:55:57.314026] [D] [thread 129854] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:55:57.314391] [D] [thread 129854] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:55:57.314418] [D] [thread 129854] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:55:58.120598] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:55:59.121914] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:00.123226] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:00.186284] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:00.186786] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:56:00.187714] [I] [thread 129855] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:56:00.190852] [I] [thread 129855] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:56:00.335991] [D] [thread 129854] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.39"
grpcPort: 38971
dataPort: 39947
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689886919
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:56:00.336236] [D] [thread 129854] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.39"
grpcPort: 38971
dataPort: 39947
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689886919
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:56:00.336309] [D] [thread 129854] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:56:00.336838] [D] [thread 129854] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:56:00.336872] [D] [thread 129854] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:56:00.336928] [D] [thread 129854] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 11 and resources 65535[m
[36m[10:56:00.337072] [D] [thread 129854] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:56:00.337143] [I] [thread 129854] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:56:00.337260] [I] [thread 129854] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:56:00.337337] [D] [thread 129854] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 11[m
[36m[10:56:00.337424] [D] [thread 129854] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:56:00.337895] [D] [thread 129854] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:56:00.338345] [I] [thread 129854] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:56:00.338540] [D] [thread 129854] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:56:00.338609] [D] [thread 129854] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:56:00.338626] [D] [thread 129854] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:56:00.338649] [D] [thread 129854] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:56:00.339159] [D] [thread 129854] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=11[m
[36m[10:56:00.375390] [D] [thread 129856] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 11
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream10"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:56:00.375510] [I] [thread 129856] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:56:00.375544] [D] [thread 129856] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:56:00.375619] [D] [thread 129856] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= test_stream10 logical source= debs[m
[36m[10:56:00.375794] [D] [thread 129856] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:56:00.375835] [D] [thread 129856] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream10[m
[36m[10:56:00.375923] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:56:00.375949] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:56:00.375969] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:56:00.375988] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:56:00.376007] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:56:00.376025] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:56:00.376044] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=test_stream9[m
[36m[10:56:00.376071] [D] [thread 129856] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream10 does not exist, try to add[m
[36m[10:56:00.376096] [D] [thread 129856] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:56:00.376122] [D] [thread 129856] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:56:00.376164] [D] [thread 129856] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:56:00.376296] [D] [thread 129856] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:56:00.376332] [D] [thread 129856] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:56:00.376374] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:56:00.376399] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:56:00.376419] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:56:00.376439] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:56:00.376458] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:56:00.376477] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:56:00.376497] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[10:56:00.376517] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=DiskMetric_ph[m
[36m[10:56:00.376540] [D] [thread 129856] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:56:00.376561] [D] [thread 129856] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:56:00.376604] [D] [thread 129856] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:56:00.376645] [D] [thread 129856] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:56:00.376740] [D] [thread 129856] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:56:00.376774] [D] [thread 129856] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:56:00.376816] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:56:00.376839] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:56:00.376860] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:56:00.376880] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:56:00.376900] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:56:00.376933] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:56:00.376954] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[10:56:00.376974] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=MemoryMetric_ph[m
[36m[10:56:00.377000] [D] [thread 129856] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:56:00.377023] [D] [thread 129856] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:56:00.377176] [D] [thread 129856] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:56:00.377236] [D] [thread 129856] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:56:00.377395] [D] [thread 129856] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:56:00.377436] [D] [thread 129856] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:56:00.377488] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:56:00.377513] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:56:00.377534] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:56:00.377553] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:56:00.377573] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:56:00.377592] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:56:00.377611] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[10:56:00.377631] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedCpuMetrics_ph[m
[36m[10:56:00.377679] [D] [thread 129856] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:56:00.377707] [D] [thread 129856] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:56:00.377751] [D] [thread 129856] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:56:00.377797] [D] [thread 129856] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:56:00.377930] [D] [thread 129856] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:56:00.377968] [D] [thread 129856] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:56:00.378015] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:56:00.378039] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:56:00.378059] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:56:00.378079] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:56:00.378099] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:56:00.378119] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:56:00.378138] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:56:00.378158] [D] [thread 129856] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:56:00.378185] [D] [thread 129856] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:56:00.378275] [D] [thread 129856] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:56:00.378326] [D] [thread 129856] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:56:00.378349] [D] [thread 129856] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:56:00.382271] [D] [thread 129857] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 11
oldParent: 1
newParent: 3
[m
[36m[10:56:00.382341] [D] [thread 129857] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 11  parentId= 1[m
[32m[10:56:00.382365] [I] [thread 129857] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:56:00.382393] [D] [thread 129857] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:56:00.382437] [D] [thread 129857] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  11  exists[m
[32m[10:56:00.382452] [I] [thread 129857] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:56:00.382468] [D] [thread 129857] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:56:00.382485] [D] [thread 129857] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:56:00.382552] [D] [thread 129857] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:56:00.382686] [I] [thread 129857] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:56:00.382722] [D] [thread 129857] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:56:00.382743] [D] [thread 129857] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:56:00.382763] [D] [thread 129857] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 11  parentId= 3[m
[32m[10:56:00.382779] [I] [thread 129857] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:56:00.382797] [D] [thread 129857] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:56:00.382815] [D] [thread 129857] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 11 exists[m
[32m[10:56:00.382829] [I] [thread 129857] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:56:00.382844] [D] [thread 129857] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:56:00.382862] [D] [thread 129857] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:56:00.382963] [I] [thread 129857] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:56:00.383002] [D] [thread 129857] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:56:00.383496] [D] [thread 129857] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:56:00.383533] [D] [thread 129857] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:56:01.188000] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:02.189232] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:02.330665] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:02.331105] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:56:02.332255] [I] [thread 129858] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:56:02.334548] [I] [thread 129858] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:56:03.332308] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:03.770714] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:03.771081] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:03.923739] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:03.924202] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:03.926283] [D] [thread 129863] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownWithMonitoringSourceThreeLevel.out",true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[10:56:03.926404] [I] [thread 129863] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[10:56:03.926432] [I] [thread 129863] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[10:56:03.926485] [D] [thread 129863] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[10:56:03.926586] [D] [thread 129863] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "WrappedNetworkMetrics"[m
[36m[10:56:03.926661] [D] [thread 129863] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownWithMonitoringSourceThreeLevel.out",true));[m
[36m[10:56:03.926697] [D] [thread 129863] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownWithMonitoringSourceThreeLevel.out",true));
}
}
[m
[36m[10:56:03.927949] [D] [thread 129864] [File.cpp:27] [createFile] Create File to file:///tmp/query_01-11-2023_10-56-03_1431417.cpp[m
[36m[10:56:03.928548] [D] [thread 129864] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:56:03.928605] [D] [thread 129864] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[10:56:03.928941] [D] [thread 129864] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -o/tmp/query_01-11-2023_10-56-03_1431417.so -DFMT_HEADER_ONLY /tmp/query_01-11-2023_10-56-03_1431417.cpp'[m
[36m[10:56:04.925429] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:05.926647] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:56:06.835895] [I] [thread 129864] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2908.063941ms[m
[36m[10:56:06.836260] [D] [thread 129863] [Query.cpp:231] [from] Query: create new Query with source WrappedNetworkMetrics[m
[36m[10:56:06.836316] [D] [thread 129863] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  WrappedNetworkMetrics[m
[32m[10:56:06.836583] [I] [thread 129863] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.837713] [D] [thread 129863] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[10:56:06.838167] [D] [thread 129863] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[10:56:06.838603] [I] [thread 129863] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.838806] [D] [thread 129863] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[10:56:06.838994] [D] [thread 129863] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.839037] [D] [thread 129863] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:06.839507] [I] [thread 129863] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[10:56:06.839689] [D] [thread 129863] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Avg;) as new root of the plan.[m
[36m[10:56:06.839806] [D] [thread 129863] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.839841] [D] [thread 129863] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.840061] [D] [thread 129863] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[10:56:06.840194] [I] [thread 129863] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:56:06.840309] [D] [thread 129863] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[10:56:06.840455] [D] [thread 129863] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.840488] [D] [thread 129863] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.841397] [D] [thread 129863] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.841610] [D] [thread 129863] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.841747] [D] [thread 129863] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:06.841922] [D] [thread 129863] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.841985] [D] [thread 129863] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.842016] [D] [thread 129863] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:06.842118] [D] [thread 129863] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:56:06.842167] [D] [thread 129863] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.842234] [D] [thread 129863] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.842267] [D] [thread 129863] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:06.842916] [D] [thread 129863] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source WrappedNetworkMetrics with schema: WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:06.842972] [D] [thread 129863] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:06.843093] [D] [thread 129863] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:06.844147] [D] [thread 129863] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:06.844846] [D] [thread 129863] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:56:06.845349] [I] [thread 129863] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[10:56:06.846042] [I] [thread 129863] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[10:56:06.846119] [I] [thread 129863] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:56:06.846180] [I] [thread 129811] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:56:06.846340] [I] [thread 129811] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:56:06.846384] [I] [thread 129811] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:56:06.846904] [I] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[10:56:06.847122] [D] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:56:06.847194] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.847268] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.847377] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:06.847439] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:06.847556] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:06.848668] [D] [thread 129811] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:06.849291] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:06.849379] [D] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:56:06.849402] [D] [thread 129811] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:56:06.849804] [D] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[10:56:06.849855] [I] [thread 129811] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:56:06.850069] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:56:06.850555] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:56:06.850935] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:56:06.851163] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.851521] [D] [thread 129811] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[10:56:06.851889] [D] [thread 129811] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.852128] [D] [thread 129811] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[10:56:06.852327] [I] [thread 129811] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.852531] [D] [thread 129811] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:56:06.852562] [I] [thread 129811] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:56:06.852708] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:56:06.852995] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:56:06.853255] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:56:06.853590] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.853842] [D] [thread 129811] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[10:56:06.854121] [I] [thread 129811] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.854261] [D] [thread 129811] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:56:06.854276] [I] [thread 129811] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:56:06.854364] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:56:06.854586] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:56:06.854940] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:56:06.855158] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.855437] [D] [thread 129811] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[10:56:06.855615] [I] [thread 129811] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[10:56:06.855827] [I] [thread 129811] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.856020] [D] [thread 129811] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[10:56:06.856197] [D] [thread 129811] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.856339] [D] [thread 129811] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.856472] [D] [thread 129811] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[10:56:06.856691] [D] [thread 129811] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.856836] [D] [thread 129811] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.856960] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.857063] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.857160] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:06.857300] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:06.857385] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:06.858250] [D] [thread 129811] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:06.858714] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:56:06.858836] [I] [thread 129811] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[10:56:06.859034] [I] [thread 129811] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:56:06.859114] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.859193] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.859248] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[10:56:06.859982] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.860075] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.860171] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.860189] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.860218] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.860608] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:56:06.861133] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.861207] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.861278] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.861292] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.861328] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.861625] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:56:06.862051] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.862117] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.862184] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.862221] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.862274] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.862583] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:56:06.862997] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.863063] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.863129] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.863147] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.863175] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.863485] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:56:06.863894] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.863960] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.864022] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.864037] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.864108] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.864388] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:56:06.864803] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.864871] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.864934] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.864948] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.864983] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.865255] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:56:06.865710] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.865773] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.865833] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.865847] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.865871] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.866144] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:56:06.866778] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.866856] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.866925] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.866938] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.866966] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.867212] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:56:06.867685] [I] [thread 129811] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:56:06.867754] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:56:06.867816] [D] [thread 129811] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:56:06.867830] [D] [thread 129811] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:56:06.867855] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:56:06.868122] [D] [thread 129811] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[10:56:06.868899] [D] [thread 129811] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[32m[10:56:06.869012] [I] [thread 129811] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[10:56:06.869333] [D] [thread 129811] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:06.869749] [D] [thread 129811] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[10:56:06.870158] [D] [thread 129811] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:06.870245] [D] [thread 129811] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[10:56:06.870564] [D] [thread 129811] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:06.871063] [D] [thread 129811] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[10:56:06.871154] [D] [thread 129811] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[10:56:06.871198] [D] [thread 129811] [NemoWindowPinningRule.cpp:92] [createCentralWindowOperator] NemoWindowPinningRule::apply: introduce centralized window operator for window WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:56:06.871307] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:56:06.871588] [D] [thread 129811] [NemoWindowPinningRule.cpp:94] [createCentralWindowOperator] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(23) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[10:56:06.871655] [D] [thread 129811] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:06.871683] [D] [thread 129811] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:06.871742] [I] [thread 129811] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:06.871753] [I] [thread 129811] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:06.871784] [I] [thread 129811] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:06.871847] [D] [thread 129811] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:06.871921] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.872094] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.872206] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.872383] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.872415] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.872535] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.872556] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.872671] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.872735] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.872858] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.872888] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.873051] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.873089] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.873253] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.873324] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.873467] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.873537] [D] [thread 129811] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:06.873696] [D] [thread 129811] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:06.873756] [D] [thread 129811] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[10:56:06.874215] [D] [thread 129811] [NemoWindowPinningRule.cpp:81] [apply] NemoWindowPinningRule::apply: central op
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:06.874518] [D] [thread 129811] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:06.874833] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.874947] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.875075] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 9 source operators.[m
[36m[10:56:06.875190] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:06.875287] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:06.877868] [D] [thread 129811] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:56:06.878266] [I] [thread 129811] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:56:06.878466] [I] [thread 129811] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:56:06.878654] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:06.879519] [D] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:56:06.879571] [D] [thread 129811] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:56:06.879995] [D] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:56:06.880109] [D] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[10:56:06.880130] [D] [thread 129811] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[10:56:06.880203] [I] [thread 129811] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[10:56:06.880244] [I] [thread 129811] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:56:06.880470] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:56:06.880729] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[10:56:06.881103] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[10:56:06.881276] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[10:56:06.881519] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[10:56:06.881752] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[10:56:06.881963] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[10:56:06.882182] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[10:56:06.882441] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[10:56:06.882675] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[10:56:06.882895] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[10:56:06.883126] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[10:56:06.883467] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[10:56:06.883693] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[10:56:06.883977] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[10:56:06.884189] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[10:56:06.884427] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[10:56:06.884683] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[10:56:06.884985] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[10:56:06.885187] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[10:56:06.885938] [D] [thread 129811] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:56:06.886000] [D] [thread 129811] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:56:06.886062] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886104] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886127] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886241] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886272] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886293] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886388] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886474] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886539] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886610] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886669] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886737] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886752] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.886839] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.886868] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.886964] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.887023] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.887117] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.887185] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.887273] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.887318] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.887394] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.887424] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.887525] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.887552] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.887604] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.887655] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.887680] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.887706] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.889252] [D] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:56:06.889329] [D] [thread 129811] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:56:06.889407] [D] [thread 129811] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:56:06.889426] [D] [thread 129811] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:56:06.889434] [D] [thread 129811] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[10:56:06.889444] [D] [thread 129811] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[10:56:06.889467] [I] [thread 129811] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[10:56:06.890342] [D] [thread 129811] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:06.890418] [D] [thread 129811] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:56:06.890433] [D] [thread 129811] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:56:06.890489] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890531] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890554] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890574] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890594] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890613] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890634] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890678] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890707] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890741] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890764] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890804] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890817] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.890860] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.890976] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.891055] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.891114] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.891189] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.891236] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.891277] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.891328] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.891405] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.891470] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.891569] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.891626] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.891655] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.891714] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.891772] [D] [thread 129811] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:56:06.891800] [D] [thread 129811] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:56:06.892277] [D] [thread 129811] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[10:56:06.892386] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:56:06.892447] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:56:06.892613] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:56:06.892678] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[10:56:06.892756] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:56:06.892769] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[10:56:06.892810] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:56:06.892821] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[10:56:06.892839] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:56:06.892849] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[10:56:06.892907] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:56:06.892934] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[10:56:06.892988] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:56:06.893006] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[10:56:06.893060] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:56:06.893075] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[10:56:06.893162] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:56:06.893209] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[10:56:06.893239] [I] [thread 129811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:56:06.893283] [D] [thread 129811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:56:06.893467] [I] [thread 129811] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[10:56:06.893876] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.894100] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.894331] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.894481] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.894740] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.894853] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.894961] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.895081] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.895329] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.895440] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.895589] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.895722] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.895960] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.896097] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.896191] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.896315] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.896549] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.896659] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.896741] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.896935] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.897137] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.897256] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.897360] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.897552] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.897699] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.897790] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.897959] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.898147] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.898362] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.898552] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.898812] [D] [thread 129811] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:56:06.898973] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.899117] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.899385] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[10:56:06.899580] [I] [thread 129811] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 9 sub-graphs to create a single sub-graph[m
[36m[10:56:06.899627] [D] [thread 129811] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[10:56:06.900307] [D] [thread 129811] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[10:56:06.900374] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.900555] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.900577] [D] [thread 129811] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:56:06.900672] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:56:06.900917] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.901223] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.901376] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.901524] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.901627] [D] [thread 129811] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:56:06.901703] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:56:06.902068] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.902278] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.902431] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.902471] [D] [thread 129811] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:56:06.902669] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:56:06.902897] [W] [thread 129811] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:56:06.902949] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.903194] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.903303] [D] [thread 129811] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:56:06.903392] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:56:06.903511] [W] [thread 129811] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:56:06.903625] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.903852] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.903962] [D] [thread 129811] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:56:06.904099] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:56:06.904357] [W] [thread 129811] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:56:06.904408] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.904656] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.904707] [D] [thread 129811] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:56:06.904837] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:56:06.905112] [W] [thread 129811] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:56:06.905162] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.905206] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:56:06.905223] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.905567] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.905685] [D] [thread 129811] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:56:06.905773] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:56:06.905909] [W] [thread 129811] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:56:06.905971] [D] [thread 129811] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:56:06.906270] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:56:06.906342] [D] [thread 129811] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:56:06.906381] [D] [thread 129811] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:56:06.906457] [W] [thread 129811] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:56:06.906619] [D] [thread 129811] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:56:06.906654] [D] [thread 129811] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[10:56:06.906715] [D] [thread 129811] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:56:06.906730] [D] [thread 129811] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[10:56:06.906807] [D] [thread 129811] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:56:06.906820] [D] [thread 129811] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[10:56:06.906854] [D] [thread 129811] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:56:06.907284] [D] [thread 129811] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[10:56:06.907410] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.907497] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.907537] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.907629] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[10:56:06.907650] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.907855] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.907933] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.907962] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:56:06.908112] [W] [thread 129811] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:56:06.908144] [W] [thread 129811] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:56:06.908264] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.908577] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.908617] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.908714] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[10:56:06.908735] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.908886] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.908915] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.908931] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:56:06.909130] [W] [thread 129811] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:56:06.909255] [W] [thread 129811] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:56:06.909376] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.909534] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.909633] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.909773] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[10:56:06.909827] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.910003] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.910056] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.910115] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:56:06.910393] [W] [thread 129811] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:56:06.910479] [W] [thread 129811] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:56:06.910593] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.910673] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.910702] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.910826] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[10:56:06.910906] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.911139] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.911231] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.911254] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:56:06.911434] [W] [thread 129811] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:56:06.911486] [W] [thread 129811] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:56:06.911695] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.911834] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.911932] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.912018] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[10:56:06.912036] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.912247] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.912334] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.912392] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:56:06.912638] [W] [thread 129811] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:56:06.912723] [W] [thread 129811] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:56:06.912828] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.912910] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.912939] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.913000] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[10:56:06.913105] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.913328] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.913411] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.913474] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:56:06.913751] [W] [thread 129811] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:56:06.913809] [W] [thread 129811] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:56:06.913918] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.913995] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.914024] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.914097] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(18)[m
[36m[10:56:06.914248] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.914464] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.914557] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.914613] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:56:06.914897] [W] [thread 129811] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:56:06.914989] [W] [thread 129811] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:56:06.915069] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.915147] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.915176] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.915302] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[10:56:06.915359] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.915572] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.915650] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.915771] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:56:06.916037] [W] [thread 129811] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:56:06.916100] [W] [thread 129811] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:56:06.916209] [D] [thread 129811] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:56:06.916290] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:56:06.916320] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.916438] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(22)[m
[36m[10:56:06.916465] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.916608] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:56:06.916636] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.916703] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:56:06.917039] [D] [thread 129811] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:56:06.917164] [D] [thread 129811] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:56:06.917382] [D] [thread 129811] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:56:06.917511] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.917534] [D] [thread 129811] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:56:06.917597] [D] [thread 129811] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:56:06.917660] [D] [thread 129811] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:56:06.917676] [D] [thread 129811] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.917688] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.917801] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.917996] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.918497] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 1[m
[36m[10:56:06.918604] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.918644] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.918900] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[10:56:06.919373] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.919429] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.919441] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.919517] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.919539] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.919709] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:56:06.919917] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.920035] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:56:06.920073] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:56:06.920245] [D] [thread 129811] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 1[m
[36m[10:56:06.920564] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.920608] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.920640] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:56:06.920663] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.920728] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.920843] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.920869] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.921198] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.921270] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:06.921330] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 1[m
[36m[10:56:06.921343] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.921411] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.921453] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.921487] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.921568] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.921624] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.921869] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.921939] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.922044] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.922341] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[10:56:06.922750] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.922815] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.922840] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[10:56:06.922850] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[10:56:06.923247] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.923452] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.923503] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.923580] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:56:06.923606] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.923622] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:56:06.923631] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:56:06.923903] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[10:56:06.924074] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.924165] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.924191] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:56:06.924214] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.924334] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.924548] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:56:06.924644] [W] [thread 129811] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:56:06.924662] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.924677] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.924818] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.924852] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:56:06.925155] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 4[m
[36m[10:56:06.925209] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.925261] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.925417] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[10:56:06.925772] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.925859] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.925870] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.925902] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.925915] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.925983] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:56:06.926031] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.926050] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:56:06.926087] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:56:06.926163] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[10:56:06.926489] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.926632] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.926664] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:56:06.926687] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.926854] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.927077] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.927171] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:56:06.927290] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:56:06.927311] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:56:06.927370] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 4[m
[36m[10:56:06.927385] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.927401] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.927488] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.927516] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.927618] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.927683] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.927844] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.927862] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.927860] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:06.927931] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.928140] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[10:56:06.928559] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.928620] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.928749] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[10:56:06.928772] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[10:56:06.929092] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.929264] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.929294] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.929349] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:56:06.929391] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.929409] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:56:06.929418] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:56:06.929547] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[10:56:06.929664] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.929725] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.929750] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:56:06.929821] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.929948] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.930218] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:56:06.930277] [W] [thread 129811] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:56:06.930291] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.930377] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.930483] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.930523] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:56:06.930752] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 5[m
[36m[10:56:06.930871] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.930890] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.931065] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[10:56:06.931483] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.931549] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.931567] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.931601] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.931616] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.931688] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:56:06.931732] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.931750] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:56:06.931759] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:56:06.931855] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[10:56:06.931922] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.932010] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.932047] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:56:06.932110] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.932346] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.932500] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.932567] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:56:06.932777] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:56:06.932856] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:56:06.932903] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 5[m
[36m[10:56:06.932915] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.932941] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.933007] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.933034] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.933108] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.933153] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.933272] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.933286] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.933390] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.933534] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[10:56:06.933990] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.934044] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.934061] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[10:56:06.934071] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[10:56:06.934383] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.934601] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.934642] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.934811] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:56:06.934842] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.934859] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:56:06.934868] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:56:06.935061] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[10:56:06.935230] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.935273] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.935340] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:56:06.935418] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.935617] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.935879] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:56:06.935941] [W] [thread 129811] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:56:06.935956] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.935972] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.936131] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.936165] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:56:06.936412] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 6[m
[36m[10:56:06.936495] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.936513] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.936704] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[10:56:06.937135] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.937198] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.937218] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.937248] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.937263] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.937334] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:56:06.937373] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.937391] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:56:06.937400] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:56:06.937488] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[10:56:06.937633] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.937705] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.937741] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:56:06.937769] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.937913] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.938098] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.938178] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:56:06.938389] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:56:06.938481] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:56:06.938583] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 6[m
[36m[10:56:06.938604] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.938660] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.938703] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.938732] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.938824] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.938895] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.939064] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.939159] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.939197] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.939370] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[10:56:06.939759] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.939821] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.939841] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[10:56:06.939851] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[10:56:06.940033] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.940102] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.940191] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.940300] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:56:06.940412] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.940438] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:56:06.940484] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:56:06.940672] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[10:56:06.940820] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.940916] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.940940] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:56:06.940964] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.941084] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.941284] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:56:06.941505] [W] [thread 129811] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:56:06.941546] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.941571] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.941738] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.941775] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:56:06.942068] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 7[m
[36m[10:56:06.942119] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.942174] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.942338] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[10:56:06.942731] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.942792] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.942810] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.942843] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.942858] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.942945] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:56:06.943004] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.943025] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:56:06.943034] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:56:06.943187] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[10:56:06.943306] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.943461] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.943494] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:56:06.943565] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.943702] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.943941] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.943998] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:56:06.944124] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:56:06.944158] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:56:06.944208] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[10:56:06.944221] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.944237] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.944335] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.944356] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.944438] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.944497] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.944631] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.944649] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.944714] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.944970] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[10:56:06.945275] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.945349] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.945369] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[10:56:06.945379] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[10:56:06.945543] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.945656] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.945730] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.945821] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:56:06.945857] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.945911] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:56:06.945927] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:56:06.946061] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[10:56:06.946150] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.946338] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.946416] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:56:06.946448] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.946597] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.946822] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:56:06.946868] [W] [thread 129811] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:56:06.946910] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.946929] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.947078] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.947155] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:56:06.947367] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 8[m
[36m[10:56:06.947447] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.947468] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.947679] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[10:56:06.948156] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.948220] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.948240] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.948273] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.948288] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.948358] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:56:06.948400] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.948417] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:56:06.948426] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:56:06.948518] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[10:56:06.948656] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.948696] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.948757] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:56:06.948814] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.948973] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.949179] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.949343] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:56:06.949481] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:56:06.949568] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:56:06.949707] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 8[m
[36m[10:56:06.949748] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.949781] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.949862] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.949885] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.949976] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.950012] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.950179] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.950294] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.950384] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.950533] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[10:56:06.950931] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.950998] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.951016] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[10:56:06.951026] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[10:56:06.951181] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.951268] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.951293] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.951432] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:56:06.951503] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.951535] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:56:06.951547] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:56:06.951679] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[10:56:06.951826] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.951854] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.951908] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:56:06.951940] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.952081] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.952355] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:56:06.952418] [W] [thread 129811] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:56:06.952432] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.952448] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.952611] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.952712] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:56:06.952977] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 9[m
[36m[10:56:06.953068] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.953089] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.953217] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[10:56:06.953600] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.953729] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.953744] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.953777] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.953791] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.953862] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:56:06.953913] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.953937] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:56:06.953967] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:56:06.954160] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[10:56:06.954334] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.954405] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.954441] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:56:06.954502] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.954647] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.954859] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.954951] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:56:06.955109] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:56:06.955136] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:56:06.955181] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(18) on execution node with id 9[m
[36m[10:56:06.955270] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.955307] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.955387] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.955452] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.955532] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.955580] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.955729] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.955794] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.955858] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.956147] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[10:56:06.956469] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.956525] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.956604] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:56:06.956620] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[10:56:06.956873] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.957021] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.957114] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.957212] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:56:06.957260] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.957281] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:56:06.957290] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:56:06.957485] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[10:56:06.957632] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.957668] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.957725] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:56:06.957845] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.957950] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.958140] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:56:06.958263] [W] [thread 129811] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:56:06.958281] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.958296] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.958384] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.958412] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:56:06.958631] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 10[m
[36m[10:56:06.958700] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.958719] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.958904] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[10:56:06.959326] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.959404] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.959417] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.959447] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.959461] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.959524] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:56:06.959575] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.959594] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:56:06.959603] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:56:06.959714] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[10:56:06.960011] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.960091] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.960178] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:56:06.960289] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.960426] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.960663] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.960732] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:56:06.960960] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:56:06.961035] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:56:06.961128] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 10[m
[36m[10:56:06.961149] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.961165] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.961218] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.961239] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.961283] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.961295] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.961474] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.961497] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.961555] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.961726] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[10:56:06.962137] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.962239] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.962260] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[10:56:06.962270] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[10:56:06.962422] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.962507] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.962528] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.962668] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:56:06.962735] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.962791] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:56:06.962817] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:56:06.962971] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[10:56:06.963123] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.963190] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.963228] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:56:06.963257] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.963364] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.963556] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:56:06.963655] [W] [thread 129811] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:56:06.963704] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.963729] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.963839] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.963868] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:56:06.964109] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 11[m
[36m[10:56:06.964222] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:56:06.964245] [W] [thread 129811] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:56:06.964479] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[10:56:06.964877] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:56:06.964933] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.964953] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.964984] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.964998] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.965066] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:56:06.965113] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.965130] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:56:06.965140] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:56:06.965232] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 11 to the query Id 1[m
[36m[10:56:06.965388] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.965463] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.965487] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:56:06.965552] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.965692] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.965912] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.966036] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:56:06.966230] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:56:06.966311] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:56:06.966368] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(22) on execution node with id 11[m
[36m[10:56:06.966424] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.966536] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.966624] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.966658] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.966779] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.966869] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.967044] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.967065] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.967094] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.967293] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[10:56:06.967698] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.967764] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.967782] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[10:56:06.967792] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[10:56:06.967946] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:56:06.968058] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.968185] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.968323] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:56:06.968455] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.968477] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:56:06.968486] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:56:06.968645] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[10:56:06.968781] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.968865] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.968890] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:56:06.968946] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.969103] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.969326] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:56:06.969446] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.969530] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.969543] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:06.969606] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(23) on execution node with id 1[m
[36m[10:56:06.969623] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.969639] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.969739] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.969782] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.969863] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.969897] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.970027] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.970099] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.970262] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.970445] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:56:06.970822] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.970867] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.970883] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[10:56:06.970893] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[10:56:06.971018] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[10:56:06.971063] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.971081] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.971119] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.971177] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.971244] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.971296] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.971327] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.971378] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.971443] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.971462] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.971635] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.971699] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.971795] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.971818] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.971921] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.971954] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.972054] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.972109] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.972235] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:56:06.972404] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.972481] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:56:06.972498] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:56:06.972625] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[10:56:06.972746] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.972825] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.972883] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:56:06.972919] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.973075] [D] [thread 129811] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:56:06.973340] [D] [thread 129811] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:56:06.973486] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.973570] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.973584] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:06.973644] [D] [thread 129811] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[10:56:06.973681] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.973698] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.973734] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.973834] [D] [thread 129811] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:56:06.973894] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.973947] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.974111] [D] [thread 129811] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:56:06.974137] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.974268] [D] [thread 129811] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:56:06.974464] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:56:06.974890] [D] [thread 129811] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:56:06.974965] [D] [thread 129811] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:56:06.974985] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:06.974995] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:56:06.975129] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(23) as root operator.[m
[36m[10:56:06.975181] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.975224] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.975278] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:56:06.975301] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.975394] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:56:06.975420] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:56:06.975588] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[10:56:06.975751] [D] [thread 129811] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:56:06.975845] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:56:06.975903] [I] [thread 129811] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:56:06.975962] [D] [thread 129811] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:56:06.976039] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.976075] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.976088] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.976189] [D] [thread 129811] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:56:06.976224] [D] [thread 129811] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[10:56:06.976350] [I] [thread 129811] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[10:56:06.976443] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.976570] [D] [thread 129811] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[10:56:06.976592] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.976647] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:06.976710] [D] [thread 129811] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[10:56:06.976773] [D] [thread 129811] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:56:06.976897] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[10:56:06.977044] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.977179] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:06.977315] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.977446] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:56:06.977525] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:56:06.977595] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.977684] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.977772] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:56:06.977864] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[10:56:06.977944] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.978340] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.978430] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.978476] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:06.978541] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.978658] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:06.978680] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.978707] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:06.978718] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.978725] [D] [thread 129811] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:56:06.979042] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:56:06.979330] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:56:06.979416] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:56:06.979453] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.979471] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.979508] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:56:06.979524] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[10:56:06.979822] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[10:56:06.980281] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[10:56:06.980427] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[10:56:06.980891] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[10:56:06.981047] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.32:41617 1::24::0::0}) as new root of the plan.[m
[36m[10:56:06.981127] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.981137] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:06.981294] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[10:56:06.981548] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:34047)}) as new root of the plan.[m
[36m[10:56:06.981746] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.981780] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.981859] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.981880] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:06.982026] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:56:06.982250] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.982340] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:56:06.982358] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:56:06.982496] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[10:56:06.982642] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:56:06.982715] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:56:06.982733] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[10:56:06.982750] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:06.982861] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:56:06.982897] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.983062] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.983092] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:06.983144] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.983193] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:56:06.983501] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[10:56:06.983646] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:06.983995] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.984035] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:56:06.984051] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:56:06.984063] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:06.984088] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:56:06.984119] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.984183] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:56:06.984197] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[10:56:06.984225] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.984445] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.984631] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.984807] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:56:06.984912] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.985035] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:06.985109] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.985146] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:06.985158] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.985165] [D] [thread 129811] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:56:06.985381] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:56:06.985589] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:56:06.985625] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:56:06.985652] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.985705] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.985745] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:56:06.985760] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[10:56:06.985882] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[10:56:06.986489] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[10:56:06.986635] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.986704] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.986717] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[10:56:06.986983] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[10:56:06.987235] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:41831 1::30::0::0}) as new root of the plan.[m
[36m[10:56:06.987278] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.987335] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:06.987488] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[10:56:06.987741] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:34047)}) as new root of the plan.[m
[36m[10:56:06.987954] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.987993] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.988076] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.988101] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.988289] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:56:06.988388] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.988449] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:56:06.988464] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:56:06.988595] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[10:56:06.988743] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:56:06.988856] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:56:06.988876] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[10:56:06.988888] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:06.989003] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:56:06.989036] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.989180] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.989234] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:06.989275] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.989327] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:56:06.989706] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[10:56:06.989842] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:06.990241] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.990306] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:56:06.990324] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:56:06.990336] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:06.990356] [D] [thread 129811] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[10:56:06.990390] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.990449] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:56:06.990465] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[10:56:06.990494] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.990745] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.990907] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.991035] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[10:56:06.991252] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.991455] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:06.991511] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.991550] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:06.991609] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.991623] [D] [thread 129811] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:56:06.991726] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:56:06.991929] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:56:06.992015] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:56:06.992172] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.992199] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.992273] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:56:06.992297] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[10:56:06.992445] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[10:56:06.992835] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[10:56:06.992974] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.993036] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.993048] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[10:56:06.993324] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[10:56:06.993565] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:45341 1::36::0::0}) as new root of the plan.[m
[36m[10:56:06.993606] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.993618] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:06.993894] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[10:56:06.994117] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:34047)}) as new root of the plan.[m
[36m[10:56:06.994434] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.994519] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:06.994580] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.994600] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:06.994660] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:56:06.994685] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:06.994701] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:56:06.994732] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:56:06.994870] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[10:56:06.994928] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:56:06.994985] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:56:06.995004] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[10:56:06.995046] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:06.995220] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:56:06.995306] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.995488] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:06.995521] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:06.995588] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.995609] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:56:06.995921] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[10:56:06.996062] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:06.996415] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.996456] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:56:06.996474] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:56:06.996485] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:06.996501] [D] [thread 129811] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[10:56:06.996529] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.996577] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:56:06.996605] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[10:56:06.996645] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:06.996842] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:06.996968] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:06.997094] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[10:56:06.997315] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.997457] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:06.997567] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.997606] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:06.997649] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:06.997659] [D] [thread 129811] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:56:06.997854] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:56:06.998087] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:56:06.998131] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:56:06.998242] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:06.998268] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:06.998305] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:56:06.998321] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[10:56:06.998490] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[10:56:06.998948] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[10:56:06.999089] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.999153] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:06.999230] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[10:56:06.999583] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[10:56:06.999793] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:45611 1::42::0::0}) as new root of the plan.[m
[36m[10:56:06.999832] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:06.999841] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.000145] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[10:56:07.000353] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:34047)}) as new root of the plan.[m
[36m[10:56:07.000619] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.000661] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:07.000768] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.000804] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:07.000883] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:56:07.000911] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:07.000927] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:56:07.000997] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:56:07.001125] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[10:56:07.001237] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:56:07.001272] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:56:07.001396] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[10:56:07.001416] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.001519] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:56:07.001567] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.001699] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.001721] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:07.001755] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.001812] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:56:07.002136] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[10:56:07.002324] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:07.002708] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:56:07.002775] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:56:07.002794] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:56:07.002805] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.002824] [D] [thread 129811] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[10:56:07.002855] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.002914] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:56:07.002941] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[10:56:07.002972] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.003214] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.003367] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.003480] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[10:56:07.003682] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.003830] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:07.003915] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.003954] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:07.003967] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.003973] [D] [thread 129811] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:56:07.004124] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:56:07.004303] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:56:07.004364] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:56:07.004536] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.004642] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.004719] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:56:07.004755] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[10:56:07.004912] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[10:56:07.005305] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[10:56:07.005439] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[10:56:07.005708] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[10:56:07.006057] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.36:45379 1::48::0::0}) as new root of the plan.[m
[36m[10:56:07.006156] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.006170] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.006341] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[10:56:07.006625] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:34047)}) as new root of the plan.[m
[36m[10:56:07.006789] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.006825] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:07.006899] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.006928] [D] [thread 129811] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:56:07.007101] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:56:07.007241] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:07.007336] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:56:07.007354] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:56:07.007479] [D] [thread 129811] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[10:56:07.007602] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:56:07.007654] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:56:07.007711] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[10:56:07.007724] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.007812] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:56:07.007839] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.007984] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.008045] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:07.008080] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.008152] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:56:07.008422] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[10:56:07.008557] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:07.008871] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.008911] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:56:07.008927] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:56:07.008938] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.008971] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:56:07.009003] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.009066] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[10:56:07.009080] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[10:56:07.009107] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.009339] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.009471] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.009571] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[10:56:07.009776] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.009921] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:07.009970] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.010034] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:07.010051] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.010057] [D] [thread 129811] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:56:07.010299] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:56:07.010519] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:56:07.010582] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:56:07.010636] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.010659] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.010694] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[10:56:07.010709] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[10:56:07.010813] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[10:56:07.011294] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(18) as root operator.[m
[36m[10:56:07.011429] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.011609] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.011701] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[10:56:07.012052] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[10:56:07.012227] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.37:43161 1::54::0::0}) as new root of the plan.[m
[36m[10:56:07.012338] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.012350] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.012544] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[10:56:07.012882] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:34047)}) as new root of the plan.[m
[36m[10:56:07.013063] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.013099] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:07.013172] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.013195] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:07.013361] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:56:07.013453] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:07.013512] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:56:07.013530] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:56:07.013687] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[10:56:07.013788] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:56:07.013893] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:56:07.013914] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[10:56:07.013926] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.014026] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:56:07.014055] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.014293] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.014351] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:07.014379] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.014410] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:56:07.014758] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[10:56:07.014889] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:07.015273] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.015338] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:56:07.015358] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:56:07.015370] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.015388] [D] [thread 129811] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[10:56:07.015421] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.015476] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[10:56:07.015491] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[10:56:07.015522] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.015752] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.015952] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.016085] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 7 source operators.[m
[36m[10:56:07.016230] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.016441] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:07.016488] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.016577] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:07.016597] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.016605] [D] [thread 129811] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:56:07.016710] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:56:07.016900] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:56:07.017127] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:56:07.017180] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.017201] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.017276] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[10:56:07.017296] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[10:56:07.017506] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[10:56:07.017895] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[10:56:07.018019] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.018083] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.018095] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[10:56:07.018462] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[10:56:07.018788] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.38:43409 1::60::0::0}) as new root of the plan.[m
[36m[10:56:07.018840] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.018885] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.019069] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[10:56:07.019295] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:34047)}) as new root of the plan.[m
[36m[10:56:07.019556] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.019635] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:07.019734] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.019756] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:07.019815] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:56:07.019838] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:07.019879] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:56:07.019890] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:56:07.020030] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[10:56:07.020120] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:56:07.020203] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:56:07.020260] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[10:56:07.020277] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.020388] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:56:07.020614] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.020807] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.020838] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:07.020859] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.020874] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:56:07.021063] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[36m[10:56:07.021124] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:07.021401] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.021437] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:56:07.021452] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:56:07.021463] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.021480] [D] [thread 129811] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[10:56:07.021509] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.021555] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[10:56:07.021568] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[10:56:07.021594] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.021705] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.021790] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.021948] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[10:56:07.022003] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.022078] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:07.022095] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.022118] [D] [thread 129811] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:56:07.022129] [D] [thread 129811] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:56:07.022136] [D] [thread 129811] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:56:07.022262] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:56:07.022375] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:56:07.022390] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:56:07.022410] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.022426] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.022517] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[10:56:07.022658] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[10:56:07.022835] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[10:56:07.023268] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(22) as root operator.[m
[36m[10:56:07.023539] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.023752] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.023778] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[10:56:07.024102] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[10:56:07.024436] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.39:39947 1::66::0::0}) as new root of the plan.[m
[36m[10:56:07.024567] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.024595] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.024903] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[10:56:07.025202] [D] [thread 129811] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(71: {NetworkSinkDescriptor(partition=1::69::0::0;nodeLocation=tcp://192.168.2.11:34047)}) as new root of the plan.[m
[36m[10:56:07.025483] [D] [thread 129811] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.025536] [D] [thread 129811] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:07.025644] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.025671] [D] [thread 129811] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:56:07.025744] [D] [thread 129811] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:56:07.025771] [D] [thread 129811] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:56:07.025851] [W] [thread 129811] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:56:07.025868] [D] [thread 129811] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:56:07.026047] [D] [thread 129811] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[10:56:07.026148] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:56:07.026172] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:56:07.026339] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  11[m
[36m[10:56:07.026450] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.026578] [D] [thread 129811] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:56:07.026629] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.026770] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:56:07.026848] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:56:07.026912] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.026937] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:56:07.027217] [I] [thread 129811] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[10:56:07.027382] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:56:07.027848] [D] [thread 129811] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:56:07.027919] [D] [thread 129811] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:56:07.027937] [D] [thread 129811] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:56:07.027950] [D] [thread 129811] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:56:07.027967] [D] [thread 129811] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[10:56:07.028010] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.028068] [D] [thread 129811] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:56:07.028083] [D] [thread 129811] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:56:07.028105] [D] [thread 129811] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:56:07.028203] [D] [thread 129811] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[10:56:07.028235] [D] [thread 129811] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:56:07.028328] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.028354] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.029089] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.029218] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.029280] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 9 source operators.[m
[36m[10:56:07.029341] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.029398] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.030746] [D] [thread 129811] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:56:07.031190] [I] [thread 129811] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:56:07.031379] [I] [thread 129811] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:56:07.031541] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.031633] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.031655] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.031958] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.032022] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.032060] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.032103] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.032124] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.032959] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.033075] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.033095] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.033317] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.033371] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.033575] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.033725] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.033826] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.034561] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.034634] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.034652] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.034836] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.034958] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.035048] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.035093] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.035174] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.035958] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.036036] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.036054] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.036494] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.036582] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.036628] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.036678] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.036801] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.037672] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.037790] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.037812] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.038036] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.038312] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.038511] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.038591] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.038679] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.039397] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.039506] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.039529] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.039760] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.039884] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.040024] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.040120] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.040159] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.040901] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.041011] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.041034] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.041255] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.041408] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.041510] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.041620] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.041727] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.042508] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.042613] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.042635] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.042857] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.042915] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.043102] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.043199] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.043269] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.044033] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.044140] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.044160] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.044376] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.044510] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.044626] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.044731] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.044801] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.045287] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.045524] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.045614] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.045713] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.045767] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.045827] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.046368] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.046609] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.046700] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.046746] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.046929] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.047028] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.047524] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.047754] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.047841] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.047957] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.048064] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.048121] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.048636] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.048731] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.048753] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.048965] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.049103] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.049207] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.049319] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.049419] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.049898] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.050128] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.050300] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.050409] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.050459] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.050544] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.051054] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.051286] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.051365] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.051463] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.051515] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.051574] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.052089] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.052310] [D] [thread 129811] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:56:07.052392] [D] [thread 129811] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:56:07.052472] [D] [thread 129811] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:56:07.052531] [D] [thread 129811] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:56:07.052560] [D] [thread 129811] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:56:07.053078] [D] [thread 129811] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:56:07.053185] [D] [thread 129811] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[10:56:07.055633] [D] [thread 129811] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:1)
|  SINK(4: {FileSinkDescriptor()})
|    CENTRALWINDOW(23)
|      WATERMARKASSIGNER(6)
|        SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::27::0::0})
|      SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::33::0::0})
|      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::39::0::0})
|      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::45::0::0})
|      SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::51::0::0})
|      SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::57::0::0})
|      SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::63::0::0})
|      SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::69::0::0})
|--ExecutionNode(id:2, ip:192.168.2.30, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:34047)})
|  |    SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.32:41617 1::24::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:34047)})
|  |    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:41831 1::30::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:34047)})
|  |    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:45341 1::36::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:34047)})
|  |    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:45611 1::42::0::0})
|  |--ExecutionNode(id:4, ip:192.168.2.32, topologyId:4)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.30:42957)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:5, ip:192.168.2.33, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:42957)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:6, ip:192.168.2.34, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:42957)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:7, ip:192.168.2.35, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:42957)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|--ExecutionNode(id:3, ip:192.168.2.31, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:14)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:34047)})
|  |    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.36:45379 1::48::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:15)
|  |  SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:34047)})
|  |    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.37:43161 1::54::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:16)
|  |  SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:34047)})
|  |    SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.38:43409 1::60::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:17)
|  |  SINK(71: {NetworkSinkDescriptor(partition=1::69::0::0;nodeLocation=tcp://192.168.2.11:34047)})
|  |    SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.39:39947 1::66::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.36, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:44541)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:44541)})
|  |  |    WATERMARKASSIGNER(18)
|  |  |      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:44541)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:11, ip:192.168.2.39, topologyId:11)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  |  SINK(68: {NetworkSinkDescriptor(partition=1::66::0::0;nodeLocation=tcp://192.168.2.31:44541)})
|  |  |    WATERMARKASSIGNER(22)
|  |  |      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.055870] [D] [thread 129811] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[10:56:07.055922] [D] [thread 129811] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:56:07.056273] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.056331] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.056666] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.056710] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.056898] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.056918] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.056967] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.056980] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.057225] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.057297] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.057443] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.057477] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.057583] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.057640] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.057706] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.057811] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.057965] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.058007] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.058145] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.058171] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.058370] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.058448] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.058857] [D] [thread 129811] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[10:56:07.058925] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[10:56:07.058939] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.058953] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.059319] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:39397[m
[36m[10:56:07.059419] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:39397 queryId=1 querySubPlanId = 1[m
[36m[10:56:07.060023] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::27::0::0})
    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::33::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::39::0::0})
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::45::0::0})
    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::51::0::0})
    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::57::0::0})
    SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::63::0::0})
    SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::69::0::0})
[m
[36m[10:56:07.060094] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.060423] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.064335] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:56:07.065316] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.065691] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:56:07.065917] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.066637] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:56:07.067799] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.068141] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:56:07.068323] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.068396] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:56:07.068519] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.069266] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.069865] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.070123] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:56:07.070361] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.071035] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.071155] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.071603] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.072166] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.072570] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.073105] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.073774] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.074138] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.074791] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.075490] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.076071] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.076463] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.076993] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.077692] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::27::0::0}[m
[36m[10:56:07.077996] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.078634] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.079411] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.079995] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.080393] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.080910] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.081586] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::33::0::0}[m
[36m[10:56:07.081849] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.082533] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.083269] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.083853] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.084255] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.084780] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.085499] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::39::0::0}[m
[36m[10:56:07.085770] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.086429] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.087051] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.087627] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.088029] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.088546] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.089218] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::45::0::0}[m
[36m[10:56:07.089486] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.090083] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.090732] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.091301] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.091696] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.092224] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.092909] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::51::0::0}[m
[36m[10:56:07.093177] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.093769] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.094442] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.095003] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.095399] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.095931] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.096625] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::57::0::0}[m
[36m[10:56:07.096893] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.097500] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.098141] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.098734] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.099134] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.099671] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.100342] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::63::0::0}[m
[36m[10:56:07.100616] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.101207] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.101823] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.102426] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.102820] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.103356] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.104049] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::69::0::0}[m
[36m[10:56:07.104321] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.104951] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.105566] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.106125] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.106553] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.107093] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.134633] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[10:56:07.134714] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.134763] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.134893] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:32925[m
[36m[10:56:07.134924] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:32925 queryId=1 querySubPlanId = 2[m
[36m[10:56:07.135285] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.30:42957)})
  WATERMARKASSIGNER(8)
    SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.135368] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.135593] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.136165] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.136769] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.137174] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.137696] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.138346] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.138458] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.138863] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.139428] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.139834] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.140361] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.140936] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.141220] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.141816] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.142572] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.143174] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.143587] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.144129] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.153700] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[10:56:07.153823] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.153843] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.153964] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:34475[m
[36m[10:56:07.153994] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:34475 queryId=1 querySubPlanId = 3[m
[36m[10:56:07.154421] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:42957)})
  WATERMARKASSIGNER(10)
    SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.154507] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.154686] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.155237] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.155828] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.156244] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.156782] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.157409] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.157521] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.157915] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.158516] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.158918] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.159417] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.160016] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.160303] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.160902] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.161460] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.162028] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.162452] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.163007] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.172668] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[10:56:07.172753] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.172784] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.172900] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:45093[m
[36m[10:56:07.172931] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:45093 queryId=1 querySubPlanId = 4[m
[36m[10:56:07.173268] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:42957)})
  WATERMARKASSIGNER(12)
    SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.173375] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.173630] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.174152] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.174780] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.175193] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.175729] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.176359] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.176467] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.176864] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.177421] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.177817] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.178390] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.178967] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.179254] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.179858] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.180416] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.180975] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.181377] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.181936] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.191572] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[10:56:07.191654] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.191693] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.191813] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:33129[m
[36m[10:56:07.191840] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:33129 queryId=1 querySubPlanId = 5[m
[36m[10:56:07.192131] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:42957)})
  WATERMARKASSIGNER(14)
    SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.192243] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.192457] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.193014] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.193603] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.194020] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.194605] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.195254] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.195364] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.195754] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.196322] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.196677] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.197263] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.197831] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.198115] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.198772] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.199330] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.199896] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.200293] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.200839] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.210715] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[10:56:07.210826] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.210845] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.210969] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.36:41269[m
[36m[10:56:07.211000] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.36:41269 queryId=1 querySubPlanId = 6[m
[36m[10:56:07.211307] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:44541)})
  WATERMARKASSIGNER(16)
    SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.211421] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.211608] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.212163] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.212738] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.213142] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.213677] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.214369] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.214482] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.214870] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.215446] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.215842] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.216379] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.216943] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.217345] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.217997] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.218742] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.219446] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.219888] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.220439] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.230057] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[10:56:07.230141] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.230181] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.230347] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:38619[m
[36m[10:56:07.230379] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:38619 queryId=1 querySubPlanId = 7[m
[36m[10:56:07.230777] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:44541)})
  WATERMARKASSIGNER(18)
    SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.230860] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.231042] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.231548] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.232140] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.232557] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.233104] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.233746] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.233858] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.234277] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.234938] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.235380] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.235926] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.236526] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.236816] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.237419] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.237978] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.238629] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.239049] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.239613] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.249321] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[10:56:07.249403] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.249434] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.249552] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:45685[m
[36m[10:56:07.249582] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:45685 queryId=1 querySubPlanId = 8[m
[36m[10:56:07.249874] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:44541)})
  WATERMARKASSIGNER(20)
    SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.249993] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.250282] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.250814] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.251377] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.251782] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.252328] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.252964] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.253074] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.253467] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.254022] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.254445] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.254980] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.255552] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.255839] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.256431] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.257029] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.257599] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.258010] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.258598] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.268254] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=11[m
[36m[10:56:07.268382] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.268403] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.268523] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.39:38971[m
[36m[10:56:07.268552] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.39:38971 queryId=1 querySubPlanId = 9[m
[36m[10:56:07.268927] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(68: {NetworkSinkDescriptor(partition=1::66::0::0;nodeLocation=tcp://192.168.2.31:44541)})
  WATERMARKASSIGNER(22)
    SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:56:07.269007] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.269191] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.269737] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.270402] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.270834] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.271384] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.272031] [D] [thread 129811] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.272141] [D] [thread 129811] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.272538] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.273107] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.273512] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.274052] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.274671] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:56:07.274961] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.275573] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.276141] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.276700] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.277098] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.277747] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.288859] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[10:56:07.288947] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.288980] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.289123] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:43477[m
[36m[10:56:07.289167] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:43477 queryId=1 querySubPlanId = 10[m
[36m[10:56:07.289520] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:34047)})
  SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.32:41617 1::24::0::0})
[m
[36m[10:56:07.289640] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.289847] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.290455] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.291143] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.291653] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.292298] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.293124] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:41617 1::24::0::0}[m
[36m[10:56:07.293426] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.294227] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.295244] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.295977] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.296559] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.297266] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.307439] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:43477 queryId=1 querySubPlanId = 11[m
[36m[10:56:07.307734] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:34047)})
  SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:41831 1::30::0::0})
[m
[36m[10:56:07.307793] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.308087] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.308717] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.309376] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.309858] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.310484] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:07.310572] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.310780] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:07.311816] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:41831 1::30::0::0}[m
[36m[10:56:07.312119] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.312842] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.313839] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.314650] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.315228] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.315842] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.324670] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:43477 queryId=1 querySubPlanId = 12[m
[36m[10:56:07.324946] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:34047)})
  SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:45341 1::36::0::0})
[m
[36m[10:56:07.324997] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.325205] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.325741] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.326309] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.326741] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.327228] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.327861] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:45341 1::36::0::0}[m
[36m[10:56:07.328130] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.328705] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.329251] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.329836] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.330227] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.330796] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.339284] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:43477 queryId=1 querySubPlanId = 13[m
[36m[10:56:07.339558] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:34047)})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:45611 1::42::0::0})
[m
[36m[10:56:07.339612] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.339878] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.340384] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.340959] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.341325] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.341865] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.342482] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:45611 1::42::0::0}[m
[36m[10:56:07.342752] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.343329] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.343915] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.344438] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.344845] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.345341] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.354025] [D] [thread 129811] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[10:56:07.354103] [D] [thread 129811] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:56:07.354160] [D] [thread 129811] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:56:07.354312] [D] [thread 129811] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:43211[m
[36m[10:56:07.354352] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:43211 queryId=1 querySubPlanId = 14[m
[36m[10:56:07.354645] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:34047)})
  SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.36:45379 1::48::0::0})
[m
[36m[10:56:07.354710] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.355092] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.355621] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.356211] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.356707] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.357214] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.357858] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.36:45379 1::48::0::0}[m
[36m[10:56:07.358133] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.358741] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.359286] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.359855] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.360222] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.360760] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.369144] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:43211 queryId=1 querySubPlanId = 15[m
[36m[10:56:07.369424] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:34047)})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.37:43161 1::54::0::0})
[m
[36m[10:56:07.369474] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.369730] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.370177] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.370859] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.371233] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.371769] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.372349] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:43161 1::54::0::0}[m
[36m[10:56:07.372615] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.373187] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.373823] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.374418] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.374867] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.375376] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.384230] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:43211 queryId=1 querySubPlanId = 16[m
[36m[10:56:07.384510] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:34047)})
  SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.38:43409 1::60::0::0})
[m
[36m[10:56:07.384554] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.384734] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.385273] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.385854] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.386263] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.386817] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.387391] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:43409 1::60::0::0}[m
[36m[10:56:07.387655] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.388224] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.388823] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.389337] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.389736] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.390279] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.398823] [D] [thread 129811] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:43211 queryId=1 querySubPlanId = 17[m
[36m[10:56:07.399096] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(71: {NetworkSinkDescriptor(partition=1::69::0::0;nodeLocation=tcp://192.168.2.11:34047)})
  SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.39:39947 1::66::0::0})
[m
[36m[10:56:07.399143] [D] [thread 129811] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:56:07.399340] [D] [thread 129811] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:56:07.399900] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.400420] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.400828] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.401317] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.401942] [D] [thread 129811] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.39:39947 1::66::0::0}[m
[36m[10:56:07.402251] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.402845] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.403474] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.404154] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.404758] [D] [thread 129811] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.405459] [D] [thread 129811] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:56:07.413977] [D] [thread 129811] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 11 queues[m
[36m[10:56:07.443505] [D] [thread 129823] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.443591] [D] [thread 129823] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.443931] [D] [thread 129823] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.444036] [D] [thread 129823] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.444603] [D] [thread 129823] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:56:07.444711] [D] [thread 129823] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.444725] [D] [thread 129823] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.444776] [D] [thread 129823] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.444794] [D] [thread 129823] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.445381] [D] [thread 129823] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:56:07.445968] [D] [thread 129823] [OperatorSerializationUtil.cpp:783] [deserializeWindowOperator] OperatorSerializationUtil::deserializeWindowOperator: SerializableOperator_WindowDetails_DistributionCharacteristic_Distribution_Complete[m
[36m[10:56:07.446074] [D] [thread 129823] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.446086] [D] [thread 129823] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.446132] [D] [thread 129823] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.446148] [D] [thread 129823] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.446555] [D] [thread 129823] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[32m[10:56:07.446787] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[10:56:07.447010] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.447585] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.447657] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.448974] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.451315] [D] [thread 129823] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.451375] [D] [thread 129823] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.451469] [D] [thread 129823] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.451487] [D] [thread 129823] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:56:07.451678] [D] [thread 129823] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:56:07.451707] [D] [thread 129823] [OperatorSerializationUtil.cpp:1885] [deserializeWatermarkStrategyDescriptor] OperatorSerializationUtil:: deserialized field name WrappedNetworkMetrics$timestamp[m
[32m[10:56:07.451995] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[10:56:07.452117] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.453546] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.453611] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.454995] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.458499] [D] [thread 129823] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:56:07.458707] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.460130] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.460409] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[10:56:07.460535] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.461930] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.461994] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.463350] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.467384] [D] [thread 129823] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:56:07.467575] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.469033] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.469211] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[10:56:07.469297] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.470758] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.470825] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.472187] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.476211] [D] [thread 129823] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:56:07.476400] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.477831] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.478016] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[10:56:07.478104] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.479554] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.479624] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.480943] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.484994] [D] [thread 129823] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:56:07.485200] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.486647] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.486827] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[10:56:07.486913] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.488409] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.488474] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.489815] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.492175] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[10:56:07.492325] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.492849] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.492915] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.493321] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.496180] [D] [thread 129823] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:56:07.496382] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.497815] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.498097] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[10:56:07.498245] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.499944] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.500044] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.501414] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.505498] [D] [thread 129823] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:56:07.505744] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.507211] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.507392] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[10:56:07.507478] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.508879] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.508948] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.510332] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.514416] [D] [thread 129823] [OperatorSerializationUtil.cpp:1516] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as LogicalSourceDescriptor[m
[36m[10:56:07.514702] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.516132] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.516288] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 81[m
[36m[10:56:07.516385] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.517780] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.517847] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.519212] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.523382] [D] [thread 129823] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:56:07.523583] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.525124] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.525317] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 82[m
[36m[10:56:07.525405] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.526894] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.526965] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.528306] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.532390] [D] [thread 129823] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:56:07.532584] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.534010] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:56:07.534223] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 83[m
[36m[10:56:07.534313] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.535742] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.535809] [D] [thread 129823] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:56:07.537269] [D] [thread 129823] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:56:07.542268] [D] [thread 129823] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(78: {FileSinkDescriptor()})
  CENTRALWINDOW(72)
    WATERMARKASSIGNER(73)
      SOURCE(81,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    SOURCE(75,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::27::0::0})
    SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::33::0::0})
    SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::39::0::0})
    SOURCE(79,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::45::0::0})
    SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::51::0::0})
    SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::57::0::0})
    SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::63::0::0})
    SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::69::0::0})
[m
[32m[10:56:07.542353] [I] [thread 129823] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 1 [m
[32m[10:56:07.542478] [I] [thread 129823] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
[36m[10:56:07.542818] [D] [thread 129823] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 1[m
Dumping queryPlan: [36m[10:56:07.542945] [D] [thread 129823] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-1-2023-11-01 10:56:07 - 1. LogicalQueryPlan[m
SINK(78: {FileSinkDescriptor()})
  CENTRALWINDOW(72)
    WATERMARKASSIGNER(73)
      SOURCE(81,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    SOURCE(75,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::27::0::0})
    SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::33::0::0})
    SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::39::0::0})
    SOURCE(79,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::45::0::0})
    SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::51::0::0})
    SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::57::0::0})
    SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::63::0::0})
    SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::69::0::0})

[32m[10:56:07.543824] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 84[m
[36m[10:56:07.544028] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:56:07.544076] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.544085] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[10:56:07.544240] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.544258] [D] [thread 129823] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:07.544356] [D] [thread 129823] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:07.544442] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.544675] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 85[m
[32m[10:56:07.544775] [I] [thread 129823] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:56:07.544797] [I] [thread 129823] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:56:07.544815] [I] [thread 129823] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:56:07.544832] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.544857] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.544912] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.544969] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.544984] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.544994] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.545002] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.545026] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.545034] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.545160] [I] [thread 129823] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[36m[10:56:07.546354] [D] [thread 129823] [DefaultPhysicalOperatorProvider.cpp:853] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan before
PhysicalSinkOperator
  CENTRALWINDOW(72)
    PhysicalMultiplexOperator
      WATERMARKASSIGNER(73)
        SOURCE(81,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
      SOURCE(75,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::27::0::0})
      SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::33::0::0})
      SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::39::0::0})
      SOURCE(79,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::45::0::0})
      SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::51::0::0})
      SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::57::0::0})
      SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::63::0::0})
      SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::69::0::0})
[m
[36m[10:56:07.546570] [D] [thread 129823] [DefaultPhysicalOperatorProvider.cpp:784] [lowerThreadLocalWindowOperator] Create Thread local window aggregation[m
[32m[10:56:07.549754] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 86[m
[32m[10:56:07.550041] [I] [thread 129823] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:56:07.550090] [I] [thread 129823] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:56:07.550106] [I] [thread 129823] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:56:07.550125] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.550300] [I] [thread 129823] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.550608] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 87[m
[32m[10:56:07.550778] [I] [thread 129823] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:56:07.550823] [I] [thread 129823] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:56:07.550833] [I] [thread 129823] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:56:07.550845] [I] [thread 129823] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:56:07.550919] [I] [thread 129823] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.551131] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 88[m
[36m[10:56:07.551271] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.551321] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.551405] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.551429] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.551443] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.551514] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.551528] [D] [thread 129823] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:07.551615] [D] [thread 129823] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:07.551650] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[10:56:07.552199] [D] [thread 129823] [DefaultPhysicalOperatorProvider.cpp:937] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan after
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          WATERMARKASSIGNER(73)
            SOURCE(81,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
          SOURCE(75,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::27::0::0})
          SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::33::0::0})
          SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::39::0::0})
          SOURCE(79,,NetworkSourceDescriptor{tcp://192.168.2.30:42957 1::45::0::0})
          SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::51::0::0})
          SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::57::0::0})
          SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::63::0::0})
          SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:44541 1::69::0::0})
[m
[36m[10:56:07.552268] [D] [thread 129823] [WindowOperatorHandler.hpp:95] [~WindowOperatorHandler] ~WindowOperatorHandler() 0[m
[32m[10:56:07.552463] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 89[m
[36m[10:56:07.552583] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.552632] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.552759] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.552784] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.552818] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.552936] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.552952] [D] [thread 129823] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:56:07.553082] [D] [thread 129823] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:56:07.553132] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.553306] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 90[m
[36m[10:56:07.553518] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.553559] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.553650] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.553661] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.553685] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.553772] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.553791] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.553907] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[10:56:07.554041] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.554091] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.554181] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.554218] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.554271] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.554397] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.554417] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.554522] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[10:56:07.554660] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.554713] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.554800] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.554813] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.554835] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.554980] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.555000] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.555066] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 93[m
[36m[10:56:07.555227] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.555267] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.555361] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.555373] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.555385] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.555495] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.555560] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.555631] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[10:56:07.555767] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.555836] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.555906] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.556001] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.556035] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.556179] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.556199] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.556298] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[10:56:07.556428] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.556477] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.556572] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.556596] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.556610] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.556759] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.556780] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.556848] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 96[m
[36m[10:56:07.556979] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.557079] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.557188] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.557212] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.557225] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.557372] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.557391] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.557498] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[10:56:07.557591] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.557676] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.557738] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.557798] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.557820] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.557932] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.557984] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:56:07.558064] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 98[m
[36m[10:56:07.558250] [D] [thread 129823] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:56:07.558332] [D] [thread 129823] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:56:07.558401] [I] [thread 129823] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:56:07.558410] [I] [thread 129823] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:56:07.558420] [I] [thread 129823] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:56:07.558525] [D] [thread 129823] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:56:07.558590] [D] [thread 129823] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
Dumping queryPlan: [36m[10:56:07.558912] [D] [thread 129823] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-1-2023-11-01 10:56:07 - 2. PhysicalQueryPlan[m
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          PhysicalWatermarkAssignmentOperator
            PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator

[36m[10:56:07.559250] [D] [thread 129823] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 1[m
[32m[10:56:07.559684] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 84[m
[36m[10:56:07.559927] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[10:56:07.559960] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.559969] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.560448] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 99[m
[36m[10:56:07.560550] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedTumblingWindowSink as new root of the plan.[m
[36m[10:56:07.560566] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.560573] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.560685] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 100[m
[36m[10:56:07.560809] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedSliceMergingOperator as new root of the plan.[m
[36m[10:56:07.560968] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.561025] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.561281] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 101[m
[36m[10:56:07.561395] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedThreadLocalPreAggregationOperator as new root of the plan.[m
[36m[10:56:07.561411] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.561418] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.561644] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 89[m
[36m[10:56:07.561771] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalWatermarkAssignmentOperator as new root of the plan.[m
[36m[10:56:07.561810] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.561822] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.562004] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 90[m
[36m[10:56:07.562281] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.562316] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.562327] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.562485] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[10:56:07.562618] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.562701] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.562715] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.562892] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[10:56:07.563082] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.563113] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.563124] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.563281] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 93[m
[36m[10:56:07.563411] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.563428] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.563479] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.563669] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[10:56:07.563848] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.563877] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.563886] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.563996] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[10:56:07.564114] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.564183] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.564194] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.564338] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 96[m
[36m[10:56:07.564477] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.564517] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.564528] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.564662] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[10:56:07.564797] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.564827] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.564852] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:56:07.565000] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 98[m
[36m[10:56:07.565139] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:56:07.565181] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
Dumping pipelineQueryPlan: [36m[10:56:07.565191] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:07.565279] [D] [thread 129823] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-1-2023-11-01 10:56:07 - 3. AfterPipelinedQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 1, no. pipelines: 13
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 6, 7, 8, 9, 10, 11, 12, 13
- Queryplan: PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: OperatorPipelineType, Successors: 3, Predecessors: 5
- Queryplan: PhysicalWatermarkAssignmentOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 4, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 10, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 11, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 12, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 13, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[10:56:07.566086] [D] [thread 129823] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[10:56:07.566131] [D] [thread 129823] [Node.cpp:458] [getAllLeafNodes] Node: Inserting leaf node to the collection[m
[36m[10:56:07.566175] [D] [thread 129823] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[10:56:07.566319] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 102[m
[32m[10:56:07.566720] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 103[m
[36m[10:56:07.566824] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalScanOperator as new root of the plan.[m
[36m[10:56:07.566880] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.566891] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:56:07.566919] [D] [thread 129823] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[10:56:07.566931] [D] [thread 129823] [Node.cpp:452] [getAllLeafNodes] Node: found no children. Returning itself as leaf.[m
[36m[10:56:07.566951] [D] [thread 129823] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[10:56:07.567013] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 104[m
[36m[10:56:07.567068] [D] [thread 129823] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalScanOperator as new root of the plan.[m
[36m[10:56:07.567175] [D] [thread 129823] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:56:07.567188] [D] [thread 129823] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
Dumping pipelineQueryPlan: [36m[10:56:07.567214] [D] [thread 129823] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[10:56:07.567251] [D] [thread 129823] [Node.cpp:452] [getAllLeafNodes] Node: found no children. Returning itself as leaf.[m
[36m[10:56:07.567272] [D] [thread 129823] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[10:56:07.567317] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 105[m
[36m[10:56:07.567464] [D] [thread 129823] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-1-2023-11-01 10:56:07 - 4. AfterAddScanAndEmitPhase[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 1, no. pipelines: 13
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalEmitOperator

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 6, 7, 8, 9, 10, 11, 12, 13
- Queryplan: PhysicalScanOperator
  PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: OperatorPipelineType, Successors: 3, Predecessors: 5
- Queryplan: PhysicalScanOperator
  PhysicalWatermarkAssignmentOperator
    PhysicalEmitOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 4, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 10, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 11, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 12, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 13, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[10:56:07.568428] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedSliceMergingOperator[m
[32m[10:56:07.568547] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedSliceMergingOperator to NautilusOperator.[m
[32m[10:56:07.568812] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[10:56:07.569360] [I] [thread 129823] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[32m[10:56:07.570798] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedTumblingWindowSink[m
[32m[10:56:07.570915] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedTumblingWindowSink to NautilusOperator.[m
[32m[10:56:07.570959] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalEmitOperator[m
[32m[10:56:07.570974] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalEmitOperator to NautilusOperator.[m
[36m[10:56:07.572035] [D] [thread 129823] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalKeyedSliceMergingOperator as root operator.[m
[32m[10:56:07.572279] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5836716186103210354[m
[32m[10:56:07.572789] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalScanOperator[m
[32m[10:56:07.572873] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalScanOperator to NautilusOperator.[m
[32m[10:56:07.573585] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedThreadLocalPreAggregationOperator[m
[32m[10:56:07.573664] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedThreadLocalPreAggregationOperator to NautilusOperator.[m
[32m[10:56:07.573737] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[10:56:07.573850] [I] [thread 129823] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[32m[10:56:07.574398] [I] [thread 129823] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:56:07.575271] [D] [thread 129823] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalScanOperator as root operator.[m
[32m[10:56:07.575428] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 281473495391192[m
[32m[10:56:07.575751] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalScanOperator[m
[32m[10:56:07.575814] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalScanOperator to NautilusOperator.[m
[32m[10:56:07.576478] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalWatermarkAssignmentOperator[m
[32m[10:56:07.576560] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalWatermarkAssignmentOperator to NautilusOperator.[m
[32m[10:56:07.576821] [I] [thread 129823] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[32m[10:56:07.577216] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalEmitOperator[m
[32m[10:56:07.577271] [I] [thread 129823] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalEmitOperator to NautilusOperator.[m
[36m[10:56:07.577837] [D] [thread 129823] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalScanOperator as root operator.[m
[32m[10:56:07.578036] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 281473495391192[m
[36m[10:56:07.578347] [D] [thread 129823] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 1[m
[32m[10:56:07.578946] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 106[m
[32m[10:56:07.579546] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 107[m
[32m[10:56:07.579923] [I] [thread 129823] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 108[m
[36m[10:56:07.580416] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:308] [createSourceDescriptor] PhysicalSourceConfig: create Actual source descriptor with physical source: PhysicalSource Name: WrappedNetworkMetrics_phLogicalSource NameWrappedNetworkMetricsSource TypeMonitoringSource Type => {
waitTimeInMs:1000metricCollectorType:NETWORK_COLLECTOR
} MONITORING_SOURCE [m
[36m[10:56:07.580784] [D] [thread 129823] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  84[m
[32m[10:56:07.580923] [I] [thread 129823] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[10:56:07.581721] [D] [thread 129823] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out[m
[36m[10:56:07.582993] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:291] [processOperatorPipeline] Adding current pipeline: 3 as a predecessor to its child pipeline: 2[m
[36m[10:56:07.583541] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:291] [processOperatorPipeline] Adding current pipeline: 4 as a predecessor to its child pipeline: 3[m
[32m[10:56:07.583709] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:238] [createDataSource] ConvertLogicalToPhysicalSource: Creating monitoring source[m
[32m[10:56:07.583868] [I] [thread 129823] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:56:07.584609] [I] [thread 129823] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.585264] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  90 : Init Data Source with schema  [m
[32m[10:56:07.585631] [I] [thread 129823] [MonitoringSource.cpp:54] [MonitoringSource] MonitoringSources: Created with wait time 1000 and schema:node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)
[m
[36m[10:56:07.585746] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 90 as a predecessor to its child pipeline: 4[m
[32m[10:56:07.586215] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:56:07.586835] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  27 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.587380] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 27 as a predecessor to its child pipeline: 3[m
[32m[10:56:07.587765] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:56:07.588212] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.588783] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 33 as a predecessor to its child pipeline: 3[m
[32m[10:56:07.589058] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:56:07.589522] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  39 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.589989] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 39 as a predecessor to its child pipeline: 3[m
[32m[10:56:07.590173] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:56:07.590705] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  45 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.591275] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 45 as a predecessor to its child pipeline: 3[m
[32m[10:56:07.591532] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:56:07.592010] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.592526] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 51 as a predecessor to its child pipeline: 3[m
[32m[10:56:07.592708] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:56:07.593176] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  57 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.593729] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 57 as a predecessor to its child pipeline: 3[m
[32m[10:56:07.593916] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:56:07.594447] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  63 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.594970] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 63 as a predecessor to its child pipeline: 3[m
[32m[10:56:07.595159] [I] [thread 129823] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:56:07.595671] [D] [thread 129823] [DataSource.cpp:75] [DataSource] DataSource  69 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:56:07.596213] [D] [thread 129823] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 69 as a predecessor to its child pipeline: 3[m
[36m[10:56:07.597290] [D] [thread 129823] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 1[m
[36m[10:56:07.597482] [D] [thread 129823] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  1  as a singleton[m
[36m[10:56:07.597502] [D] [thread 129823] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=1[m
[36m[10:56:07.597609] [D] [thread 129823] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 9[m
[36m[10:56:07.597635] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  90  not found. Creating new element with with qep [m
[36m[10:56:07.597992] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  27  not found. Creating new element with with qep [m
[36m[10:56:07.598069] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[10:56:07.598093] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  39  not found. Creating new element with with qep [m
[36m[10:56:07.598112] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  45  not found. Creating new element with with qep [m
[36m[10:56:07.598132] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[10:56:07.598151] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  57  not found. Creating new element with with qep [m
[36m[10:56:07.598171] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  63  not found. Creating new element with with qep [m
[36m[10:56:07.598237] [D] [thread 129823] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  69  not found. Creating new element with with qep [m
[36m[10:56:07.598274] [D] [thread 129823] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 1  pair queryId= 1  subplanId= 1[m
2023-11-01 10:56:07.598 setup: queryId=1, querySubPlanId=1; 
[36m[10:56:07.598864] [D] [thread 129823] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=1[m
[36m[10:56:07.605765] [D] [thread 129823] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:56:07.613432] [D] [thread 129823] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff641deb50[m
[36m[10:56:07.614656] [D] [thread 129823] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:56:07.624662] [D] [thread 129823] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:56:07.626471] [D] [thread 129823] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:56:07.639938] [D] [thread 129823] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:56:07.641472] [D] [thread 129823] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:56:07.645675] [D] [thread 129823] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:56:07.646871] [D] [thread 129823] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:56:07.649604] [D] [thread 129823] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:56:07.650003] [D] [thread 129823] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff641fcf70[m
[36m[10:56:07.650060] [D] [thread 129823] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff64200fd0[m
[36m[10:56:07.651012] [D] [thread 129823] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:56:07.655577] [D] [thread 129823] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:56:07.655942] [D] [thread 129823] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff64212de0[m
[36m[10:56:07.656010] [D] [thread 129823] [TraceContext.cpp:231] [apply] Iterations: 6[m
[36m[10:56:07.673265] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block5($0_125,$0_124,$0_4,$0_5,$0_19,$0_18,$0_15,$0_9,$0_22,$0_21,$0_20,$0_12,$0_6,)	[m
[36m[10:56:07.675475] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block16($1_116,$1_117,$1_118,$1_119,$1_120,$1_121,$1_122,$1_123,$1_124,$1_125,$1_4,$1_11,$1_0,$1_8,$1_3,$1_5,$1_126,$1_7,$1_127,$1_128,)	[m
[36m[10:56:07.676950] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 3 JMP	$0_0	Block5($3_103,$3_104,$3_105,$3_106,$3_107,$3_108,$3_109,$3_110,$3_1,$3_111,$3_113,$3_114,$3_115,)	[m
[36m[10:56:07.678876] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block25($4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,$4_115,$4_116,$4_117,$4_118,$4_119,$4_120,$4_121,$4_122,$4_123,$4_2,$4_124,$4_6,$4_125,$4_126,$4_127,)	[m
[36m[10:56:07.682426] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 10 JMP	$0_0	Block22($10_127,$10_128,$10_129,$10_130,$10_131,$10_132,$10_133,$10_134,$10_135,$10_136,$10_137,$10_138,$10_139,$10_140,$10_141,$10_142,$10_143,$10_144,$10_145,$10_146,$10_147,$10_148,)	[m
[36m[10:56:07.684595] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 12 JMP	$0_0	Block23($12_111,$12_112,$12_113,$12_114,$12_115,$12_116,$12_117,$12_118,$12_119,$12_120,$12_121,$12_122,$12_123,$12_124,$12_125,$12_126,$12_128,$12_129,$12_130,$12_131,)	[m
[36m[10:56:07.686359] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 14 JMP	$0_0	Block24($14_105,$14_106,$14_107,$14_108,$14_109,$14_110,$14_111,$14_112,$14_113,$14_114,$14_115,$14_116,$14_117,$14_3,$14_119,$14_0,$14_120,$14_5,$14_121,$14_122,)	[m
[36m[10:56:07.687518] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 24 JMP	$0_0	Block16($24_103,$24_104,$24_105,$24_106,$24_107,$24_108,$24_109,$24_110,$24_111,$24_112,$14_8,$24_113,$24_115,$24_116,$24_117,$24_118,$24_119,$24_120,$24_121,$24_122,)	[m
[36m[10:56:07.688977] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 15 JMP	$0_0	Block24($15_101,$15_102,$15_103,$15_104,$15_105,$15_106,$15_107,$15_108,$15_109,$15_110,$15_111,$15_112,$15_113,$15_114,$15_115,$15_116,$15_117,$15_118,$15_119,$15_120,)	[m
[36m[10:56:07.690818] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 13 JMP	$0_0	Block23($13_101,$13_102,$13_103,$13_104,$13_105,$13_106,$13_107,$13_108,$13_109,$13_110,$13_111,$13_112,$13_113,$13_114,$13_115,$13_116,$13_117,$13_118,$13_119,$13_120,)	[m
[36m[10:56:07.692762] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block25($11_104,$11_105,$11_106,$11_107,$11_108,$11_109,$11_110,$11_111,$11_112,$11_113,$11_114,$11_115,$11_116,$11_117,$11_118,$11_119,$11_120,$11_121,$11_2,$11_123,$11_124,$11_125,)	[m
[36m[10:56:07.694555] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 9 JMP	$0_0	Block22($9_101,$9_102,$9_103,$9_104,$9_105,$9_106,$9_107,$9_108,$9_109,$9_110,$9_111,$9_112,$9_113,$9_114,$9_115,$9_116,$9_117,$9_118,$9_119,$9_120,$9_121,$9_122,)	[m
[36m[10:56:07.697141] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 2 JMP	$0_0	Block21($2_118,$2_119,$2_120,$2_123,$2_2,$2_124,$2_121,$2_122,$2_9,$2_16,$2_5,$2_13,$2_8,$2_10,$2_124,$2_126,$2_127,$2_12,)	[m
[36m[10:56:07.701800] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 17 JMP	$0_0	Block26($17_109,$17_110,$17_5,$17_111,$17_112,$17_113,$17_9,$17_114,$17_115,$17_116,$17_117,$17_118,$17_119,$17_120,$17_123,$17_124,$17_7,$17_125,)	[m
[36m[10:56:07.703464] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 19 JMP	$0_0	Block27($19_105,$19_106,$19_107,$19_108,$19_109,$19_110,$19_111,$19_112,$19_113,$19_114,$19_115,$19_3,$19_117,$19_0,$19_118,$19_119,$19_120,$19_5,)	[m
[36m[10:56:07.704628] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 27 JMP	$0_0	Block21($27_103,$27_104,$27_105,$27_106,$27_107,$27_108,$27_109,$27_110,$19_8,$27_111,$27_113,$27_114,$27_115,$27_116,$27_117,$27_118,$27_119,$27_120,)	[m
[36m[10:56:07.706017] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 20 JMP	$0_0	Block27($20_101,$20_102,$20_103,$20_104,$20_105,$20_106,$20_107,$20_108,$20_109,$20_110,$20_111,$20_112,$20_113,$20_114,$20_115,$20_116,$20_117,$20_118,)	[m
[36m[10:56:07.707776] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 18 JMP	$0_0	Block26($18_101,$18_102,$18_103,$18_104,$18_105,$18_106,$18_107,$18_108,$18_109,$18_110,$18_111,$18_112,$18_113,$18_114,$18_115,$18_116,$18_117,$18_118,)	[m
[36m[10:56:07.840682] [D] [thread 129823] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[10:56:07.842222] [I] [thread 129823] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 241.322 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Trace Generation:	70.1047 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_IR Generation:	38.9191 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Compilation:	132.298 ms[m
[36m[10:56:07.910180] [D] [thread 129823] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff641ea400[m
[36m[10:56:07.915316] [D] [thread 129823] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:56:07.919591] [D] [thread 129823] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:56:07.920025] [D] [thread 129823] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff642a2c40[m
[36m[10:56:07.920143] [D] [thread 129823] [TraceContext.cpp:231] [apply] Iterations: 3[m
[36m[10:56:07.926319] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block9($0_116,$0_115,$0_6,$0_8,$0_4,$0_16,$0_14,$0_13,$0_15,)	[m
[36m[10:56:07.929568] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block12($1_165,$1_166,$1_167,$1_168,$1_169,$1_170,$1_171,$1_38,$1_5,$1_61,$1_63,$1_65,$1_172,$1_173,)	[m
[36m[10:56:07.931820] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 5 JMP	$0_0	Block10($5_101,$5_102,$5_103,$5_104,$5_105,$5_106,$5_107,$5_108,$5_109,$5_110,$5_111,$5_112,$5_113,$5_114,)	[m
[36m[10:56:07.933695] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 7 JMP	$0_0	Block11($7_116,$7_117,$7_118,$7_119,$7_120,$7_121,$7_122,$7_123,$7_0,$7_127,$7_128,)	[m
[36m[10:56:07.935217] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block9($11_117,$11_118,$11_119,$11_120,$11_121,$7_34,$11_122,$11_126,$11_127,)	[m
[36m[10:56:07.936480] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 8 JMP	$0_0	Block11($8_101,$8_102,$8_103,$8_104,$8_105,$8_106,$8_107,$8_108,$8_109,$8_110,$8_111,)	[m
[36m[10:56:07.938040] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 6 JMP	$0_0	Block12($6_104,$6_105,$6_106,$6_107,$6_108,$6_109,$6_110,$6_111,$6_112,$6_113,$6_114,$6_2,$6_115,$6_116,)	[m
[36m[10:56:07.939377] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block10($4_101,$4_102,$4_103,$4_104,$4_105,$4_106,$4_107,$4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,)	[m
[36m[10:56:07.992897] [D] [thread 129823] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[10:56:07.993952] [I] [thread 129823] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 106.172 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Trace Generation:	37.7873 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_IR Generation:	15.8031 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Compilation:	52.582 ms[m
[36m[10:56:08.060489] [D] [thread 129823] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff641fa7e0[m
[36m[10:56:08.068392] [D] [thread 129823] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:56:08.069209] [D] [thread 129823] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff642e7020[m
[36m[10:56:08.069427] [D] [thread 129823] [TraceContext.cpp:231] [apply] Iterations: 2[m
[36m[10:56:08.077408] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block7($0_116,$0_115,$0_10,$0_8,$0_6,$0_11,$0_13,$0_16,$0_14,$0_4,$0_12,$0_15,)	[m
[36m[10:56:08.082110] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 3 JMP	$0_0	Block8($3_101,$3_102,$3_103,$3_104,$3_127,$3_105,$3_106,$3_107,$3_108,$3_109,$3_110,$3_111,$3_112,$3_113,$3_114,$3_115,$3_116,$3_117,$3_118,$3_119,$3_120,$3_121,$3_122,$3_123,$3_124,$3_125,$3_126,$3_127,$3_128,$3_129,$3_130,)	[m
[36m[10:56:08.087533] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 5 JMP	$0_0	Block9($5_109,$5_110,$5_5,$5_111,$5_112,$5_9,$5_113,$5_114,$5_115,$5_117,$5_7,$5_119,)	[m
[36m[10:56:08.088896] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 9 JMP	$0_0	Block7($9_103,$9_104,$9_105,$9_106,$9_107,$9_108,$9_109,$5_12,$9_110,$9_112,$9_113,$9_114,)	[m
[36m[10:56:08.090326] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 6 JMP	$0_0	Block9($6_101,$6_102,$6_103,$6_104,$6_105,$6_106,$6_107,$6_108,$6_109,$6_110,$6_111,$6_112,)	[m
[36m[10:56:08.092792] [D] [thread 129823] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block8($4_101,$4_102,$4_103,$4_104,$4_105,$4_106,$4_107,$4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,$4_115,$4_116,$4_117,$4_118,$4_119,$4_120,$4_121,$4_122,$4_123,$4_124,$4_125,$4_126,$4_127,$4_128,$4_129,$4_130,$4_131,)	[m
[36m[10:56:08.180331] [D] [thread 129823] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[10:56:08.181545] [I] [thread 129823] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 161.101 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-4_Trace Generation:	56.1973 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-4_IR Generation:	19.428 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-4_Compilation:	85.4753 ms[m
2023-11-01 10:56:08.219 start: queryId=1, querySubPlanId=1; 
[36m[10:56:08.219618] [D] [thread 129823] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=1[m
[36m[10:56:08.219724] [D] [thread 129823] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=1 pipe=2[m
[36m[10:56:08.219910] [D] [thread 129823] [KeyedSliceMergingHandler.cpp:33] [start] start GlobalSliceMergingHandler[m
[36m[10:56:08.220133] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.220661] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.221529] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 1 stage id: 2[m
[36m[10:56:08.221939] [D] [thread 129823] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 2[m
[36m[10:56:08.222301] [D] [thread 129823] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=1 pipe=3[m
[36m[10:56:08.222402] [D] [thread 129823] [AbstractSlicePreAggregationHandler.cpp:110] [start] start AbstractSlicePreAggregationHandler[m
[36m[10:56:08.222448] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.222606] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.222974] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[10:56:08.223309] [D] [thread 129823] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[10:56:08.223483] [D] [thread 129823] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=1 pipe=4[m
[36m[10:56:08.223561] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.223678] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.224013] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 4 belonging to query id: 1 stage id: 4[m
[36m[10:56:08.224128] [D] [thread 129823] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 4[m
[36m[10:56:08.224604] [D] [thread 129823] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::27::0::0 from 192.168.2.30[m
[36m[10:56:08.224977] [D] [thread 129823] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::27::0::0=1[m
[36m[10:56:08.225034] [D] [thread 129823] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff641d0ea0  started successfully[m
[36m[10:56:08.225099] [D] [thread 129823] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.30[m
[36m[10:56:08.225163] [D] [thread 129823] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[10:56:08.225180] [D] [thread 129823] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff641d19a0  started successfully[m
[36m[10:56:08.225214] [D] [thread 129823] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::39::0::0 from 192.168.2.30[m
[36m[10:56:08.225252] [D] [thread 129823] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::39::0::0=1[m
[36m[10:56:08.225278] [D] [thread 129823] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff641d2190  started successfully[m
[36m[10:56:08.225310] [D] [thread 129823] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::45::0::0 from 192.168.2.30[m
[36m[10:56:08.225355] [D] [thread 129823] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::45::0::0=1[m
[36m[10:56:08.225368] [D] [thread 129823] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff641d2980  started successfully[m
[36m[10:56:08.225397] [D] [thread 129823] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[10:56:08.225433] [D] [thread 129823] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[10:56:08.225450] [D] [thread 129823] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff641d3170  started successfully[m
[36m[10:56:08.225480] [D] [thread 129823] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::57::0::0 from 192.168.2.31[m
[36m[10:56:08.225516] [D] [thread 129823] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::57::0::0=1[m
[36m[10:56:08.225529] [D] [thread 129823] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff641d4620  started successfully[m
[36m[10:56:08.225557] [D] [thread 129823] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::63::0::0 from 192.168.2.31[m
[36m[10:56:08.225591] [D] [thread 129823] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::63::0::0=1[m
[36m[10:56:08.225604] [D] [thread 129823] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff641d5f00  started successfully[m
[36m[10:56:08.225631] [D] [thread 129823] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::69::0::0 from 192.168.2.31[m
[36m[10:56:08.225668] [D] [thread 129823] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::69::0::0=1[m
[36m[10:56:08.225690] [D] [thread 129823] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff641d7890  started successfully[m
[36m[10:56:08.225751] [D] [thread 129823] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.225848] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.226003] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.226455] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:56:08.226633] [D] [thread 129823] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[10:56:08.226806] [D] [thread 129823] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.226828] [D] [thread 129823] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff641d0ea0  started successfully[m
[36m[10:56:08.226866] [D] [thread 129823] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.226935] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.227067] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.227433] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:56:08.227691] [D] [thread 129823] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[10:56:08.227845] [D] [thread 129823] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.227868] [D] [thread 129823] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff641d19a0  started successfully[m
[36m[10:56:08.227903] [D] [thread 129823] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.227972] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.228087] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.228434] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:56:08.228684] [D] [thread 129823] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[10:56:08.228862] [D] [thread 129823] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.228903] [D] [thread 129823] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff641d2190  started successfully[m
[36m[10:56:08.228948] [D] [thread 129823] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.229020] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.229135] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.229490] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:56:08.229608] [D] [thread 129823] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[10:56:08.229741] [D] [thread 129823] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.229759] [D] [thread 129823] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff641d2980  started successfully[m
[36m[10:56:08.229791] [D] [thread 129823] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.229858] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.229962] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.230319] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:56:08.230428] [D] [thread 129823] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[10:56:08.230564] [D] [thread 129823] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.230584] [D] [thread 129823] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff641d3170  started successfully[m
[36m[10:56:08.230615] [D] [thread 129823] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.230674] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.230784] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.231070] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[10:56:08.231177] [D] [thread 129823] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[10:56:08.231292] [D] [thread 129823] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.231326] [D] [thread 129823] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff641d4620  started successfully[m
[36m[10:56:08.231360] [D] [thread 129823] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.231413] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.231497] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.231731] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[10:56:08.231822] [D] [thread 129823] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[10:56:08.231920] [D] [thread 129823] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.231942] [D] [thread 129823] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff641d5f00  started successfully[m
[36m[10:56:08.231971] [D] [thread 129823] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.232019] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.232097] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[10:56:08.232325] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::69::0::0[m
[36m[10:56:08.232411] [D] [thread 129823] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::69::0::0[m
[36m[10:56:08.232513] [D] [thread 129823] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0[m
[36m[10:56:08.232536] [D] [thread 129823] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff641d7890  started successfully[m
[36m[10:56:08.232661] [D] [thread 129823] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[10:56:08.232983] [D] [thread 129823] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  1  succeeded[m
[36m[10:56:08.233108] [D] [thread 129823] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[10:56:08.312021] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:08.616030] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:08.616387] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:09.617659] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:09.815410] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:09.815728] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:09.816887] [D] [thread 129890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:09.817008] [I] [thread 129890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:09.817029] [I] [thread 129890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:09.817231] [I] [thread 129890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:09.817253] [I] [thread 129890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:10.085538] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:10.085896] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:11.087267] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:11.993192] [D] [thread 129820] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[10:56:11.993336] [I] [thread 129820] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[10:56:11.993431] [D] [thread 129820] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[10:56:11.995541] [D] [thread 129820] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[10:56:11.995644] [I] [thread 129820] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[36m[10:56:11.995713] [D] [thread 129820] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=0) REGISTERED[m
[36m[10:56:12.003216] [D] [thread 129820] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[10:56:12.003335] [I] [thread 129820] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[36m[10:56:12.003417] [D] [thread 129820] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=0) REGISTERED[m
[36m[10:56:12.009697] [D] [thread 129820] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[10:56:12.009821] [I] [thread 129820] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[10:56:12.009910] [D] [thread 129820] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[10:56:12.012391] [D] [thread 129820] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[10:56:12.012486] [I] [thread 129820] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[36m[10:56:12.012551] [D] [thread 129820] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=0) REGISTERED[m
[36m[10:56:12.017515] [D] [thread 129820] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): ClientAnnouncement received for channel 0:1::69::0::0[m
[32m[10:56:12.017614] [I] [thread 129820] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::69::0::0(threadId=0) Data[m
[36m[10:56:12.017681] [D] [thread 129820] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::69::0::0(threadId=0) REGISTERED[m
[36m[10:56:12.020288] [D] [thread 129820] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[10:56:12.020387] [I] [thread 129820] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[36m[10:56:12.020457] [D] [thread 129820] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=0) REGISTERED[m
[36m[10:56:12.025237] [D] [thread 129820] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): ClientAnnouncement received for channel 0:1::63::0::0[m
[32m[10:56:12.025354] [I] [thread 129820] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=0) Data[m
[36m[10:56:12.025438] [D] [thread 129820] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=0) REGISTERED[m
[36m[10:56:12.088585] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:12.204433] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:12.204926] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:12.206438] [D] [thread 129900] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:12.206533] [I] [thread 129900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:12.206552] [I] [thread 129900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:12.206669] [I] [thread 129900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:12.206682] [I] [thread 129900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:12.420078] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:12.420447] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:13.118742] [D] [thread 129811] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[10:56:13.118845] [D] [thread 129811] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[10:56:13.119531] [D] [thread 129811] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[10:56:13.119706] [D] [thread 129811] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[10:56:13.119756] [D] [thread 129811] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[10:56:13.119919] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[10:56:13.120005] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:39397 queryId=1[m
[36m[10:56:13.125314] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.32[m
[36m[10:56:13.125402] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:32925 queryId=1[m
[36m[10:56:13.129999] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.33[m
[36m[10:56:13.130083] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:34475 queryId=1[m
[36m[10:56:13.134828] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.34[m
[36m[10:56:13.134905] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:45093 queryId=1[m
[36m[10:56:13.139608] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.35[m
[36m[10:56:13.139690] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:33129 queryId=1[m
[36m[10:56:13.144341] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.36[m
[36m[10:56:13.144466] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.36:41269 queryId=1[m
[36m[10:56:13.149186] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[10:56:13.149270] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:38619 queryId=1[m
[36m[10:56:13.153924] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[10:56:13.154008] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:45685 queryId=1[m
[36m[10:56:13.158753] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=11 and IP=192.168.2.39[m
[36m[10:56:13.158830] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.39:38971 queryId=1[m
[36m[10:56:13.163489] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.30[m
[36m[10:56:13.163572] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:43477 queryId=1[m
[36m[10:56:13.168197] [D] [thread 129811] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.31[m
[36m[10:56:13.168323] [D] [thread 129811] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:43211 queryId=1[m
[36m[10:56:13.172947] [D] [thread 129811] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 11 queues[m
[36m[10:56:13.176067] [D] [thread 129872] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[10:56:13.176152] [D] [thread 129872] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[10:56:13.176244] [D] [thread 129872] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  1   1[m
[36m[10:56:13.176527] [D] [thread 129872] [QueryManagerLifecycle.cpp:198] [startQuery] AbstractQueryManager: start source  0xffff641d0590  str= MonitoringSource(SCHEMA(node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)))[m
[36m[10:56:13.176563] [D] [thread 129872] [DataSource.cpp:129] [start] DataSource  90 : start source[m
[36m[10:56:13.176624] [D] [thread 129872] [DataSource.cpp:139] [start] DataSource 90: Spawn thread[m
[33m[1m[10:56:13.176824] [W] [thread 129903] [DataSource.cpp:157] [operator()] Use default affinity for source[m
[36m[10:56:13.176986] [D] [thread 129872] [QueryManagerLifecycle.cpp:202] [startQuery] AbstractQueryManager: source  0xffff641d0590  started successfully[m
[36m[10:56:13.177004] [D] [thread 129903] [DataSource.cpp:414] [runningRoutineWithGatheringInterval] DataSource 90: Running Data Source of type=MONITORING_SOURCE interval=0[m
[36m[10:56:13.177024] [D] [thread 129903] [DataSource.cpp:419] [runningRoutineWithGatheringInterval] DataSource: the user specify to produce 18446744073709551615 buffers[m
[36m[10:56:13.177077] [D] [thread 129872] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1698836173177[m
[36m[10:56:13.177093] [D] [thread 129872] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  1  succeeded[m
[36m[10:56:13.177112] [D] [thread 129872] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[10:56:13.279352] [D] [thread 129811] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[10:56:13.279458] [D] [thread 129811] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[10:56:13.280261] [I] [thread 129811] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[10:56:13.280443] [D] [thread 129811] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:56:13.303867] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836173000-1698836174000[m
[36m[10:56:13.305418] [D] [thread 129821] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1698836173305[m
[36m[10:56:13.421610] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:14.114789] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836174000-1698836175000[m
[36m[10:56:14.422811] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:14.482270] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:14.483099] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:14.483790] [D] [thread 129906] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:14.483891] [I] [thread 129906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:14.483910] [I] [thread 129906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:14.484009] [I] [thread 129906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:14.484034] [I] [thread 129906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:14.668727] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:14.669195] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:15.115252] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836175000-1698836176000[m
[36m[10:56:15.205899] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836173000-1698836174000 [m
[36m[10:56:15.206821] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836173000-1698836174000-1[m
[36m[10:56:15.206918] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836173000-1698836174000[m
[36m[10:56:15.207019] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836173000-1698836174000[m
[36m[10:56:15.207123] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:15.210273] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836173000,1698836174000,6,5844329749,1698836175207
1698836173000,1698836174000,7,26897058230,1698836175207
1698836173000,1698836174000,5,735049068,1698836175207
1698836173000,1698836174000,8,16371018854,1698836175207
1698836173000,1698836174000,11,316809971,1698836175207
1698836173000,1698836174000,9,298752722,1698836175207
1698836173000,1698836174000,10,325986461,1698836175207
1698836173000,1698836174000,4,2128474552,1698836175207
1698836173000,1698836174000,1,34435440,1698836175207
[m
[36m[10:56:15.670415] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:16.119847] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836176000-1698836177000[m
[36m[10:56:16.218746] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836174000-1698836175000 [m
[36m[10:56:16.219655] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836174000-1698836175000-2[m
[36m[10:56:16.219768] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836174000-1698836175000[m
[36m[10:56:16.219848] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836174000-1698836175000[m
[36m[10:56:16.219976] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:16.220008] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:16.223932] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836174000,1698836175000,11,316812296,1698836176220
1698836174000,1698836175000,9,298755181,1698836176220
1698836174000,1698836175000,10,325988888,1698836176220
1698836174000,1698836175000,4,2128476938,1698836176220
1698836174000,1698836175000,6,5844332328,1698836176220
1698836174000,1698836175000,7,26897060853,1698836176220
1698836174000,1698836175000,5,735051533,1698836176220
1698836174000,1698836175000,8,16371021507,1698836176220
1698836174000,1698836175000,1,34441253,1698836176220
[m
[36m[10:56:16.671683] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:16.771540] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:16.772122] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:16.772905] [D] [thread 129911] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:16.772996] [I] [thread 129911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:16.773014] [I] [thread 129911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:16.773127] [I] [thread 129911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:16.773139] [I] [thread 129911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:17.028002] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:17.028591] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:17.132353] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836177000-1698836178000[m
[36m[10:56:17.237256] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836175000-1698836176000 [m
[36m[10:56:17.238041] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836175000-1698836176000-3[m
[36m[10:56:17.238139] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836175000-1698836176000[m
[36m[10:56:17.238250] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836175000-1698836176000[m
[36m[10:56:17.238395] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:17.238433] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:17.242362] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836175000,1698836176000,11,316814811,1698836177238
1698836175000,1698836176000,9,298757436,1698836177238
1698836175000,1698836176000,10,325991175,1698836177238
1698836175000,1698836176000,4,2128479159,1698836177238
1698836175000,1698836176000,6,5844334555,1698836177238
1698836175000,1698836176000,5,735053740,1698836177238
1698836175000,1698836176000,7,26897063067,1698836177238
1698836175000,1698836176000,8,16371023710,1698836177238
1698836175000,1698836176000,1,34446867,1698836177238
[m
[36m[10:56:18.029794] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:18.132159] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836178000-1698836179000[m
[36m[10:56:18.256234] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836176000-1698836177000 [m
[36m[10:56:18.257019] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836176000-1698836177000-4[m
[36m[10:56:18.257120] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836176000-1698836177000[m
[36m[10:56:18.257183] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836176000-1698836177000[m
[36m[10:56:18.257285] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:18.257313] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:18.260698] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836176000,1698836177000,9,298760057,1698836178257
1698836176000,1698836177000,4,2128481767,1698836178257
1698836176000,1698836177000,10,325993603,1698836178257
1698836176000,1698836177000,6,5844337124,1698836178257
1698836176000,1698836177000,7,26897065609,1698836178257
1698836176000,1698836177000,8,16371026216,1698836178257
1698836176000,1698836177000,5,735056395,1698836178257
1698836176000,1698836177000,11,316817359,1698836178257
1698836176000,1698836177000,1,34448747,1698836178257
[m
[36m[10:56:19.031060] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:19.121658] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836179000-1698836180000[m
[36m[10:56:19.175390] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:19.175704] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:19.176757] [D] [thread 129916] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:19.176855] [I] [thread 129916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:19.176872] [I] [thread 129916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:19.176986] [I] [thread 129916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:19.177050] [I] [thread 129916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:19.271969] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836177000-1698836178000 [m
[36m[10:56:19.272834] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836177000-1698836178000-5[m
[36m[10:56:19.272949] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836177000-1698836178000[m
[36m[10:56:19.273020] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836177000-1698836178000[m
[36m[10:56:19.273139] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:19.273170] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:19.277718] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836177000,1698836178000,10,325996089,1698836179273
1698836177000,1698836178000,4,2128484039,1698836179273
1698836177000,1698836178000,5,735058620,1698836179273
1698836177000,1698836178000,7,26897067976,1698836179273
1698836177000,1698836178000,6,5844339472,1698836179273
1698836177000,1698836178000,8,16371028602,1698836179273
1698836177000,1698836178000,11,316819860,1698836179273
1698836177000,1698836178000,9,298762538,1698836179273
1698836177000,1698836178000,1,34454588,1698836179273
[m
[36m[10:56:19.376554] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:19.376909] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:20.116034] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836180000-1698836181000[m
[36m[10:56:20.288435] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836178000-1698836179000 [m
[36m[10:56:20.289275] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836178000-1698836179000-6[m
[36m[10:56:20.289371] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836178000-1698836179000[m
[36m[10:56:20.289432] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836178000-1698836179000[m
[36m[10:56:20.289527] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:20.289557] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:20.292540] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836178000,1698836179000,4,2128486434,1698836180289
1698836178000,1698836179000,10,325998345,1698836180289
1698836178000,1698836179000,5,735061036,1698836180289
1698836178000,1698836179000,7,26897070303,1698836180289
1698836178000,1698836179000,8,16371030916,1698836180289
1698836178000,1698836179000,6,5844341864,1698836180289
1698836178000,1698836179000,11,316822095,1698836180289
1698836178000,1698836179000,9,298764857,1698836180289
1698836178000,1698836179000,1,34458663,1698836180289
[m
[36m[10:56:20.378139] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:21.117964] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836181000-1698836182000[m
[36m[10:56:21.304206] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836179000-1698836180000 [m
[36m[10:56:21.305404] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836179000-1698836180000-7[m
[36m[10:56:21.305516] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836179000-1698836180000[m
[36m[10:56:21.305584] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836179000-1698836180000[m
[36m[10:56:21.305683] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:21.305709] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:21.309084] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836179000,1698836180000,4,2128488900,1698836181305
1698836179000,1698836180000,10,326000958,1698836181305
1698836179000,1698836180000,5,735063475,1698836181305
1698836179000,1698836180000,7,26897072885,1698836181305
1698836179000,1698836180000,8,16371033485,1698836181305
1698836179000,1698836180000,9,298767421,1698836181305
1698836179000,1698836180000,6,5844344369,1698836181305
1698836179000,1698836180000,11,316824725,1698836181305
1698836179000,1698836180000,1,34463680,1698836181305
[m
[36m[10:56:21.379486] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:21.494005] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:21.494392] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:21.495488] [D] [thread 129921] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:21.495595] [I] [thread 129921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:21.495613] [I] [thread 129921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:21.495739] [I] [thread 129921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:21.495756] [I] [thread 129921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:21.699649] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:21.700001] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:22.115802] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836182000-1698836183000[m
[36m[10:56:22.320742] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836180000-1698836181000 [m
[36m[10:56:22.321611] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836180000-1698836181000-8[m
[36m[10:56:22.321725] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836180000-1698836181000[m
[36m[10:56:22.321801] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836180000-1698836181000[m
[36m[10:56:22.321924] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:22.321955] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:22.325855] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836180000,1698836181000,4,2128491340,1698836182321
1698836180000,1698836181000,10,326003138,1698836182321
1698836180000,1698836181000,7,26897075020,1698836182321
1698836180000,1698836181000,5,735065782,1698836182321
1698836180000,1698836181000,8,16371035651,1698836182321
1698836180000,1698836181000,9,298769631,1698836182321
1698836180000,1698836181000,6,5844346597,1698836182321
1698836180000,1698836181000,11,316826938,1698836182321
1698836180000,1698836181000,1,34468417,1698836182321
[m
[36m[10:56:22.701209] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:23.116910] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836183000-1698836184000[m
[36m[10:56:23.337509] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836181000-1698836182000 [m
[36m[10:56:23.338265] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836181000-1698836182000-9[m
[36m[10:56:23.338343] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836181000-1698836182000[m
[36m[10:56:23.338389] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836181000-1698836182000[m
[36m[10:56:23.338471] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:23.338488] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:23.340211] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836181000,1698836182000,10,326005803,1698836183338
1698836181000,1698836182000,5,735068386,1698836183338
1698836181000,1698836182000,7,26897077817,1698836183338
1698836181000,1698836182000,8,16371038452,1698836183338
1698836181000,1698836182000,9,298772314,1698836183338
1698836181000,1698836182000,6,5844349297,1698836183338
1698836181000,1698836182000,11,316829577,1698836183338
1698836181000,1698836182000,4,2128493981,1698836183338
1698836181000,1698836182000,1,34472547,1698836183338
[m
[36m[10:56:23.702459] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:23.735718] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:23.736067] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:23.737065] [D] [thread 129926] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:23.737159] [I] [thread 129926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:23.737178] [I] [thread 129926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:23.737293] [I] [thread 129926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:23.737306] [I] [thread 129926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:23.924407] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:23.924771] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:24.113170] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836184000-1698836185000[m
[36m[10:56:24.348747] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836182000-1698836183000 [m
[36m[10:56:24.349790] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836182000-1698836183000-10[m
[36m[10:56:24.349941] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836182000-1698836183000[m
[36m[10:56:24.350023] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836182000-1698836183000[m
[36m[10:56:24.350161] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:24.350245] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:24.352869] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836182000,1698836183000,10,326008083,1698836184350
1698836182000,1698836183000,7,26897080025,1698836184350
1698836182000,1698836183000,5,735070574,1698836184350
1698836182000,1698836183000,8,16371040669,1698836184350
1698836182000,1698836183000,9,298774580,1698836184350
1698836182000,1698836183000,11,316831882,1698836184350
1698836182000,1698836183000,6,5844351469,1698836184350
1698836182000,1698836183000,4,2128496248,1698836184350
1698836182000,1698836183000,1,34478447,1698836184350
[m
[36m[10:56:24.925995] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:25.119957] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836185000-1698836186000[m
[36m[10:56:25.361855] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836183000-1698836184000 [m
[36m[10:56:25.362853] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836183000-1698836184000-11[m
[36m[10:56:25.362939] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836183000-1698836184000[m
[36m[10:56:25.363003] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836183000-1698836184000[m
[36m[10:56:25.363120] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:25.363151] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:25.367112] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836183000,1698836184000,10,326010514,1698836185363
1698836183000,1698836184000,7,26897082548,1698836185363
1698836183000,1698836184000,5,735073174,1698836185363
1698836183000,1698836184000,8,16371043160,1698836185363
1698836183000,1698836184000,9,298777020,1698836185363
1698836183000,1698836184000,11,316834238,1698836185363
1698836183000,1698836184000,4,2128498872,1698836185363
1698836183000,1698836184000,6,5844354082,1698836185363
1698836183000,1698836184000,1,34482570,1698836185363
[m
[36m[10:56:25.927271] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:25.968916] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:25.969255] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:25.970381] [D] [thread 129931] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:25.970474] [I] [thread 129931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:25.970491] [I] [thread 129931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:25.970607] [I] [thread 129931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:25.970627] [I] [thread 129931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:26.114638] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836186000-1698836187000[m
[36m[10:56:26.142393] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:26.142728] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:26.379649] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836184000-1698836185000 [m
[36m[10:56:26.380562] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836184000-1698836185000-12[m
[36m[10:56:26.380930] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836184000-1698836185000[m
[36m[10:56:26.381044] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836184000-1698836185000[m
[36m[10:56:26.381165] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:26.381193] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:26.384561] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836184000,1698836185000,10,326013064,1698836186381
1698836184000,1698836185000,7,26897084923,1698836186381
1698836184000,1698836185000,5,735075381,1698836186381
1698836184000,1698836185000,9,298779470,1698836186381
1698836184000,1698836185000,8,16371045514,1698836186381
1698836184000,1698836185000,11,316836772,1698836186381
1698836184000,1698836185000,6,5844356341,1698836186381
1698836184000,1698836185000,4,2128501040,1698836186381
1698836184000,1698836185000,1,34486008,1698836186381
[m
[36m[10:56:27.119571] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836187000-1698836188000[m
[36m[10:56:27.143935] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:27.396409] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836185000-1698836186000 [m
[36m[10:56:27.397287] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836185000-1698836186000-13[m
[36m[10:56:27.397396] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836185000-1698836186000[m
[36m[10:56:27.397466] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836185000-1698836186000[m
[36m[10:56:27.397584] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:27.397616] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:27.400606] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836185000,1698836186000,7,26897087318,1698836187397
1698836185000,1698836186000,5,735077914,1698836187397
1698836185000,1698836186000,9,298781792,1698836187397
1698836185000,1698836186000,8,16371047934,1698836187397
1698836185000,1698836186000,11,316839031,1698836187397
1698836185000,1698836186000,4,2128503640,1698836187397
1698836185000,1698836186000,6,5844358847,1698836187397
1698836185000,1698836186000,10,326015571,1698836187397
1698836185000,1698836186000,1,34490173,1698836187397
[m
[36m[10:56:28.134766] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836188000-1698836189000[m
[36m[10:56:28.145199] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:28.233436] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:28.233998] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:28.234798] [D] [thread 129936] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:28.234892] [I] [thread 129936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:28.234909] [I] [thread 129936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:28.235025] [I] [thread 129936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:28.235048] [I] [thread 129936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:28.413469] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836186000-1698836187000 [m
[36m[10:56:28.414291] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836186000-1698836187000-14[m
[36m[10:56:28.414392] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836186000-1698836187000[m
[36m[10:56:28.414462] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836186000-1698836187000[m
[36m[10:56:28.414574] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:28.414602] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:28.417916] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836186000,1698836187000,7,26897089941,1698836188414
1698836186000,1698836187000,9,298784353,1698836188414
1698836186000,1698836187000,5,735080253,1698836188414
1698836186000,1698836187000,8,16371050401,1698836188414
1698836186000,1698836187000,11,316841652,1698836188414
1698836186000,1698836187000,4,2128505947,1698836188414
1698836186000,1698836187000,6,5844361260,1698836188414
1698836186000,1698836187000,10,326018081,1698836188414
1698836186000,1698836187000,1,34495947,1698836188414
[m
[36m[10:56:28.448109] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:28.448614] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:29.130159] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836189000-1698836190000[m
[36m[10:56:29.430982] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836187000-1698836188000 [m
[36m[10:56:29.431762] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836187000-1698836188000-15[m
[36m[10:56:29.431860] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836187000-1698836188000[m
[36m[10:56:29.431922] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836187000-1698836188000[m
[36m[10:56:29.432026] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:29.432054] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:29.435146] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836187000,1698836188000,9,298786710,1698836189432
1698836187000,1698836188000,5,735082613,1698836189432
1698836187000,1698836188000,8,16371052634,1698836189432
1698836187000,1698836188000,11,316843787,1698836189432
1698836187000,1698836188000,4,2128508283,1698836189432
1698836187000,1698836188000,6,5844363593,1698836189432
1698836187000,1698836188000,7,26897092381,1698836189432
1698836187000,1698836188000,10,326020350,1698836189432
1698836187000,1698836188000,1,34500143,1698836189432
[m
[36m[10:56:29.449792] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:30.123655] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836190000-1698836191000[m
[36m[10:56:30.447803] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836188000-1698836189000 [m
[36m[10:56:30.448464] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836188000-1698836189000-16[m
[36m[10:56:30.448526] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836188000-1698836189000[m
[36m[10:56:30.448564] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836188000-1698836189000[m
[36m[10:56:30.448644] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:30.448662] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:30.450427] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:30.450578] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836188000,1698836189000,5,735085142,1698836190448
1698836188000,1698836189000,8,16371055284,1698836190448
1698836188000,1698836189000,11,316846520,1698836190448
1698836188000,1698836189000,4,2128510786,1698836190448
1698836188000,1698836189000,6,5844366121,1698836190448
1698836188000,1698836189000,10,326022987,1698836190448
1698836188000,1698836189000,7,26897094931,1698836190448
1698836188000,1698836189000,9,298789481,1698836190448
1698836188000,1698836189000,1,34505225,1698836190448
[m
[36m[10:56:30.459378] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:30.459703] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:30.460825] [D] [thread 129941] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:30.460924] [I] [thread 129941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:30.460942] [I] [thread 129941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:30.461065] [I] [thread 129941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:30.461079] [I] [thread 129941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:30.727239] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:30.727593] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:31.119189] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836191000-1698836192000[m
[36m[10:56:31.459638] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836189000-1698836190000 [m
[36m[10:56:31.460290] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836189000-1698836190000-17[m
[36m[10:56:31.460377] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836189000-1698836190000[m
[36m[10:56:31.460433] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836189000-1698836190000[m
[36m[10:56:31.460508] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:31.460524] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:31.462293] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836189000,1698836190000,8,16371057501,1698836191460
1698836189000,1698836190000,5,735087424,1698836191460
1698836189000,1698836190000,11,316848777,1698836191460
1698836189000,1698836190000,4,2128513086,1698836191460
1698836189000,1698836190000,6,5844368357,1698836191460
1698836189000,1698836190000,10,326025204,1698836191460
1698836189000,1698836190000,7,26897097117,1698836191460
1698836189000,1698836190000,9,298791722,1698836191460
1698836189000,1698836190000,1,34509984,1698836191460
[m
[36m[10:56:31.728783] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:32.111174] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836192000-1698836193000[m
[36m[10:56:32.471141] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836190000-1698836191000 [m
[36m[10:56:32.472646] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836190000-1698836191000-18[m
[36m[10:56:32.472804] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836190000-1698836191000[m
[36m[10:56:32.472907] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836190000-1698836191000[m
[36m[10:56:32.473041] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:32.473073] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:32.477049] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836190000,1698836191000,8,16371060136,1698836192473
1698836190000,1698836191000,5,735090045,1698836192473
1698836190000,1698836191000,11,316851314,1698836192473
1698836190000,1698836191000,4,2128515645,1698836192473
1698836190000,1698836191000,6,5844371025,1698836192473
1698836190000,1698836191000,10,326027803,1698836192473
1698836190000,1698836191000,7,26897099838,1698836192473
1698836190000,1698836191000,9,298794337,1698836192473
1698836190000,1698836191000,1,34514285,1698836192473
[m
[36m[10:56:32.730064] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:32.833053] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:32.833418] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:32.834436] [D] [thread 129946] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:32.834527] [I] [thread 129946] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:32.834545] [I] [thread 129946] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:32.834669] [I] [thread 129946] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:32.834684] [I] [thread 129946] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:33.106487] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:33.107038] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:33.130940] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836193000-1698836194000[m
[36m[10:56:33.487349] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836191000-1698836192000 [m
[36m[10:56:33.488609] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836191000-1698836192000-19[m
[36m[10:56:33.488730] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836191000-1698836192000[m
[36m[10:56:33.488803] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836191000-1698836192000[m
[36m[10:56:33.488916] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:33.488947] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:33.492806] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836191000,1698836192000,8,16371062511,1698836193488
1698836191000,1698836192000,5,735092228,1698836193488
1698836191000,1698836192000,11,316853667,1698836193488
1698836191000,1698836192000,4,2128517889,1698836193488
1698836191000,1698836192000,7,26897101980,1698836193488
1698836191000,1698836192000,6,5844373211,1698836193488
1698836191000,1698836192000,10,326030086,1698836193488
1698836191000,1698836192000,9,298796569,1698836193488
1698836191000,1698836192000,1,34519870,1698836193488
[m
[36m[10:56:34.108312] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:34.124705] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836194000-1698836195000[m
[36m[10:56:34.503123] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836192000-1698836193000 [m
[36m[10:56:34.503914] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836192000-1698836193000-20[m
[36m[10:56:34.504017] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836192000-1698836193000[m
[36m[10:56:34.504080] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836192000-1698836193000[m
[36m[10:56:34.504186] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:34.504215] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:34.507617] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836192000,1698836193000,5,735094945,1698836194504
1698836192000,1698836193000,11,316856195,1698836194504
1698836192000,1698836193000,4,2128520482,1698836194504
1698836192000,1698836193000,7,26897104482,1698836194504
1698836192000,1698836193000,10,326032499,1698836194504
1698836192000,1698836193000,6,5844375797,1698836194504
1698836192000,1698836193000,9,298799045,1698836194504
1698836192000,1698836193000,8,16371065142,1698836194504
1698836192000,1698836193000,1,34521790,1698836194504
[m
[36m[10:56:35.109599] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:35.143920] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836195000-1698836196000[m
[36m[10:56:35.176270] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:35.176683] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:35.178360] [D] [thread 129951] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:35.178451] [I] [thread 129951] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:35.178469] [I] [thread 129951] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:35.178584] [I] [thread 129951] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:35.178595] [I] [thread 129951] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:35.369495] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:35.369839] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:35.520208] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836193000-1698836194000 [m
[36m[10:56:35.521021] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836193000-1698836194000-21[m
[36m[10:56:35.521097] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836193000-1698836194000[m
[36m[10:56:35.521150] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836193000-1698836194000[m
[36m[10:56:35.521252] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:35.521277] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:35.524639] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836193000,1698836194000,4,2128522735,1698836195521
1698836193000,1698836194000,9,298801457,1698836195521
1698836193000,1698836194000,7,26897106863,1698836195521
1698836193000,1698836194000,10,326034954,1698836195521
1698836193000,1698836194000,6,5844378079,1698836195521
1698836193000,1698836194000,8,16371067480,1698836195521
1698836193000,1698836194000,5,735097291,1698836195521
1698836193000,1698836194000,11,316858821,1698836195521
1698836193000,1698836194000,1,34527585,1698836195521
[m
[36m[10:56:36.134884] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836196000-1698836197000[m
[36m[10:56:36.371032] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:36.535862] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836194000-1698836195000 [m
[36m[10:56:36.536679] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836194000-1698836195000-22[m
[36m[10:56:36.536783] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836194000-1698836195000[m
[36m[10:56:36.536855] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836194000-1698836195000[m
[36m[10:56:36.536968] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:36.536997] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:36.540406] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836194000,1698836195000,4,2128525306,1698836196537
1698836194000,1698836195000,9,298803672,1698836196537
1698836194000,1698836195000,7,26897109144,1698836196537
1698836194000,1698836195000,10,326037162,1698836196537
1698836194000,1698836195000,6,5844380408,1698836196537
1698836194000,1698836195000,8,16371069752,1698836196537
1698836194000,1698836195000,11,316860994,1698836196537
1698836194000,1698836195000,5,735099783,1698836196537
1698836194000,1698836195000,1,34531697,1698836196537
[m
[36m[10:56:37.120571] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836197000-1698836198000[m
[36m[10:56:37.372327] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:37.414355] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:37.414704] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:37.416343] [D] [thread 129956] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:37.416474] [I] [thread 129956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:37.416492] [I] [thread 129956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:37.416606] [I] [thread 129956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:37.416619] [I] [thread 129956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:37.552646] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836195000-1698836196000 [m
[36m[10:56:37.553592] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836195000-1698836196000-23[m
[36m[10:56:37.554054] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836195000-1698836196000[m
[36m[10:56:37.554180] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836195000-1698836196000[m
[36m[10:56:37.554368] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:37.554399] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:37.557771] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836195000,1698836196000,9,298806371,1698836197554
1698836195000,1698836196000,7,26897111756,1698836197554
1698836195000,1698836196000,10,326039890,1698836197554
1698836195000,1698836196000,8,16371072357,1698836197554
1698836195000,1698836196000,6,5844382988,1698836197554
1698836195000,1698836196000,11,316863726,1698836197554
1698836195000,1698836196000,5,735102203,1698836197554
1698836195000,1698836196000,4,2128527818,1698836197554
1698836195000,1698836196000,1,34537899,1698836197554
[m
[36m[10:56:37.583796] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:37.584142] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:38.113955] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836198000-1698836199000[m
[36m[10:56:38.569897] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836196000-1698836197000 [m
[36m[10:56:38.570806] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836196000-1698836197000-24[m
[36m[10:56:38.570910] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836196000-1698836197000[m
[36m[10:56:38.570972] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836196000-1698836197000[m
[36m[10:56:38.571073] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:38.571100] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:38.574357] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836196000,1698836197000,9,298808553,1698836198571
1698836196000,1698836197000,7,26897113959,1698836198571
1698836196000,1698836197000,10,326042080,1698836198571
1698836196000,1698836197000,8,16371074529,1698836198571
1698836196000,1698836197000,6,5844385226,1698836198571
1698836196000,1698836197000,11,316865954,1698836198571
1698836196000,1698836197000,5,735104574,1698836198571
1698836196000,1698836197000,4,2128530236,1698836198571
1698836196000,1698836197000,1,34541955,1698836198571
[m
[36m[10:56:38.585436] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:39.118282] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836199000-1698836200000[m
[36m[10:56:39.586360] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:39.599002] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836197000-1698836198000 [m
[36m[10:56:39.600500] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836197000-1698836198000-25[m
[36m[10:56:39.600647] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836197000-1698836198000[m
[36m[10:56:39.600711] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836197000-1698836198000[m
[36m[10:56:39.600798] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:39.600815] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:39.602941] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836197000,1698836198000,7,26897116622,1698836199600
1698836197000,1698836198000,9,298811138,1698836199600
1698836197000,1698836198000,10,326044657,1698836199600
1698836197000,1698836198000,8,16371077187,1698836199600
1698836197000,1698836198000,6,5844387902,1698836199600
1698836197000,1698836198000,11,316868544,1698836199600
1698836197000,1698836198000,4,2128532743,1698836199600
1698836197000,1698836198000,5,735107175,1698836199600
1698836197000,1698836198000,1,34547150,1698836199600
[m
[36m[10:56:39.608861] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:39.609183] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:39.610154] [D] [thread 129962] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:39.610277] [I] [thread 129962] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:39.610295] [I] [thread 129962] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:39.610410] [I] [thread 129962] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:39.610422] [I] [thread 129962] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:39.836059] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:39.836479] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:40.112988] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836200000-1698836201000[m
[36m[10:56:40.605338] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836198000-1698836199000 [m
[36m[10:56:40.606315] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836198000-1698836199000-26[m
[36m[10:56:40.606445] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836198000-1698836199000[m
[36m[10:56:40.606535] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836198000-1698836199000[m
[36m[10:56:40.606676] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:40.606713] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:40.610739] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836198000,1698836199000,7,26897118971,1698836200606
1698836198000,1698836199000,9,298813392,1698836200606
1698836198000,1698836199000,10,326046942,1698836200606
1698836198000,1698836199000,6,5844390076,1698836200606
1698836198000,1698836199000,8,16371079390,1698836200606
1698836198000,1698836199000,11,316870841,1698836200606
1698836198000,1698836199000,4,2128534923,1698836200606
1698836198000,1698836199000,5,735109311,1698836200606
1698836198000,1698836199000,1,34551846,1698836200606
[m
[36m[10:56:40.837696] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:41.138268] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836201000-1698836202000[m
[36m[10:56:41.623115] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836199000-1698836200000 [m
[36m[10:56:41.623900] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836199000-1698836200000-27[m
[36m[10:56:41.624000] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836199000-1698836200000[m
[36m[10:56:41.624069] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836199000-1698836200000[m
[36m[10:56:41.624172] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:41.624202] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:41.627587] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836199000,1698836200000,10,326049397,1698836201624
1698836199000,1698836200000,9,298815911,1698836201624
1698836199000,1698836200000,8,16371081901,1698836201624
1698836199000,1698836200000,6,5844392679,1698836201624
1698836199000,1698836200000,4,2128537605,1698836201624
1698836199000,1698836200000,11,316873319,1698836201624
1698836199000,1698836200000,5,735112048,1698836201624
1698836199000,1698836200000,7,26897121599,1698836201624
1698836199000,1698836200000,1,34556034,1698836201624
[m
[36m[10:56:41.838357] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:41.933567] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:41.934097] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:41.934946] [D] [thread 129967] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:41.935043] [I] [thread 129967] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:41.935061] [I] [thread 129967] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:41.935181] [I] [thread 129967] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:41.935194] [I] [thread 129967] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:42.136829] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836202000-1698836203000[m
[36m[10:56:42.146003] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:42.146600] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:42.639592] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836200000-1698836201000 [m
[36m[10:56:42.640591] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836200000-1698836201000-28[m
[36m[10:56:42.640706] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836200000-1698836201000[m
[36m[10:56:42.640775] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836200000-1698836201000[m
[36m[10:56:42.640893] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:42.640924] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:42.645818] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836200000,1698836201000,7,26897123796,1698836202640
1698836200000,1698836201000,9,298818340,1698836202640
1698836200000,1698836201000,10,326051939,1698836202640
1698836200000,1698836201000,8,16371084166,1698836202640
1698836200000,1698836201000,6,5844394964,1698836202640
1698836200000,1698836201000,5,735114232,1698836202640
1698836200000,1698836201000,4,2128539761,1698836202640
1698836200000,1698836201000,11,316875690,1698836202640
1698836200000,1698836201000,1,34559463,1698836202640
[m
[36m[10:56:43.133236] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836203000-1698836204000[m
[36m[10:56:43.147862] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:43.654928] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836201000-1698836202000 [m
[36m[10:56:43.655762] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836201000-1698836202000-29[m
[36m[10:56:43.655876] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836201000-1698836202000[m
[36m[10:56:43.655947] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836201000-1698836202000[m
[36m[10:56:43.656064] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:43.656096] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:43.660026] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836201000,1698836202000,8,16371086587,1698836203656
1698836201000,1698836202000,6,5844397385,1698836203656
1698836201000,1698836202000,5,735116728,1698836203656
1698836201000,1698836202000,11,316878036,1698836203656
1698836201000,1698836202000,4,2128542310,1698836203656
1698836201000,1698836202000,7,26897126413,1698836203656
1698836201000,1698836202000,10,326054401,1698836203656
1698836201000,1698836202000,9,298820906,1698836203656
1698836201000,1698836202000,1,34563510,1698836203656
[m
[36m[10:56:44.127169] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836204000-1698836205000[m
[36m[10:56:44.149089] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:44.181330] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:44.182051] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:44.182981] [D] [thread 129972] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:44.183081] [I] [thread 129972] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:44.183150] [I] [thread 129972] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:44.183288] [I] [thread 129972] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:44.183304] [I] [thread 129972] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:44.382443] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:44.382989] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:44.671827] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836202000-1698836203000 [m
[36m[10:56:44.672637] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836202000-1698836203000-30[m
[36m[10:56:44.672747] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836202000-1698836203000[m
[36m[10:56:44.672827] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836202000-1698836203000[m
[36m[10:56:44.672930] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:44.672952] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:44.675726] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836202000,1698836203000,8,16371089039,1698836204672
1698836202000,1698836203000,4,2128544584,1698836204672
1698836202000,1698836203000,6,5844399774,1698836204672
1698836202000,1698836203000,5,735119074,1698836204672
1698836202000,1698836203000,11,316880594,1698836204672
1698836202000,1698836203000,9,298823321,1698836204672
1698836202000,1698836203000,7,26897128770,1698836204672
1698836202000,1698836203000,10,326056937,1698836204672
1698836202000,1698836203000,1,34569281,1698836204672
[m
[36m[10:56:45.119221] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836205000-1698836206000[m
[36m[10:56:45.384240] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:45.686666] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836203000-1698836204000 [m
[36m[10:56:45.687305] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836203000-1698836204000-31[m
[36m[10:56:45.687363] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836203000-1698836204000[m
[36m[10:56:45.687398] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836203000-1698836204000[m
[36m[10:56:45.687467] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:45.687483] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:45.689479] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836203000,1698836204000,8,16371091365,1698836205687
1698836203000,1698836204000,4,2128547044,1698836205687
1698836203000,1698836204000,6,5844402217,1698836205687
1698836203000,1698836204000,11,316882769,1698836205687
1698836203000,1698836204000,5,735121566,1698836205687
1698836203000,1698836204000,9,298825581,1698836205687
1698836203000,1698836204000,7,26897131156,1698836205687
1698836203000,1698836204000,10,326059197,1698836205687
1698836203000,1698836204000,1,34573521,1698836205687
[m
[36m[10:56:46.120766] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836206000-1698836207000[m
[36m[10:56:46.385576] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:46.405198] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:46.405785] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:46.406603] [D] [thread 129977] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:46.406697] [I] [thread 129977] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:46.406714] [I] [thread 129977] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:46.406828] [I] [thread 129977] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:46.406851] [I] [thread 129977] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:46.622539] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:46.623072] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:46.698134] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836204000-1698836205000 [m
[36m[10:56:46.698822] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836204000-1698836205000-32[m
[36m[10:56:46.698900] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836204000-1698836205000[m
[36m[10:56:46.698944] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836204000-1698836205000[m
[36m[10:56:46.699021] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:46.699040] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:46.701207] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836204000,1698836205000,8,16371093969,1698836206699
1698836204000,1698836205000,5,735124011,1698836206699
1698836204000,1698836205000,6,5844404726,1698836206699
1698836204000,1698836205000,4,2128549495,1698836206699
1698836204000,1698836205000,11,316885502,1698836206699
1698836204000,1698836205000,9,298828262,1698836206699
1698836204000,1698836205000,7,26897133724,1698836206699
1698836204000,1698836205000,10,326061870,1698836206699
1698836204000,1698836205000,1,34579399,1698836206699
[m
[36m[10:56:47.122071] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836207000-1698836208000[m
[36m[10:56:47.624292] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:47.711287] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836205000-1698836206000 [m
[36m[10:56:47.712562] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836205000-1698836206000-33[m
[36m[10:56:47.712649] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836205000-1698836206000[m
[36m[10:56:47.712698] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836205000-1698836206000[m
[36m[10:56:47.712778] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:47.712793] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:47.714599] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836205000,1698836206000,8,16371096222,1698836207712
1698836205000,1698836206000,4,2128551764,1698836207712
1698836205000,1698836206000,11,316887621,1698836207712
1698836205000,1698836206000,6,5844406941,1698836207712
1698836205000,1698836206000,5,735126270,1698836207712
1698836205000,1698836206000,9,298830415,1698836207712
1698836205000,1698836206000,7,26897135920,1698836207712
1698836205000,1698836206000,10,326064062,1698836207712
1698836205000,1698836206000,1,34583432,1698836207712
[m
[36m[10:56:48.127027] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836208000-1698836209000[m
[36m[10:56:48.625562] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:48.721681] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836206000-1698836207000 [m
[36m[10:56:48.722429] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836206000-1698836207000-34[m
[36m[10:56:48.722511] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836206000-1698836207000[m
[36m[10:56:48.722554] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836206000-1698836207000[m
[36m[10:56:48.722642] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:48.722660] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:48.725115] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836206000,1698836207000,4,2128554440,1698836208722
1698836206000,1698836207000,11,316890175,1698836208722
1698836206000,1698836207000,5,735128906,1698836208722
1698836206000,1698836207000,6,5844409612,1698836208722
1698836206000,1698836207000,9,298833003,1698836208722
1698836206000,1698836207000,7,26897138577,1698836208722
1698836206000,1698836207000,10,326066625,1698836208722
1698836206000,1698836207000,8,16371099101,1698836208722
1698836206000,1698836207000,1,34589355,1698836208722
[m
[36m[10:56:48.730314] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:48.730664] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:48.733214] [D] [thread 129982] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:48.733331] [I] [thread 129982] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:48.733350] [I] [thread 129982] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:48.733482] [I] [thread 129982] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:48.733498] [I] [thread 129982] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:48.949892] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:48.950262] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:49.118706] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836209000-1698836210000[m
[36m[10:56:49.734161] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836207000-1698836208000 [m
[36m[10:56:49.734839] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836207000-1698836208000-35[m
[36m[10:56:49.734930] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836207000-1698836208000[m
[36m[10:56:49.734988] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836207000-1698836208000[m
[36m[10:56:49.735085] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:49.735110] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:49.738010] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836207000,1698836208000,11,316892624,1698836209735
1698836207000,1698836208000,5,735131011,1698836209735
1698836207000,1698836208000,6,5844411765,1698836209735
1698836207000,1698836208000,9,298835291,1698836209735
1698836207000,1698836208000,7,26897140769,1698836209735
1698836207000,1698836208000,10,326068932,1698836209735
1698836207000,1698836208000,8,16371101230,1698836209735
1698836207000,1698836208000,4,2128556712,1698836209735
1698836207000,1698836208000,1,34593147,1698836209735
[m
[36m[10:56:49.951437] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:50.146430] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836210000-1698836211000[m
[36m[10:56:50.750330] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836208000-1698836209000 [m
[36m[10:56:50.751281] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836208000-1698836209000-36[m
[36m[10:56:50.751355] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836208000-1698836209000[m
[36m[10:56:50.751410] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836208000-1698836209000[m
[36m[10:56:50.751516] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:50.751541] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:50.755186] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836208000,1698836209000,5,735133620,1698836210751
1698836208000,1698836209000,6,5844414342,1698836210751
1698836208000,1698836209000,9,298837713,1698836210751
1698836208000,1698836209000,7,26897143350,1698836210751
1698836208000,1698836209000,10,326071372,1698836210751
1698836208000,1698836209000,4,2128559377,1698836210751
1698836208000,1698836209000,8,16371103803,1698836210751
1698836208000,1698836209000,11,316895178,1698836210751
1698836208000,1698836209000,1,34595039,1698836210751
[m
[36m[10:56:50.952685] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:51.053727] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:51.054870] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:51.055392] [D] [thread 129987] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:51.055497] [I] [thread 129987] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:51.055514] [I] [thread 129987] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:51.055639] [I] [thread 129987] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:51.055654] [I] [thread 129987] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:51.140009] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836211000-1698836212000[m
[36m[10:56:51.243664] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:51.244190] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:51.765803] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836209000-1698836210000 [m
[36m[10:56:51.766753] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836209000-1698836210000-37[m
[36m[10:56:51.766867] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836209000-1698836210000[m
[36m[10:56:51.766945] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836209000-1698836210000[m
[36m[10:56:51.767059] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:51.767089] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:51.771007] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836209000,1698836210000,5,735136020,1698836211767
1698836209000,1698836210000,9,298840163,1698836211767
1698836209000,1698836210000,6,5844416668,1698836211767
1698836209000,1698836210000,7,26897145595,1698836211767
1698836209000,1698836210000,10,326073748,1698836211767
1698836209000,1698836210000,4,2128561589,1698836211767
1698836209000,1698836210000,8,16371106119,1698836211767
1698836209000,1698836210000,11,316897559,1698836211767
1698836209000,1698836210000,1,34600990,1698836211767
[m
[36m[10:56:52.124774] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836212000-1698836213000[m
[36m[10:56:52.245782] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:52.782250] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836210000-1698836211000 [m
[36m[10:56:52.783035] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836210000-1698836211000-38[m
[36m[10:56:52.783139] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836210000-1698836211000[m
[36m[10:56:52.783200] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836210000-1698836211000[m
[36m[10:56:52.783304] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:52.783330] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:52.786757] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836210000,1698836211000,6,5844419102,1698836212783
1698836210000,1698836211000,9,298842496,1698836212783
1698836210000,1698836211000,7,26897148039,1698836212783
1698836210000,1698836211000,10,326076124,1698836212783
1698836210000,1698836211000,8,16371108476,1698836212783
1698836210000,1698836211000,11,316899883,1698836212783
1698836210000,1698836211000,4,2128564082,1698836212783
1698836210000,1698836211000,5,735138608,1698836212783
1698836210000,1698836211000,1,34605027,1698836212783
[m
[36m[10:56:53.111492] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836213000-1698836214000[m
[36m[10:56:53.247025] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:53.304464] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:53.305033] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:53.305839] [D] [thread 129993] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:53.305933] [I] [thread 129993] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:53.305950] [I] [thread 129993] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:53.306064] [I] [thread 129993] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:53.306076] [I] [thread 129993] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:53.498526] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:53.499071] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:53.797832] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836211000-1698836212000 [m
[36m[10:56:53.798929] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836211000-1698836212000-39[m
[36m[10:56:53.799047] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836211000-1698836212000[m
[36m[10:56:53.799122] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836211000-1698836212000[m
[36m[10:56:53.799242] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:53.799274] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:53.803664] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836211000,1698836212000,9,298844997,1698836213799
1698836211000,1698836212000,6,5844421544,1698836213799
1698836211000,1698836212000,7,26897150521,1698836213799
1698836211000,1698836212000,10,326078691,1698836213799
1698836211000,1698836212000,8,16371110986,1698836213799
1698836211000,1698836212000,4,2128566473,1698836213799
1698836211000,1698836212000,11,316902499,1698836213799
1698836211000,1698836212000,5,735140963,1698836213799
1698836211000,1698836212000,1,34610778,1698836213799
[m
[36m[10:56:54.136772] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836214000-1698836215000[m
[36m[10:56:54.500332] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:54.814800] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836212000-1698836213000 [m
[36m[10:56:54.815698] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836212000-1698836213000-40[m
[36m[10:56:54.815822] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836212000-1698836213000[m
[36m[10:56:54.815891] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836212000-1698836213000[m
[36m[10:56:54.816009] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:54.816039] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:54.819438] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836212000,1698836213000,9,298847182,1698836214816
1698836212000,1698836213000,6,5844423856,1698836214816
1698836212000,1698836213000,10,326080880,1698836214816
1698836212000,1698836213000,7,26897152712,1698836214816
1698836212000,1698836213000,8,16371113216,1698836214816
1698836212000,1698836213000,11,316904665,1698836214816
1698836212000,1698836213000,4,2128568869,1698836214816
1698836212000,1698836213000,5,735143366,1698836214816
1698836212000,1698836213000,1,34615018,1698836214816
[m
[36m[10:56:55.130009] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836215000-1698836216000[m
[36m[10:56:55.501633] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:55.554611] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:55.554935] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:55.556122] [D] [thread 129998] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:55.556223] [I] [thread 129998] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:55.556240] [I] [thread 129998] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:55.556326] [I] [thread 129998] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:55.556339] [I] [thread 129998] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:55.768291] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:55.768686] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:55.830531] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836213000-1698836214000 [m
[36m[10:56:55.831195] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836213000-1698836214000-41[m
[36m[10:56:55.831274] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836213000-1698836214000[m
[36m[10:56:55.831316] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836213000-1698836214000[m
[36m[10:56:55.831388] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:55.831403] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:55.833138] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836213000,1698836214000,9,298850024,1698836215831
1698836213000,1698836214000,6,5844426452,1698836215831
1698836213000,1698836214000,10,326083515,1698836215831
1698836213000,1698836214000,7,26897155391,1698836215831
1698836213000,1698836214000,8,16371115829,1698836215831
1698836213000,1698836214000,11,316907355,1698836215831
1698836213000,1698836214000,4,2128571332,1698836215831
1698836213000,1698836214000,5,735145868,1698836215831
1698836213000,1698836214000,1,34620819,1698836215831
[m
[36m[10:56:56.129924] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836216000-1698836217000[m
[36m[10:56:56.769934] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:56.841664] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836214000-1698836215000 [m
[36m[10:56:56.842691] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836214000-1698836215000-42[m
[36m[10:56:56.842813] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836214000-1698836215000[m
[36m[10:56:56.842878] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836214000-1698836215000[m
[36m[10:56:56.842986] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:56.843012] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:56.845653] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836214000,1698836215000,6,5844428570,1698836216843
1698836214000,1698836215000,10,326085698,1698836216843
1698836214000,1698836215000,7,26897157547,1698836216843
1698836214000,1698836215000,11,316909538,1698836216843
1698836214000,1698836215000,8,16371117965,1698836216843
1698836214000,1698836215000,4,2128573566,1698836216843
1698836214000,1698836215000,9,298852293,1698836216843
1698836214000,1698836215000,5,735148040,1698836216843
1698836214000,1698836215000,1,34624861,1698836216843
[m
[36m[10:56:57.122006] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836217000-1698836218000[m
[36m[10:56:57.771214] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:57.813192] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:57.813552] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:57.814732] [D] [thread 130004] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:56:57.814836] [I] [thread 130004] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:57.814853] [I] [thread 130004] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:56:57.814945] [I] [thread 130004] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:56:57.814958] [I] [thread 130004] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:56:57.856424] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836215000-1698836216000 [m
[36m[10:56:57.857255] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836215000-1698836216000-43[m
[36m[10:56:57.857379] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836215000-1698836216000[m
[36m[10:56:57.857455] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836215000-1698836216000[m
[36m[10:56:57.857573] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:57.857602] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:57.861038] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836215000,1698836216000,10,326088221,1698836217857
1698836215000,1698836216000,6,5844431269,1698836217857
1698836215000,1698836216000,7,26897160169,1698836217857
1698836215000,1698836216000,11,316912024,1698836217857
1698836215000,1698836216000,8,16371120566,1698836217857
1698836215000,1698836216000,4,2128576216,1698836217857
1698836215000,1698836216000,9,298854840,1698836217857
1698836215000,1698836216000,5,735150745,1698836217857
1698836215000,1698836216000,1,34630895,1698836217857
[m
[36m[10:56:57.980749] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:57.981069] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:58.113700] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836218000-1698836219000[m
[36m[10:56:58.871916] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836216000-1698836217000 [m
[36m[10:56:58.872644] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836216000-1698836217000-44[m
[36m[10:56:58.872748] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836216000-1698836217000[m
[36m[10:56:58.872813] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836216000-1698836217000[m
[36m[10:56:58.872923] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:58.872954] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:58.875779] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836216000,1698836217000,10,326090566,1698836218872
1698836216000,1698836217000,6,5844433523,1698836218872
1698836216000,1698836217000,7,26897162406,1698836218872
1698836216000,1698836217000,11,316914423,1698836218872
1698836216000,1698836217000,8,16371122844,1698836218872
1698836216000,1698836217000,4,2128578378,1698836218872
1698836216000,1698836217000,9,298857170,1698836218872
1698836216000,1698836217000,5,735152887,1698836218872
1698836216000,1698836217000,1,34632488,1698836218872
[m
[36m[10:56:58.982322] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:56:59.132104] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836219000-1698836220000[m
[36m[10:56:59.885695] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836217000-1698836218000 [m
[36m[10:56:59.886417] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836217000-1698836218000-45[m
[36m[10:56:59.886501] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836217000-1698836218000[m
[36m[10:56:59.886553] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836217000-1698836218000[m
[36m[10:56:59.886643] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:56:59.886665] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:56:59.889273] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836217000,1698836218000,10,326092961,1698836219886
1698836217000,1698836218000,7,26897165060,1698836219886
1698836217000,1698836218000,6,5844436014,1698836219886
1698836217000,1698836218000,11,316916818,1698836219886
1698836217000,1698836218000,4,2128580999,1698836219886
1698836217000,1698836218000,8,16371125320,1698836219886
1698836217000,1698836218000,9,298859540,1698836219886
1698836217000,1698836218000,5,735155475,1698836219886
1698836217000,1698836218000,1,34637474,1698836219886
[m
[36m[10:56:59.983649] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:00.126627] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836220000-1698836221000[m
[36m[10:57:00.132792] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:00.133122] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:00.134395] [D] [thread 130009] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:00.134484] [I] [thread 130009] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:00.134503] [I] [thread 130009] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:00.134617] [I] [thread 130009] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:00.134629] [I] [thread 130009] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:00.304153] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:00.304494] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:00.899896] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836218000-1698836219000 [m
[36m[10:57:00.900875] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836218000-1698836219000-46[m
[36m[10:57:00.900943] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836218000-1698836219000[m
[36m[10:57:00.900992] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836218000-1698836219000[m
[36m[10:57:00.901079] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:00.901101] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:00.903768] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836218000,1698836219000,10,326095622,1698836220901
1698836218000,1698836219000,6,5844438396,1698836220901
1698836218000,1698836219000,11,316919380,1698836220901
1698836218000,1698836219000,4,2128583269,1698836220901
1698836218000,1698836219000,8,16371127771,1698836220901
1698836218000,1698836219000,9,298862021,1698836220901
1698836218000,1698836219000,5,735157802,1698836220901
1698836218000,1698836219000,7,26897167583,1698836220901
1698836218000,1698836219000,1,34642192,1698836220901
[m
[36m[10:57:01.122646] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836221000-1698836222000[m
[36m[10:57:01.305745] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:01.914238] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836219000-1698836220000 [m
[36m[10:57:01.914996] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836219000-1698836220000-47[m
[36m[10:57:01.915086] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836219000-1698836220000[m
[36m[10:57:01.915142] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836219000-1698836220000[m
[36m[10:57:01.915239] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:01.915264] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:01.918184] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836219000,1698836220000,4,2128585759,1698836221915
1698836219000,1698836220000,11,316921516,1698836221915
1698836219000,1698836220000,6,5844440787,1698836221915
1698836219000,1698836220000,9,298864302,1698836221915
1698836219000,1698836220000,8,16371130044,1698836221915
1698836219000,1698836220000,5,735160239,1698836221915
1698836219000,1698836220000,10,326097956,1698836221915
1698836219000,1698836220000,7,26897169942,1698836221915
1698836219000,1698836220000,1,34646186,1698836221915
[m
[36m[10:57:02.115566] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836222000-1698836223000[m
[36m[10:57:02.307002] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:02.323808] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:02.324152] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:02.325169] [D] [thread 130015] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:02.325266] [I] [thread 130015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:02.325283] [I] [thread 130015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:02.325397] [I] [thread 130015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:02.325466] [I] [thread 130015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:02.539329] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:02.539692] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:02.930455] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836220000-1698836221000 [m
[36m[10:57:02.931254] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836220000-1698836221000-48[m
[36m[10:57:02.931367] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836220000-1698836221000[m
[36m[10:57:02.931444] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836220000-1698836221000[m
[36m[10:57:02.931563] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:02.931592] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:02.935485] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836220000,1698836221000,11,316924202,1698836222931
1698836220000,1698836221000,4,2128588122,1698836222931
1698836220000,1698836221000,8,16371132586,1698836222931
1698836220000,1698836221000,6,5844443256,1698836222931
1698836220000,1698836221000,9,298866862,1698836222931
1698836220000,1698836221000,5,735162629,1698836222931
1698836220000,1698836221000,10,326100582,1698836222931
1698836220000,1698836221000,7,26897172453,1698836222931
1698836220000,1698836221000,1,34651795,1698836222931
[m
[36m[10:57:03.113284] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836223000-1698836224000[m
[36m[10:57:03.540960] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:03.948149] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836221000-1698836222000 [m
[36m[10:57:03.948936] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836221000-1698836222000-49[m
[36m[10:57:03.949042] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836221000-1698836222000[m
[36m[10:57:03.949109] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836221000-1698836222000[m
[36m[10:57:03.949213] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:03.949240] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:03.952679] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836221000,1698836222000,4,2128590446,1698836223949
1698836221000,1698836222000,11,316926346,1698836223949
1698836221000,1698836222000,8,16371134792,1698836223949
1698836221000,1698836222000,9,298869037,1698836223949
1698836221000,1698836222000,6,5844445533,1698836223949
1698836221000,1698836222000,5,735164919,1698836223949
1698836221000,1698836222000,10,326102762,1698836223949
1698836221000,1698836222000,7,26897174702,1698836223949
1698836221000,1698836222000,1,34655877,1698836223949
[m
[36m[10:57:04.119599] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836224000-1698836225000[m
[36m[10:57:04.542226] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:04.549102] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:04.549454] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:04.550704] [D] [thread 130020] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:04.550808] [I] [thread 130020] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:04.550825] [I] [thread 130020] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:04.550912] [I] [thread 130020] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:04.550924] [I] [thread 130020] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:04.770023] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:04.770379] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:04.962811] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836222000-1698836223000 [m
[36m[10:57:04.963463] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836222000-1698836223000-50[m
[36m[10:57:04.963550] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836222000-1698836223000[m
[36m[10:57:04.963593] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836222000-1698836223000[m
[36m[10:57:04.963668] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:04.963683] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:04.965508] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836222000,1698836223000,9,298871866,1698836224963
1698836222000,1698836223000,11,316928930,1698836224963
1698836222000,1698836223000,8,16371137567,1698836224963
1698836222000,1698836223000,6,5844448100,1698836224963
1698836222000,1698836223000,4,2128593090,1698836224963
1698836222000,1698836223000,5,735167488,1698836224963
1698836222000,1698836223000,10,326105451,1698836224963
1698836222000,1698836223000,7,26897177326,1698836224963
1698836222000,1698836223000,1,34661548,1698836224963
[m
[36m[10:57:05.119084] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836225000-1698836226000[m
[36m[10:57:05.771621] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:05.977828] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836223000-1698836224000 [m
[36m[10:57:05.978637] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836223000-1698836224000-51[m
[36m[10:57:05.978711] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836223000-1698836224000[m
[36m[10:57:05.978763] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836223000-1698836224000[m
[36m[10:57:05.978859] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:05.978882] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:05.981752] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836223000,1698836224000,11,316931355,1698836225978
1698836223000,1698836224000,6,5844450276,1698836225978
1698836223000,1698836224000,5,735169667,1698836225978
1698836223000,1698836224000,10,326107608,1698836225978
1698836223000,1698836224000,7,26897179538,1698836225978
1698836223000,1698836224000,4,2128595520,1698836225978
1698836223000,1698836224000,9,298874137,1698836225978
1698836223000,1698836224000,8,16371139855,1698836225978
1698836223000,1698836224000,1,34665656,1698836225978
[m
[36m[10:57:06.149861] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836226000-1698836227000[m
[36m[10:57:06.769932] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:06.770318] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:06.771379] [D] [thread 130026] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:06.771478] [I] [thread 130026] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:06.771494] [I] [thread 130026] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:06.771608] [I] [thread 130026] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:06.771672] [I] [thread 130026] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:06.982273] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:06.982618] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:06.993051] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836224000-1698836225000 [m
[36m[10:57:06.993649] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836224000-1698836225000-52[m
[36m[10:57:06.993716] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836224000-1698836225000[m
[36m[10:57:06.993756] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836224000-1698836225000[m
[36m[10:57:06.993824] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:06.993839] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:06.995659] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836224000,1698836225000,6,5844452901,1698836226993
1698836224000,1698836225000,5,735172326,1698836226993
1698836224000,1698836225000,10,326110163,1698836226993
1698836224000,1698836225000,7,26897182170,1698836226993
1698836224000,1698836225000,9,298876694,1698836226993
1698836224000,1698836225000,4,2128598037,1698836226993
1698836224000,1698836225000,11,316933989,1698836226993
1698836224000,1698836225000,8,16371142471,1698836226993
1698836224000,1698836225000,1,34669242,1698836226993
[m
[36m[10:57:07.144519] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836227000-1698836228000[m
[36m[10:57:07.983860] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:08.006677] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836225000-1698836226000 [m
[36m[10:57:08.007529] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836225000-1698836226000-53[m
[36m[10:57:08.007642] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836225000-1698836226000[m
[36m[10:57:08.007712] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836225000-1698836226000[m
[36m[10:57:08.007830] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:08.007863] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:08.011749] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836225000,1698836226000,6,5844455254,1698836228007
1698836225000,1698836226000,5,735174521,1698836228007
1698836225000,1698836226000,10,326112561,1698836228007
1698836225000,1698836226000,4,2128600251,1698836228007
1698836225000,1698836226000,7,26897184404,1698836228007
1698836225000,1698836226000,11,316936358,1698836228007
1698836225000,1698836226000,9,298879080,1698836228007
1698836225000,1698836226000,8,16371144761,1698836228007
1698836225000,1698836226000,1,34673065,1698836228007
[m
[36m[10:57:08.140249] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836228000-1698836229000[m
[36m[10:57:08.985132] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:09.024558] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836226000-1698836227000 [m
[36m[10:57:09.024746] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836227000-1698836228000 [m
[36m[10:57:09.025263] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836226000-1698836227000-54[m
[36m[10:57:09.025350] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836226000-1698836227000[m
[36m[10:57:09.025393] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836226000-1698836227000[m
[36m[10:57:09.025473] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:09.025491] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:09.027301] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836226000,1698836227000,5,735177112,1698836229025
1698836226000,1698836227000,10,326114917,1698836229025
1698836226000,1698836227000,4,2128602961,1698836229025
1698836226000,1698836227000,8,16371147282,1698836229025
1698836226000,1698836227000,9,298881496,1698836229025
1698836226000,1698836227000,7,26897186976,1698836229025
1698836226000,1698836227000,11,316938760,1698836229025
1698836226000,1698836227000,6,5844457968,1698836229025
1698836226000,1698836227000,1,34678902,1698836229025
[m
[36m[10:57:09.028022] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836227000-1698836228000-55[m
[36m[10:57:09.028123] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836227000-1698836228000[m
[36m[10:57:09.028170] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836227000-1698836228000[m
[36m[10:57:09.028252] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:09.028267] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:09.029925] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836227000,1698836228000,5,735179431,1698836229028
1698836227000,1698836228000,10,326117412,1698836229028
1698836227000,1698836228000,4,2128605172,1698836229028
1698836227000,1698836228000,8,16371149639,1698836229028
1698836227000,1698836228000,7,26897189250,1698836229028
1698836227000,1698836228000,9,298883877,1698836229028
1698836227000,1698836228000,11,316941246,1698836229028
1698836227000,1698836228000,6,5844460259,1698836229028
[m
[36m[10:57:09.034544] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:09.034919] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:09.036742] [D] [thread 130031] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:09.036841] [I] [thread 130031] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:09.036858] [I] [thread 130031] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:09.036969] [I] [thread 130031] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:09.036988] [I] [thread 130031] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:09.130710] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836229000-1698836230000[m
[36m[10:57:09.272654] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:09.272955] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:10.036773] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836228000-1698836229000 [m
[36m[10:57:10.037676] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836228000-1698836229000-56[m
[36m[10:57:10.037777] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836228000-1698836229000[m
[36m[10:57:10.037838] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836228000-1698836229000[m
[36m[10:57:10.037938] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:10.037963] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:10.040972] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836228000,1698836229000,5,735181843,1698836230037
1698836228000,1698836229000,10,326119680,1698836230037
1698836228000,1698836229000,4,2128607650,1698836230037
1698836228000,1698836229000,8,16371151963,1698836230037
1698836228000,1698836229000,9,298886236,1698836230037
1698836228000,1698836229000,7,26897191624,1698836230037
1698836228000,1698836229000,11,316943440,1698836230037
1698836228000,1698836229000,6,5844462657,1698836230037
1698836228000,1698836229000,1,34682710,1698836230037
[m
[36m[10:57:10.124928] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836230000-1698836231000[m
[36m[10:57:10.274155] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:11.052780] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836229000-1698836230000 [m
[36m[10:57:11.053601] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836229000-1698836230000-57[m
[36m[10:57:11.053675] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836229000-1698836230000[m
[36m[10:57:11.053728] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836229000-1698836230000[m
[36m[10:57:11.053830] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:11.053855] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:11.057192] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836229000,1698836230000,5,735184248,1698836231053
1698836229000,1698836230000,10,326122255,1698836231053
1698836229000,1698836230000,9,298888734,1698836231053
1698836229000,1698836230000,4,2128609953,1698836231053
1698836229000,1698836230000,8,16371154450,1698836231053
1698836229000,1698836230000,11,316946063,1698836231053
1698836229000,1698836230000,7,26897194044,1698836231053
1698836229000,1698836230000,6,5844465015,1698836231053
1698836229000,1698836230000,1,34686785,1698836231053
[m
[36m[10:57:11.128153] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836231000-1698836232000[m
[36m[10:57:11.275573] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:11.377128] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:11.377450] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:11.378572] [D] [thread 130036] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:11.378698] [I] [thread 130036] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:11.378716] [I] [thread 130036] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:11.378835] [I] [thread 130036] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:11.378848] [I] [thread 130036] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:11.594322] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:11.594662] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:12.069251] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836230000-1698836231000 [m
[36m[10:57:12.070106] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836230000-1698836231000-58[m
[36m[10:57:12.070408] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836230000-1698836231000[m
[36m[10:57:12.070494] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836230000-1698836231000[m
[36m[10:57:12.070638] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:12.070673] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:12.073758] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836230000,1698836231000,5,735186538,1698836232070
1698836230000,1698836231000,10,326124431,1698836232070
1698836230000,1698836231000,9,298890860,1698836232070
1698836230000,1698836231000,4,2128612333,1698836232070
1698836230000,1698836231000,8,16371156622,1698836232070
1698836230000,1698836231000,11,316948234,1698836232070
1698836230000,1698836231000,7,26897196345,1698836232070
1698836230000,1698836231000,6,5844467331,1698836232070
1698836230000,1698836231000,1,34692897,1698836232070
[m
[36m[10:57:12.112397] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836232000-1698836233000[m
[36m[10:57:12.595867] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:13.085615] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836231000-1698836232000 [m
[36m[10:57:13.086375] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836231000-1698836232000-59[m
[36m[10:57:13.086539] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836231000-1698836232000[m
[36m[10:57:13.086595] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836231000-1698836232000[m
[36m[10:57:13.086684] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:13.086704] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:13.088894] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836231000,1698836232000,5,735189105,1698836233086
1698836231000,1698836232000,9,298893582,1698836233086
1698836231000,1698836232000,10,326127103,1698836233086
1698836231000,1698836232000,8,16371159329,1698836233086
1698836231000,1698836232000,4,2128614826,1698836233086
1698836231000,1698836232000,11,316950865,1698836233086
1698836231000,1698836232000,7,26897198960,1698836233086
1698836231000,1698836232000,6,5844469902,1698836233086
1698836231000,1698836232000,1,34696976,1698836233086
[m
[36m[10:57:13.118164] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836233000-1698836234000[m
[36m[10:57:13.597163] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:13.700533] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:13.700892] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:13.701830] [D] [thread 130041] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:13.701924] [I] [thread 130041] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:13.701940] [I] [thread 130041] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:13.702054] [I] [thread 130041] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:13.702067] [I] [thread 130041] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:13.962677] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:13.963025] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:14.098554] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836232000-1698836233000 [m
[36m[10:57:14.099403] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836232000-1698836233000-60[m
[36m[10:57:14.099510] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836232000-1698836233000[m
[36m[10:57:14.099581] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836232000-1698836233000[m
[36m[10:57:14.099696] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:14.099728] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:14.103653] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836232000,1698836233000,9,298895911,1698836234099
1698836232000,1698836233000,5,735191311,1698836234099
1698836232000,1698836233000,10,326129368,1698836234099
1698836232000,1698836233000,4,2128617003,1698836234099
1698836232000,1698836233000,8,16371161552,1698836234099
1698836232000,1698836233000,6,5844472122,1698836234099
1698836232000,1698836233000,11,316953177,1698836234099
1698836232000,1698836233000,7,26897201159,1698836234099
1698836232000,1698836233000,1,34702711,1698836234099
[m
[36m[10:57:14.116460] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836234000-1698836235000[m
[36m[10:57:14.964232] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:15.108747] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836235000-1698836236000[m
[36m[10:57:15.116424] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836233000-1698836234000 [m
[36m[10:57:15.117477] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836233000-1698836234000-61[m
[36m[10:57:15.117593] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836233000-1698836234000[m
[36m[10:57:15.117667] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836233000-1698836234000[m
[36m[10:57:15.117792] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:15.117824] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:15.120995] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836233000,1698836234000,5,735194019,1698836235117
1698836233000,1698836234000,4,2128619648,1698836235117
1698836233000,1698836234000,10,326131818,1698836235117
1698836233000,1698836234000,8,16371164028,1698836235117
1698836233000,1698836234000,6,5844474773,1698836235117
1698836233000,1698836234000,11,316955624,1698836235117
1698836233000,1698836234000,7,26897203744,1698836235117
1698836233000,1698836234000,9,298898498,1698836235117
1698836233000,1698836234000,1,34704895,1698836235117
[m
[36m[10:57:15.965494] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:15.978821] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:15.979166] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:15.980123] [D] [thread 130046] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:15.980215] [I] [thread 130046] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:15.980232] [I] [thread 130046] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:15.980350] [I] [thread 130046] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:15.980364] [I] [thread 130046] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:16.133659] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836234000-1698836235000 [m
[36m[10:57:16.134658] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836234000-1698836235000-62[m
[36m[10:57:16.134759] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836234000-1698836235000[m
[36m[10:57:16.134824] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836234000-1698836235000[m
[36m[10:57:16.134938] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:16.134966] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:16.138697] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836234000,1698836235000,4,2128621955,1698836236134
1698836234000,1698836235000,10,326134249,1698836236134
1698836234000,1698836235000,8,16371166370,1698836236134
1698836234000,1698836235000,11,316958013,1698836236134
1698836234000,1698836235000,6,5844476967,1698836236134
1698836234000,1698836235000,7,26897206051,1698836236134
1698836234000,1698836235000,9,298900816,1698836236134
1698836234000,1698836235000,5,735196267,1698836236134
1698836234000,1698836235000,1,34710323,1698836236134
[m
[36m[10:57:16.141415] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836236000-1698836237000[m
[36m[10:57:16.188964] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:16.189293] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:17.120755] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836237000-1698836238000[m
[36m[10:57:17.148799] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836235000-1698836236000 [m
[36m[10:57:17.149819] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836235000-1698836236000-63[m
[36m[10:57:17.149931] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836235000-1698836236000[m
[36m[10:57:17.150002] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836235000-1698836236000[m
[36m[10:57:17.150123] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:17.150154] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:17.154750] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836235000,1698836236000,10,326136635,1698836237150
1698836235000,1698836236000,5,735198756,1698836237150
1698836235000,1698836236000,8,16371168713,1698836237150
1698836235000,1698836236000,11,316960253,1698836237150
1698836235000,1698836236000,7,26897208436,1698836237150
1698836235000,1698836236000,6,5844479463,1698836237150
1698836235000,1698836236000,9,298903179,1698836237150
1698836235000,1698836236000,4,2128624636,1698836237150
1698836235000,1698836236000,1,34714412,1698836237150
[m
[36m[10:57:17.190512] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:18.120296] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836238000-1698836239000[m
[36m[10:57:18.164593] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836236000-1698836237000 [m
[36m[10:57:18.165499] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836236000-1698836237000-64[m
[36m[10:57:18.165602] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836236000-1698836237000[m
[36m[10:57:18.165663] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836236000-1698836237000[m
[36m[10:57:18.165768] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:18.165795] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:18.169590] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836236000,1698836237000,8,16371171235,1698836238165
1698836236000,1698836237000,11,316962920,1698836238165
1698836236000,1698836237000,7,26897210838,1698836238165
1698836236000,1698836237000,6,5844481862,1698836238165
1698836236000,1698836237000,4,2128626923,1698836238165
1698836236000,1698836237000,9,298905644,1698836238165
1698836236000,1698836237000,5,735201212,1698836238165
1698836236000,1698836237000,10,326139289,1698836238165
1698836236000,1698836237000,1,34719157,1698836238165
[m
[36m[10:57:18.191736] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:18.343592] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:18.343941] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:18.345133] [D] [thread 130051] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:18.345227] [I] [thread 130051] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:18.345244] [I] [thread 130051] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:18.345360] [I] [thread 130051] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:18.345372] [I] [thread 130051] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:18.556206] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:18.556574] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:19.135131] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836239000-1698836240000[m
[36m[10:57:19.179798] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836237000-1698836238000 [m
[36m[10:57:19.180603] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836237000-1698836238000-65[m
[36m[10:57:19.180706] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836237000-1698836238000[m
[36m[10:57:19.180768] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836237000-1698836238000[m
[36m[10:57:19.180871] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:19.180899] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:19.184263] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836237000,1698836238000,11,316965168,1698836239180
1698836237000,1698836238000,8,16371173430,1698836239180
1698836237000,1698836238000,7,26897213063,1698836239180
1698836237000,1698836238000,6,5844484177,1698836239180
1698836237000,1698836238000,4,2128629264,1698836239180
1698836237000,1698836238000,9,298907830,1698836239180
1698836237000,1698836238000,10,326141448,1698836239180
1698836237000,1698836238000,5,735203522,1698836239180
1698836237000,1698836238000,1,34723661,1698836239180
[m
[36m[10:57:19.557819] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:20.129242] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836240000-1698836241000[m
[36m[10:57:20.195766] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836238000-1698836239000 [m
[36m[10:57:20.196539] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836238000-1698836239000-66[m
[36m[10:57:20.196614] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836238000-1698836239000[m
[36m[10:57:20.196651] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836238000-1698836239000[m
[36m[10:57:20.196709] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:20.196723] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:20.198481] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836238000,1698836239000,8,16371176203,1698836240196
1698836238000,1698836239000,7,26897215714,1698836240196
1698836238000,1698836239000,6,5844486673,1698836240196
1698836238000,1698836239000,9,298910460,1698836240196
1698836238000,1698836239000,4,2128631752,1698836240196
1698836238000,1698836239000,10,326144130,1698836240196
1698836238000,1698836239000,5,735206053,1698836240196
1698836238000,1698836239000,11,316967920,1698836240196
1698836238000,1698836239000,1,34727801,1698836240196
[m
[36m[10:57:20.559124] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:20.614016] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:20.614591] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:20.616277] [D] [thread 130056] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:20.616381] [I] [thread 130056] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:20.616399] [I] [thread 130056] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:20.616513] [I] [thread 130056] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:20.616563] [I] [thread 130056] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:20.786381] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:20.786995] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:21.119357] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836241000-1698836242000[m
[36m[10:57:21.207839] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836239000-1698836240000 [m
[36m[10:57:21.208579] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836239000-1698836240000-67[m
[36m[10:57:21.208646] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836239000-1698836240000[m
[36m[10:57:21.208687] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836239000-1698836240000[m
[36m[10:57:21.208877] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:21.208914] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:21.210939] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836239000,1698836240000,7,26897217925,1698836241208
1698836239000,1698836240000,6,5844488881,1698836241208
1698836239000,1698836240000,4,2128633942,1698836241208
1698836239000,1698836240000,9,298912712,1698836241208
1698836239000,1698836240000,10,326146341,1698836241208
1698836239000,1698836240000,11,316970171,1698836241208
1698836239000,1698836240000,5,735208252,1698836241208
1698836239000,1698836240000,8,16371178525,1698836241208
1698836239000,1698836240000,1,34733419,1698836241208
[m
[36m[10:57:21.788229] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:22.119359] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836242000-1698836243000[m
[36m[10:57:22.219389] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836240000-1698836241000 [m
[36m[10:57:22.220255] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836240000-1698836241000-68[m
[36m[10:57:22.220367] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836240000-1698836241000[m
[36m[10:57:22.220441] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836240000-1698836241000[m
[36m[10:57:22.220557] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:22.220587] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:22.224514] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836240000,1698836241000,7,26897220482,1698836242220
1698836240000,1698836241000,6,5844491553,1698836242220
1698836240000,1698836241000,9,298915222,1698836242220
1698836240000,1698836241000,4,2128636617,1698836242220
1698836240000,1698836241000,10,326148866,1698836242220
1698836240000,1698836241000,5,735210948,1698836242220
1698836240000,1698836241000,11,316972667,1698836242220
1698836240000,1698836241000,8,16371181124,1698836242220
1698836240000,1698836241000,1,34737449,1698836242220
[m
[36m[10:57:22.789502] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:22.843290] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:22.843649] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:22.844599] [D] [thread 130061] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:22.844695] [I] [thread 130061] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:22.844712] [I] [thread 130061] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:22.844828] [I] [thread 130061] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:22.844841] [I] [thread 130061] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:23.035127] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:23.035478] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:23.110311] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836243000-1698836244000[m
[36m[10:57:23.235134] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836241000-1698836242000 [m
[36m[10:57:23.235935] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836241000-1698836242000-69[m
[36m[10:57:23.236036] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836241000-1698836242000[m
[36m[10:57:23.236098] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836241000-1698836242000[m
[36m[10:57:23.236204] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:23.236232] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:23.239649] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836241000,1698836242000,7,26897222725,1698836243236
1698836241000,1698836242000,9,298917540,1698836243236
1698836241000,1698836242000,6,5844493792,1698836243236
1698836241000,1698836242000,4,2128638790,1698836243236
1698836241000,1698836242000,10,326151161,1698836243236
1698836241000,1698836242000,5,735213113,1698836243236
1698836241000,1698836242000,11,316975028,1698836243236
1698836241000,1698836242000,8,16371183398,1698836243236
1698836241000,1698836242000,1,34741053,1698836243236
[m
[36m[10:57:24.036688] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:24.129481] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836244000-1698836245000[m
[36m[10:57:24.251399] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836242000-1698836243000 [m
[36m[10:57:24.252268] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836242000-1698836243000-70[m
[36m[10:57:24.252370] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836242000-1698836243000[m
[36m[10:57:24.252432] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836242000-1698836243000[m
[36m[10:57:24.252536] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:24.252565] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:24.255939] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836242000,1698836243000,7,26897225228,1698836244252
1698836242000,1698836243000,9,298919929,1698836244252
1698836242000,1698836243000,6,5844496273,1698836244252
1698836242000,1698836243000,4,2128641365,1698836244252
1698836242000,1698836243000,10,326153512,1698836244252
1698836242000,1698836243000,5,735215674,1698836244252
1698836242000,1698836243000,11,316977397,1698836244252
1698836242000,1698836243000,8,16371185839,1698836244252
1698836242000,1698836243000,1,34745119,1698836244252
[m
[36m[10:57:25.037997] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:25.049454] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:25.049793] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:25.050919] [D] [thread 130066] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:25.051018] [I] [thread 130066] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:25.051035] [I] [thread 130066] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:25.051149] [I] [thread 130066] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:25.051163] [I] [thread 130066] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:25.128556] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836245000-1698836246000[m
[36m[10:57:25.229721] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:25.230081] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:25.267930] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836243000-1698836244000 [m
[36m[10:57:25.268683] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836243000-1698836244000-71[m
[36m[10:57:25.268781] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836243000-1698836244000[m
[36m[10:57:25.268836] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836243000-1698836244000[m
[36m[10:57:25.268929] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:25.268954] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:25.271911] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836243000,1698836244000,7,26897227710,1698836245268
1698836243000,1698836244000,9,298922525,1698836245268
1698836243000,1698836244000,4,2128643690,1698836245268
1698836243000,1698836244000,6,5844498597,1698836245268
1698836243000,1698836244000,10,326155990,1698836245268
1698836243000,1698836244000,5,735217993,1698836245268
1698836243000,1698836244000,11,316979888,1698836245268
1698836243000,1698836244000,8,16371188277,1698836245268
1698836243000,1698836244000,1,34750756,1698836245268
[m
[36m[10:57:26.117158] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836246000-1698836247000[m
[36m[10:57:26.231281] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:26.282979] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836244000-1698836245000 [m
[36m[10:57:26.283771] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836244000-1698836245000-72[m
[36m[10:57:26.283873] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836244000-1698836245000[m
[36m[10:57:26.283933] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836244000-1698836245000[m
[36m[10:57:26.284036] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:26.284062] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:26.287434] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836244000,1698836245000,4,2128646111,1698836246284
1698836244000,1698836245000,6,5844501013,1698836246284
1698836244000,1698836245000,10,326158239,1698836246284
1698836244000,1698836245000,5,735220417,1698836246284
1698836244000,1698836245000,11,316982104,1698836246284
1698836244000,1698836245000,8,16371190578,1698836246284
1698836244000,1698836245000,9,298924940,1698836246284
1698836244000,1698836245000,7,26897230205,1698836246284
1698836244000,1698836245000,1,34754760,1698836246284
[m
[36m[10:57:27.126351] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836247000-1698836248000[m
[36m[10:57:27.232492] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:27.236750] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:27.237492] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:27.238396] [D] [thread 130071] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:27.238503] [I] [thread 130071] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:27.238522] [I] [thread 130071] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:27.238615] [I] [thread 130071] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:27.238630] [I] [thread 130071] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:27.298732] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836245000-1698836246000 [m
[36m[10:57:27.299622] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836245000-1698836246000-73[m
[36m[10:57:27.299736] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836245000-1698836246000[m
[36m[10:57:27.299806] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836245000-1698836246000[m
[36m[10:57:27.299927] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:27.299958] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:27.303841] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836245000,1698836246000,4,2128648502,1698836247299
1698836245000,1698836246000,10,326160868,1698836247299
1698836245000,1698836246000,6,5844503460,1698836247299
1698836245000,1698836246000,5,735222809,1698836247299
1698836245000,1698836246000,11,316984692,1698836247299
1698836245000,1698836246000,8,16371193108,1698836247299
1698836245000,1698836246000,9,298927455,1698836247299
1698836245000,1698836246000,7,26897232627,1698836247299
1698836245000,1698836246000,1,34760458,1698836247299
[m
[36m[10:57:27.431564] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:27.432127] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:28.113640] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836248000-1698836249000[m
[36m[10:57:28.313887] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836246000-1698836247000 [m
[36m[10:57:28.314606] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836246000-1698836247000-74[m
[36m[10:57:28.314695] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836246000-1698836247000[m
[36m[10:57:28.314739] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836246000-1698836247000[m
[36m[10:57:28.314818] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:28.314834] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:28.317496] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836246000,1698836247000,4,2128651009,1698836248314
1698836246000,1698836247000,6,5844505784,1698836248314
1698836246000,1698836247000,10,326163089,1698836248314
1698836246000,1698836247000,11,316986908,1698836248314
1698836246000,1698836247000,5,735225178,1698836248314
1698836246000,1698836247000,8,16371195337,1698836248314
1698836246000,1698836247000,9,298929715,1698836248314
1698836246000,1698836247000,7,26897234977,1698836248314
1698836246000,1698836247000,1,34764382,1698836248314
[m
[36m[10:57:28.433441] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:29.119097] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836249000-1698836250000[m
[36m[10:57:29.325569] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836247000-1698836248000 [m
[36m[10:57:29.326536] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836247000-1698836248000-75[m
[36m[10:57:29.326607] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836247000-1698836248000[m
[36m[10:57:29.326667] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836247000-1698836248000[m
[36m[10:57:29.326781] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:29.326807] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:29.330135] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836247000,1698836248000,6,5844508370,1698836249326
1698836247000,1698836248000,10,326165763,1698836249326
1698836247000,1698836248000,11,316989534,1698836249326
1698836247000,1698836248000,5,735227692,1698836249326
1698836247000,1698836248000,8,16371197968,1698836249326
1698836247000,1698836248000,9,298932334,1698836249326
1698836247000,1698836248000,7,26897237578,1698836249326
1698836247000,1698836248000,4,2128653655,1698836249326
1698836247000,1698836248000,1,34769511,1698836249326
[m
[36m[10:57:29.434668] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:29.489359] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:29.489749] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:29.491910] [D] [thread 130078] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:29.492033] [I] [thread 130078] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:29.492052] [I] [thread 130078] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:29.492183] [I] [thread 130078] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:29.492201] [I] [thread 130078] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:29.682324] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:29.682651] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:30.116715] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836250000-1698836251000[m
[36m[10:57:30.343589] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836248000-1698836249000 [m
[36m[10:57:30.344450] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836248000-1698836249000-76[m
[36m[10:57:30.344563] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836248000-1698836249000[m
[36m[10:57:30.344636] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836248000-1698836249000[m
[36m[10:57:30.344764] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:30.344796] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:30.347532] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836248000,1698836249000,10,326168030,1698836250344
1698836248000,1698836249000,6,5844510525,1698836250344
1698836248000,1698836249000,11,316991786,1698836250344
1698836248000,1698836249000,5,735229922,1698836250344
1698836248000,1698836249000,8,16371200097,1698836250344
1698836248000,1698836249000,9,298934480,1698836250344
1698836248000,1698836249000,4,2128655885,1698836250344
1698836248000,1698836249000,7,26897239689,1698836250344
1698836248000,1698836249000,1,34774228,1698836250344
[m
[36m[10:57:30.683884] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:31.117744] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836251000-1698836252000[m
[36m[10:57:31.358399] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836249000-1698836250000 [m
[36m[10:57:31.359396] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836249000-1698836250000-77[m
[36m[10:57:31.359509] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836249000-1698836250000[m
[36m[10:57:31.359581] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836249000-1698836250000[m
[36m[10:57:31.359693] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:31.359724] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:31.363310] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836249000,1698836250000,6,5844513250,1698836251359
1698836249000,1698836250000,11,316994267,1698836251359
1698836249000,1698836250000,5,735232510,1698836251359
1698836249000,1698836250000,8,16371202719,1698836251359
1698836249000,1698836250000,9,298937030,1698836251359
1698836249000,1698836250000,4,2128658446,1698836251359
1698836249000,1698836250000,7,26897242390,1698836251359
1698836249000,1698836250000,10,326170724,1698836251359
1698836249000,1698836250000,1,34776016,1698836251359
[m
[36m[10:57:31.685128] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:31.702002] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:31.702663] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:31.703554] [D] [thread 130085] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:31.703671] [I] [thread 130085] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:31.703691] [I] [thread 130085] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:31.703814] [I] [thread 130085] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:31.703837] [I] [thread 130085] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:31.922698] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:31.923042] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:32.114370] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836252000-1698836253000[m
[36m[10:57:32.373449] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836250000-1698836251000 [m
[36m[10:57:32.374421] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836250000-1698836251000-78[m
[36m[10:57:32.374515] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836250000-1698836251000[m
[36m[10:57:32.374570] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836250000-1698836251000[m
[36m[10:57:32.374667] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:32.374692] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:32.377943] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836250000,1698836251000,6,5844515522,1698836252374
1698836250000,1698836251000,5,735234822,1698836252374
1698836250000,1698836251000,11,316996633,1698836252374
1698836250000,1698836251000,9,298939332,1698836252374
1698836250000,1698836251000,8,16371204942,1698836252374
1698836250000,1698836251000,4,2128660613,1698836252374
1698836250000,1698836251000,7,26897244572,1698836252374
1698836250000,1698836251000,10,326173019,1698836252374
1698836250000,1698836251000,1,34781986,1698836252374
[m
[36m[10:57:32.924199] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:33.129539] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836253000-1698836254000[m
[36m[10:57:33.389790] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836251000-1698836252000 [m
[36m[10:57:33.390670] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836251000-1698836252000-79[m
[36m[10:57:33.390769] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836251000-1698836252000[m
[36m[10:57:33.390833] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836251000-1698836252000[m
[36m[10:57:33.390937] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:33.390968] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:33.394354] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836251000,1698836252000,11,316999038,1698836253390
1698836251000,1698836252000,8,16371207448,1698836253390
1698836251000,1698836252000,9,298941801,1698836253390
1698836251000,1698836252000,4,2128663321,1698836253390
1698836251000,1698836252000,7,26897247124,1698836253390
1698836251000,1698836252000,6,5844518269,1698836253390
1698836251000,1698836252000,10,326175481,1698836253390
1698836251000,1698836252000,5,735237601,1698836253390
1698836251000,1698836252000,1,34786020,1698836253390
[m
[36m[10:57:33.925412] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:33.928856] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:33.929184] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:33.930367] [D] [thread 130091] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:33.930462] [I] [thread 130091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:33.930480] [I] [thread 130091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:33.930594] [I] [thread 130091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:33.930618] [I] [thread 130091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:34.123016] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836254000-1698836255000[m
[36m[10:57:34.139561] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:34.139920] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:34.407149] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836252000-1698836253000 [m
[36m[10:57:34.407950] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836252000-1698836253000-80[m
[36m[10:57:34.408063] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836252000-1698836253000[m
[36m[10:57:34.408129] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836252000-1698836253000[m
[36m[10:57:34.408238] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:34.408266] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:34.411506] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836252000,1698836253000,11,317001603,1698836254408
1698836252000,1698836253000,8,16371209913,1698836254408
1698836252000,1698836253000,9,298944150,1698836254408
1698836252000,1698836253000,4,2128665459,1698836254408
1698836252000,1698836253000,7,26897249358,1698836254408
1698836252000,1698836253000,6,5844520485,1698836254408
1698836252000,1698836253000,10,326177862,1698836254408
1698836252000,1698836253000,5,735239791,1698836254408
1698836252000,1698836253000,1,34791727,1698836254408
[m
[36m[10:57:35.118090] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836255000-1698836256000[m
[36m[10:57:35.141359] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:35.423495] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836253000-1698836254000 [m
[36m[10:57:35.424271] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836253000-1698836254000-81[m
[36m[10:57:35.424517] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836253000-1698836254000[m
[36m[10:57:35.424588] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836253000-1698836254000[m
[36m[10:57:35.424694] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:35.424722] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:35.427905] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836253000,1698836254000,9,298946538,1698836255424
1698836253000,1698836254000,4,2128668022,1698836255424
1698836253000,1698836254000,7,26897251813,1698836255424
1698836253000,1698836254000,6,5844523014,1698836255424
1698836253000,1698836254000,5,735242283,1698836255424
1698836253000,1698836254000,10,326180221,1698836255424
1698836253000,1698836254000,8,16371212425,1698836255424
1698836253000,1698836254000,11,317004074,1698836255424
1698836253000,1698836254000,1,34795705,1698836255424
[m
[36m[10:57:36.139508] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836256000-1698836257000[m
[36m[10:57:36.142634] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:36.155779] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:36.156130] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:36.157297] [D] [thread 130096] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:36.157395] [I] [thread 130096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:36.157412] [I] [thread 130096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:36.157530] [I] [thread 130096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:36.157542] [I] [thread 130096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:36.382025] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:36.382592] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:36.441109] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836254000-1698836255000 [m
[36m[10:57:36.441793] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836254000-1698836255000-82[m
[36m[10:57:36.441875] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836254000-1698836255000[m
[36m[10:57:36.441915] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836254000-1698836255000[m
[36m[10:57:36.441985] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:36.441999] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:36.443810] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836254000,1698836255000,9,298949086,1698836256442
1698836254000,1698836255000,4,2128670358,1698836256442
1698836254000,1698836255000,7,26897254259,1698836256442
1698836254000,1698836255000,6,5844525374,1698836256442
1698836254000,1698836255000,5,735244686,1698836256442
1698836254000,1698836255000,8,16371214911,1698836256442
1698836254000,1698836255000,10,326182764,1698836256442
1698836254000,1698836255000,11,317006633,1698836256442
1698836254000,1698836255000,1,34801936,1698836256442
[m
[36m[10:57:37.120713] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836257000-1698836258000[m
[36m[10:57:37.383821] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:37.452075] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836255000-1698836256000 [m
[36m[10:57:37.453191] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836255000-1698836256000-83[m
[36m[10:57:37.453329] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836255000-1698836256000[m
[36m[10:57:37.453411] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836255000-1698836256000[m
[36m[10:57:37.453539] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:37.453568] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:37.457932] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836255000,1698836256000,9,298951459,1698836257453
1698836255000,1698836256000,4,2128672767,1698836257453
1698836255000,1698836256000,7,26897256604,1698836257453
1698836255000,1698836256000,6,5844527708,1698836257453
1698836255000,1698836256000,5,735247084,1698836257453
1698836255000,1698836256000,8,16371217169,1698836257453
1698836255000,1698836256000,10,326184953,1698836257453
1698836255000,1698836256000,11,317008778,1698836257453
1698836255000,1698836256000,1,34805988,1698836257453
[m
[36m[10:57:38.115818] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836258000-1698836259000[m
[36m[10:57:38.385071] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:38.466602] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836256000-1698836257000 [m
[36m[10:57:38.467415] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836256000-1698836257000-84[m
[36m[10:57:38.467499] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836256000-1698836257000[m
[36m[10:57:38.467558] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836256000-1698836257000[m
[36m[10:57:38.467640] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:38.467657] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:38.469521] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836256000,1698836257000,4,2128675190,1698836258467
1698836256000,1698836257000,7,26897259100,1698836258467
1698836256000,1698836257000,5,735249556,1698836258467
1698836256000,1698836257000,6,5844530244,1698836258467
1698836256000,1698836257000,8,16371219731,1698836258467
1698836256000,1698836257000,10,326187606,1698836258467
1698836256000,1698836257000,11,317011456,1698836258467
1698836256000,1698836257000,9,298954162,1698836258467
1698836256000,1698836257000,1,34811727,1698836258467
[m
[36m[10:57:38.486051] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:38.486647] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:38.487536] [D] [thread 130101] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:38.487633] [I] [thread 130101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:38.487650] [I] [thread 130101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:38.487767] [I] [thread 130101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:38.487779] [I] [thread 130101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:38.701344] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:38.702163] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:39.147544] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836259000-1698836260000[m
[36m[10:57:39.477284] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836257000-1698836258000 [m
[36m[10:57:39.478049] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836257000-1698836258000-85[m
[36m[10:57:39.478150] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836257000-1698836258000[m
[36m[10:57:39.478266] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836257000-1698836258000[m
[36m[10:57:39.478390] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:39.478418] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:39.481805] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836257000,1698836258000,4,2128677381,1698836259478
1698836257000,1698836258000,7,26897261219,1698836259478
1698836257000,1698836258000,6,5844532462,1698836259478
1698836257000,1698836258000,5,735251739,1698836259478
1698836257000,1698836258000,8,16371221863,1698836259478
1698836257000,1698836258000,11,317013620,1698836259478
1698836257000,1698836258000,10,326189752,1698836259478
1698836257000,1698836258000,9,298956303,1698836259478
1698836257000,1698836258000,1,34813295,1698836259478
[m
[36m[10:57:39.703493] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:40.136471] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836260000-1698836261000[m
[36m[10:57:40.492144] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836258000-1698836259000 [m
[36m[10:57:40.493044] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836258000-1698836259000-86[m
[36m[10:57:40.493148] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836258000-1698836259000[m
[36m[10:57:40.493208] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836258000-1698836259000[m
[36m[10:57:40.493316] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:40.493349] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:40.497621] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836258000,1698836259000,4,2128680139,1698836260493
1698836258000,1698836259000,7,26897263949,1698836260493
1698836258000,1698836259000,10,326192293,1698836260493
1698836258000,1698836259000,5,735254386,1698836260493
1698836258000,1698836259000,6,5844535126,1698836260493
1698836258000,1698836259000,8,16371224511,1698836260493
1698836258000,1698836259000,11,317016127,1698836260493
1698836258000,1698836259000,9,298958976,1698836260493
1698836258000,1698836259000,1,34817468,1698836260493
[m
[36m[10:57:40.704741] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:40.707911] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:40.708615] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:40.709341] [D] [thread 130107] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:40.709430] [I] [thread 130107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:40.709447] [I] [thread 130107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:40.709564] [I] [thread 130107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:40.709577] [I] [thread 130107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:40.924662] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:40.925163] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:41.121818] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836261000-1698836262000[m
[36m[10:57:41.508217] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836259000-1698836260000 [m
[36m[10:57:41.509161] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836259000-1698836260000-87[m
[36m[10:57:41.509238] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836259000-1698836260000[m
[36m[10:57:41.509290] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836259000-1698836260000[m
[36m[10:57:41.509396] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:41.509422] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:41.512757] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836259000,1698836260000,7,26897266099,1698836261509
1698836259000,1698836260000,10,326194586,1698836261509
1698836259000,1698836260000,11,317018463,1698836261509
1698836259000,1698836260000,6,5844537257,1698836261509
1698836259000,1698836260000,8,16371226715,1698836261509
1698836259000,1698836260000,5,735256566,1698836261509
1698836259000,1698836260000,9,298961183,1698836261509
1698836259000,1698836260000,4,2128682455,1698836261509
1698836259000,1698836260000,1,34823134,1698836261509
[m
[36m[10:57:41.926415] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:42.115991] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836262000-1698836263000[m
[36m[10:57:42.524231] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836260000-1698836261000 [m
[36m[10:57:42.525102] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836260000-1698836261000-88[m
[36m[10:57:42.525210] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836260000-1698836261000[m
[36m[10:57:42.525281] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836260000-1698836261000[m
[36m[10:57:42.525403] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:42.525435] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:42.529344] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836260000,1698836261000,7,26897268627,1698836262525
1698836260000,1698836261000,8,16371229240,1698836262525
1698836260000,1698836261000,11,317020856,1698836262525
1698836260000,1698836261000,10,326197035,1698836262525
1698836260000,1698836261000,6,5844539900,1698836262525
1698836260000,1698836261000,5,735259174,1698836262525
1698836260000,1698836261000,9,298963661,1698836262525
1698836260000,1698836261000,4,2128685064,1698836262525
1698836260000,1698836261000,1,34827154,1698836262525
[m
[36m[10:57:42.927252] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:43.026054] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:43.026409] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:43.027627] [D] [thread 130112] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:43.027734] [I] [thread 130112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:43.027751] [I] [thread 130112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:43.027852] [I] [thread 130112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:43.027864] [I] [thread 130112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:43.121163] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836263000-1698836264000[m
[36m[10:57:43.282296] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:43.282621] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:43.541765] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836261000-1698836262000 [m
[36m[10:57:43.542822] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836261000-1698836262000-89[m
[36m[10:57:43.542941] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836261000-1698836262000[m
[36m[10:57:43.543013] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836261000-1698836262000[m
[36m[10:57:43.543133] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:43.543164] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:43.547585] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836261000,1698836262000,7,26897270913,1698836263543
1698836261000,1698836262000,8,16371231591,1698836263543
1698836261000,1698836262000,11,317023331,1698836263543
1698836261000,1698836262000,6,5844542171,1698836263543
1698836261000,1698836262000,10,326199468,1698836263543
1698836261000,1698836262000,9,298966044,1698836263543
1698836261000,1698836262000,5,735261427,1698836263543
1698836261000,1698836262000,4,2128687227,1698836263543
1698836261000,1698836262000,1,34832907,1698836263543
[m
[36m[10:57:44.118992] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836264000-1698836265000[m
[36m[10:57:44.283888] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:44.557407] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836262000-1698836263000 [m
[36m[10:57:44.558116] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836262000-1698836263000-90[m
[36m[10:57:44.558344] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836262000-1698836263000[m
[36m[10:57:44.558392] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836262000-1698836263000[m
[36m[10:57:44.558476] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:44.558495] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:44.560686] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836262000,1698836263000,7,26897273469,1698836264558
1698836262000,1698836263000,11,317025591,1698836264558
1698836262000,1698836263000,8,16371233939,1698836264558
1698836262000,1698836263000,9,298968394,1698836264558
1698836262000,1698836263000,10,326201749,1698836264558
1698836262000,1698836263000,6,5844544598,1698836264558
1698836262000,1698836263000,5,735263869,1698836264558
1698836262000,1698836263000,4,2128689774,1698836264558
1698836262000,1698836263000,1,34837009,1698836264558
[m
[36m[10:57:45.120691] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836265000-1698836266000[m
[36m[10:57:45.285287] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:45.393193] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:45.393546] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:45.394567] [D] [thread 130118] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:45.394663] [I] [thread 130118] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:45.394680] [I] [thread 130118] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:45.394796] [I] [thread 130118] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:45.394808] [I] [thread 130118] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:45.569305] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:45.569851] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:45.575919] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836263000-1698836264000 [m
[36m[10:57:45.576730] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836263000-1698836264000-91[m
[36m[10:57:45.576812] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836263000-1698836264000[m
[36m[10:57:45.576956] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836263000-1698836264000[m
[36m[10:57:45.577042] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:45.577081] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:45.579264] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836263000,1698836264000,11,317028322,1698836265577
1698836263000,1698836264000,9,298970938,1698836265577
1698836263000,1698836264000,8,16371236450,1698836265577
1698836263000,1698836264000,6,5844546999,1698836265577
1698836263000,1698836264000,10,326204280,1698836265577
1698836263000,1698836264000,5,735266289,1698836265577
1698836263000,1698836264000,4,2128692130,1698836265577
1698836263000,1698836264000,7,26897276045,1698836265577
1698836263000,1698836264000,1,34842813,1698836265577
[m
[36m[10:57:46.123253] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836266000-1698836267000[m
[36m[10:57:46.570524] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:46.581185] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836264000-1698836265000 [m
[36m[10:57:46.581980] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836264000-1698836265000-92[m
[36m[10:57:46.582079] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836264000-1698836265000[m
[36m[10:57:46.582140] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836264000-1698836265000[m
[36m[10:57:46.582302] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:46.582337] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:46.585640] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836264000,1698836265000,8,16371238768,1698836266582
1698836264000,1698836265000,9,298973092,1698836266582
1698836264000,1698836265000,6,5844549204,1698836266582
1698836264000,1698836265000,10,326206473,1698836266582
1698836264000,1698836265000,5,735268544,1698836266582
1698836264000,1698836265000,4,2128694465,1698836266582
1698836264000,1698836265000,7,26897278248,1698836266582
1698836264000,1698836265000,11,317030608,1698836266582
1698836264000,1698836265000,1,34846856,1698836266582
[m
[36m[10:57:47.123727] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836267000-1698836268000[m
[36m[10:57:47.571781] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:47.583961] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:47.584312] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:47.585554] [D] [thread 130125] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:47.585653] [I] [thread 130125] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:47.585670] [I] [thread 130125] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:47.585790] [I] [thread 130125] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:47.585823] [I] [thread 130125] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:47.596565] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836265000-1698836266000 [m
[36m[10:57:47.597140] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836265000-1698836266000-93[m
[36m[10:57:47.597223] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836265000-1698836266000[m
[36m[10:57:47.597270] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836265000-1698836266000[m
[36m[10:57:47.597350] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:47.597370] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:47.599807] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836265000,1698836266000,9,298975783,1698836267597
1698836265000,1698836266000,6,5844551842,1698836267597
1698836265000,1698836266000,10,326209006,1698836267597
1698836265000,1698836266000,5,735271086,1698836267597
1698836265000,1698836266000,4,2128696927,1698836267597
1698836265000,1698836266000,7,26897280821,1698836267597
1698836265000,1698836266000,11,317033173,1698836267597
1698836265000,1698836266000,8,16371241469,1698836267597
1698836265000,1698836266000,1,34849412,1698836267597
[m
[36m[10:57:47.801737] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:47.802135] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:48.115847] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836268000-1698836269000[m
[36m[10:57:48.610098] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836266000-1698836267000 [m
[36m[10:57:48.611003] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836266000-1698836267000-94[m
[36m[10:57:48.611118] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836266000-1698836267000[m
[36m[10:57:48.611188] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836266000-1698836267000[m
[36m[10:57:48.611303] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:48.611334] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:48.615260] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836266000,1698836267000,10,326211448,1698836268611
1698836266000,1698836267000,6,5844553986,1698836268611
1698836266000,1698836267000,5,735273263,1698836268611
1698836266000,1698836267000,4,2128699154,1698836268611
1698836266000,1698836267000,7,26897283048,1698836268611
1698836266000,1698836267000,11,317035432,1698836268611
1698836266000,1698836267000,8,16371243686,1698836268611
1698836266000,1698836267000,9,298978157,1698836268611
1698836266000,1698836267000,1,34854229,1698836268611
[m
[36m[10:57:48.803347] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:49.134706] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836269000-1698836270000[m
[36m[10:57:49.626617] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836267000-1698836268000 [m
[36m[10:57:49.627413] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836267000-1698836268000-95[m
[36m[10:57:49.627513] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836267000-1698836268000[m
[36m[10:57:49.627575] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836267000-1698836268000[m
[36m[10:57:49.627677] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:49.627708] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:49.631090] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836267000,1698836268000,6,5844556626,1698836269627
1698836267000,1698836268000,5,735275975,1698836269627
1698836267000,1698836268000,4,2128701799,1698836269627
1698836267000,1698836268000,7,26897285687,1698836269627
1698836267000,1698836268000,11,317037917,1698836269627
1698836267000,1698836268000,8,16371246269,1698836269627
1698836267000,1698836268000,9,298980715,1698836269627
1698836267000,1698836268000,10,326214076,1698836269627
1698836267000,1698836268000,1,34859253,1698836269627
[m
[36m[10:57:49.804603] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:49.820345] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:49.820707] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:49.821834] [D] [thread 130132] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:49.821929] [I] [thread 130132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:49.821945] [I] [thread 130132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:49.822060] [I] [thread 130132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:49.822072] [I] [thread 130132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:50.089275] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:50.089600] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:50.127853] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836270000-1698836271000[m
[36m[10:57:50.642010] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836268000-1698836269000 [m
[36m[10:57:50.642863] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836268000-1698836269000-96[m
[36m[10:57:50.642963] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836268000-1698836269000[m
[36m[10:57:50.643026] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836268000-1698836269000[m
[36m[10:57:50.643126] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:50.643152] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:50.646564] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836268000,1698836269000,6,5844559011,1698836270643
1698836268000,1698836269000,5,735278190,1698836270643
1698836268000,1698836269000,4,2128703994,1698836270643
1698836268000,1698836269000,7,26897287930,1698836270643
1698836268000,1698836269000,8,16371248608,1698836270643
1698836268000,1698836269000,11,317040335,1698836270643
1698836268000,1698836269000,9,298983035,1698836270643
1698836268000,1698836269000,10,326216461,1698836270643
1698836268000,1698836269000,1,34864270,1698836270643
[m
[36m[10:57:51.090809] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:51.121551] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836271000-1698836272000[m
[36m[10:57:51.659323] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836269000-1698836270000 [m
[36m[10:57:51.660655] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836269000-1698836270000-97[m
[36m[10:57:51.660786] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836269000-1698836270000[m
[36m[10:57:51.660856] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836269000-1698836270000[m
[36m[10:57:51.660970] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:51.661000] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:51.665278] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836269000,1698836270000,5,735280720,1698836271661
1698836269000,1698836270000,4,2128706593,1698836271661
1698836269000,1698836270000,8,16371251057,1698836271661
1698836269000,1698836270000,7,26897290407,1698836271661
1698836269000,1698836270000,11,317042649,1698836271661
1698836269000,1698836270000,9,298985470,1698836271661
1698836269000,1698836270000,10,326218847,1698836271661
1698836269000,1698836270000,6,5844561685,1698836271661
1698836269000,1698836270000,1,34868222,1698836271661
[m
[36m[10:57:52.092039] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:52.109908] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:52.110265] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:52.111391] [D] [thread 130137] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:52.111521] [I] [thread 130137] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:52.111539] [I] [thread 130137] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:52.111654] [I] [thread 130137] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:52.111666] [I] [thread 130137] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:52.112955] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836272000-1698836273000[m
[36m[10:57:52.271660] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:52.272098] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:52.676360] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836270000-1698836271000 [m
[36m[10:57:52.677017] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836270000-1698836271000-98[m
[36m[10:57:52.677095] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836270000-1698836271000[m
[36m[10:57:52.677134] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836270000-1698836271000[m
[36m[10:57:52.677200] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:52.677215] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:52.679049] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836270000,1698836271000,5,735282990,1698836272677
1698836270000,1698836271000,4,2128708780,1698836272677
1698836270000,1698836271000,8,16371253522,1698836272677
1698836270000,1698836271000,7,26897292735,1698836272677
1698836270000,1698836271000,11,317045165,1698836272677
1698836270000,1698836271000,9,298987871,1698836272677
1698836270000,1698836271000,10,326221278,1698836272677
1698836270000,1698836271000,6,5844563979,1698836272677
1698836270000,1698836271000,1,34873898,1698836272677
[m
[36m[10:57:53.148949] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836273000-1698836274000[m
[36m[10:57:53.273301] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:53.687657] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836271000-1698836272000 [m
[36m[10:57:53.688513] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836271000-1698836272000-99[m
[36m[10:57:53.688619] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836271000-1698836272000[m
[36m[10:57:53.688689] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836271000-1698836272000[m
[36m[10:57:53.688806] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:53.688837] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:53.692754] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836271000,1698836272000,4,2128711407,1698836273688
1698836271000,1698836272000,5,735285399,1698836273688
1698836271000,1698836272000,8,16371255828,1698836273688
1698836271000,1698836272000,7,26897295107,1698836273688
1698836271000,1698836272000,9,298990200,1698836273688
1698836271000,1698836272000,11,317047305,1698836273688
1698836271000,1698836272000,10,326223489,1698836273688
1698836271000,1698836272000,6,5844566351,1698836273688
1698836271000,1698836272000,1,34877998,1698836273688
[m
[36m[10:57:54.135810] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836274000-1698836275000[m
[36m[10:57:54.274470] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:54.287285] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:54.287734] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:54.288612] [D] [thread 130142] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:54.288701] [I] [thread 130142] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:54.288719] [I] [thread 130142] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:54.288831] [I] [thread 130142] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:54.288843] [I] [thread 130142] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:54.498338] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:54.498824] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:54.703629] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836272000-1698836273000 [m
[36m[10:57:54.704494] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836272000-1698836273000-100[m
[36m[10:57:54.704603] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836272000-1698836273000[m
[36m[10:57:54.704674] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836272000-1698836273000[m
[36m[10:57:54.704788] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:54.704818] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:54.708747] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836272000,1698836273000,5,735287980,1698836274704
1698836272000,1698836273000,9,298992741,1698836274704
1698836272000,1698836273000,8,16371258402,1698836274704
1698836272000,1698836273000,11,317050017,1698836274704
1698836272000,1698836273000,7,26897297583,1698836274704
1698836272000,1698836273000,10,326226158,1698836274704
1698836272000,1698836273000,4,2128713900,1698836274704
1698836272000,1698836273000,6,5844568842,1698836274704
1698836272000,1698836273000,1,34883659,1698836274704
[m
[36m[10:57:55.122070] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836275000-1698836276000[m
[36m[10:57:55.500072] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:55.720740] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836273000-1698836274000 [m
[36m[10:57:55.721524] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836273000-1698836274000-101[m
[36m[10:57:55.721625] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836273000-1698836274000[m
[36m[10:57:55.721686] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836273000-1698836274000[m
[36m[10:57:55.721790] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:55.721816] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:55.725198] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836273000,1698836274000,9,298994885,1698836275721
1698836273000,1698836274000,8,16371260623,1698836275721
1698836273000,1698836274000,11,317052154,1698836275721
1698836273000,1698836274000,7,26897299836,1698836275721
1698836273000,1698836274000,10,326228331,1698836275721
1698836273000,1698836274000,4,2128716228,1698836275721
1698836273000,1698836274000,6,5844571158,1698836275721
1698836273000,1698836274000,5,735290425,1698836275721
1698836273000,1698836274000,1,34885653,1698836275721
[m
[36m[10:57:56.113347] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836276000-1698836277000[m
[36m[10:57:56.500757] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:56.568695] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:56.569042] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:56.570092] [D] [thread 130147] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:56.570222] [I] [thread 130147] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:56.570242] [I] [thread 130147] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:56.570359] [I] [thread 130147] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:56.570380] [I] [thread 130147] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:56.736186] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836274000-1698836275000 [m
[36m[10:57:56.736869] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836274000-1698836275000-102[m
[36m[10:57:56.736929] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836274000-1698836275000[m
[36m[10:57:56.736970] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836274000-1698836275000[m
[36m[10:57:56.737044] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:56.737063] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:56.738917] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836274000,1698836275000,8,16371263243,1698836276737
1698836274000,1698836275000,9,298997579,1698836276737
1698836274000,1698836275000,11,317054824,1698836276737
1698836274000,1698836275000,7,26897302391,1698836276737
1698836274000,1698836275000,10,326230988,1698836276737
1698836274000,1698836275000,4,2128718677,1698836276737
1698836274000,1698836275000,6,5844573694,1698836276737
1698836274000,1698836275000,5,735292889,1698836276737
1698836274000,1698836275000,1,34891590,1698836276737
[m
[36m[10:57:56.743931] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:56.744265] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:57.141578] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836277000-1698836278000[m
[36m[10:57:57.745473] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:57.747433] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836275000-1698836276000 [m
[36m[10:57:57.748399] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836275000-1698836276000-103[m
[36m[10:57:57.748525] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836275000-1698836276000[m
[36m[10:57:57.748601] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836275000-1698836276000[m
[36m[10:57:57.748732] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:57.748765] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:57.752675] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836275000,1698836276000,9,298999842,1698836277748
1698836275000,1698836276000,8,16371265428,1698836277748
1698836275000,1698836276000,7,26897304643,1698836277748
1698836275000,1698836276000,11,317057069,1698836277748
1698836275000,1698836276000,10,326233175,1698836277748
1698836275000,1698836276000,4,2128720929,1698836277748
1698836275000,1698836276000,6,5844575838,1698836277748
1698836275000,1698836276000,5,735295139,1698836277748
1698836275000,1698836276000,1,34895630,1698836277748
[m
[36m[10:57:58.134050] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836278000-1698836279000[m
[36m[10:57:58.746440] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:58.762510] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836276000-1698836277000 [m
[36m[10:57:58.763332] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836276000-1698836277000-104[m
[36m[10:57:58.763420] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836276000-1698836277000[m
[36m[10:57:58.763467] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836276000-1698836277000[m
[36m[10:57:58.763546] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:58.763565] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:58.765447] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836276000,1698836277000,9,299002448,1698836278763
1698836276000,1698836277000,8,16371268138,1698836278763
1698836276000,1698836277000,7,26897307274,1698836278763
1698836276000,1698836277000,11,317059538,1698836278763
1698836276000,1698836277000,10,326235726,1698836278763
1698836276000,1698836277000,4,2128723611,1698836278763
1698836276000,1698836277000,6,5844578548,1698836278763
1698836276000,1698836277000,5,735297825,1698836278763
1698836276000,1698836277000,1,34900593,1698836278763
[m
[36m[10:57:58.770477] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:58.770787] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:58.771854] [D] [thread 130152] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:57:58.771967] [I] [thread 130152] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:58.771984] [I] [thread 130152] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:57:58.772101] [I] [thread 130152] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:57:58.772114] [I] [thread 130152] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:57:58.994010] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:58.994441] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:57:59.123222] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836279000-1698836280000[m
[36m[10:57:59.773413] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836277000-1698836278000 [m
[36m[10:57:59.774182] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836277000-1698836278000-105[m
[36m[10:57:59.774311] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836277000-1698836278000[m
[36m[10:57:59.774369] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836277000-1698836278000[m
[36m[10:57:59.774466] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:57:59.774491] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:57:59.777416] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836277000,1698836278000,7,26897309460,1698836279774
1698836277000,1698836278000,11,317061937,1698836279774
1698836277000,1698836278000,4,2128725773,1698836279774
1698836277000,1698836278000,10,326238030,1698836279774
1698836277000,1698836278000,5,735299968,1698836279774
1698836277000,1698836278000,6,5844580754,1698836279774
1698836277000,1698836278000,9,299004892,1698836279774
1698836277000,1698836278000,8,16371270528,1698836279774
1698836277000,1698836278000,1,34905419,1698836279774
[m
[36m[10:57:59.995769] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:00.115808] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836280000-1698836281000[m
[36m[10:58:00.787883] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836278000-1698836279000 [m
[36m[10:58:00.788551] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836278000-1698836279000-106[m
[36m[10:58:00.788627] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836278000-1698836279000[m
[36m[10:58:00.788670] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836278000-1698836279000[m
[36m[10:58:00.788747] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:00.788764] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:00.790990] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836278000,1698836279000,7,26897311979,1698836280788
1698836278000,1698836279000,11,317064261,1698836280788
1698836278000,1698836279000,10,326240443,1698836280788
1698836278000,1698836279000,4,2128728344,1698836280788
1698836278000,1698836279000,6,5844583353,1698836280788
1698836278000,1698836279000,9,299007342,1698836280788
1698836278000,1698836279000,5,735302574,1698836280788
1698836278000,1698836279000,8,16371273034,1698836280788
1698836278000,1698836279000,1,34909556,1698836280788
[m
[36m[10:58:00.997107] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:01.039983] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:01.040352] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:01.041308] [D] [thread 130157] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:01.041407] [I] [thread 130157] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:01.041424] [I] [thread 130157] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:01.041539] [I] [thread 130157] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:01.041562] [I] [thread 130157] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:01.120322] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836281000-1698836282000[m
[36m[10:58:01.261817] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:01.262173] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:01.800617] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836279000-1698836280000 [m
[36m[10:58:01.801671] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836279000-1698836280000-107[m
[36m[10:58:01.801736] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836279000-1698836280000[m
[36m[10:58:01.801783] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836279000-1698836280000[m
[36m[10:58:01.801867] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:01.801892] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:01.805175] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836279000,1698836280000,7,26897314317,1698836281801
1698836279000,1698836280000,11,317066746,1698836281801
1698836279000,1698836280000,10,326242832,1698836281801
1698836279000,1698836280000,4,2128730578,1698836281801
1698836279000,1698836280000,5,735304784,1698836281801
1698836279000,1698836280000,6,5844585582,1698836281801
1698836279000,1698836280000,9,299009779,1698836281801
1698836279000,1698836280000,8,16371275371,1698836281801
1698836279000,1698836280000,1,34914878,1698836281801
[m
[36m[10:58:02.116470] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836282000-1698836283000[m
[36m[10:58:02.263525] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:02.816846] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836280000-1698836281000 [m
[36m[10:58:02.817711] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836280000-1698836281000-108[m
[36m[10:58:02.817819] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836280000-1698836281000[m
[36m[10:58:02.817891] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836280000-1698836281000[m
[36m[10:58:02.818006] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:02.818038] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:02.821968] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836280000,1698836281000,7,26897316817,1698836282818
1698836280000,1698836281000,11,317068954,1698836282818
1698836280000,1698836281000,10,326245118,1698836282818
1698836280000,1698836281000,4,2128733073,1698836282818
1698836280000,1698836281000,5,735307269,1698836282818
1698836280000,1698836281000,9,299012082,1698836282818
1698836280000,1698836281000,6,5844588014,1698836282818
1698836280000,1698836281000,8,16371277714,1698836282818
1698836280000,1698836281000,1,34918753,1698836282818
[m
[36m[10:58:03.122451] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836283000-1698836284000[m
[36m[10:58:03.264825] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:03.293139] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:03.293506] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:03.294523] [D] [thread 130162] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:03.294620] [I] [thread 130162] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:03.294636] [I] [thread 130162] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:03.294749] [I] [thread 130162] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:03.294762] [I] [thread 130162] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:03.563066] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:03.563416] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:03.832609] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836281000-1698836282000 [m
[36m[10:58:03.833459] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836281000-1698836282000-109[m
[36m[10:58:03.833565] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836281000-1698836282000[m
[36m[10:58:03.833634] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836281000-1698836282000[m
[36m[10:58:03.833748] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:03.833778] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:03.837671] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836281000,1698836282000,11,317071605,1698836283833
1698836281000,1698836282000,10,326247665,1698836283833
1698836281000,1698836282000,4,2128735445,1698836283833
1698836281000,1698836282000,9,299014597,1698836283833
1698836281000,1698836282000,5,735309652,1698836283833
1698836281000,1698836282000,6,5844590396,1698836283833
1698836281000,1698836282000,8,16371280210,1698836283833
1698836281000,1698836282000,7,26897319378,1698836283833
1698836281000,1698836282000,1,34922445,1698836283833
[m
[36m[10:58:04.114943] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836284000-1698836285000[m
[36m[10:58:04.564608] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:04.848081] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836282000-1698836283000 [m
[36m[10:58:04.849397] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836282000-1698836283000-110[m
[36m[10:58:04.849522] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836282000-1698836283000[m
[36m[10:58:04.849598] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836282000-1698836283000[m
[36m[10:58:04.849709] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:04.849745] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:04.852775] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836282000,1698836283000,11,317073931,1698836284849
1698836282000,1698836283000,4,2128737784,1698836284849
1698836282000,1698836283000,10,326249903,1698836284849
1698836282000,1698836283000,9,299016784,1698836284849
1698836282000,1698836283000,8,16371282425,1698836284849
1698836282000,1698836283000,6,5844592736,1698836284849
1698836282000,1698836283000,5,735311970,1698836284849
1698836282000,1698836283000,7,26897321683,1698836284849
1698836282000,1698836283000,1,34926522,1698836284849
[m
[36m[10:58:05.129010] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836285000-1698836286000[m
[36m[10:58:05.565857] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:05.569181] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:05.569942] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:05.570584] [D] [thread 130169] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:05.570675] [I] [thread 130169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:05.570693] [I] [thread 130169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:05.570820] [I] [thread 130169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:05.570838] [I] [thread 130169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:05.791644] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:05.792272] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:05.864107] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836283000-1698836284000 [m
[36m[10:58:05.864895] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836283000-1698836284000-111[m
[36m[10:58:05.864997] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836283000-1698836284000[m
[36m[10:58:05.865060] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836283000-1698836284000[m
[36m[10:58:05.865161] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:05.865188] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:05.868603] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836283000,1698836284000,4,2128740275,1698836285865
1698836283000,1698836284000,10,326252529,1698836285865
1698836283000,1698836284000,9,299019502,1698836285865
1698836283000,1698836284000,6,5844595326,1698836285865
1698836283000,1698836284000,8,16371285085,1698836285865
1698836283000,1698836284000,5,735314529,1698836285865
1698836283000,1698836284000,7,26897324303,1698836285865
1698836283000,1698836284000,11,317076649,1698836285865
1698836283000,1698836284000,1,34932171,1698836285865
[m
[36m[10:58:06.118707] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836286000-1698836287000[m
[36m[10:58:06.793528] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:06.880173] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836284000-1698836285000 [m
[36m[10:58:06.880984] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836284000-1698836285000-112[m
[36m[10:58:06.881052] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836284000-1698836285000[m
[36m[10:58:06.881105] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836284000-1698836285000[m
[36m[10:58:06.881205] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:06.881230] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:06.884649] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836284000,1698836285000,4,2128742610,1698836286881
1698836284000,1698836285000,10,326254727,1698836286881
1698836284000,1698836285000,9,299021642,1698836286881
1698836284000,1698836285000,6,5844597438,1698836286881
1698836284000,1698836285000,8,16371287279,1698836286881
1698836284000,1698836285000,5,735316656,1698836286881
1698836284000,1698836285000,7,26897326443,1698836286881
1698836284000,1698836285000,11,317078876,1698836286881
1698836284000,1698836285000,1,34936179,1698836286881
[m
[36m[10:58:07.114529] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836287000-1698836288000[m
[36m[10:58:07.794713] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:07.857445] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:07.858018] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:07.858862] [D] [thread 130174] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:07.858958] [I] [thread 130174] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:07.858976] [I] [thread 130174] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:07.859091] [I] [thread 130174] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:07.859103] [I] [thread 130174] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:07.896168] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836285000-1698836286000 [m
[36m[10:58:07.897102] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836285000-1698836286000-113[m
[36m[10:58:07.897204] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836285000-1698836286000[m
[36m[10:58:07.897265] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836285000-1698836286000[m
[36m[10:58:07.897756] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:07.897825] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:07.901612] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836285000,1698836286000,10,326257248,1698836287897
1698836285000,1698836286000,9,299024128,1698836287897
1698836285000,1698836286000,6,5844600082,1698836287897
1698836285000,1698836286000,8,16371289815,1698836287897
1698836285000,1698836286000,5,735319335,1698836287897
1698836285000,1698836286000,7,26897329064,1698836287897
1698836285000,1698836286000,11,317081356,1698836287897
1698836285000,1698836286000,4,2128745347,1698836287897
1698836285000,1698836286000,1,34942076,1698836287897
[m
[36m[10:58:08.040922] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:08.041427] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:08.116256] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836288000-1698836289000[m
[36m[10:58:08.911523] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836286000-1698836287000 [m
[36m[10:58:08.912571] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836286000-1698836287000-114[m
[36m[10:58:08.912669] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836286000-1698836287000[m
[36m[10:58:08.912716] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836286000-1698836287000[m
[36m[10:58:08.912797] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:08.912815] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:08.914878] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836286000,1698836287000,10,326259596,1698836288912
1698836286000,1698836287000,9,299026437,1698836288912
1698836286000,1698836287000,6,5844602302,1698836288912
1698836286000,1698836287000,8,16371292078,1698836288912
1698836286000,1698836287000,5,735321473,1698836288912
1698836286000,1698836287000,7,26897331264,1698836288912
1698836286000,1698836287000,11,317083730,1698836288912
1698836286000,1698836287000,4,2128747535,1698836288912
1698836286000,1698836287000,1,34945947,1698836288912
[m
[36m[10:58:09.042650] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:09.115176] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836289000-1698836290000[m
[36m[10:58:09.925225] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836287000-1698836288000 [m
[36m[10:58:09.926023] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836287000-1698836288000-115[m
[36m[10:58:09.926129] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836287000-1698836288000[m
[36m[10:58:09.926732] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836287000-1698836288000[m
[36m[10:58:09.926875] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:09.926906] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:09.930177] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836287000,1698836288000,10,326262069,1698836289926
1698836287000,1698836288000,9,299028849,1698836289926
1698836287000,1698836288000,6,5844604781,1698836289926
1698836287000,1698836288000,8,16371294484,1698836289926
1698836287000,1698836288000,5,735324009,1698836289926
1698836287000,1698836288000,7,26897333743,1698836289926
1698836287000,1698836288000,4,2128750105,1698836289926
1698836287000,1698836288000,11,317086038,1698836289926
1698836287000,1698836288000,1,34950876,1698836289926
[m
[36m[10:58:10.043893] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:10.121198] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836290000-1698836291000[m
[36m[10:58:10.140143] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:10.140502] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:10.141460] [D] [thread 130179] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:10.141559] [I] [thread 130179] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:10.141577] [I] [thread 130179] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:10.141692] [I] [thread 130179] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:10.141715] [I] [thread 130179] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:10.350866] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:10.351212] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:10.941109] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836288000-1698836289000 [m
[36m[10:58:10.942041] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836288000-1698836289000-116[m
[36m[10:58:10.942154] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836288000-1698836289000[m
[36m[10:58:10.942286] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836288000-1698836289000[m
[36m[10:58:10.942408] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:10.942436] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:10.945736] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836288000,1698836289000,9,299031274,1698836290942
1698836288000,1698836289000,6,5844607106,1698836290942
1698836288000,1698836289000,8,16371296946,1698836290942
1698836288000,1698836289000,7,26897336095,1698836290942
1698836288000,1698836289000,5,735326275,1698836290942
1698836288000,1698836289000,4,2128752310,1698836290942
1698836288000,1698836289000,11,317088571,1698836290942
1698836288000,1698836289000,10,326264626,1698836290942
1698836288000,1698836289000,1,34955430,1698836290942
[m
[36m[10:58:11.115740] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836291000-1698836292000[m
[36m[10:58:11.352411] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:11.959517] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836289000-1698836290000 [m
[36m[10:58:11.960414] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836289000-1698836290000-117[m
[36m[10:58:11.960492] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836289000-1698836290000[m
[36m[10:58:11.960551] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836289000-1698836290000[m
[36m[10:58:11.960665] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:11.960694] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:11.964606] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836289000,1698836290000,9,299033650,1698836291960
1698836289000,1698836290000,6,5844609439,1698836291960
1698836289000,1698836290000,8,16371299238,1698836291960
1698836289000,1698836290000,7,26897338429,1698836291960
1698836289000,1698836290000,5,735328666,1698836291960
1698836289000,1698836290000,4,2128754766,1698836291960
1698836289000,1698836290000,11,317090806,1698836291960
1698836289000,1698836290000,10,326266851,1698836291960
1698836289000,1698836290000,1,34957377,1698836291960
[m
[36m[10:58:12.142304] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836292000-1698836293000[m
[36m[10:58:12.345212] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:12.345796] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:12.346761] [D] [thread 130184] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:12.346868] [I] [thread 130184] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:12.346886] [I] [thread 130184] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:12.347010] [I] [thread 130184] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:12.347024] [I] [thread 130184] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:12.565422] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:12.566027] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:12.975626] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836290000-1698836291000 [m
[36m[10:58:12.976466] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836290000-1698836291000-118[m
[36m[10:58:12.976572] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836290000-1698836291000[m
[36m[10:58:12.976641] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836290000-1698836291000[m
[36m[10:58:12.976754] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:12.976785] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:12.980701] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836290000,1698836291000,8,16371301935,1698836292976
1698836290000,1698836291000,6,5844611953,1698836292976
1698836290000,1698836291000,7,26897340964,1698836292976
1698836290000,1698836291000,4,2128757234,1698836292976
1698836290000,1698836291000,5,735331191,1698836292976
1698836290000,1698836291000,11,317093479,1698836292976
1698836290000,1698836291000,10,326269528,1698836292976
1698836290000,1698836291000,9,299036393,1698836292976
1698836290000,1698836291000,1,34963055,1698836292976
[m
[36m[10:58:13.130377] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836293000-1698836294000[m
[36m[10:58:13.567228] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:13.993759] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836291000-1698836292000 [m
[36m[10:58:13.994684] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836291000-1698836292000-119[m
[36m[10:58:13.994800] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836291000-1698836292000[m
[36m[10:58:13.994873] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836291000-1698836292000[m
[36m[10:58:13.994991] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:13.995021] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:13.998939] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836291000,1698836292000,6,5844614369,1698836293995
1698836291000,1698836292000,7,26897343154,1698836293995
1698836291000,1698836292000,5,735333466,1698836293995
1698836291000,1698836292000,4,2128759570,1698836293995
1698836291000,1698836292000,11,317095635,1698836293995
1698836291000,1698836292000,10,326271673,1698836293995
1698836291000,1698836292000,9,299038574,1698836293995
1698836291000,1698836292000,8,16371304262,1698836293995
1698836291000,1698836292000,1,34967123,1698836293995
[m
[36m[10:58:14.124168] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836294000-1698836295000[m
[36m[10:58:14.568446] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:14.583360] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:14.583680] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:14.584670] [D] [thread 130189] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:14.584763] [I] [thread 130189] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:14.584780] [I] [thread 130189] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:14.584895] [I] [thread 130189] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:14.584908] [I] [thread 130189] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:14.798167] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:14.798534] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:15.009251] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836292000-1698836293000 [m
[36m[10:58:15.010101] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836292000-1698836293000-120[m
[36m[10:58:15.010262] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836292000-1698836293000[m
[36m[10:58:15.010344] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836292000-1698836293000[m
[36m[10:58:15.010463] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:15.010493] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:15.014505] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836292000,1698836293000,7,26897345799,1698836295010
1698836292000,1698836293000,5,735336038,1698836295010
1698836292000,1698836293000,4,2128762098,1698836295010
1698836292000,1698836293000,11,317098233,1698836295010
1698836292000,1698836293000,9,299041248,1698836295010
1698836292000,1698836293000,10,326274302,1698836295010
1698836292000,1698836293000,8,16371306900,1698836295010
1698836292000,1698836293000,6,5844617094,1698836295010
1698836292000,1698836293000,1,34972949,1698836295010
[m
[36m[10:58:15.116735] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836295000-1698836296000[m
[36m[10:58:15.799712] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:16.024619] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836293000-1698836294000 [m
[36m[10:58:16.024872] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836294000-1698836295000 [m
[36m[10:58:16.025867] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836293000-1698836294000-121[m
[36m[10:58:16.025982] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836293000-1698836294000[m
[36m[10:58:16.026051] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836293000-1698836294000[m
[36m[10:58:16.026173] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:16.026250] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:16.030727] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836293000,1698836294000,7,26897347936,1698836296026
1698836293000,1698836294000,4,2128764234,1698836296026
1698836293000,1698836294000,5,735338211,1698836296026
1698836293000,1698836294000,11,317100461,1698836296026
1698836293000,1698836294000,9,299043374,1698836296026
1698836293000,1698836294000,10,326276499,1698836296026
1698836293000,1698836294000,8,16371309115,1698836296026
1698836293000,1698836294000,6,5844619258,1698836296026
1698836293000,1698836294000,1,34976995,1698836296026
[m
[36m[10:58:16.032036] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836294000-1698836295000-122[m
[36m[10:58:16.032131] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836294000-1698836295000[m
[36m[10:58:16.032185] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836294000-1698836295000[m
[36m[10:58:16.032267] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:16.032286] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:16.034612] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836294000,1698836295000,7,26897350517,1698836296032
1698836294000,1698836295000,4,2128766901,1698836296032
1698836294000,1698836295000,5,735340896,1698836296032
1698836294000,1698836295000,11,317102934,1698836296032
1698836294000,1698836295000,9,299045888,1698836296032
1698836294000,1698836295000,10,326279065,1698836296032
1698836294000,1698836295000,8,16371311706,1698836296032
1698836294000,1698836295000,6,5844621919,1698836296032
[m
[36m[10:58:16.116327] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836296000-1698836297000[m
[36m[10:58:16.800108] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:16.823074] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:16.823395] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:16.824478] [D] [thread 130194] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:16.824577] [I] [thread 130194] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:16.824593] [I] [thread 130194] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:16.824706] [I] [thread 130194] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:16.824720] [I] [thread 130194] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:17.041177] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836295000-1698836296000 [m
[36m[10:58:17.042285] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:17.042609] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:17.044629] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836295000-1698836296000-123[m
[36m[10:58:17.044702] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836295000-1698836296000[m
[36m[10:58:17.044738] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836295000-1698836296000[m
[36m[10:58:17.044811] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:17.044827] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:17.048382] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836295000,1698836296000,7,26897352741,1698836297044
1698836295000,1698836296000,4,2128769156,1698836297044
1698836295000,1698836296000,9,299048194,1698836297044
1698836295000,1698836296000,5,735343060,1698836297044
1698836295000,1698836296000,11,317105319,1698836297044
1698836295000,1698836296000,10,326281394,1698836297044
1698836295000,1698836296000,8,16371313931,1698836297044
1698836295000,1698836296000,6,5844624073,1698836297044
1698836295000,1698836296000,1,34982952,1698836297044
[m
[36m[10:58:17.122492] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836297000-1698836298000[m
[36m[10:58:18.043890] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:18.053031] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836296000-1698836297000 [m
[36m[10:58:18.054044] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836296000-1698836297000-124[m
[36m[10:58:18.054487] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836296000-1698836297000[m
[36m[10:58:18.054642] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836296000-1698836297000[m
[36m[10:58:18.054913] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:18.055099] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:18.058603] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836296000,1698836297000,7,26897355375,1698836298055
1698836296000,1698836297000,4,2128771923,1698836298055
1698836296000,1698836297000,9,299050602,1698836298055
1698836296000,1698836297000,5,735345590,1698836298055
1698836296000,1698836297000,11,317107649,1698836298055
1698836296000,1698836297000,10,326283789,1698836298055
1698836296000,1698836297000,8,16371316335,1698836298055
1698836296000,1698836297000,6,5844626652,1698836298055
1698836296000,1698836297000,1,34986964,1698836298055
[m
[36m[10:58:18.123172] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836298000-1698836299000[m
[36m[10:58:19.045168] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:19.070018] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836297000-1698836298000 [m
[36m[10:58:19.070773] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836297000-1698836298000-125[m
[36m[10:58:19.070857] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836297000-1698836298000[m
[36m[10:58:19.070907] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836297000-1698836298000[m
[36m[10:58:19.070980] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:19.070995] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:19.072706] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836297000,1698836298000,9,299053139,1698836299071
1698836297000,1698836298000,5,735347880,1698836299071
1698836297000,1698836298000,11,317110183,1698836299071
1698836297000,1698836298000,10,326286304,1698836299071
1698836297000,1698836298000,8,16371318809,1698836299071
1698836297000,1698836298000,6,5844628967,1698836299071
1698836297000,1698836298000,7,26897357880,1698836299071
1698836297000,1698836298000,4,2128774315,1698836299071
1698836297000,1698836298000,1,34992339,1698836299071
[m
[36m[10:58:19.078377] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:19.078709] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:19.080488] [D] [thread 130199] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:19.080598] [I] [thread 130199] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:19.080617] [I] [thread 130199] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:19.080744] [I] [thread 130199] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:19.080810] [I] [thread 130199] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:19.120765] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836299000-1698836300000[m
[36m[10:58:19.248213] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:19.248572] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:20.080974] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836298000-1698836299000 [m
[36m[10:58:20.082107] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836298000-1698836299000-126[m
[36m[10:58:20.082277] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836298000-1698836299000[m
[36m[10:58:20.082347] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836298000-1698836299000[m
[36m[10:58:20.082449] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:20.082475] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:20.085665] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836298000,1698836299000,11,317112364,1698836300082
1698836298000,1698836299000,5,735350294,1698836300082
1698836298000,1698836299000,8,16371321178,1698836300082
1698836298000,1698836299000,10,326288594,1698836300082
1698836298000,1698836299000,6,5844631349,1698836300082
1698836298000,1698836299000,4,2128776822,1698836300082
1698836298000,1698836299000,7,26897360254,1698836300082
1698836298000,1698836299000,9,299055567,1698836300082
1698836298000,1698836299000,1,34995057,1698836300082
[m
[36m[10:58:20.116516] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836300000-1698836301000[m
[36m[10:58:20.249822] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:21.096230] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836299000-1698836300000 [m
[36m[10:58:21.097072] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836299000-1698836300000-127[m
[36m[10:58:21.097179] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836299000-1698836300000[m
[36m[10:58:21.097247] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836299000-1698836300000[m
[36m[10:58:21.097362] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:21.097393] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:21.101285] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836299000,1698836300000,11,317115028,1698836301097
1698836299000,1698836300000,5,735352713,1698836301097
1698836299000,1698836300000,8,16371323669,1698836301097
1698836299000,1698836300000,10,326291174,1698836301097
1698836299000,1698836300000,6,5844633796,1698836301097
1698836299000,1698836300000,9,299058081,1698836301097
1698836299000,1698836300000,4,2128779148,1698836301097
1698836299000,1698836300000,7,26897362696,1698836301097
1698836299000,1698836300000,1,34999191,1698836301097
[m
[36m[10:58:21.117286] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836301000-1698836302000[m
[36m[10:58:21.251073] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:21.256534] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:21.256853] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:21.257853] [D] [thread 130204] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:21.257948] [I] [thread 130204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:21.257965] [I] [thread 130204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:21.258078] [I] [thread 130204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:21.258091] [I] [thread 130204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:21.458782] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:21.459134] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:22.113759] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836300000-1698836301000 [m
[36m[10:58:22.114804] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836300000-1698836301000-128[m
[36m[10:58:22.114934] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836300000-1698836301000[m
[36m[10:58:22.115020] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836300000-1698836301000[m
[36m[10:58:22.115145] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:22.115178] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:22.118813] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836300000,1698836301000,11,317117342,1698836302115
1698836300000,1698836301000,5,735355028,1698836302115
1698836300000,1698836301000,8,16371325890,1698836302115
1698836300000,1698836301000,10,326293302,1698836302115
1698836300000,1698836301000,9,299060322,1698836302115
1698836300000,1698836301000,6,5844636041,1698836302115
1698836300000,1698836301000,4,2128781509,1698836302115
1698836300000,1698836301000,7,26897364932,1698836302115
1698836300000,1698836301000,1,35004902,1698836302115
[m
[36m[10:58:22.159880] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836302000-1698836303000[m
[36m[10:58:22.460375] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:23.117002] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836303000-1698836304000[m
[36m[10:58:23.129549] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836301000-1698836302000 [m
[36m[10:58:23.130302] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836301000-1698836302000-129[m
[36m[10:58:23.130385] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836301000-1698836302000[m
[36m[10:58:23.130439] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836301000-1698836302000[m
[36m[10:58:23.130527] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:23.130553] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:23.133150] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836301000,1698836302000,5,735357661,1698836303130
1698836301000,1698836302000,10,326295967,1698836303130
1698836301000,1698836302000,8,16371328454,1698836303130
1698836301000,1698836302000,6,5844638593,1698836303130
1698836301000,1698836302000,9,299062937,1698836303130
1698836301000,1698836302000,4,2128783965,1698836303130
1698836301000,1698836302000,7,26897367534,1698836303130
1698836301000,1698836302000,11,317120113,1698836303130
1698836301000,1698836302000,1,35009010,1698836303130
[m
[36m[10:58:23.461676] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:23.517952] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:23.518306] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:23.519456] [D] [thread 130209] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:23.519563] [I] [thread 130209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:23.519581] [I] [thread 130209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:23.519706] [I] [thread 130209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:23.519730] [I] [thread 130209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:23.683864] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:23.684216] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:24.143957] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836302000-1698836303000 [m
[36m[10:58:24.144717] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836302000-1698836303000-130[m
[36m[10:58:24.144803] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836302000-1698836303000[m
[36m[10:58:24.144858] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836302000-1698836303000[m
[36m[10:58:24.144952] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:24.144976] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:24.148199] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836302000,1698836303000,8,16371330625,1698836304144
1698836302000,1698836303000,10,326298135,1698836304144
1698836302000,1698836303000,9,299065091,1698836304144
1698836302000,1698836303000,6,5844640795,1698836304144
1698836302000,1698836303000,4,2128786219,1698836304144
1698836302000,1698836303000,7,26897369691,1698836304144
1698836302000,1698836303000,11,317122294,1698836304144
1698836302000,1698836303000,5,735359806,1698836304144
1698836302000,1698836303000,1,35014761,1698836304144
[m
[36m[10:58:24.148876] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836304000-1698836305000[m
[36m[10:58:24.685440] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:25.136103] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836305000-1698836306000[m
[36m[10:58:25.159293] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836303000-1698836304000 [m
[36m[10:58:25.159977] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836303000-1698836304000-131[m
[36m[10:58:25.160064] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836303000-1698836304000[m
[36m[10:58:25.160126] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836303000-1698836304000[m
[36m[10:58:25.160214] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:25.160235] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:25.162442] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836303000,1698836304000,5,735362498,1698836305160
1698836303000,1698836304000,8,16371333257,1698836305160
1698836303000,1698836304000,10,326300641,1698836305160
1698836303000,1698836304000,9,299067645,1698836305160
1698836303000,1698836304000,6,5844643460,1698836305160
1698836303000,1698836304000,4,2128788797,1698836305160
1698836303000,1698836304000,7,26897372355,1698836305160
1698836303000,1698836304000,11,317124825,1698836305160
1698836303000,1698836304000,1,35018894,1698836305160
[m
[36m[10:58:25.686389] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:25.694929] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:25.695507] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:25.696252] [D] [thread 130215] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:25.696381] [I] [thread 130215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:25.696399] [I] [thread 130215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:25.696516] [I] [thread 130215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:25.696529] [I] [thread 130215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:25.917635] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:25.918127] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:26.117819] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836306000-1698836307000[m
[36m[10:58:26.172352] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836304000-1698836305000 [m
[36m[10:58:26.173107] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836304000-1698836305000-132[m
[36m[10:58:26.173217] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836304000-1698836305000[m
[36m[10:58:26.173289] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836304000-1698836305000[m
[36m[10:58:26.173410] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:26.173443] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:26.177300] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836304000,1698836305000,8,16371335509,1698836306173
1698836304000,1698836305000,10,326303047,1698836306173
1698836304000,1698836305000,9,299069943,1698836306173
1698836304000,1698836305000,6,5844645629,1698836306173
1698836304000,1698836305000,4,2128790960,1698836306173
1698836304000,1698836305000,7,26897374507,1698836306173
1698836304000,1698836305000,11,317127212,1698836306173
1698836304000,1698836305000,5,735364765,1698836306173
1698836304000,1698836305000,1,35024618,1698836306173
[m
[36m[10:58:26.919510] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:27.114813] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836307000-1698836308000[m
[36m[10:58:27.189318] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836305000-1698836306000 [m
[36m[10:58:27.190102] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836305000-1698836306000-133[m
[36m[10:58:27.190245] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836305000-1698836306000[m
[36m[10:58:27.190316] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836305000-1698836306000[m
[36m[10:58:27.190423] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:27.190450] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:27.193758] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836305000,1698836306000,8,16371337989,1698836307190
1698836305000,1698836306000,9,299072422,1698836307190
1698836305000,1698836306000,4,2128793634,1698836307190
1698836305000,1698836306000,10,326305490,1698836307190
1698836305000,1698836306000,6,5844648212,1698836307190
1698836305000,1698836306000,7,26897377042,1698836307190
1698836305000,1698836306000,11,317129697,1698836307190
1698836305000,1698836306000,5,735367451,1698836307190
1698836305000,1698836306000,1,35028555,1698836307190
[m
[36m[10:58:27.920773] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:27.979157] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:27.979671] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:27.980487] [D] [thread 130222] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:27.980579] [I] [thread 130222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:27.980597] [I] [thread 130222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:27.980712] [I] [thread 130222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:27.980724] [I] [thread 130222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:28.122397] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836308000-1698836309000[m
[36m[10:58:28.175080] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:28.175665] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:28.206100] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836306000-1698836307000 [m
[36m[10:58:28.206946] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836306000-1698836307000-134[m
[36m[10:58:28.207041] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836306000-1698836307000[m
[36m[10:58:28.207105] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836306000-1698836307000[m
[36m[10:58:28.207207] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:28.207234] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:28.210641] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836306000,1698836307000,8,16371340284,1698836308207
1698836306000,1698836307000,10,326307879,1698836308207
1698836306000,1698836307000,9,299074810,1698836308207
1698836306000,1698836307000,6,5844650455,1698836308207
1698836306000,1698836307000,4,2128795837,1698836308207
1698836306000,1698836307000,7,26897379361,1698836308207
1698836306000,1698836307000,11,317132071,1698836308207
1698836306000,1698836307000,5,735369617,1698836308207
1698836306000,1698836307000,1,35032306,1698836308207
[m
[36m[10:58:29.116486] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836309000-1698836310000[m
[36m[10:58:29.176889] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:29.222704] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836307000-1698836308000 [m
[36m[10:58:29.223982] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836307000-1698836308000-135[m
[36m[10:58:29.224277] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836307000-1698836308000[m
[36m[10:58:29.224353] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836307000-1698836308000[m
[36m[10:58:29.224469] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:29.224500] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:29.227430] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836307000,1698836308000,8,16371342772,1698836309224
1698836307000,1698836308000,4,2128798331,1698836309224
1698836307000,1698836308000,9,299077114,1698836309224
1698836307000,1698836308000,10,326310149,1698836309224
1698836307000,1698836308000,6,5844652975,1698836309224
1698836307000,1698836308000,7,26897381776,1698836309224
1698836307000,1698836308000,11,317134363,1698836309224
1698836307000,1698836308000,5,735372113,1698836309224
1698836307000,1698836308000,1,35036465,1698836309224
[m
[36m[10:58:30.134176] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836310000-1698836311000[m
[36m[10:58:30.178170] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:30.237708] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836308000-1698836309000 [m
[36m[10:58:30.238797] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836308000-1698836309000-136[m
[36m[10:58:30.238914] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836308000-1698836309000[m
[36m[10:58:30.238986] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836308000-1698836309000[m
[36m[10:58:30.239107] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:30.239137] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:30.244109] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836308000,1698836309000,9,299079579,1698836310239
1698836308000,1698836309000,4,2128800765,1698836310239
1698836308000,1698836309000,10,326312681,1698836310239
1698836308000,1698836309000,6,5844655385,1698836310239
1698836308000,1698836309000,7,26897384229,1698836310239
1698836308000,1698836309000,11,317136933,1698836310239
1698836308000,1698836309000,5,735374439,1698836310239
1698836308000,1698836309000,8,16371345433,1698836310239
1698836308000,1698836309000,1,35042240,1698836310239
[m
[36m[10:58:30.272296] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:30.272623] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:30.273836] [D] [thread 130227] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:30.273932] [I] [thread 130227] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:30.273949] [I] [thread 130227] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:30.274066] [I] [thread 130227] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:30.274079] [I] [thread 130227] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:30.439876] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:30.440236] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:31.129993] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836311000-1698836312000[m
[36m[10:58:31.256015] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836309000-1698836310000 [m
[36m[10:58:31.256828] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836309000-1698836310000-137[m
[36m[10:58:31.256932] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836309000-1698836310000[m
[36m[10:58:31.256994] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836309000-1698836310000[m
[36m[10:58:31.257100] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:31.257125] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:31.260501] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836309000,1698836310000,9,299081877,1698836311257
1698836309000,1698836310000,6,5844657662,1698836311257
1698836309000,1698836310000,10,326314889,1698836311257
1698836309000,1698836310000,7,26897386469,1698836311257
1698836309000,1698836310000,11,317139107,1698836311257
1698836309000,1698836310000,5,735376814,1698836311257
1698836309000,1698836310000,8,16371347715,1698836311257
1698836309000,1698836310000,4,2128803305,1698836311257
1698836309000,1698836310000,1,35045986,1698836311257
[m
[36m[10:58:31.441722] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:32.128182] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836312000-1698836313000[m
[36m[10:58:32.272339] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836310000-1698836311000 [m
[36m[10:58:32.273191] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836310000-1698836311000-138[m
[36m[10:58:32.273301] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836310000-1698836311000[m
[36m[10:58:32.273377] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836310000-1698836311000[m
[36m[10:58:32.273493] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:32.273524] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:32.277457] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836310000,1698836311000,6,5844660151,1698836312273
1698836310000,1698836311000,10,326317519,1698836312273
1698836310000,1698836311000,7,26897389024,1698836312273
1698836310000,1698836311000,11,317141747,1698836312273
1698836310000,1698836311000,5,735379226,1698836312273
1698836310000,1698836311000,8,16371350258,1698836312273
1698836310000,1698836311000,9,299084625,1698836312273
1698836310000,1698836311000,4,2128805709,1698836312273
1698836310000,1698836311000,1,35050041,1698836312273
[m
[36m[10:58:32.442981] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:32.476907] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:32.477409] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:32.478335] [D] [thread 130233] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:32.478430] [I] [thread 130233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:32.478449] [I] [thread 130233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:32.478569] [I] [thread 130233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:32.478626] [I] [thread 130233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:32.665699] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:32.666291] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:33.124222] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836313000-1698836314000[m
[36m[10:58:33.288988] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836311000-1698836312000 [m
[36m[10:58:33.289660] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836311000-1698836312000-139[m
[36m[10:58:33.289738] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836311000-1698836312000[m
[36m[10:58:33.289784] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836311000-1698836312000[m
[36m[10:58:33.289878] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:33.289895] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:33.291880] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836311000,1698836312000,6,5844662344,1698836313289
1698836311000,1698836312000,10,326319732,1698836313289
1698836311000,1698836312000,7,26897391203,1698836313289
1698836311000,1698836312000,11,317143934,1698836313289
1698836311000,1698836312000,5,735381494,1698836313289
1698836311000,1698836312000,8,16371352421,1698836313289
1698836311000,1698836312000,9,299086843,1698836313289
1698836311000,1698836312000,4,2128807977,1698836313289
1698836311000,1698836312000,1,35055629,1698836313289
[m
[36m[10:58:33.667575] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:34.117520] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836314000-1698836315000[m
[36m[10:58:34.301020] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836312000-1698836313000 [m
[36m[10:58:34.301933] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836312000-1698836313000-140[m
[36m[10:58:34.302036] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836312000-1698836313000[m
[36m[10:58:34.302097] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836312000-1698836313000[m
[36m[10:58:34.302252] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:34.302287] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:34.306023] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836312000,1698836313000,6,5844665114,1698836314302
1698836312000,1698836313000,10,326322298,1698836314302
1698836312000,1698836313000,7,26897393933,1698836314302
1698836312000,1698836313000,11,317146431,1698836314302
1698836312000,1698836313000,5,735384114,1698836314302
1698836312000,1698836313000,8,16371355059,1698836314302
1698836312000,1698836313000,9,299089466,1698836314302
1698836312000,1698836313000,4,2128810614,1698836314302
1698836312000,1698836313000,1,35059749,1698836314302
[m
[36m[10:58:34.668870] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:34.676430] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:34.676876] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:34.677822] [D] [thread 130241] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:34.677981] [I] [thread 130241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:34.678001] [I] [thread 130241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:34.678145] [I] [thread 130241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:34.678162] [I] [thread 130241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:34.847079] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:34.847592] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:35.115367] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836315000-1698836316000[m
[36m[10:58:35.316588] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836313000-1698836314000 [m
[36m[10:58:35.317450] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836313000-1698836314000-141[m
[36m[10:58:35.317564] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836313000-1698836314000[m
[36m[10:58:35.317641] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836313000-1698836314000[m
[36m[10:58:35.317758] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:35.317790] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:35.321730] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836313000,1698836314000,10,326324554,1698836315317
1698836313000,1698836314000,7,26897396063,1698836315317
1698836313000,1698836314000,6,5844667272,1698836315317
1698836313000,1698836314000,11,317148782,1698836315317
1698836313000,1698836314000,5,735386288,1698836315317
1698836313000,1698836314000,8,16371357332,1698836315317
1698836313000,1698836314000,4,2128812740,1698836315317
1698836313000,1698836314000,9,299091666,1698836315317
1698836313000,1698836314000,1,35065586,1698836315317
[m
[36m[10:58:35.848143] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:36.114897] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836316000-1698836317000[m
[36m[10:58:36.333437] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836314000-1698836315000 [m
[36m[10:58:36.334371] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836314000-1698836315000-142[m
[36m[10:58:36.334486] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836314000-1698836315000[m
[36m[10:58:36.334562] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836314000-1698836315000[m
[36m[10:58:36.334689] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:36.334720] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:36.338644] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836314000,1698836315000,6,5844669809,1698836316334
1698836314000,1698836315000,7,26897398582,1698836316334
1698836314000,1698836315000,10,326327021,1698836316334
1698836314000,1698836315000,11,317151192,1698836316334
1698836314000,1698836315000,5,735388914,1698836316334
1698836314000,1698836315000,8,16371359811,1698836316334
1698836314000,1698836315000,4,2128815415,1698836316334
1698836314000,1698836315000,9,299094116,1698836316334
1698836314000,1698836315000,1,35067425,1698836316334
[m
[36m[10:58:36.849417] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:36.913596] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:36.913955] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:36.915813] [D] [thread 130247] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:36.915916] [I] [thread 130247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:36.915933] [I] [thread 130247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:36.916048] [I] [thread 130247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:36.916061] [I] [thread 130247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:37.109521] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:37.109857] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:37.110962] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836317000-1698836318000[m
[36m[10:58:37.349734] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836315000-1698836316000 [m
[36m[10:58:37.350597] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836315000-1698836316000-143[m
[36m[10:58:37.350700] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836315000-1698836316000[m
[36m[10:58:37.350767] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836315000-1698836316000[m
[36m[10:58:37.350869] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:37.350897] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:37.354169] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836315000,1698836316000,6,5844672078,1698836317350
1698836315000,1698836316000,10,326329374,1698836317350
1698836315000,1698836316000,11,317153623,1698836317350
1698836315000,1698836316000,7,26897400868,1698836317350
1698836315000,1698836316000,8,16371362122,1698836317350
1698836315000,1698836316000,5,735391075,1698836317350
1698836315000,1698836316000,4,2128817566,1698836317350
1698836315000,1698836316000,9,299096473,1698836317350
1698836315000,1698836316000,1,35073240,1698836317350
[m
[36m[10:58:38.111066] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:38.125655] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836318000-1698836319000[m
[36m[10:58:38.367531] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836316000-1698836317000 [m
[36m[10:58:38.368990] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836316000-1698836317000-144[m
[36m[10:58:38.369116] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836316000-1698836317000[m
[36m[10:58:38.369191] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836316000-1698836317000[m
[36m[10:58:38.369306] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:38.369336] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:38.373666] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836316000,1698836317000,6,5844674503,1698836318369
1698836316000,1698836317000,11,317156074,1698836318369
1698836316000,1698836317000,7,26897403265,1698836318369
1698836316000,1698836317000,10,326331693,1698836318369
1698836316000,1698836317000,5,735393611,1698836318369
1698836316000,1698836317000,8,16371364471,1698836318369
1698836316000,1698836317000,4,2128820154,1698836318369
1698836316000,1698836317000,9,299098880,1698836318369
1698836316000,1698836317000,1,35077301,1698836318369
[m
[36m[10:58:39.112343] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:39.120726] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836319000-1698836320000[m
[36m[10:58:39.253628] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:39.254028] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:39.255816] [D] [thread 130253] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:39.255915] [I] [thread 130253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:39.255932] [I] [thread 130253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:39.256046] [I] [thread 130253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:39.256060] [I] [thread 130253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:39.384561] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836317000-1698836318000 [m
[36m[10:58:39.385412] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836317000-1698836318000-145[m
[36m[10:58:39.385519] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836317000-1698836318000[m
[36m[10:58:39.385581] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836317000-1698836318000[m
[36m[10:58:39.385686] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:39.385713] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:39.389149] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836317000,1698836318000,7,26897405907,1698836319385
1698836317000,1698836318000,6,5844677092,1698836319385
1698836317000,1698836318000,10,326334351,1698836319385
1698836317000,1698836318000,8,16371366931,1698836319385
1698836317000,1698836318000,5,735395906,1698836319385
1698836317000,1698836318000,4,2128822438,1698836319385
1698836317000,1698836318000,9,299101322,1698836319385
1698836317000,1698836318000,11,317158799,1698836319385
1698836317000,1698836318000,1,35083146,1698836319385
[m
[36m[10:58:39.421137] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:39.421539] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:40.120153] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836320000-1698836321000[m
[36m[10:58:40.401237] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836318000-1698836319000 [m
[36m[10:58:40.402089] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836318000-1698836319000-146[m
[36m[10:58:40.402250] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836318000-1698836319000[m
[36m[10:58:40.402328] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836318000-1698836319000[m
[36m[10:58:40.402446] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:40.402476] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:40.406366] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836318000,1698836319000,8,16371369236,1698836320402
1698836318000,1698836319000,4,2128824804,1698836320402
1698836318000,1698836319000,5,735398252,1698836320402
1698836318000,1698836319000,9,299103520,1698836320402
1698836318000,1698836319000,11,317160990,1698836320402
1698836318000,1698836319000,6,5844679497,1698836320402
1698836318000,1698836319000,7,26897408297,1698836320402
1698836318000,1698836319000,10,326336672,1698836320402
1698836318000,1698836319000,1,35087141,1698836320402
[m
[36m[10:58:40.422695] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:41.116986] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836321000-1698836322000[m
[36m[10:58:41.417327] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836319000-1698836320000 [m
[36m[10:58:41.418016] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836319000-1698836320000-147[m
[36m[10:58:41.418105] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836319000-1698836320000[m
[36m[10:58:41.418152] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836319000-1698836320000[m
[36m[10:58:41.418301] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:41.418323] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:41.420449] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836319000,1698836320000,8,16371371973,1698836321418
1698836319000,1698836320000,4,2128827250,1698836321418
1698836319000,1698836320000,5,735400827,1698836321418
1698836319000,1698836320000,9,299106131,1698836321418
1698836319000,1698836320000,7,26897410821,1698836321418
1698836319000,1698836320000,6,5844682031,1698836321418
1698836319000,1698836320000,11,317163716,1698836321418
1698836319000,1698836320000,10,326339349,1698836321418
1698836319000,1698836320000,1,35092184,1698836321418
[m
[36m[10:58:41.423939] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:41.452493] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:41.452825] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:41.454241] [D] [thread 130258] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:41.454335] [I] [thread 130258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:41.454352] [I] [thread 130258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:41.454468] [I] [thread 130258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:41.454481] [I] [thread 130258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:41.675026] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:41.675386] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:42.122584] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836322000-1698836323000[m
[36m[10:58:42.429700] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836320000-1698836321000 [m
[36m[10:58:42.430669] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836320000-1698836321000-148[m
[36m[10:58:42.430774] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836320000-1698836321000[m
[36m[10:58:42.430835] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836320000-1698836321000[m
[36m[10:58:42.430941] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:42.430970] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:42.435011] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836320000,1698836321000,4,2128829504,1698836322430
1698836320000,1698836321000,5,735403019,1698836322430
1698836320000,1698836321000,9,299108294,1698836322430
1698836320000,1698836321000,7,26897412943,1698836322430
1698836320000,1698836321000,11,317165870,1698836322430
1698836320000,1698836321000,6,5844684229,1698836322430
1698836320000,1698836321000,10,326341482,1698836322430
1698836320000,1698836321000,8,16371374273,1698836322430
1698836320000,1698836321000,1,35097106,1698836322430
[m
[36m[10:58:42.676632] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:43.117917] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836323000-1698836324000[m
[36m[10:58:43.448034] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836321000-1698836322000 [m
[36m[10:58:43.448889] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836321000-1698836322000-149[m
[36m[10:58:43.448998] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836321000-1698836322000[m
[36m[10:58:43.449068] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836321000-1698836322000[m
[36m[10:58:43.449183] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:43.449213] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:43.453135] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836321000,1698836322000,4,2128832231,1698836323449
1698836321000,1698836322000,5,735405698,1698836323449
1698836321000,1698836322000,9,299110943,1698836323449
1698836321000,1698836322000,7,26897415624,1698836323449
1698836321000,1698836322000,11,317168440,1698836323449
1698836321000,1698836322000,6,5844686845,1698836323449
1698836321000,1698836322000,10,326344084,1698836323449
1698836321000,1698836322000,8,16371376927,1698836323449
1698836321000,1698836322000,1,35101218,1698836323449
[m
[36m[10:58:43.677890] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:43.684002] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:43.684714] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:43.685436] [D] [thread 130267] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:43.685551] [I] [thread 130267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:43.685570] [I] [thread 130267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:43.685722] [I] [thread 130267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:43.685742] [I] [thread 130267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:43.901372] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:43.901958] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:44.139872] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836324000-1698836325000[m
[36m[10:58:44.463394] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836322000-1698836323000 [m
[36m[10:58:44.464174] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836322000-1698836323000-150[m
[36m[10:58:44.464276] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836322000-1698836323000[m
[36m[10:58:44.464338] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836322000-1698836323000[m
[36m[10:58:44.464440] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:44.464467] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:44.467844] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836322000,1698836323000,9,299113177,1698836324464
1698836322000,1698836323000,5,735407829,1698836324464
1698836322000,1698836323000,11,317170690,1698836324464
1698836322000,1698836323000,6,5844689101,1698836324464
1698836322000,1698836323000,7,26897417842,1698836324464
1698836322000,1698836323000,10,326346330,1698836324464
1698836322000,1698836323000,8,16371379088,1698836324464
1698836322000,1698836323000,4,2128834536,1698836324464
1698836322000,1698836323000,1,35105098,1698836324464
[m
[36m[10:58:44.902395] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:45.134336] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836325000-1698836326000[m
[36m[10:58:45.480005] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836323000-1698836324000 [m
[36m[10:58:45.480862] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836323000-1698836324000-151[m
[36m[10:58:45.480975] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836323000-1698836324000[m
[36m[10:58:45.481045] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836323000-1698836324000[m
[36m[10:58:45.481159] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:45.481189] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:45.485073] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836323000,1698836324000,9,299115746,1698836325481
1698836323000,1698836324000,5,735410429,1698836325481
1698836323000,1698836324000,6,5844691658,1698836325481
1698836323000,1698836324000,7,26897420365,1698836325481
1698836323000,1698836324000,11,317173162,1698836325481
1698836323000,1698836324000,10,326348770,1698836325481
1698836323000,1698836324000,8,16371381674,1698836325481
1698836323000,1698836324000,4,2128837179,1698836325481
1698836323000,1698836324000,1,35109171,1698836325481
[m
[36m[10:58:45.903673] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:46.000833] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:46.001516] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:46.002427] [D] [thread 130276] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:46.002531] [I] [thread 130276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:46.002550] [I] [thread 130276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:46.002675] [I] [thread 130276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:46.002690] [I] [thread 130276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:46.124650] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836326000-1698836327000[m
[36m[10:58:46.173335] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:46.173795] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:46.497819] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836324000-1698836325000 [m
[36m[10:58:46.498782] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836324000-1698836325000-152[m
[36m[10:58:46.498860] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836324000-1698836325000[m
[36m[10:58:46.498914] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836324000-1698836325000[m
[36m[10:58:46.499015] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:46.499040] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:46.502423] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836324000,1698836325000,5,735412665,1698836326499
1698836324000,1698836325000,11,317175530,1698836326499
1698836324000,1698836325000,6,5844693869,1698836326499
1698836324000,1698836325000,8,16371383923,1698836326499
1698836324000,1698836325000,7,26897422642,1698836326499
1698836324000,1698836325000,10,326351150,1698836326499
1698836324000,1698836325000,4,2128839300,1698836326499
1698836324000,1698836325000,9,299118215,1698836326499
1698836324000,1698836325000,1,35115002,1698836326499
[m
[36m[10:58:47.143636] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836327000-1698836328000[m
[36m[10:58:47.175009] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:47.515234] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836325000-1698836326000 [m
[36m[10:58:47.516077] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836325000-1698836326000-153[m
[36m[10:58:47.516174] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836325000-1698836326000[m
[36m[10:58:47.516229] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836325000-1698836326000[m
[36m[10:58:47.516328] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:47.516357] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:47.519798] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836325000,1698836326000,5,735415115,1698836327516
1698836325000,1698836326000,11,317177835,1698836327516
1698836325000,1698836326000,8,16371386312,1698836327516
1698836325000,1698836326000,6,5844696268,1698836327516
1698836325000,1698836326000,7,26897425019,1698836327516
1698836325000,1698836326000,10,326353479,1698836327516
1698836325000,1698836326000,4,2128841862,1698836327516
1698836325000,1698836326000,9,299120555,1698836327516
1698836325000,1698836326000,1,35119000,1698836327516
[m
[36m[10:58:48.140405] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836328000-1698836329000[m
[36m[10:58:48.176232] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:48.242279] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:48.242925] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:48.243795] [D] [thread 130282] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:48.243902] [I] [thread 130282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:48.243921] [I] [thread 130282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:48.244047] [I] [thread 130282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:48.244062] [I] [thread 130282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:48.409768] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:48.410291] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:48.529576] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836326000-1698836327000 [m
[36m[10:58:48.530573] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836326000-1698836327000-154[m
[36m[10:58:48.530704] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836326000-1698836327000[m
[36m[10:58:48.530808] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836326000-1698836327000[m
[36m[10:58:48.530944] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:48.530976] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:48.534893] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836326000,1698836327000,5,735417690,1698836328530
1698836326000,1698836327000,11,317180417,1698836328530
1698836326000,1698836327000,8,16371388821,1698836328530
1698836326000,1698836327000,6,5844698685,1698836328530
1698836326000,1698836327000,7,26897427501,1698836328530
1698836326000,1698836327000,10,326356058,1698836328530
1698836326000,1698836327000,4,2128844173,1698836328530
1698836326000,1698836327000,9,299123138,1698836328530
1698836326000,1698836327000,1,35124910,1698836328530
[m
[36m[10:58:49.132573] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836329000-1698836330000[m
[36m[10:58:49.411485] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:49.547564] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836327000-1698836328000 [m
[36m[10:58:49.548125] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836327000-1698836328000-155[m
[36m[10:58:49.548193] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836327000-1698836328000[m
[36m[10:58:49.548230] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836327000-1698836328000[m
[36m[10:58:49.548292] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:49.548306] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:49.549964] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836327000,1698836328000,11,317182559,1698836329548
1698836327000,1698836328000,8,16371390993,1698836329548
1698836327000,1698836328000,6,5844701090,1698836329548
1698836327000,1698836328000,4,2128846597,1698836329548
1698836327000,1698836328000,7,26897429809,1698836329548
1698836327000,1698836328000,10,326358222,1698836329548
1698836327000,1698836328000,9,299125347,1698836329548
1698836327000,1698836328000,5,735420167,1698836329548
1698836327000,1698836328000,1,35128931,1698836329548
[m
[36m[10:58:50.129798] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836330000-1698836331000[m
[36m[10:58:50.392639] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:50.393200] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:50.394024] [D] [thread 130288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:50.394118] [I] [thread 130288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:50.394135] [I] [thread 130288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:50.394311] [I] [thread 130288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:50.394330] [I] [thread 130288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:50.559091] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836328000-1698836329000 [m
[36m[10:58:50.560056] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836328000-1698836329000-156[m
[36m[10:58:50.560156] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836328000-1698836329000[m
[36m[10:58:50.560215] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836328000-1698836329000[m
[36m[10:58:50.560304] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:50.560324] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:50.562326] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836328000,1698836329000,11,317185194,1698836330560
1698836328000,1698836329000,8,16371393673,1698836330560
1698836328000,1698836329000,6,5844703583,1698836330560
1698836328000,1698836329000,4,2128849011,1698836330560
1698836328000,1698836329000,7,26897432351,1698836330560
1698836328000,1698836329000,10,326360865,1698836330560
1698836328000,1698836329000,9,299127923,1698836330560
1698836328000,1698836329000,5,735422622,1698836330560
1698836328000,1698836329000,1,35134722,1698836330560
[m
[36m[10:58:50.610632] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:50.611031] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:51.116242] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836331000-1698836332000[m
[36m[10:58:51.570444] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836329000-1698836330000 [m
[36m[10:58:51.571327] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836329000-1698836330000-157[m
[36m[10:58:51.571395] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836329000-1698836330000[m
[36m[10:58:51.571446] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836329000-1698836330000[m
[36m[10:58:51.571541] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:51.571564] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:51.574537] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836329000,1698836330000,11,317187403,1698836331571
1698836329000,1698836330000,8,16371395820,1698836331571
1698836329000,1698836330000,6,5844705800,1698836331571
1698836329000,1698836330000,4,2128851293,1698836331571
1698836329000,1698836330000,7,26897434531,1698836331571
1698836329000,1698836330000,9,299130077,1698836331571
1698836329000,1698836330000,10,326363048,1698836331571
1698836329000,1698836330000,5,735424914,1698836331571
1698836329000,1698836330000,1,35138665,1698836331571
[m
[36m[10:58:51.612246] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:52.121802] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836332000-1698836333000[m
[36m[10:58:52.585856] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836330000-1698836331000 [m
[36m[10:58:52.586839] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836330000-1698836331000-158[m
[36m[10:58:52.586936] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836330000-1698836331000[m
[36m[10:58:52.586996] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836330000-1698836331000[m
[36m[10:58:52.587091] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:52.587118] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:52.590403] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836330000,1698836331000,8,16371398492,1698836332587
1698836330000,1698836331000,11,317189992,1698836332587
1698836330000,1698836331000,4,2128853831,1698836332587
1698836330000,1698836331000,6,5844708395,1698836332587
1698836330000,1698836331000,7,26897437159,1698836332587
1698836330000,1698836331000,9,299132703,1698836332587
1698836330000,1698836331000,10,326365647,1698836332587
1698836330000,1698836331000,5,735427486,1698836332587
1698836330000,1698836331000,1,35141287,1698836332587
[m
[36m[10:58:52.613528] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:52.634973] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:52.635492] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:52.636328] [D] [thread 130295] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:52.636421] [I] [thread 130295] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:52.636439] [I] [thread 130295] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:52.636554] [I] [thread 130295] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:52.636567] [I] [thread 130295] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:52.808085] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:52.808518] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:53.114369] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836333000-1698836334000[m
[36m[10:58:53.602467] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836331000-1698836332000 [m
[36m[10:58:53.603361] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836331000-1698836332000-159[m
[36m[10:58:53.603482] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836331000-1698836332000[m
[36m[10:58:53.603557] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836331000-1698836332000[m
[36m[10:58:53.603677] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:53.603708] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:53.607603] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836331000,1698836332000,8,16371400737,1698836333603
1698836331000,1698836332000,4,2128856207,1698836333603
1698836331000,1698836332000,11,317192216,1698836333603
1698836331000,1698836332000,6,5844710530,1698836333603
1698836331000,1698836332000,7,26897439339,1698836333603
1698836331000,1698836332000,9,299134987,1698836333603
1698836331000,1698836332000,10,326367890,1698836333603
1698836331000,1698836332000,5,735429666,1698836333603
1698836331000,1698836332000,1,35146187,1698836333603
[m
[36m[10:58:53.809837] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:54.112671] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836334000-1698836335000[m
[36m[10:58:54.617453] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836332000-1698836333000 [m
[36m[10:58:54.618184] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836332000-1698836333000-160[m
[36m[10:58:54.618315] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836332000-1698836333000[m
[36m[10:58:54.618372] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836332000-1698836333000[m
[36m[10:58:54.618470] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:54.618498] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:54.621412] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836332000,1698836333000,11,317194587,1698836334618
1698836332000,1698836333000,6,5844713156,1698836334618
1698836332000,1698836333000,7,26897441902,1698836334618
1698836332000,1698836333000,9,299137458,1698836334618
1698836332000,1698836333000,10,326370314,1698836334618
1698836332000,1698836333000,5,735432318,1698836334618
1698836332000,1698836333000,8,16371403420,1698836334618
1698836332000,1698836333000,4,2128858951,1698836334618
1698836332000,1698836333000,1,35150218,1698836334618
[m
[36m[10:58:54.811275] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:54.878052] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:54.878440] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:54.880031] [D] [thread 130301] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:54.880126] [I] [thread 130301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:54.880142] [I] [thread 130301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:54.880257] [I] [thread 130301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:54.880269] [I] [thread 130301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:55.055149] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:55.055518] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:55.108410] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836335000-1698836336000[m
[36m[10:58:55.633825] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836333000-1698836334000 [m
[36m[10:58:55.634751] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836333000-1698836334000-161[m
[36m[10:58:55.634865] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836333000-1698836334000[m
[36m[10:58:55.634935] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836333000-1698836334000[m
[36m[10:58:55.635057] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:55.635087] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:55.639570] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836333000,1698836334000,11,317197202,1698836335635
1698836333000,1698836334000,6,5844715424,1698836335635
1698836333000,1698836334000,7,26897444214,1698836335635
1698836333000,1698836334000,9,299139832,1698836335635
1698836333000,1698836334000,10,326372736,1698836335635
1698836333000,1698836334000,5,735434489,1698836335635
1698836333000,1698836334000,4,2128861117,1698836335635
1698836333000,1698836334000,8,16371405763,1698836335635
1698836333000,1698836334000,1,35155872,1698836335635
[m
[36m[10:58:56.056844] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:56.129302] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836336000-1698836337000[m
[36m[10:58:56.652123] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836334000-1698836335000 [m
[36m[10:58:56.653431] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836334000-1698836335000-162[m
[36m[10:58:56.653557] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836334000-1698836335000[m
[36m[10:58:56.653653] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836334000-1698836335000[m
[36m[10:58:56.653773] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:56.653805] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:56.657704] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836334000,1698836335000,6,5844717866,1698836336653
1698836334000,1698836335000,7,26897446647,1698836336653
1698836334000,1698836335000,9,299142213,1698836336653
1698836334000,1698836335000,10,326375076,1698836336653
1698836334000,1698836335000,5,735437108,1698836336653
1698836334000,1698836335000,8,16371408239,1698836336653
1698836334000,1698836335000,4,2128863751,1698836336653
1698836334000,1698836335000,11,317199667,1698836336653
1698836334000,1698836335000,1,35159810,1698836336653
[m
[36m[10:58:57.058111] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:57.075382] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:57.075949] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:57.076693] [D] [thread 130306] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:57.076787] [I] [thread 130306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:57.076804] [I] [thread 130306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:57.076918] [I] [thread 130306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:57.076930] [I] [thread 130306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:57.124832] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836337000-1698836338000[m
[36m[10:58:57.241664] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:57.242154] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:57.667317] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836335000-1698836336000 [m
[36m[10:58:57.668007] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836335000-1698836336000-163[m
[36m[10:58:57.668091] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836335000-1698836336000[m
[36m[10:58:57.668184] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836335000-1698836336000[m
[36m[10:58:57.668262] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:57.668278] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:57.670055] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836335000,1698836336000,6,5844720336,1698836337668
1698836335000,1698836336000,7,26897449129,1698836337668
1698836335000,1698836336000,9,299144650,1698836337668
1698836335000,1698836336000,10,326377559,1698836337668
1698836335000,1698836336000,5,735439377,1698836337668
1698836335000,1698836336000,4,2128865933,1698836337668
1698836335000,1698836336000,8,16371410647,1698836337668
1698836335000,1698836336000,11,317202188,1698836337668
1698836335000,1698836336000,1,35166004,1698836337668
[m
[36m[10:58:58.116697] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836338000-1698836339000[m
[36m[10:58:58.243467] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:58.678280] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836336000-1698836337000 [m
[36m[10:58:58.679229] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836336000-1698836337000-164[m
[36m[10:58:58.679359] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836336000-1698836337000[m
[36m[10:58:58.679432] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836336000-1698836337000[m
[36m[10:58:58.679556] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:58.679586] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:58.683133] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836336000,1698836337000,9,299146929,1698836338679
1698836336000,1698836337000,10,326379778,1698836338679
1698836336000,1698836337000,5,735441807,1698836338679
1698836336000,1698836337000,4,2128868416,1698836338679
1698836336000,1698836337000,11,317204382,1698836338679
1698836336000,1698836337000,8,16371412923,1698836338679
1698836336000,1698836337000,6,5844722844,1698836338679
1698836336000,1698836337000,7,26897451654,1698836338679
1698836336000,1698836337000,1,35170085,1698836338679
[m
[36m[10:58:59.117427] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836339000-1698836340000[m
[36m[10:58:59.224320] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:59.225015] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:59.225759] [D] [thread 130311] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:58:59.225848] [I] [thread 130311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:59.225866] [I] [thread 130311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:58:59.225981] [I] [thread 130311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:58:59.225994] [I] [thread 130311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:58:59.439226] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:59.439792] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:58:59.696150] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836337000-1698836338000 [m
[36m[10:58:59.697004] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836337000-1698836338000-165[m
[36m[10:58:59.697116] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836337000-1698836338000[m
[36m[10:58:59.697186] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836337000-1698836338000[m
[36m[10:58:59.697304] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:58:59.697335] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:58:59.701218] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836337000,1698836338000,9,299149507,1698836339697
1698836337000,1698836338000,10,326382400,1698836339697
1698836337000,1698836338000,4,2128870791,1698836339697
1698836337000,1698836338000,5,735444214,1698836339697
1698836337000,1698836338000,11,317206938,1698836339697
1698836337000,1698836338000,8,16371415418,1698836339697
1698836337000,1698836338000,6,5844725291,1698836339697
1698836337000,1698836338000,7,26897454117,1698836339697
1698836337000,1698836338000,1,35175929,1698836339697
[m
[36m[10:59:00.139720] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836340000-1698836341000[m
[36m[10:59:00.441074] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:00.711993] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836338000-1698836339000 [m
[36m[10:59:00.712861] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836338000-1698836339000-166[m
[36m[10:59:00.712967] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836338000-1698836339000[m
[36m[10:59:00.713039] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836338000-1698836339000[m
[36m[10:59:00.713152] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:00.713183] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:00.716436] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836338000,1698836339000,9,299151656,1698836340713
1698836338000,1698836339000,10,326384578,1698836340713
1698836338000,1698836339000,4,2128873138,1698836340713
1698836338000,1698836339000,5,735446509,1698836340713
1698836338000,1698836339000,8,16371417690,1698836340713
1698836338000,1698836339000,6,5844727624,1698836340713
1698836338000,1698836339000,11,317209137,1698836340713
1698836338000,1698836339000,7,26897456393,1698836340713
1698836338000,1698836339000,1,35177784,1698836340713
[m
[36m[10:59:01.137921] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836341000-1698836342000[m
[36m[10:59:01.442332] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:01.455417] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:01.456023] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:01.456733] [D] [thread 130318] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:01.456825] [I] [thread 130318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:01.456842] [I] [thread 130318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:01.456956] [I] [thread 130318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:01.456969] [I] [thread 130318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:01.674550] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:01.675373] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:01.729388] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836339000-1698836340000 [m
[36m[10:59:01.730459] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836339000-1698836340000-167[m
[36m[10:59:01.730572] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836339000-1698836340000[m
[36m[10:59:01.730639] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836339000-1698836340000[m
[36m[10:59:01.730753] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:01.730782] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:01.734459] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836339000,1698836340000,9,299154471,1698836341730
1698836339000,1698836340000,10,326387246,1698836341730
1698836339000,1698836340000,5,735449066,1698836341730
1698836339000,1698836340000,4,2128875577,1698836341730
1698836339000,1698836340000,8,16371420335,1698836341730
1698836339000,1698836340000,6,5844730131,1698836341730
1698836339000,1698836340000,11,317211816,1698836341730
1698836339000,1698836340000,7,26897458962,1698836341730
1698836339000,1698836340000,1,35183519,1698836341730
[m
[36m[10:59:02.128489] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836342000-1698836343000[m
[36m[10:59:02.676092] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:02.745426] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836340000-1698836341000 [m
[36m[10:59:02.746249] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836340000-1698836341000-168[m
[36m[10:59:02.746347] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836340000-1698836341000[m
[36m[10:59:02.746411] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836340000-1698836341000[m
[36m[10:59:02.746521] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:02.746548] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:02.749837] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836340000,1698836341000,10,326389483,1698836342746
1698836340000,1698836341000,4,2128877842,1698836342746
1698836340000,1698836341000,5,735451294,1698836342746
1698836340000,1698836341000,8,16371422479,1698836342746
1698836340000,1698836341000,11,317214027,1698836342746
1698836340000,1698836341000,6,5844732346,1698836342746
1698836340000,1698836341000,7,26897461114,1698836342746
1698836340000,1698836341000,9,299156760,1698836342746
1698836340000,1698836341000,1,35187545,1698836342746
[m
[36m[10:59:03.115878] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836343000-1698836344000[m
[36m[10:59:03.677354] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:03.761079] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836341000-1698836342000 [m
[36m[10:59:03.761857] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836341000-1698836342000-169[m
[36m[10:59:03.761961] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836341000-1698836342000[m
[36m[10:59:03.762029] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836341000-1698836342000[m
[36m[10:59:03.762111] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:03.762127] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:03.763906] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836341000,1698836342000,10,326392024,1698836343762
1698836341000,1698836342000,8,16371425109,1698836343762
1698836341000,1698836342000,4,2128880449,1698836343762
1698836341000,1698836342000,5,735453903,1698836343762
1698836341000,1698836342000,6,5844734952,1698836343762
1698836341000,1698836342000,11,317216574,1698836343762
1698836341000,1698836342000,7,26897463787,1698836343762
1698836341000,1698836342000,9,299159408,1698836343762
1698836341000,1698836342000,1,35193332,1698836343762
[m
[36m[10:59:03.778962] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:03.779263] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:03.780708] [D] [thread 130325] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:03.780806] [I] [thread 130325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:03.780824] [I] [thread 130325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:03.780933] [I] [thread 130325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:03.780946] [I] [thread 130325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:03.945202] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:03.945558] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:04.129705] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836344000-1698836345000[m
[36m[10:59:04.772599] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836342000-1698836343000 [m
[36m[10:59:04.773386] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836342000-1698836343000-170[m
[36m[10:59:04.773485] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836342000-1698836343000[m
[36m[10:59:04.773547] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836342000-1698836343000[m
[36m[10:59:04.773651] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:04.773679] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:04.777107] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836342000,1698836343000,10,326394309,1698836344773
1698836342000,1698836343000,4,2128882618,1698836344773
1698836342000,1698836343000,8,16371427282,1698836344773
1698836342000,1698836343000,5,735456083,1698836344773
1698836342000,1698836343000,11,317218810,1698836344773
1698836342000,1698836343000,6,5844737122,1698836344773
1698836342000,1698836343000,7,26897466006,1698836344773
1698836342000,1698836343000,9,299161645,1698836344773
1698836342000,1698836343000,1,35197099,1698836344773
[m
[36m[10:59:04.946780] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:05.116513] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836345000-1698836346000[m
[36m[10:59:05.788184] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836343000-1698836344000 [m
[36m[10:59:05.788844] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836343000-1698836344000-171[m
[36m[10:59:05.788924] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836343000-1698836344000[m
[36m[10:59:05.788968] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836343000-1698836344000[m
[36m[10:59:05.789048] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:05.789066] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:05.790962] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836343000,1698836344000,10,326396830,1698836345789
1698836343000,1698836344000,8,16371429764,1698836345789
1698836343000,1698836344000,4,2128885231,1698836345789
1698836343000,1698836344000,5,735458629,1698836345789
1698836343000,1698836344000,11,317221174,1698836345789
1698836343000,1698836344000,7,26897468543,1698836345789
1698836343000,1698836344000,6,5844739698,1698836345789
1698836343000,1698836344000,9,299164054,1698836345789
1698836343000,1698836344000,1,35201217,1698836345789
[m
[36m[10:59:05.948028] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:05.952904] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:05.953240] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:05.954928] [D] [thread 130332] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:05.955028] [I] [thread 130332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:05.955045] [I] [thread 130332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:05.955162] [I] [thread 130332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:05.955175] [I] [thread 130332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:06.112450] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836346000-1698836347000[m
[36m[10:59:06.214835] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:06.215239] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:06.799978] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836344000-1698836345000 [m
[36m[10:59:06.800790] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836344000-1698836345000-172[m
[36m[10:59:06.800856] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836344000-1698836345000[m
[36m[10:59:06.800908] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836344000-1698836345000[m
[36m[10:59:06.801008] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:06.801034] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:06.804447] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836344000,1698836345000,4,2128887461,1698836346801
1698836344000,1698836345000,8,16371432211,1698836346801
1698836344000,1698836345000,5,735460931,1698836346801
1698836344000,1698836345000,11,317223694,1698836346801
1698836344000,1698836345000,6,5844741969,1698836346801
1698836344000,1698836345000,9,299166446,1698836346801
1698836344000,1698836345000,7,26897470860,1698836346801
1698836344000,1698836345000,10,326399364,1698836346801
1698836344000,1698836345000,1,35206631,1698836346801
[m
[36m[10:59:07.120633] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836347000-1698836348000[m
[36m[10:59:07.216446] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:07.817779] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836345000-1698836346000 [m
[36m[10:59:07.818636] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836345000-1698836346000-173[m
[36m[10:59:07.818738] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836345000-1698836346000[m
[36m[10:59:07.818805] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836345000-1698836346000[m
[36m[10:59:07.818909] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:07.818936] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:07.822285] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836345000,1698836346000,4,2128889906,1698836347818
1698836345000,1698836346000,8,16371434531,1698836347818
1698836345000,1698836346000,5,735463391,1698836347818
1698836345000,1698836346000,11,317225965,1698836347818
1698836345000,1698836346000,7,26897473273,1698836347818
1698836345000,1698836346000,9,299168739,1698836347818
1698836345000,1698836346000,6,5844744421,1698836347818
1698836345000,1698836346000,10,326401689,1698836347818
1698836345000,1698836346000,1,35210654,1698836347818
[m
[36m[10:59:08.121529] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836348000-1698836349000[m
[36m[10:59:08.217691] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:08.219395] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:08.219735] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:08.220890] [D] [thread 130340] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:08.220985] [I] [thread 130340] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:08.221002] [I] [thread 130340] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:08.221115] [I] [thread 130340] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:08.221127] [I] [thread 130340] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:08.433304] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:08.433655] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:08.833720] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836346000-1698836347000 [m
[36m[10:59:08.834650] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836346000-1698836347000-174[m
[36m[10:59:08.834778] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836346000-1698836347000[m
[36m[10:59:08.834861] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836346000-1698836347000[m
[36m[10:59:08.834985] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:08.835022] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:08.838958] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836346000,1698836347000,4,2128892374,1698836348835
1698836346000,1698836347000,8,16371436959,1698836348835
1698836346000,1698836347000,5,735465734,1698836348835
1698836346000,1698836347000,11,317228489,1698836348835
1698836346000,1698836347000,7,26897475637,1698836348835
1698836346000,1698836347000,9,299171287,1698836348835
1698836346000,1698836347000,6,5844746755,1698836348835
1698836346000,1698836347000,10,326404222,1698836348835
1698836346000,1698836347000,1,35214592,1698836348835
[m
[36m[10:59:09.130248] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836349000-1698836350000[m
[36m[10:59:09.434878] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:09.852608] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836347000-1698836348000 [m
[36m[10:59:09.853457] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836347000-1698836348000-175[m
[36m[10:59:09.853571] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836347000-1698836348000[m
[36m[10:59:09.853641] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836347000-1698836348000[m
[36m[10:59:09.853758] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:09.853789] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:09.857695] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836347000,1698836348000,8,16371439185,1698836349853
1698836347000,1698836348000,5,735468090,1698836349853
1698836347000,1698836348000,11,317230667,1698836349853
1698836347000,1698836348000,7,26897477941,1698836349853
1698836347000,1698836348000,9,299173542,1698836349853
1698836347000,1698836348000,6,5844749096,1698836349853
1698836347000,1698836348000,10,326406442,1698836349853
1698836347000,1698836348000,4,2128894907,1698836349853
1698836347000,1698836348000,1,35218528,1698836349853
[m
[36m[10:59:10.120031] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836350000-1698836351000[m
[36m[10:59:10.436136] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:10.455177] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:10.455502] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:10.456726] [D] [thread 130346] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:10.456827] [I] [thread 130346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:10.456844] [I] [thread 130346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:10.456965] [I] [thread 130346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:10.456980] [I] [thread 130346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:10.675934] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:10.676318] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:10.871043] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836348000-1698836349000 [m
[36m[10:59:10.871894] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836348000-1698836349000-176[m
[36m[10:59:10.872008] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836348000-1698836349000[m
[36m[10:59:10.872080] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836348000-1698836349000[m
[36m[10:59:10.872200] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:10.872232] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:10.876141] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836348000,1698836349000,8,16371441941,1698836350872
1698836348000,1698836349000,5,735470641,1698836350872
1698836348000,1698836349000,11,317233310,1698836350872
1698836348000,1698836349000,7,26897480581,1698836350872
1698836348000,1698836349000,9,299176147,1698836350872
1698836348000,1698836349000,6,5844751645,1698836350872
1698836348000,1698836349000,10,326409095,1698836350872
1698836348000,1698836349000,4,2128897430,1698836350872
1698836348000,1698836349000,1,35224155,1698836350872
[m
[36m[10:59:11.114488] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836351000-1698836352000[m
[36m[10:59:11.677518] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:11.889520] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836349000-1698836350000 [m
[36m[10:59:11.890521] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836349000-1698836350000-177[m
[36m[10:59:11.890607] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836349000-1698836350000[m
[36m[10:59:11.890675] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836349000-1698836350000[m
[36m[10:59:11.890805] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:11.890838] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:11.894244] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836349000,1698836350000,7,26897482745,1698836351890
1698836349000,1698836350000,5,735472839,1698836351890
1698836349000,1698836350000,11,317235522,1698836351890
1698836349000,1698836350000,9,299178291,1698836351890
1698836349000,1698836350000,6,5844753812,1698836351890
1698836349000,1698836350000,10,326411243,1698836351890
1698836349000,1698836350000,4,2128899705,1698836351890
1698836349000,1698836350000,8,16371444253,1698836351890
1698836349000,1698836350000,1,35228127,1698836351890
[m
[36m[10:59:12.110738] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836352000-1698836353000[m
[36m[10:59:12.678750] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:12.773611] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:12.774269] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:12.775007] [D] [thread 130353] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:12.775099] [I] [thread 130353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:12.775116] [I] [thread 130353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:12.775230] [I] [thread 130353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:12.775242] [I] [thread 130353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:12.901818] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836350000-1698836351000 [m
[36m[10:59:12.903129] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836350000-1698836351000-178[m
[36m[10:59:12.903226] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836350000-1698836351000[m
[36m[10:59:12.903281] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836350000-1698836351000[m
[36m[10:59:12.903354] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:12.903373] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:12.905546] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836350000,1698836351000,7,26897485358,1698836352903
1698836350000,1698836351000,5,735475440,1698836352903
1698836350000,1698836351000,11,317238198,1698836352903
1698836350000,1698836351000,9,299180806,1698836352903
1698836350000,1698836351000,6,5844756450,1698836352903
1698836350000,1698836351000,10,326413792,1698836352903
1698836350000,1698836351000,4,2128902235,1698836352903
1698836350000,1698836351000,8,16371446879,1698836352903
1698836350000,1698836351000,1,35233899,1698836352903
[m
[36m[10:59:13.035062] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:13.035694] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:13.113999] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836353000-1698836354000[m
[36m[10:59:13.914547] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836351000-1698836352000 [m
[36m[10:59:13.915244] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836351000-1698836352000-179[m
[36m[10:59:13.915320] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836351000-1698836352000[m
[36m[10:59:13.915359] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836351000-1698836352000[m
[36m[10:59:13.915430] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:13.915447] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:13.917173] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836351000,1698836352000,7,26897487517,1698836353915
1698836351000,1698836352000,5,735477619,1698836353915
1698836351000,1698836352000,9,299183102,1698836353915
1698836351000,1698836352000,6,5844758589,1698836353915
1698836351000,1698836352000,10,326416080,1698836353915
1698836351000,1698836352000,4,2128904387,1698836353915
1698836351000,1698836352000,8,16371449010,1698836353915
1698836351000,1698836352000,11,317240467,1698836353915
1698836351000,1698836352000,1,35237818,1698836353915
[m
[36m[10:59:14.036950] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:14.116086] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836354000-1698836355000[m
[36m[10:59:14.924803] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836352000-1698836353000 [m
[36m[10:59:14.925491] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836352000-1698836353000-180[m
[36m[10:59:14.925595] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836352000-1698836353000[m
[36m[10:59:14.925647] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836352000-1698836353000[m
[36m[10:59:14.925751] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:14.925771] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:14.928203] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836352000,1698836353000,7,26897490010,1698836354925
1698836352000,1698836353000,5,735480300,1698836354925
1698836352000,1698836353000,11,317242844,1698836354925
1698836352000,1698836353000,9,299185548,1698836354925
1698836352000,1698836353000,6,5844761139,1698836354925
1698836352000,1698836353000,10,326418500,1698836354925
1698836352000,1698836353000,4,2128906956,1698836354925
1698836352000,1698836353000,8,16371451517,1698836354925
1698836352000,1698836353000,1,35242579,1698836354925
[m
[36m[10:59:15.038347] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:15.140394] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:15.140897] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:15.141866] [D] [thread 130361] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:15.141964] [I] [thread 130361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:15.141981] [I] [thread 130361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:15.142097] [I] [thread 130361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:15.142110] [I] [thread 130361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:15.150811] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836355000-1698836356000[m
[36m[10:59:15.362618] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:15.363126] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:15.938888] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836353000-1698836354000 [m
[36m[10:59:15.939531] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836353000-1698836354000-181[m
[36m[10:59:15.939628] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836353000-1698836354000[m
[36m[10:59:15.939688] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836353000-1698836354000[m
[36m[10:59:15.939790] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:15.939819] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:15.943181] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836353000,1698836354000,7,26897492385,1698836355939
1698836353000,1698836354000,9,299188086,1698836355939
1698836353000,1698836354000,4,2128909166,1698836355939
1698836353000,1698836354000,6,5844763395,1698836355939
1698836353000,1698836354000,10,326420967,1698836355939
1698836353000,1698836354000,8,16371453829,1698836355939
1698836353000,1698836354000,5,735482693,1698836355939
1698836353000,1698836354000,11,317245394,1698836355939
1698836353000,1698836354000,1,35247311,1698836355939
[m
[36m[10:59:16.116800] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836356000-1698836357000[m
[36m[10:59:16.364472] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:16.954392] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836354000-1698836355000 [m
[36m[10:59:16.955332] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836354000-1698836355000-182[m
[36m[10:59:16.955406] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836354000-1698836355000[m
[36m[10:59:16.955459] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836354000-1698836355000[m
[36m[10:59:16.955566] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:16.955590] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:16.959210] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836354000,1698836355000,7,26897494791,1698836356955
1698836354000,1698836355000,4,2128911629,1698836356955
1698836354000,1698836355000,6,5844765744,1698836356955
1698836354000,1698836355000,10,326423188,1698836356955
1698836354000,1698836355000,8,16371456170,1698836356955
1698836354000,1698836355000,11,317247656,1698836356955
1698836354000,1698836355000,5,735485157,1698836356955
1698836354000,1698836355000,9,299190416,1698836356955
1698836354000,1698836355000,1,35249194,1698836356955
[m
[36m[10:59:17.124439] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836357000-1698836358000[m
[36m[10:59:17.365739] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:17.380185] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:17.380503] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:17.381559] [D] [thread 130366] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:17.381680] [I] [thread 130366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:17.381697] [I] [thread 130366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:17.381820] [I] [thread 130366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:17.381834] [I] [thread 130366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:17.550908] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:17.551224] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:17.969786] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836355000-1698836356000 [m
[36m[10:59:17.970778] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836355000-1698836356000-183[m
[36m[10:59:17.970881] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836355000-1698836356000[m
[36m[10:59:17.970943] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836355000-1698836356000[m
[36m[10:59:17.971050] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:17.971078] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:17.974980] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836355000,1698836356000,4,2128914066,1698836357971
1698836355000,1698836356000,6,5844768252,1698836357971
1698836355000,1698836356000,10,326425856,1698836357971
1698836355000,1698836356000,8,16371458756,1698836357971
1698836355000,1698836356000,5,735487545,1698836357971
1698836355000,1698836356000,11,317250315,1698836357971
1698836355000,1698836356000,9,299193012,1698836357971
1698836355000,1698836356000,7,26897497334,1698836357971
1698836355000,1698836356000,1,35254808,1698836357971
[m
[36m[10:59:18.111766] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836358000-1698836359000[m
[36m[10:59:18.552412] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:18.985726] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836356000-1698836357000 [m
[36m[10:59:18.986736] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836356000-1698836357000-184[m
[36m[10:59:18.986851] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836356000-1698836357000[m
[36m[10:59:18.986924] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836356000-1698836357000[m
[36m[10:59:18.987039] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:18.987068] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:18.990996] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836356000,1698836357000,7,26897499523,1698836358987
1698836356000,1698836357000,4,2128916340,1698836358987
1698836356000,1698836357000,10,326427992,1698836358987
1698836356000,1698836357000,6,5844770476,1698836358987
1698836356000,1698836357000,8,16371460892,1698836358987
1698836356000,1698836357000,5,735489850,1698836358987
1698836356000,1698836357000,9,299195206,1698836358987
1698836356000,1698836357000,11,317252448,1698836358987
1698836356000,1698836357000,1,35258894,1698836358987
[m
[36m[10:59:19.113660] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836359000-1698836360000[m
[36m[10:59:19.553672] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:19.651532] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:19.651846] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:19.653057] [D] [thread 130371] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:19.653165] [I] [thread 130371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:19.653182] [I] [thread 130371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:19.653303] [I] [thread 130371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:19.653317] [I] [thread 130371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:19.864213] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:19.864570] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:20.001026] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836357000-1698836358000 [m
[36m[10:59:20.002012] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836357000-1698836358000-185[m
[36m[10:59:20.002124] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836357000-1698836358000[m
[36m[10:59:20.002254] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836357000-1698836358000[m
[36m[10:59:20.002396] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:20.002427] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:20.006599] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836357000,1698836358000,4,2128918866,1698836360002
1698836357000,1698836358000,10,326430571,1698836360002
1698836357000,1698836358000,6,5844773127,1698836360002
1698836357000,1698836358000,8,16371463566,1698836360002
1698836357000,1698836358000,9,299197860,1698836360002
1698836357000,1698836358000,5,735492415,1698836360002
1698836357000,1698836358000,11,317255030,1698836360002
1698836357000,1698836358000,7,26897502276,1698836360002
1698836357000,1698836358000,1,35264491,1698836360002
[m
[36m[10:59:20.141413] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836360000-1698836361000[m
[36m[10:59:20.865838] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:21.016703] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836358000-1698836359000 [m
[36m[10:59:21.016863] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836359000-1698836360000 [m
[36m[10:59:21.017718] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836358000-1698836359000-186[m
[36m[10:59:21.017811] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836358000-1698836359000[m
[36m[10:59:21.017861] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836358000-1698836359000[m
[36m[10:59:21.017939] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:21.017959] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:21.020404] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836358000,1698836359000,4,2128921144,1698836361017
1698836358000,1698836359000,10,326432821,1698836361017
1698836358000,1698836359000,6,5844775248,1698836361017
1698836358000,1698836359000,9,299200033,1698836361017
1698836358000,1698836359000,8,16371465699,1698836361017
1698836358000,1698836359000,5,735494557,1698836361017
1698836358000,1698836359000,11,317257274,1698836361017
1698836358000,1698836359000,7,26897504433,1698836361017
1698836358000,1698836359000,1,35268497,1698836361017
[m
[36m[10:59:21.021097] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836359000-1698836360000-187[m
[36m[10:59:21.021182] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836359000-1698836360000[m
[36m[10:59:21.021234] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836359000-1698836360000[m
[36m[10:59:21.021313] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:21.021332] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:21.023524] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836359000,1698836360000,10,326435379,1698836361021
1698836359000,1698836360000,6,5844777849,1698836361021
1698836359000,1698836360000,8,16371468256,1698836361021
1698836359000,1698836360000,9,299202533,1698836361021
1698836359000,1698836360000,5,735497169,1698836361021
1698836359000,1698836360000,11,317259760,1698836361021
1698836359000,1698836360000,7,26897507041,1698836361021
1698836359000,1698836360000,4,2128923920,1698836361021
[m
[36m[10:59:21.129248] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836361000-1698836362000[m
[36m[10:59:21.867085] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:21.905583] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:21.906088] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:21.907272] [D] [thread 130376] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:21.907400] [I] [thread 130376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:21.907418] [I] [thread 130376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:21.907545] [I] [thread 130376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:21.907559] [I] [thread 130376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:22.030608] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836360000-1698836361000 [m
[36m[10:59:22.031283] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836360000-1698836361000-188[m
[36m[10:59:22.031346] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836360000-1698836361000[m
[36m[10:59:22.031387] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836360000-1698836361000[m
[36m[10:59:22.031469] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:22.031487] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:22.033520] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836360000,1698836361000,6,5844780062,1698836362031
1698836360000,1698836361000,9,299204823,1698836362031
1698836360000,1698836361000,5,735499360,1698836362031
1698836360000,1698836361000,8,16371470570,1698836362031
1698836360000,1698836361000,11,317262141,1698836362031
1698836360000,1698836361000,7,26897509249,1698836362031
1698836360000,1698836361000,4,2128926086,1698836362031
1698836360000,1698836361000,10,326437923,1698836362031
1698836360000,1698836361000,1,35274312,1698836362031
[m
[36m[10:59:22.072093] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:22.072399] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:22.135241] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836362000-1698836363000[m
[36m[10:59:23.043448] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836361000-1698836362000 [m
[36m[10:59:23.044412] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836361000-1698836362000-189[m
[36m[10:59:23.045276] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836361000-1698836362000[m
[36m[10:59:23.046160] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836361000-1698836362000[m
[36m[10:59:23.046510] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:23.046555] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:23.050394] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836361000,1698836362000,6,5844782502,1698836363046
1698836361000,1698836362000,8,16371472990,1698836363046
1698836361000,1698836362000,9,299207301,1698836363046
1698836361000,1698836362000,5,735501870,1698836363046
1698836361000,1698836362000,7,26897511674,1698836363046
1698836361000,1698836362000,11,317264417,1698836363046
1698836361000,1698836362000,4,2128928665,1698836363046
1698836361000,1698836362000,10,326440251,1698836363046
1698836361000,1698836362000,1,35278326,1698836363046
[m
[36m[10:59:23.073679] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:23.133237] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836363000-1698836364000[m
[36m[10:59:24.059700] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836362000-1698836363000 [m
[36m[10:59:24.060635] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836362000-1698836363000-190[m
[36m[10:59:24.060738] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836362000-1698836363000[m
[36m[10:59:24.060801] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836362000-1698836363000[m
[36m[10:59:24.060908] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:24.060936] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:24.064752] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836362000,1698836363000,6,5844784962,1698836364060
1698836362000,1698836363000,9,299209837,1698836364060
1698836362000,1698836363000,8,16371475446,1698836364060
1698836362000,1698836363000,5,735504272,1698836364060
1698836362000,1698836363000,11,317267013,1698836364060
1698836362000,1698836363000,4,2128930943,1698836364060
1698836362000,1698836363000,7,26897514130,1698836364060
1698836362000,1698836363000,10,326442828,1698836364060
1698836362000,1698836363000,1,35283476,1698836364060
[m
[36m[10:59:24.074907] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:24.109283] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:24.109601] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:24.110703] [D] [thread 130381] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:24.110803] [I] [thread 130381] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:24.110820] [I] [thread 130381] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:24.110935] [I] [thread 130381] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:24.110994] [I] [thread 130381] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:24.125149] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836364000-1698836365000[m
[36m[10:59:24.311586] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:24.311903] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:25.076574] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836363000-1698836364000 [m
[36m[10:59:25.077558] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836363000-1698836364000-191[m
[36m[10:59:25.077659] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836363000-1698836364000[m
[36m[10:59:25.077734] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836363000-1698836364000[m
[36m[10:59:25.077834] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:25.077858] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:25.081236] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836363000,1698836364000,6,5844787305,1698836365077
1698836363000,1698836364000,9,299212114,1698836365077
1698836363000,1698836364000,4,2128933348,1698836365077
1698836363000,1698836364000,11,317269131,1698836365077
1698836363000,1698836364000,8,16371477723,1698836365077
1698836363000,1698836364000,5,735506671,1698836365077
1698836363000,1698836364000,7,26897516501,1698836365077
1698836363000,1698836364000,10,326445037,1698836365077
1698836363000,1698836364000,1,35285952,1698836365077
[m
[36m[10:59:25.130321] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836365000-1698836366000[m
[36m[10:59:25.313196] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:26.091889] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836364000-1698836365000 [m
[36m[10:59:26.092675] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836364000-1698836365000-192[m
[36m[10:59:26.092773] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836364000-1698836365000[m
[36m[10:59:26.092835] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836364000-1698836365000[m
[36m[10:59:26.092939] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:26.092965] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:26.096392] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836364000,1698836365000,6,5844789759,1698836366092
1698836364000,1698836365000,4,2128935704,1698836366092
1698836364000,1698836365000,9,299214668,1698836366092
1698836364000,1698836365000,11,317271819,1698836366092
1698836364000,1698836365000,8,16371480238,1698836366092
1698836364000,1698836365000,5,735509076,1698836366092
1698836364000,1698836365000,7,26897518979,1698836366092
1698836364000,1698836365000,10,326447589,1698836366092
1698836364000,1698836365000,1,35290035,1698836366092
[m
[36m[10:59:26.119852] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836366000-1698836367000[m
[36m[10:59:26.314438] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:26.323118] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:26.323475] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:26.324638] [D] [thread 130386] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:26.324733] [I] [thread 130386] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:26.324750] [I] [thread 130386] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:26.324867] [I] [thread 130386] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:26.324879] [I] [thread 130386] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:26.542865] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:26.543202] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:27.107954] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836365000-1698836366000 [m
[36m[10:59:27.108754] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836365000-1698836366000-193[m
[36m[10:59:27.108824] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836365000-1698836366000[m
[36m[10:59:27.108879] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836365000-1698836366000[m
[36m[10:59:27.108982] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:27.109007] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:27.112362] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836365000,1698836366000,6,5844791974,1698836367109
1698836365000,1698836366000,4,2128938061,1698836367109
1698836365000,1698836366000,11,317273989,1698836367109
1698836365000,1698836366000,9,299216789,1698836367109
1698836365000,1698836366000,5,735511347,1698836367109
1698836365000,1698836366000,8,16371482376,1698836367109
1698836365000,1698836366000,7,26897521248,1698836367109
1698836365000,1698836366000,10,326449746,1698836367109
1698836365000,1698836366000,1,35295776,1698836367109
[m
[36m[10:59:27.127669] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836367000-1698836368000[m
[36m[10:59:27.544421] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:28.109858] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836368000-1698836369000[m
[36m[10:59:28.123481] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836366000-1698836367000 [m
[36m[10:59:28.124248] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836366000-1698836367000-194[m
[36m[10:59:28.124348] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836366000-1698836367000[m
[36m[10:59:28.124411] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836366000-1698836367000[m
[36m[10:59:28.124516] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:28.124544] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:28.127886] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836366000,1698836367000,6,5844794734,1698836368124
1698836366000,1698836367000,11,317276559,1698836368124
1698836366000,1698836367000,4,2128940609,1698836368124
1698836366000,1698836367000,9,299219468,1698836368124
1698836366000,1698836367000,5,735513899,1698836368124
1698836366000,1698836367000,8,16371485091,1698836368124
1698836366000,1698836367000,10,326452393,1698836368124
1698836366000,1698836367000,7,26897523869,1698836368124
1698836366000,1698836367000,1,35299870,1698836368124
[m
[36m[10:59:28.545708] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:28.646227] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:28.646570] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:28.647612] [D] [thread 130391] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:28.647709] [I] [thread 130391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:28.647727] [I] [thread 130391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:28.647842] [I] [thread 130391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:28.647855] [I] [thread 130391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:28.860273] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:28.860833] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:29.122251] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836369000-1698836370000[m
[36m[10:59:29.140478] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836367000-1698836368000 [m
[36m[10:59:29.141254] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836367000-1698836368000-195[m
[36m[10:59:29.141355] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836367000-1698836368000[m
[36m[10:59:29.141416] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836367000-1698836368000[m
[36m[10:59:29.141521] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:29.141548] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:29.144912] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836367000,1698836368000,4,2128942789,1698836369141
1698836367000,1698836368000,11,317278788,1698836369141
1698836367000,1698836368000,9,299221621,1698836369141
1698836367000,1698836368000,5,735516073,1698836369141
1698836367000,1698836368000,8,16371487268,1698836369141
1698836367000,1698836368000,7,26897525986,1698836369141
1698836367000,1698836368000,10,326454651,1698836369141
1698836367000,1698836368000,6,5844796971,1698836369141
1698836367000,1698836368000,1,35305548,1698836369141
[m
[36m[10:59:29.862064] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:30.115748] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836370000-1698836371000[m
[36m[10:59:30.156922] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836368000-1698836369000 [m
[36m[10:59:30.157590] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836368000-1698836369000-196[m
[36m[10:59:30.157677] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836368000-1698836369000[m
[36m[10:59:30.157736] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836368000-1698836369000[m
[36m[10:59:30.157815] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:30.157832] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:30.159671] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836368000,1698836369000,9,299224289,1698836370157
1698836368000,1698836369000,5,735518687,1698836370157
1698836368000,1698836369000,11,317281223,1698836370157
1698836368000,1698836369000,4,2128945409,1698836370157
1698836368000,1698836369000,8,16371489761,1698836370157
1698836368000,1698836369000,7,26897528559,1698836370157
1698836368000,1698836369000,10,326457119,1698836370157
1698836368000,1698836369000,6,5844799659,1698836370157
1698836368000,1698836369000,1,35309576,1698836370157
[m
[36m[10:59:30.863364] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:30.975685] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:30.976003] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:30.977142] [D] [thread 130397] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:30.977300] [I] [thread 130397] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:30.977320] [I] [thread 130397] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:30.977451] [I] [thread 130397] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:30.977465] [I] [thread 130397] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:31.113345] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836371000-1698836372000[m
[36m[10:59:31.168477] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836369000-1698836370000 [m
[36m[10:59:31.169458] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836369000-1698836370000-197[m
[36m[10:59:31.169576] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836369000-1698836370000[m
[36m[10:59:31.169652] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836369000-1698836370000[m
[36m[10:59:31.169773] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:31.169804] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:31.174324] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836369000,1698836370000,11,317283656,1698836371169
1698836369000,1698836370000,4,2128947691,1698836371169
1698836369000,1698836370000,5,735520939,1698836371169
1698836369000,1698836370000,8,16371492079,1698836371169
1698836369000,1698836370000,7,26897530852,1698836371169
1698836369000,1698836370000,10,326459494,1698836371169
1698836369000,1698836370000,6,5844801854,1698836371169
1698836369000,1698836370000,9,299226733,1698836371169
1698836369000,1698836370000,1,35315365,1698836371169
[m
[36m[10:59:31.215411] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:31.215720] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:32.115650] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836372000-1698836373000[m
[36m[10:59:32.186790] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836370000-1698836371000 [m
[36m[10:59:32.187810] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836370000-1698836371000-198[m
[36m[10:59:32.187925] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836370000-1698836371000[m
[36m[10:59:32.187995] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836370000-1698836371000[m
[36m[10:59:32.188115] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:32.188146] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:32.192762] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836370000,1698836371000,11,317285906,1698836372188
1698836370000,1698836371000,5,735523381,1698836372188
1698836370000,1698836371000,8,16371494402,1698836372188
1698836370000,1698836371000,7,26897533228,1698836372188
1698836370000,1698836371000,10,326461761,1698836372188
1698836370000,1698836371000,9,299229076,1698836372188
1698836370000,1698836371000,6,5844804309,1698836372188
1698836370000,1698836371000,4,2128950370,1698836372188
1698836370000,1698836371000,1,35319362,1698836372188
[m
[36m[10:59:32.216895] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:33.113328] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836373000-1698836374000[m
[36m[10:59:33.204377] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836371000-1698836372000 [m
[36m[10:59:33.205162] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836371000-1698836372000-199[m
[36m[10:59:33.205267] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836371000-1698836372000[m
[36m[10:59:33.205334] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836371000-1698836372000[m
[36m[10:59:33.205443] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:33.205470] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:33.208669] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836371000,1698836372000,5,735525851,1698836373205
1698836371000,1698836372000,11,317288694,1698836373205
1698836371000,1698836372000,8,16371496995,1698836373205
1698836371000,1698836372000,7,26897535690,1698836373205
1698836371000,1698836372000,10,326464306,1698836373205
1698836371000,1698836372000,9,299231591,1698836373205
1698836371000,1698836372000,4,2128952637,1698836373205
1698836371000,1698836372000,6,5844806723,1698836373205
1698836371000,1698836372000,1,35321944,1698836373205
[m
[36m[10:59:33.218162] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:33.237477] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:33.237879] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:33.239581] [D] [thread 130403] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:33.239679] [I] [thread 130403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:33.239696] [I] [thread 130403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:33.239812] [I] [thread 130403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:33.239825] [I] [thread 130403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:33.452666] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:33.453021] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:34.158529] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836374000-1698836375000[m
[36m[10:59:34.221517] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836372000-1698836373000 [m
[36m[10:59:34.222950] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836372000-1698836373000-200[m
[36m[10:59:34.223077] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836372000-1698836373000[m
[36m[10:59:34.223153] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836372000-1698836373000[m
[36m[10:59:34.223267] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:34.223298] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:34.227201] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836372000,1698836373000,7,26897537933,1698836374223
1698836372000,1698836373000,10,326466518,1698836374223
1698836372000,1698836373000,9,299233754,1698836374223
1698836372000,1698836373000,4,2128955062,1698836374223
1698836372000,1698836373000,6,5844809088,1698836374223
1698836372000,1698836373000,5,735528338,1698836374223
1698836372000,1698836373000,11,317290941,1698836374223
1698836372000,1698836373000,8,16371499438,1698836374223
1698836372000,1698836373000,1,35326482,1698836374223
[m
[36m[10:59:34.454416] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:35.151774] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836375000-1698836376000[m
[36m[10:59:35.237339] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836373000-1698836374000 [m
[36m[10:59:35.238263] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836373000-1698836374000-201[m
[36m[10:59:35.238374] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836373000-1698836374000[m
[36m[10:59:35.238446] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836373000-1698836374000[m
[36m[10:59:35.238570] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:35.238601] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:35.242499] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836373000,1698836374000,7,26897540616,1698836375238
1698836373000,1698836374000,10,326469282,1698836375238
1698836373000,1698836374000,9,299236360,1698836375238
1698836373000,1698836374000,6,5844811561,1698836375238
1698836373000,1698836374000,4,2128957469,1698836375238
1698836373000,1698836374000,8,16371501991,1698836375238
1698836373000,1698836374000,11,317293582,1698836375238
1698836373000,1698836374000,5,735530781,1698836375238
1698836373000,1698836374000,1,35330611,1698836375238
[m
[36m[10:59:35.455705] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:35.556052] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:35.556377] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:35.558058] [D] [thread 130408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:35.558152] [I] [thread 130408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:35.558169] [I] [thread 130408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:35.558344] [I] [thread 130408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:35.558361] [I] [thread 130408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:35.767478] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:35.767813] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:36.144854] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836376000-1698836377000[m
[36m[10:59:36.253682] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836374000-1698836375000 [m
[36m[10:59:36.254603] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836374000-1698836375000-202[m
[36m[10:59:36.254722] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836374000-1698836375000[m
[36m[10:59:36.254802] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836374000-1698836375000[m
[36m[10:59:36.254927] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:36.254958] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:36.258882] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836374000,1698836375000,9,299238511,1698836376254
1698836374000,1698836375000,10,326471451,1698836376254
1698836374000,1698836375000,6,5844813701,1698836376254
1698836374000,1698836375000,4,2128959692,1698836376254
1698836374000,1698836375000,11,317295703,1698836376254
1698836374000,1698836375000,8,16371504114,1698836376254
1698836374000,1698836375000,5,735532997,1698836376254
1698836374000,1698836375000,7,26897542906,1698836376254
1698836374000,1698836375000,1,35336365,1698836376254
[m
[36m[10:59:36.769015] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:37.136689] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836377000-1698836378000[m
[36m[10:59:37.271033] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836375000-1698836376000 [m
[36m[10:59:37.271971] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836375000-1698836376000-203[m
[36m[10:59:37.272042] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836375000-1698836376000[m
[36m[10:59:37.272091] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836375000-1698836376000[m
[36m[10:59:37.272183] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:37.272206] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:37.275301] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836375000,1698836376000,9,299241070,1698836377272
1698836375000,1698836376000,10,326473950,1698836377272
1698836375000,1698836376000,6,5844816402,1698836377272
1698836375000,1698836376000,4,2128962269,1698836377272
1698836375000,1698836376000,8,16371506721,1698836377272
1698836375000,1698836376000,11,317298201,1698836377272
1698836375000,1698836376000,5,735535638,1698836377272
1698836375000,1698836376000,7,26897545587,1698836377272
1698836375000,1698836376000,1,35340409,1698836377272
[m
[36m[10:59:37.770294] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:37.772052] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:37.772365] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:37.773360] [D] [thread 130414] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:37.773452] [I] [thread 130414] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:37.773469] [I] [thread 130414] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:37.773584] [I] [thread 130414] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:37.773596] [I] [thread 130414] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:37.989415] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:37.989781] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:38.123107] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836378000-1698836379000[m
[36m[10:59:38.286838] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836376000-1698836377000 [m
[36m[10:59:38.287507] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836376000-1698836377000-204[m
[36m[10:59:38.287588] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836376000-1698836377000[m
[36m[10:59:38.287635] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836376000-1698836377000[m
[36m[10:59:38.287710] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:38.287728] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:38.289440] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836376000,1698836377000,9,299243404,1698836378287
1698836376000,1698836377000,10,326476258,1698836378287
1698836376000,1698836377000,6,5844818551,1698836378287
1698836376000,1698836377000,8,16371508938,1698836378287
1698836376000,1698836377000,4,2128964404,1698836378287
1698836376000,1698836377000,11,317300583,1698836378287
1698836376000,1698836377000,5,735537802,1698836378287
1698836376000,1698836377000,7,26897547749,1698836378287
1698836376000,1698836377000,1,35346616,1698836378287
[m
[36m[10:59:38.990995] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:39.115946] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836379000-1698836380000[m
[36m[10:59:39.297463] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836377000-1698836378000 [m
[36m[10:59:39.298378] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836377000-1698836378000-205[m
[36m[10:59:39.298488] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836377000-1698836378000[m
[36m[10:59:39.298563] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836377000-1698836378000[m
[36m[10:59:39.298688] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:39.298726] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:39.301825] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836377000,1698836378000,9,299245836,1698836379298
1698836377000,1698836378000,10,326478620,1698836379298
1698836377000,1698836378000,4,2128967024,1698836379298
1698836377000,1698836378000,6,5844821099,1698836379298
1698836377000,1698836378000,8,16371511382,1698836379298
1698836377000,1698836378000,11,317302982,1698836379298
1698836377000,1698836378000,7,26897550328,1698836379298
1698836377000,1698836378000,5,735540419,1698836379298
1698836377000,1698836378000,1,35350523,1698836379298
[m
[36m[10:59:39.992252] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:39.998012] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:39.998389] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:39.999346] [D] [thread 130420] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:39.999439] [I] [thread 130420] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:39.999456] [I] [thread 130420] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:39.999570] [I] [thread 130420] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:39.999584] [I] [thread 130420] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:40.121036] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836380000-1698836381000[m
[36m[10:59:40.221871] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:40.222271] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:40.314554] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836378000-1698836379000 [m
[36m[10:59:40.315436] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836378000-1698836379000-206[m
[36m[10:59:40.315548] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836378000-1698836379000[m
[36m[10:59:40.315616] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836378000-1698836379000[m
[36m[10:59:40.315732] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:40.315767] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:40.319237] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836378000,1698836379000,9,299248197,1698836380315
1698836378000,1698836379000,8,16371513814,1698836380315
1698836378000,1698836379000,4,2128969303,1698836380315
1698836378000,1698836379000,10,326481081,1698836380315
1698836378000,1698836379000,6,5844823429,1698836380315
1698836378000,1698836379000,11,317305395,1698836380315
1698836378000,1698836379000,5,735542645,1698836380315
1698836378000,1698836379000,7,26897552615,1698836380315
1698836378000,1698836379000,1,35356044,1698836380315
[m
[36m[10:59:41.111753] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836381000-1698836382000[m
[36m[10:59:41.223505] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:41.331097] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836379000-1698836380000 [m
[36m[10:59:41.331975] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836379000-1698836380000-207[m
[36m[10:59:41.332095] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836379000-1698836380000[m
[36m[10:59:41.332176] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836379000-1698836380000[m
[36m[10:59:41.332300] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:41.332330] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:41.336225] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836379000,1698836380000,9,299250642,1698836381332
1698836379000,1698836380000,4,2128971773,1698836381332
1698836379000,1698836380000,10,326483369,1698836381332
1698836379000,1698836380000,8,16371516158,1698836381332
1698836379000,1698836380000,11,317307598,1698836381332
1698836379000,1698836380000,6,5844825870,1698836381332
1698836379000,1698836380000,5,735545186,1698836381332
1698836379000,1698836380000,7,26897554996,1698836381332
1698836379000,1698836380000,1,35357973,1698836381332
[m
[36m[10:59:42.113218] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836382000-1698836383000[m
[36m[10:59:42.224768] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:42.269889] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:42.270266] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:42.271427] [D] [thread 130426] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:42.271534] [I] [thread 130426] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:42.271551] [I] [thread 130426] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:42.271666] [I] [thread 130426] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:42.271699] [I] [thread 130426] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:42.349022] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836380000-1698836381000 [m
[36m[10:59:42.349807] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836380000-1698836381000-208[m
[36m[10:59:42.349908] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836380000-1698836381000[m
[36m[10:59:42.349969] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836380000-1698836381000[m
[36m[10:59:42.350071] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:42.350098] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:42.353459] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836380000,1698836381000,4,2128974216,1698836382350
1698836380000,1698836381000,10,326485902,1698836382350
1698836380000,1698836381000,8,16371518648,1698836382350
1698836380000,1698836381000,11,317310183,1698836382350
1698836380000,1698836381000,6,5844828251,1698836382350
1698836380000,1698836381000,5,735547496,1698836382350
1698836380000,1698836381000,7,26897557423,1698836382350
1698836380000,1698836381000,9,299253293,1698836382350
1698836380000,1698836381000,1,35363735,1698836382350
[m
[36m[10:59:42.454692] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:42.455043] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:43.127504] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836383000-1698836384000[m
[36m[10:59:43.365031] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836381000-1698836382000 [m
[36m[10:59:43.365924] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836381000-1698836382000-209[m
[36m[10:59:43.366029] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836381000-1698836382000[m
[36m[10:59:43.366091] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836381000-1698836382000[m
[36m[10:59:43.366320] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:43.366363] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:43.370072] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836381000,1698836382000,10,326488047,1698836383366
1698836381000,1698836382000,8,16371520811,1698836383366
1698836381000,1698836382000,11,317312375,1698836383366
1698836381000,1698836382000,6,5844830554,1698836383366
1698836381000,1698836382000,5,735549836,1698836383366
1698836381000,1698836382000,7,26897559721,1698836383366
1698836381000,1698836382000,9,299255509,1698836383366
1698836381000,1698836382000,4,2128976682,1698836383366
1698836381000,1698836382000,1,35367546,1698836383366
[m
[36m[10:59:43.456244] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:44.123532] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836384000-1698836385000[m
[36m[10:59:44.381279] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836382000-1698836383000 [m
[36m[10:59:44.382073] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836382000-1698836383000-210[m
[36m[10:59:44.382174] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836382000-1698836383000[m
[36m[10:59:44.382290] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836382000-1698836383000[m
[36m[10:59:44.382404] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:44.382430] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:44.385757] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836382000,1698836383000,10,326490749,1698836384382
1698836382000,1698836383000,8,16371523535,1698836384382
1698836382000,1698836383000,11,317314980,1698836384382
1698836382000,1698836383000,7,26897562254,1698836384382
1698836382000,1698836383000,6,5844833056,1698836384382
1698836382000,1698836383000,5,735552298,1698836384382
1698836382000,1698836383000,9,299258088,1698836384382
1698836382000,1698836383000,4,2128979134,1698836384382
1698836382000,1698836383000,1,35372458,1698836384382
[m
[36m[10:59:44.457688] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:44.484349] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:44.484700] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:44.486378] [D] [thread 130433] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:44.486474] [I] [thread 130433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:44.486493] [I] [thread 130433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:44.486611] [I] [thread 130433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:44.486624] [I] [thread 130433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:44.707302] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:44.707657] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:45.120209] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836385000-1698836386000[m
[36m[10:59:45.396630] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836383000-1698836384000 [m
[36m[10:59:45.397625] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836383000-1698836384000-211[m
[36m[10:59:45.397740] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836383000-1698836384000[m
[36m[10:59:45.397811] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836383000-1698836384000[m
[36m[10:59:45.397932] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:45.397963] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:45.402278] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836383000,1698836384000,11,317317274,1698836385397
1698836383000,1698836384000,7,26897564411,1698836385397
1698836383000,1698836384000,6,5844835208,1698836385397
1698836383000,1698836384000,5,735554503,1698836385397
1698836383000,1698836384000,9,299260237,1698836385397
1698836383000,1698836384000,4,2128981390,1698836385397
1698836383000,1698836384000,8,16371525749,1698836385397
1698836383000,1698836384000,10,326493063,1698836385397
1698836383000,1698836384000,1,35376981,1698836385397
[m
[36m[10:59:45.708869] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:46.119458] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836386000-1698836387000[m
[36m[10:59:46.413152] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836384000-1698836385000 [m
[36m[10:59:46.413821] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836384000-1698836385000-212[m
[36m[10:59:46.413910] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836384000-1698836385000[m
[36m[10:59:46.413955] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836384000-1698836385000[m
[36m[10:59:46.414049] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:46.414067] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:46.416162] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836384000,1698836385000,11,317319771,1698836386414
1698836384000,1698836385000,6,5844837913,1698836386414
1698836384000,1698836385000,7,26897567106,1698836386414
1698836384000,1698836385000,5,735557171,1698836386414
1698836384000,1698836385000,9,299262871,1698836386414
1698836384000,1698836385000,4,2128984093,1698836386414
1698836384000,1698836385000,8,16371528457,1698836386414
1698836384000,1698836385000,10,326495722,1698836386414
1698836384000,1698836385000,1,35381006,1698836386414
[m
[36m[10:59:46.710253] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:46.719292] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:46.719606] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:46.720829] [D] [thread 130439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:46.720933] [I] [thread 130439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:46.720950] [I] [thread 130439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:46.721072] [I] [thread 130439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:46.721088] [I] [thread 130439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:46.935937] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:46.936422] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:47.116238] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836387000-1698836388000[m
[36m[10:59:47.424172] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836385000-1698836386000 [m
[36m[10:59:47.425195] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836385000-1698836386000-213[m
[36m[10:59:47.425309] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836385000-1698836386000[m
[36m[10:59:47.425379] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836385000-1698836386000[m
[36m[10:59:47.425502] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:47.425535] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:47.430458] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836385000,1698836386000,11,317322182,1698836387425
1698836385000,1698836386000,6,5844840096,1698836387425
1698836385000,1698836386000,7,26897569255,1698836387425
1698836385000,1698836386000,5,735559325,1698836387425
1698836385000,1698836386000,9,299265077,1698836387425
1698836385000,1698836386000,4,2128986269,1698836387425
1698836385000,1698836386000,8,16371530676,1698836387425
1698836385000,1698836386000,10,326497994,1698836387425
1698836385000,1698836386000,1,35386954,1698836387425
[m
[36m[10:59:47.937644] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:48.113898] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836388000-1698836389000[m
[36m[10:59:48.441121] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836386000-1698836387000 [m
[36m[10:59:48.441939] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836386000-1698836387000-214[m
[36m[10:59:48.442039] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836386000-1698836387000[m
[36m[10:59:48.442104] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836386000-1698836387000[m
[36m[10:59:48.442250] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:48.442285] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:48.446410] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836386000,1698836387000,6,5844842621,1698836388442
1698836386000,1698836387000,7,26897571728,1698836388442
1698836386000,1698836387000,9,299267508,1698836388442
1698836386000,1698836387000,5,735561916,1698836388442
1698836386000,1698836387000,4,2128988889,1698836388442
1698836386000,1698836387000,8,16371533159,1698836388442
1698836386000,1698836387000,10,326500418,1698836388442
1698836386000,1698836387000,11,317324696,1698836388442
1698836386000,1698836387000,1,35390917,1698836388442
[m
[36m[10:59:48.938931] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:48.966086] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:48.966482] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:48.967414] [D] [thread 130444] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:48.967506] [I] [thread 130444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:48.967522] [I] [thread 130444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:48.967634] [I] [thread 130444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:48.967646] [I] [thread 130444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:49.107249] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836389000-1698836390000[m
[36m[10:59:49.136437] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:49.136793] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:49.456871] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836387000-1698836388000 [m
[36m[10:59:49.457722] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836387000-1698836388000-215[m
[36m[10:59:49.457830] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836387000-1698836388000[m
[36m[10:59:49.457901] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836387000-1698836388000[m
[36m[10:59:49.458016] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:49.458046] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:49.461898] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836387000,1698836388000,6,5844844922,1698836389458
1698836387000,1698836388000,7,26897574092,1698836389458
1698836387000,1698836388000,9,299269920,1698836389458
1698836387000,1698836388000,4,2128991050,1698836389458
1698836387000,1698836388000,5,735564151,1698836389458
1698836387000,1698836388000,8,16371535447,1698836389458
1698836387000,1698836388000,11,317327111,1698836389458
1698836387000,1698836388000,10,326502771,1698836389458
1698836387000,1698836388000,1,35394408,1698836389458
[m
[36m[10:59:50.114320] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836390000-1698836391000[m
[36m[10:59:50.138048] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:50.473472] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836388000-1698836389000 [m
[36m[10:59:50.474328] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836388000-1698836389000-216[m
[36m[10:59:50.474428] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836388000-1698836389000[m
[36m[10:59:50.474495] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836388000-1698836389000[m
[36m[10:59:50.474607] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:50.474634] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:50.477914] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836388000,1698836389000,6,5844847518,1698836390474
1698836388000,1698836389000,7,26897576454,1698836390474
1698836388000,1698836389000,9,299272253,1698836390474
1698836388000,1698836389000,4,2128993510,1698836390474
1698836388000,1698836389000,5,735566652,1698836390474
1698836388000,1698836389000,8,16371537838,1698836390474
1698836388000,1698836389000,10,326505077,1698836390474
1698836388000,1698836389000,11,317329432,1698836390474
1698836388000,1698836389000,1,35398371,1698836390474
[m
[36m[10:59:51.124350] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836391000-1698836392000[m
[36m[10:59:51.139294] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:51.233488] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:51.233838] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:51.234989] [D] [thread 130450] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:51.235089] [I] [thread 130450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:51.235106] [I] [thread 130450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:51.235225] [I] [thread 130450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:51.235240] [I] [thread 130450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:51.459190] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:51.459538] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:51.489554] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836389000-1698836390000 [m
[36m[10:59:51.490484] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836389000-1698836390000-217[m
[36m[10:59:51.490593] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836389000-1698836390000[m
[36m[10:59:51.490664] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836389000-1698836390000[m
[36m[10:59:51.490783] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:51.490814] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:51.494707] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836389000,1698836390000,7,26897579036,1698836391490
1698836389000,1698836390000,9,299274782,1698836391490
1698836389000,1698836390000,4,2128995820,1698836391490
1698836389000,1698836390000,5,735568949,1698836391490
1698836389000,1698836390000,8,16371540262,1698836391490
1698836389000,1698836390000,11,317332003,1698836391490
1698836389000,1698836390000,10,326507555,1698836391490
1698836389000,1698836390000,6,5844849960,1698836391490
1698836389000,1698836390000,1,35403864,1698836391490
[m
[36m[10:59:52.119332] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836392000-1698836393000[m
[36m[10:59:52.460772] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:52.506352] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836390000-1698836391000 [m
[36m[10:59:52.507221] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836390000-1698836391000-218[m
[36m[10:59:52.507333] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836390000-1698836391000[m
[36m[10:59:52.507403] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836390000-1698836391000[m
[36m[10:59:52.507519] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:52.507550] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:52.511461] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836390000,1698836391000,9,299277081,1698836392507
1698836390000,1698836391000,5,735571293,1698836392507
1698836390000,1698836391000,4,2128998241,1698836392507
1698836390000,1698836391000,8,16371542506,1698836392507
1698836390000,1698836391000,11,317334173,1698836392507
1698836390000,1698836391000,10,326509770,1698836392507
1698836390000,1698836391000,7,26897581446,1698836392507
1698836390000,1698836391000,6,5844852320,1698836392507
1698836390000,1698836391000,1,35407871,1698836392507
[m
[36m[10:59:53.111178] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836393000-1698836394000[m
[36m[10:59:53.462249] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:53.484834] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:53.485154] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:53.486912] [D] [thread 130455] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:53.487008] [I] [thread 130455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:53.487025] [I] [thread 130455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:53.487140] [I] [thread 130455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:53.487152] [I] [thread 130455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:53.523230] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836391000-1698836392000 [m
[36m[10:59:53.524127] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836391000-1698836392000-219[m
[36m[10:59:53.524618] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836391000-1698836392000[m
[36m[10:59:53.525002] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836391000-1698836392000[m
[36m[10:59:53.525175] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:53.525206] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:53.528583] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836391000,1698836392000,4,2129000751,1698836393525
1698836391000,1698836392000,5,735573858,1698836393525
1698836391000,1698836392000,8,16371545219,1698836393525
1698836391000,1698836392000,11,317336859,1698836393525
1698836391000,1698836392000,10,326512461,1698836393525
1698836391000,1698836392000,7,26897583992,1698836393525
1698836391000,1698836392000,9,299279820,1698836393525
1698836391000,1698836392000,6,5844854804,1698836393525
1698836391000,1698836392000,1,35413705,1698836393525
[m
[36m[10:59:53.654387] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:53.654817] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:54.125659] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836394000-1698836395000[m
[36m[10:59:54.539679] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836392000-1698836393000 [m
[36m[10:59:54.540351] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836392000-1698836393000-220[m
[36m[10:59:54.540440] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836392000-1698836393000[m
[36m[10:59:54.540485] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836392000-1698836393000[m
[36m[10:59:54.540560] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:54.540577] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:54.542665] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836392000,1698836393000,4,2129002928,1698836394540
1698836392000,1698836393000,8,16371547348,1698836394540
1698836392000,1698836393000,5,735576023,1698836394540
1698836392000,1698836393000,11,317338997,1698836394540
1698836392000,1698836393000,10,326514591,1698836394540
1698836392000,1698836393000,9,299281988,1698836394540
1698836392000,1698836393000,7,26897586150,1698836394540
1698836392000,1698836393000,6,5844857037,1698836394540
1698836392000,1698836393000,1,35417470,1698836394540
[m
[36m[10:59:54.656101] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:55.122668] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836395000-1698836396000[m
[36m[10:59:55.551117] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836393000-1698836394000 [m
[36m[10:59:55.551867] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836393000-1698836394000-221[m
[36m[10:59:55.551960] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836393000-1698836394000[m
[36m[10:59:55.552019] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836393000-1698836394000[m
[36m[10:59:55.552113] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:55.552137] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:55.555185] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836393000,1698836394000,4,2129005644,1698836395552
1698836393000,1698836394000,8,16371549971,1698836395552
1698836393000,1698836394000,5,735578675,1698836395552
1698836393000,1698836394000,11,317341510,1698836395552
1698836393000,1698836394000,10,326517146,1698836395552
1698836393000,1698836394000,9,299284592,1698836395552
1698836393000,1698836394000,7,26897588839,1698836395552
1698836393000,1698836394000,6,5844859682,1698836395552
1698836393000,1698836394000,1,35422817,1698836395552
[m
[36m[10:59:55.650330] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:55.650657] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:55.651841] [D] [thread 130460] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:55.651947] [I] [thread 130460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:55.651966] [I] [thread 130460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:55.652247] [I] [thread 130460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:55.652274] [I] [thread 130460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:55.861685] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:55.861998] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:56.122033] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836396000-1698836397000[m
[36m[10:59:56.567672] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836394000-1698836395000 [m
[36m[10:59:56.568465] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836394000-1698836395000-222[m
[36m[10:59:56.568553] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836394000-1698836395000[m
[36m[10:59:56.568609] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836394000-1698836395000[m
[36m[10:59:56.568705] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:56.568730] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:56.572095] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836394000,1698836395000,8,16371552163,1698836396568
1698836394000,1698836395000,5,735580835,1698836396568
1698836394000,1698836395000,11,317343852,1698836396568
1698836394000,1698836395000,10,326519389,1698836396568
1698836394000,1698836395000,9,299286821,1698836396568
1698836394000,1698836395000,7,26897591008,1698836396568
1698836394000,1698836395000,6,5844861806,1698836396568
1698836394000,1698836395000,4,2129007946,1698836396568
1698836394000,1698836395000,1,35427538,1698836396568
[m
[36m[10:59:56.863157] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:57.118497] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836397000-1698836398000[m
[36m[10:59:57.582041] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836395000-1698836396000 [m
[36m[10:59:57.582886] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836395000-1698836396000-223[m
[36m[10:59:57.582962] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836395000-1698836396000[m
[36m[10:59:57.583015] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836395000-1698836396000[m
[36m[10:59:57.583119] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:57.583144] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:57.586470] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836395000,1698836396000,8,16371554677,1698836397583
1698836395000,1698836396000,5,735583399,1698836397583
1698836395000,1698836396000,11,317346278,1698836397583
1698836395000,1698836396000,10,326521837,1698836397583
1698836395000,1698836396000,9,299289307,1698836397583
1698836395000,1698836396000,7,26897593538,1698836397583
1698836395000,1698836396000,6,5844864439,1698836397583
1698836395000,1698836396000,4,2129010545,1698836397583
1698836395000,1698836396000,1,35429354,1698836397583
[m
[36m[10:59:57.863867] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:57.915859] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:57.916185] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:57.917355] [D] [thread 130465] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:59:57.917476] [I] [thread 130465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:57.917494] [I] [thread 130465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:59:57.917612] [I] [thread 130465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:59:57.917626] [I] [thread 130465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:59:58.113882] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:58.114266] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:58.117589] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836398000-1698836399000[m
[36m[10:59:58.597573] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836396000-1698836397000 [m
[36m[10:59:58.598549] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836396000-1698836397000-224[m
[36m[10:59:58.598651] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836396000-1698836397000[m
[36m[10:59:58.598712] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836396000-1698836397000[m
[36m[10:59:58.598820] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:58.598850] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:58.602779] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836396000,1698836397000,8,16371557007,1698836398598
1698836396000,1698836397000,5,735585610,1698836398598
1698836396000,1698836397000,11,317348672,1698836398598
1698836396000,1698836397000,10,326524196,1698836398598
1698836396000,1698836397000,9,299291617,1698836398598
1698836396000,1698836397000,7,26897595856,1698836398598
1698836396000,1698836397000,6,5844866643,1698836398598
1698836396000,1698836397000,4,2129012752,1698836398598
1698836396000,1698836397000,1,35435126,1698836398598
[m
[36m[10:59:59.115441] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:59:59.121095] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836399000-1698836400000[m
[36m[10:59:59.613587] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836397000-1698836398000 [m
[36m[10:59:59.614517] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836397000-1698836398000-225[m
[36m[10:59:59.614627] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836397000-1698836398000[m
[36m[10:59:59.614695] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836397000-1698836398000[m
[36m[10:59:59.614815] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:59:59.614846] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:59:59.618761] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836397000,1698836398000,8,16371559601,1698836399614
1698836397000,1698836398000,5,735588105,1698836399614
1698836397000,1698836398000,11,317350929,1698836399614
1698836397000,1698836398000,10,326526595,1698836399614
1698836397000,1698836398000,9,299293962,1698836399614
1698836397000,1698836398000,7,26897598273,1698836399614
1698836397000,1698836398000,6,5844869139,1698836399614
1698836397000,1698836398000,4,2129015358,1698836399614
1698836397000,1698836398000,1,35439229,1698836399614
[m
[36m[11:00:00.116814] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:00.117316] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836400000-1698836401000[m
[36m[11:00:00.221008] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:00.221342] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:00.222615] [D] [thread 130471] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:00.222741] [I] [thread 130471] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:00.222760] [I] [thread 130471] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:00.222899] [I] [thread 130471] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:00.222917] [I] [thread 130471] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:00.429335] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:00.429663] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:00.631894] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836398000-1698836399000 [m
[36m[11:00:00.632706] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836398000-1698836399000-226[m
[36m[11:00:00.632804] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836398000-1698836399000[m
[36m[11:00:00.632863] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836398000-1698836399000[m
[36m[11:00:00.632964] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:00.632991] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:00.636723] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836398000,1698836399000,5,735590463,1698836400633
1698836398000,1698836399000,11,317353482,1698836400633
1698836398000,1698836399000,10,326529160,1698836400633
1698836398000,1698836399000,9,299296543,1698836400633
1698836398000,1698836399000,7,26897600724,1698836400633
1698836398000,1698836399000,4,2129017628,1698836400633
1698836398000,1698836399000,6,5844871495,1698836400633
1698836398000,1698836399000,8,16371562118,1698836400633
1698836398000,1698836399000,1,35444902,1698836400633
[m
[36m[11:00:01.114384] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836401000-1698836402000[m
[36m[11:00:01.430837] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:01.646845] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836399000-1698836400000 [m
[36m[11:00:01.647703] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836399000-1698836400000-227[m
[36m[11:00:01.647816] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836399000-1698836400000[m
[36m[11:00:01.647887] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836399000-1698836400000[m
[36m[11:00:01.648004] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:01.648035] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:01.651924] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836399000,1698836400000,5,735592813,1698836401648
1698836399000,1698836400000,11,317355768,1698836401648
1698836399000,1698836400000,9,299298716,1698836401648
1698836399000,1698836400000,10,326531279,1698836401648
1698836399000,1698836400000,7,26897603001,1698836401648
1698836399000,1698836400000,4,2129020016,1698836401648
1698836399000,1698836400000,6,5844873879,1698836401648
1698836399000,1698836400000,8,16371564373,1698836401648
1698836399000,1698836400000,1,35448933,1698836401648
[m
[36m[11:00:02.140334] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836402000-1698836403000[m
[36m[11:00:02.432048] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:02.434958] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:02.435292] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:02.436274] [D] [thread 130477] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:02.436367] [I] [thread 130477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:02.436385] [I] [thread 130477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:02.436500] [I] [thread 130477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:02.436512] [I] [thread 130477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:02.662944] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836400000-1698836401000 [m
[36m[11:00:02.663661] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836400000-1698836401000-228[m
[36m[11:00:02.663728] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836400000-1698836401000[m
[36m[11:00:02.663771] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836400000-1698836401000[m
[36m[11:00:02.663883] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:02.663906] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:02.666464] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836400000,1698836401000,5,735595412,1698836402663
1698836400000,1698836401000,10,326533919,1698836402663
1698836400000,1698836401000,9,299301361,1698836402663
1698836400000,1698836401000,7,26897605528,1698836402663
1698836400000,1698836401000,4,2129022456,1698836402663
1698836400000,1698836401000,6,5844876392,1698836402663
1698836400000,1698836401000,8,16371566904,1698836402663
1698836400000,1698836401000,11,317358569,1698836402663
1698836400000,1698836401000,1,35454907,1698836402663
[m
[36m[11:00:02.694616] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:02.694970] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:03.139978] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836403000-1698836404000[m
[36m[11:00:03.676123] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836401000-1698836402000 [m
[36m[11:00:03.676895] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836401000-1698836402000-229[m
[36m[11:00:03.677004] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836401000-1698836402000[m
[36m[11:00:03.677074] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836401000-1698836402000[m
[36m[11:00:03.677194] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:03.677226] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:03.681106] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836401000,1698836402000,10,326536176,1698836403677
1698836401000,1698836402000,9,299303602,1698836403677
1698836401000,1698836402000,7,26897607679,1698836403677
1698836401000,1698836402000,4,2129024686,1698836403677
1698836401000,1698836402000,6,5844878575,1698836403677
1698836401000,1698836402000,8,16371569031,1698836403677
1698836401000,1698836402000,11,317360761,1698836403677
1698836401000,1698836402000,5,735597785,1698836403677
1698836401000,1698836402000,1,35458864,1698836403677
[m
[36m[11:00:03.696161] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:04.138435] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836404000-1698836405000[m
[36m[11:00:04.693957] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836402000-1698836403000 [m
[36m[11:00:04.694949] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836402000-1698836403000-230[m
[36m[11:00:04.695040] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836402000-1698836403000[m
[36m[11:00:04.695466] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836402000-1698836403000[m
[36m[11:00:04.695569] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:04.695588] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:04.697457] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:04.697514] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836402000,1698836403000,7,26897610364,1698836404695
1698836402000,1698836403000,4,2129027301,1698836404695
1698836402000,1698836403000,8,16371571716,1698836404695
1698836402000,1698836403000,6,5844881225,1698836404695
1698836402000,1698836403000,11,317363293,1698836404695
1698836402000,1698836403000,5,735600360,1698836404695
1698836402000,1698836403000,9,299306355,1698836404695
1698836402000,1698836403000,10,326538934,1698836404695
1698836402000,1698836403000,1,35463567,1698836404695
[m
[36m[11:00:04.708301] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:04.708626] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:04.710367] [D] [thread 130482] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:04.710462] [I] [thread 130482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:04.710481] [I] [thread 130482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:04.710597] [I] [thread 130482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:04.710609] [I] [thread 130482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:04.878310] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:04.878652] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:05.129689] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836405000-1698836406000[m
[36m[11:00:05.705611] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836403000-1698836404000 [m
[36m[11:00:05.706413] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836403000-1698836404000-231[m
[36m[11:00:05.706508] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836403000-1698836404000[m
[36m[11:00:05.706566] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836403000-1698836404000[m
[36m[11:00:05.706672] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:05.706699] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:05.709982] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836403000,1698836404000,7,26897612517,1698836405706
1698836403000,1698836404000,4,2129029462,1698836405706
1698836403000,1698836404000,8,16371573920,1698836405706
1698836403000,1698836404000,6,5844883354,1698836405706
1698836403000,1698836404000,11,317365554,1698836405706
1698836403000,1698836404000,9,299308527,1698836405706
1698836403000,1698836404000,5,735602646,1698836405706
1698836403000,1698836404000,10,326541188,1698836405706
1698836403000,1698836404000,1,35466029,1698836405706
[m
[36m[11:00:05.879852] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:06.125220] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836406000-1698836407000[m
[36m[11:00:06.722003] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836404000-1698836405000 [m
[36m[11:00:06.722935] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836404000-1698836405000-232[m
[36m[11:00:06.723050] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836404000-1698836405000[m
[36m[11:00:06.723126] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836404000-1698836405000[m
[36m[11:00:06.723240] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:06.723271] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:06.726688] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836404000,1698836405000,7,26897615035,1698836406723
1698836404000,1698836405000,4,2129032097,1698836406723
1698836404000,1698836405000,8,16371576393,1698836406723
1698836404000,1698836405000,6,5844885968,1698836406723
1698836404000,1698836405000,11,317367899,1698836406723
1698836404000,1698836405000,9,299311060,1698836406723
1698836404000,1698836405000,5,735605231,1698836406723
1698836404000,1698836405000,10,326543642,1698836406723
1698836404000,1698836405000,1,35470117,1698836406723
[m
[36m[11:00:06.881261] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:06.938646] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:06.938963] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:06.940026] [D] [thread 130489] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:06.940122] [I] [thread 130489] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:06.940140] [I] [thread 130489] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:06.940254] [I] [thread 130489] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:06.940342] [I] [thread 130489] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:07.111433] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:07.111978] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:07.116745] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836407000-1698836408000[m
[36m[11:00:07.738364] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836405000-1698836406000 [m
[36m[11:00:07.739243] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836405000-1698836406000-233[m
[36m[11:00:07.739361] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836405000-1698836406000[m
[36m[11:00:07.739436] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836405000-1698836406000[m
[36m[11:00:07.739559] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:07.739590] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:07.743499] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836405000,1698836406000,4,2129034251,1698836407739
1698836405000,1698836406000,7,26897617391,1698836407739
1698836405000,1698836406000,8,16371578764,1698836407739
1698836405000,1698836406000,6,5844888331,1698836407739
1698836405000,1698836406000,9,299313402,1698836407739
1698836405000,1698836406000,11,317370376,1698836407739
1698836405000,1698836406000,5,735607444,1698836407739
1698836405000,1698836406000,10,326546009,1698836407739
1698836405000,1698836406000,1,35476029,1698836407739
[m
[36m[11:00:08.111017] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836408000-1698836409000[m
[36m[11:00:08.113266] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:08.753944] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836406000-1698836407000 [m
[36m[11:00:08.755256] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836406000-1698836407000-234[m
[36m[11:00:08.755369] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836406000-1698836407000[m
[36m[11:00:08.755438] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836406000-1698836407000[m
[36m[11:00:08.755544] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:08.755576] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:08.758974] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836406000,1698836407000,7,26897619782,1698836408755
1698836406000,1698836407000,4,2129036797,1698836408755
1698836406000,1698836407000,8,16371581135,1698836408755
1698836406000,1698836407000,6,5844890803,1698836408755
1698836406000,1698836407000,11,317372696,1698836408755
1698836406000,1698836407000,9,299315803,1698836408755
1698836406000,1698836407000,10,326548324,1698836408755
1698836406000,1698836407000,5,735610003,1698836408755
1698836406000,1698836407000,1,35480042,1698836408755
[m
[36m[11:00:09.110909] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:09.111511] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:09.112226] [D] [thread 130494] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:09.112320] [I] [thread 130494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:09.112337] [I] [thread 130494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:09.112452] [I] [thread 130494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:09.112464] [I] [thread 130494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:09.115914] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836409000-1698836410000[m
[36m[11:00:09.326499] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:09.327043] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:09.772260] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836407000-1698836408000 [m
[36m[11:00:09.773044] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836407000-1698836408000-235[m
[36m[11:00:09.773144] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836407000-1698836408000[m
[36m[11:00:09.773211] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836407000-1698836408000[m
[36m[11:00:09.773311] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:09.773340] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:09.776706] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836407000,1698836408000,4,2129039062,1698836409773
1698836407000,1698836408000,7,26897622288,1698836409773
1698836407000,1698836408000,8,16371583542,1698836409773
1698836407000,1698836408000,6,5844893192,1698836409773
1698836407000,1698836408000,9,299318285,1698836409773
1698836407000,1698836408000,11,317375268,1698836409773
1698836407000,1698836408000,10,326550816,1698836409773
1698836407000,1698836408000,5,735612288,1698836409773
1698836407000,1698836408000,1,35485797,1698836409773
[m
[36m[11:00:10.114723] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836410000-1698836411000[m
[36m[11:00:10.328307] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:10.786621] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836408000-1698836409000 [m
[36m[11:00:10.787225] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836408000-1698836409000-236[m
[36m[11:00:10.787313] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836408000-1698836409000[m
[36m[11:00:10.787366] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836408000-1698836409000[m
[36m[11:00:10.787447] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:10.787464] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:10.789282] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836408000,1698836409000,4,2129041611,1698836410787
1698836408000,1698836409000,8,16371585798,1698836410787
1698836408000,1698836409000,9,299320497,1698836410787
1698836408000,1698836409000,6,5844895541,1698836410787
1698836408000,1698836409000,11,317377483,1698836410787
1698836408000,1698836409000,10,326553003,1698836410787
1698836408000,1698836409000,5,735614706,1698836410787
1698836408000,1698836409000,7,26897624820,1698836410787
1698836408000,1698836409000,1,35489735,1698836410787
[m
[36m[11:00:11.110659] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836411000-1698836412000[m
[36m[11:00:11.329650] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:11.392126] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:11.392741] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:11.393537] [D] [thread 130501] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:11.393645] [I] [thread 130501] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:11.393664] [I] [thread 130501] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:11.393792] [I] [thread 130501] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:11.393807] [I] [thread 130501] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:11.590712] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:11.591246] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:11.798121] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836409000-1698836410000 [m
[36m[11:00:11.798874] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836409000-1698836410000-237[m
[36m[11:00:11.798970] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836409000-1698836410000[m
[36m[11:00:11.799027] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836409000-1698836410000[m
[36m[11:00:11.799117] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:11.799141] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:11.802052] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836409000,1698836410000,8,16371588391,1698836411799
1698836409000,1698836410000,9,299323013,1698836411799
1698836409000,1698836410000,6,5844898025,1698836411799
1698836409000,1698836410000,11,317380052,1698836411799
1698836409000,1698836410000,10,326555708,1698836411799
1698836409000,1698836410000,5,735617088,1698836411799
1698836409000,1698836410000,4,2129044140,1698836411799
1698836409000,1698836410000,7,26897627228,1698836411799
1698836409000,1698836410000,1,35495654,1698836411799
[m
[36m[11:00:12.120588] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836412000-1698836413000[m
[36m[11:00:12.592475] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:12.812383] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836410000-1698836411000 [m
[36m[11:00:12.813150] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836410000-1698836411000-238[m
[36m[11:00:12.813240] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836410000-1698836411000[m
[36m[11:00:12.813296] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836410000-1698836411000[m
[36m[11:00:12.813391] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:12.813414] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:12.816383] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836410000,1698836411000,8,16371590547,1698836412813
1698836410000,1698836411000,9,299325190,1698836412813
1698836410000,1698836411000,6,5844900202,1698836412813
1698836410000,1698836411000,11,317382220,1698836412813
1698836410000,1698836411000,10,326557837,1698836412813
1698836410000,1698836411000,5,735619369,1698836412813
1698836410000,1698836411000,4,2129046461,1698836412813
1698836410000,1698836411000,7,26897629426,1698836412813
1698836410000,1698836411000,1,35499575,1698836412813
[m
[36m[11:00:13.149928] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836413000-1698836414000[m
[36m[11:00:13.593718] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:13.607107] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:13.607684] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:13.608500] [D] [thread 130509] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:13.608628] [I] [thread 130509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:13.608646] [I] [thread 130509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:13.608759] [I] [thread 130509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:13.608798] [I] [thread 130509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:13.827426] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836411000-1698836412000 [m
[36m[11:00:13.828202] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836411000-1698836412000-239[m
[36m[11:00:13.828354] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836411000-1698836412000[m
[36m[11:00:13.828398] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836411000-1698836412000[m
[36m[11:00:13.828473] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:13.828490] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:13.830375] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836411000,1698836412000,8,16371593314,1698836413828
1698836411000,1698836412000,9,299327764,1698836413828
1698836411000,1698836412000,11,317384755,1698836413828
1698836411000,1698836412000,6,5844902852,1698836413828
1698836411000,1698836412000,10,326560465,1698836413828
1698836411000,1698836412000,5,735621912,1698836413828
1698836411000,1698836412000,4,2129048940,1698836413828
1698836411000,1698836412000,7,26897632054,1698836413828
1698836411000,1698836412000,1,35503238,1698836413828
[m
[36m[11:00:13.839308] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:13.839619] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:14.140278] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836414000-1698836415000[m
[36m[11:00:14.838755] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836412000-1698836413000 [m
[36m[11:00:14.840021] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836412000-1698836413000-240[m
[36m[11:00:14.840147] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836412000-1698836413000[m
[36m[11:00:14.840219] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836412000-1698836413000[m
[36m[11:00:14.840331] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:14.840363] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:14.840855] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:14.844215] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836412000,1698836413000,9,299330175,1698836414840
1698836412000,1698836413000,11,317387120,1698836414840
1698836412000,1698836413000,6,5844905046,1698836414840
1698836412000,1698836413000,10,326562692,1698836414840
1698836412000,1698836413000,4,2129051135,1698836414840
1698836412000,1698836413000,5,735624097,1698836414840
1698836412000,1698836413000,7,26897634227,1698836414840
1698836412000,1698836413000,8,16371595574,1698836414840
1698836412000,1698836413000,1,35507228,1698836414840
[m
[36m[11:00:15.135792] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836415000-1698836416000[m
[36m[11:00:15.842276] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:15.854371] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836413000-1698836414000 [m
[36m[11:00:15.855157] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836413000-1698836414000-241[m
[36m[11:00:15.855268] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836413000-1698836414000[m
[36m[11:00:15.855339] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836413000-1698836414000[m
[36m[11:00:15.855455] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:15.856291] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:15.858286] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836413000,1698836414000,11,317389576,1698836415856
1698836413000,1698836414000,6,5844907684,1698836415856
1698836413000,1698836414000,4,2129053757,1698836415856
1698836413000,1698836414000,10,326565166,1698836415856
1698836413000,1698836414000,7,26897636844,1698836415856
1698836413000,1698836414000,5,735626790,1698836415856
1698836413000,1698836414000,8,16371598172,1698836415856
1698836413000,1698836414000,9,299332865,1698836415856
1698836413000,1698836414000,1,35512026,1698836415856
[m
[36m[11:00:15.863668] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:15.864211] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:15.865237] [D] [thread 130516] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:15.865336] [I] [thread 130516] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:15.865352] [I] [thread 130516] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:15.865458] [I] [thread 130516] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:15.865477] [I] [thread 130516] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:16.091171] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:16.091737] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:16.134790] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836416000-1698836417000[m
[36m[11:00:16.865314] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836414000-1698836415000 [m
[36m[11:00:16.866171] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836414000-1698836415000-242[m
[36m[11:00:16.866340] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836414000-1698836415000[m
[36m[11:00:16.866410] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836414000-1698836415000[m
[36m[11:00:16.866525] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:16.866556] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:16.870590] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836414000,1698836415000,6,5844909898,1698836416866
1698836414000,1698836415000,11,317391942,1698836416866
1698836414000,1698836415000,4,2129055897,1698836416866
1698836414000,1698836415000,10,326567484,1698836416866
1698836414000,1698836415000,5,735628906,1698836416866
1698836414000,1698836415000,7,26897639051,1698836416866
1698836414000,1698836415000,8,16371600403,1698836416866
1698836414000,1698836415000,9,299335095,1698836416866
1698836414000,1698836415000,1,35516428,1698836416866
[m
[36m[11:00:17.092106] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:17.128354] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836417000-1698836418000[m
[36m[11:00:17.881118] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836415000-1698836416000 [m
[36m[11:00:17.881997] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836415000-1698836416000-243[m
[36m[11:00:17.882314] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836415000-1698836416000[m
[36m[11:00:17.882402] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836415000-1698836416000[m
[36m[11:00:17.882529] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:17.882569] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:17.885844] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836415000,1698836416000,11,317394237,1698836417882
1698836415000,1698836416000,6,5844912418,1698836417882
1698836415000,1698836416000,4,2129058495,1698836417882
1698836415000,1698836416000,10,326569863,1698836417882
1698836415000,1698836416000,5,735631456,1698836417882
1698836415000,1698836416000,7,26897641502,1698836417882
1698836415000,1698836416000,8,16371602959,1698836417882
1698836415000,1698836416000,9,299337498,1698836417882
1698836415000,1698836416000,1,35520620,1698836417882
[m
[36m[11:00:18.083922] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:18.084246] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:18.085324] [D] [thread 130523] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:18.085424] [I] [thread 130523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:18.085442] [I] [thread 130523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:18.085554] [I] [thread 130523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:18.085609] [I] [thread 130523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:18.121782] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836418000-1698836419000[m
[36m[11:00:18.295369] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:18.295743] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:18.898020] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836416000-1698836417000 [m
[36m[11:00:18.898979] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836416000-1698836417000-244[m
[36m[11:00:18.899075] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836416000-1698836417000[m
[36m[11:00:18.899125] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836416000-1698836417000[m
[36m[11:00:18.899212] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:18.899231] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:18.901317] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836416000,1698836417000,11,317396754,1698836418899
1698836416000,1698836417000,4,2129060741,1698836418899
1698836416000,1698836417000,6,5844914762,1698836418899
1698836416000,1698836417000,10,326572396,1698836418899
1698836416000,1698836417000,5,735633729,1698836418899
1698836416000,1698836417000,7,26897643845,1698836418899
1698836416000,1698836417000,9,299339944,1698836418899
1698836416000,1698836417000,8,16371605321,1698836418899
1698836416000,1698836417000,1,35526347,1698836418899
[m
[36m[11:00:19.116895] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836419000-1698836420000[m
[36m[11:00:19.296987] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:19.912800] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836417000-1698836418000 [m
[36m[11:00:19.913644] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836417000-1698836418000-245[m
[36m[11:00:19.913756] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836417000-1698836418000[m
[36m[11:00:19.913826] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836417000-1698836418000[m
[36m[11:00:19.913942] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:19.913973] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:19.917879] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836417000,1698836418000,11,317398920,1698836419913
1698836417000,1698836418000,10,326574566,1698836419913
1698836417000,1698836418000,4,2129063156,1698836419913
1698836417000,1698836418000,6,5844917116,1698836419913
1698836417000,1698836418000,5,735636127,1698836419913
1698836417000,1698836418000,7,26897646172,1698836419913
1698836417000,1698836418000,9,299342177,1698836419913
1698836417000,1698836418000,8,16371607632,1698836419913
1698836417000,1698836418000,1,35530347,1698836419913
[m
[36m[11:00:20.111574] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836420000-1698836421000[m
[36m[11:00:20.298316] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:20.358345] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:20.358682] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:20.359665] [D] [thread 130530] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:20.359760] [I] [thread 130530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:20.359776] [I] [thread 130530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:20.359890] [I] [thread 130530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:20.359914] [I] [thread 130530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:20.556450] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:20.556801] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:20.929998] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836418000-1698836419000 [m
[36m[11:00:20.931117] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836418000-1698836419000-246[m
[36m[11:00:20.931229] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836418000-1698836419000[m
[36m[11:00:20.931297] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836418000-1698836419000[m
[36m[11:00:20.931409] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:20.931440] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:20.934289] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836418000,1698836419000,11,317401564,1698836420931
1698836418000,1698836419000,6,5844919602,1698836420931
1698836418000,1698836419000,4,2129065500,1698836420931
1698836418000,1698836419000,10,326577158,1698836420931
1698836418000,1698836419000,5,735638557,1698836420931
1698836418000,1698836419000,7,26897648657,1698836420931
1698836418000,1698836419000,9,299344764,1698836420931
1698836418000,1698836419000,8,16371610090,1698836420931
1698836418000,1698836419000,1,35535613,1698836420931
[m
[36m[11:00:21.115898] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836421000-1698836422000[m
[36m[11:00:21.557985] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:21.945535] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836419000-1698836420000 [m
[36m[11:00:21.946343] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836419000-1698836420000-247[m
[36m[11:00:21.946434] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836419000-1698836420000[m
[36m[11:00:21.946496] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836419000-1698836420000[m
[36m[11:00:21.946595] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:21.946620] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:21.949536] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836419000,1698836420000,11,317403893,1698836421946
1698836419000,1698836420000,4,2129067787,1698836421946
1698836419000,1698836420000,6,5844921854,1698836421946
1698836419000,1698836420000,10,326579324,1698836421946
1698836419000,1698836420000,7,26897650855,1698836421946
1698836419000,1698836420000,5,735640833,1698836421946
1698836419000,1698836420000,9,299346944,1698836421946
1698836419000,1698836420000,8,16371612241,1698836421946
1698836419000,1698836420000,1,35537856,1698836421946
[m
[36m[11:00:22.126180] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836422000-1698836423000[m
[36m[11:00:22.551908] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:22.552214] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:22.553296] [D] [thread 130535] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:22.553391] [I] [thread 130535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:22.553408] [I] [thread 130535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:22.553519] [I] [thread 130535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:22.553531] [I] [thread 130535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:22.724620] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:22.724935] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:22.960861] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836420000-1698836421000 [m
[36m[11:00:22.961645] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836420000-1698836421000-248[m
[36m[11:00:22.961740] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836420000-1698836421000[m
[36m[11:00:22.961795] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836420000-1698836421000[m
[36m[11:00:22.961891] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:22.961915] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:22.964898] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836420000,1698836421000,4,2129070494,1698836422961
1698836420000,1698836421000,10,326581930,1698836422961
1698836420000,1698836421000,6,5844924482,1698836422961
1698836420000,1698836421000,7,26897653522,1698836422961
1698836420000,1698836421000,5,735643431,1698836422961
1698836420000,1698836421000,9,299349584,1698836422961
1698836420000,1698836421000,8,16371614929,1698836422961
1698836420000,1698836421000,11,317406667,1698836422961
1698836420000,1698836421000,1,35543657,1698836422961
[m
[36m[11:00:23.115444] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836423000-1698836424000[m
[36m[11:00:23.726171] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:23.976240] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836421000-1698836422000 [m
[36m[11:00:23.977377] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836421000-1698836422000-249[m
[36m[11:00:23.977491] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836421000-1698836422000[m
[36m[11:00:23.977569] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836421000-1698836422000[m
[36m[11:00:23.977715] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:23.977743] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:23.980969] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836421000,1698836422000,7,26897655805,1698836423977
1698836421000,1698836422000,10,326584315,1698836423977
1698836421000,1698836422000,6,5844926687,1698836423977
1698836421000,1698836422000,9,299351794,1698836423977
1698836421000,1698836422000,5,735645566,1698836423977
1698836421000,1698836422000,8,16371617144,1698836423977
1698836421000,1698836422000,11,317408862,1698836423977
1698836421000,1698836422000,4,2129072860,1698836423977
1698836421000,1698836422000,1,35547786,1698836423977
[m
[36m[11:00:24.138022] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836424000-1698836425000[m
[36m[11:00:24.727477] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:24.749229] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:24.749586] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:24.750673] [D] [thread 130541] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:24.750791] [I] [thread 130541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:24.750810] [I] [thread 130541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:24.750949] [I] [thread 130541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:24.750965] [I] [thread 130541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:24.960686] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:24.961051] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:24.992234] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836422000-1698836423000 [m
[36m[11:00:24.993468] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836422000-1698836423000-250[m
[36m[11:00:24.993753] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836422000-1698836423000[m
[36m[11:00:24.993829] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836422000-1698836423000[m
[36m[11:00:24.993946] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:24.993977] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:24.996810] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836422000,1698836423000,6,5844929395,1698836424993
1698836422000,1698836423000,9,299354282,1698836424993
1698836422000,1698836423000,5,735648214,1698836424993
1698836422000,1698836423000,8,16371619702,1698836424993
1698836422000,1698836423000,11,317411353,1698836424993
1698836422000,1698836423000,4,2129075442,1698836424993
1698836422000,1698836423000,10,326586989,1698836424993
1698836422000,1698836423000,7,26897658543,1698836424993
1698836422000,1698836423000,1,35553580,1698836424993
[m
[36m[11:00:25.135280] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836425000-1698836426000[m
[36m[11:00:25.962302] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:26.006486] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836423000-1698836424000 [m
[36m[11:00:26.007291] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836423000-1698836424000-251[m
[36m[11:00:26.007390] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836423000-1698836424000[m
[36m[11:00:26.007453] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836423000-1698836424000[m
[36m[11:00:26.007557] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:26.007584] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:26.010960] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836423000,1698836424000,9,299356717,1698836426007
1698836423000,1698836424000,5,735650381,1698836426007
1698836423000,1698836424000,8,16371621923,1698836426007
1698836423000,1698836424000,11,317413660,1698836426007
1698836423000,1698836424000,4,2129077611,1698836426007
1698836423000,1698836424000,7,26897660729,1698836426007
1698836423000,1698836424000,10,326589233,1698836426007
1698836423000,1698836424000,6,5844931692,1698836426007
1698836423000,1698836424000,1,35557519,1698836426007
[m
[36m[11:00:26.132489] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836426000-1698836427000[m
[36m[11:00:26.963516] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:27.023162] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836424000-1698836425000 [m
[36m[11:00:27.023346] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836425000-1698836426000 [m
[36m[11:00:27.023932] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836424000-1698836425000-252[m
[36m[11:00:27.024114] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836424000-1698836425000[m
[36m[11:00:27.024172] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836424000-1698836425000[m
[36m[11:00:27.024261] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:27.024278] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:27.026787] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836424000,1698836425000,5,735652993,1698836427024
1698836424000,1698836425000,8,16371624408,1698836427024
1698836424000,1698836425000,11,317416097,1698836427024
1698836424000,1698836425000,4,2129080255,1698836427024
1698836424000,1698836425000,7,26897663313,1698836427024
1698836424000,1698836425000,6,5844934265,1698836427024
1698836424000,1698836425000,10,326591685,1698836427024
1698836424000,1698836425000,9,299359337,1698836427024
1698836424000,1698836425000,1,35562821,1698836427024
[m
[36m[11:00:27.027609] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836425000-1698836426000-253[m
[36m[11:00:27.027704] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836425000-1698836426000[m
[36m[11:00:27.027751] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836425000-1698836426000[m
[36m[11:00:27.027837] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:27.027857] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:27.029804] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836425000,1698836426000,8,16371626698,1698836427027
1698836425000,1698836426000,5,735655211,1698836427027
1698836425000,1698836426000,11,317418579,1698836427027
1698836425000,1698836426000,4,2129082426,1698836427027
1698836425000,1698836426000,6,5844936493,1698836427027
1698836425000,1698836426000,9,299361687,1698836427027
1698836425000,1698836426000,10,326594078,1698836427027
1698836425000,1698836426000,7,26897665646,1698836427027
[m
[36m[11:00:27.126680] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836427000-1698836428000[m
[36m[11:00:27.136348] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:27.136710] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:27.138404] [D] [thread 130548] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:27.138498] [I] [thread 130548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:27.138516] [I] [thread 130548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:27.138632] [I] [thread 130548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:27.138645] [I] [thread 130548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:27.400121] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:27.400490] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:28.035551] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836426000-1698836427000 [m
[36m[11:00:28.036377] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836426000-1698836427000-254[m
[36m[11:00:28.036443] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836426000-1698836427000[m
[36m[11:00:28.036494] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836426000-1698836427000[m
[36m[11:00:28.036598] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:28.036624] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:28.039977] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836426000,1698836427000,8,16371628939,1698836428036
1698836426000,1698836427000,5,735657602,1698836428036
1698836426000,1698836427000,11,317420817,1698836428036
1698836426000,1698836427000,4,2129084870,1698836428036
1698836426000,1698836427000,9,299363902,1698836428036
1698836426000,1698836427000,6,5844938851,1698836428036
1698836426000,1698836427000,10,326596260,1698836428036
1698836426000,1698836427000,7,26897667979,1698836428036
1698836426000,1698836427000,1,35566561,1698836428036
[m
[36m[11:00:28.123334] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836428000-1698836429000[m
[36m[11:00:28.401696] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:29.052113] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836427000-1698836428000 [m
[36m[11:00:29.052998] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836427000-1698836428000-255[m
[36m[11:00:29.053112] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836427000-1698836428000[m
[36m[11:00:29.053182] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836427000-1698836428000[m
[36m[11:00:29.053298] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:29.053328] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:29.057228] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836427000,1698836428000,8,16371631576,1698836429053
1698836427000,1698836428000,5,735660102,1698836429053
1698836427000,1698836428000,11,317423444,1698836429053
1698836427000,1698836428000,9,299366498,1698836429053
1698836427000,1698836428000,4,2129087282,1698836429053
1698836427000,1698836428000,10,326598938,1698836429053
1698836427000,1698836428000,6,5844941364,1698836429053
1698836427000,1698836428000,7,26897670529,1698836429053
1698836427000,1698836428000,1,35570127,1698836429053
[m
[36m[11:00:29.116582] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836429000-1698836430000[m
[36m[11:00:29.402356] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:29.409867] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:29.410238] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:29.412208] [D] [thread 130554] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:29.412304] [I] [thread 130554] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:29.412320] [I] [thread 130554] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:29.412434] [I] [thread 130554] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:29.412446] [I] [thread 130554] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:29.588372] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:29.588728] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:30.067914] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836428000-1698836429000 [m
[36m[11:00:30.068735] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836428000-1698836429000-256[m
[36m[11:00:30.068839] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836428000-1698836429000[m
[36m[11:00:30.068901] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836428000-1698836429000[m
[36m[11:00:30.069002] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:30.069028] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:30.072426] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836428000,1698836429000,8,16371633741,1698836430069
1698836428000,1698836429000,5,735662291,1698836430069
1698836428000,1698836429000,11,317425560,1698836430069
1698836428000,1698836429000,9,299368636,1698836430069
1698836428000,1698836429000,4,2129089558,1698836430069
1698836428000,1698836429000,10,326601121,1698836430069
1698836428000,1698836429000,7,26897672727,1698836430069
1698836428000,1698836429000,6,5844943594,1698836430069
1698836428000,1698836429000,1,35574942,1698836430069
[m
[36m[11:00:30.113828] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836430000-1698836431000[m
[36m[11:00:30.589963] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:31.082473] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836429000-1698836430000 [m
[36m[11:00:31.083254] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836429000-1698836430000-257[m
[36m[11:00:31.083351] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836429000-1698836430000[m
[36m[11:00:31.083413] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836429000-1698836430000[m
[36m[11:00:31.083516] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:31.083542] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:31.086919] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836429000,1698836430000,8,16371636377,1698836431083
1698836429000,1698836430000,5,735664939,1698836431083
1698836429000,1698836430000,11,317428115,1698836431083
1698836429000,1698836430000,9,299371273,1698836431083
1698836429000,1698836430000,4,2129092097,1698836431083
1698836429000,1698836430000,7,26897675342,1698836431083
1698836429000,1698836430000,10,326603711,1698836431083
1698836429000,1698836430000,6,5844946207,1698836431083
1698836429000,1698836430000,1,35578940,1698836431083
[m
[36m[11:00:31.115850] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836431000-1698836432000[m
[36m[11:00:31.590339] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:31.608901] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:31.609237] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:31.610343] [D] [thread 130559] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:31.610452] [I] [thread 130559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:31.610470] [I] [thread 130559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:31.610593] [I] [thread 130559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:31.610610] [I] [thread 130559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:31.814275] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:31.814598] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:32.099436] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836430000-1698836431000 [m
[36m[11:00:32.100294] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836430000-1698836431000-258[m
[36m[11:00:32.100405] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836430000-1698836431000[m
[36m[11:00:32.100476] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836430000-1698836431000[m
[36m[11:00:32.100592] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:32.100621] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:32.104541] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836430000,1698836431000,8,16371638677,1698836432100
1698836430000,1698836431000,5,735667136,1698836432100
1698836430000,1698836431000,11,317430393,1698836432100
1698836430000,1698836431000,9,299373482,1698836432100
1698836430000,1698836431000,4,2129094270,1698836432100
1698836430000,1698836431000,7,26897677531,1698836432100
1698836430000,1698836431000,10,326605927,1698836432100
1698836430000,1698836431000,6,5844948319,1698836432100
1698836430000,1698836431000,1,35585192,1698836432100
[m
[36m[11:00:32.136562] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836432000-1698836433000[m
[36m[11:00:32.815774] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:33.115371] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836431000-1698836432000 [m
[36m[11:00:33.116236] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836431000-1698836432000-259[m
[36m[11:00:33.116305] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836431000-1698836432000[m
[36m[11:00:33.116353] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836431000-1698836432000[m
[36m[11:00:33.116449] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:33.116472] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:33.119482] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836431000,1698836432000,5,735669889,1698836433116
1698836431000,1698836432000,9,299376014,1698836433116
1698836431000,1698836432000,11,317432867,1698836433116
1698836431000,1698836432000,4,2129096881,1698836433116
1698836431000,1698836432000,7,26897680100,1698836433116
1698836431000,1698836432000,10,326608359,1698836433116
1698836431000,1698836432000,8,16371641346,1698836433116
1698836431000,1698836432000,6,5844950959,1698836433116
1698836431000,1698836432000,1,35589199,1698836433116
[m
[36m[11:00:33.121667] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836433000-1698836434000[m
[36m[11:00:33.817015] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:33.820556] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:33.820912] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:33.822096] [D] [thread 130565] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:33.822168] [I] [thread 130565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:33.822185] [I] [thread 130565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:33.822399] [I] [thread 130565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:33.822414] [I] [thread 130565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:34.034578] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:34.035079] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:34.114335] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836434000-1698836435000[m
[36m[11:00:34.131767] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836432000-1698836433000 [m
[36m[11:00:34.132669] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836432000-1698836433000-260[m
[36m[11:00:34.132769] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836432000-1698836433000[m
[36m[11:00:34.132830] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836432000-1698836433000[m
[36m[11:00:34.132934] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:34.132962] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:34.136780] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836432000,1698836433000,9,299378324,1698836434132
1698836432000,1698836433000,11,317435239,1698836434132
1698836432000,1698836433000,4,2129099045,1698836434132
1698836432000,1698836433000,10,326610679,1698836434132
1698836432000,1698836433000,7,26897682341,1698836434132
1698836432000,1698836433000,8,16371643571,1698836434132
1698836432000,1698836433000,6,5844953095,1698836434132
1698836432000,1698836433000,5,735672183,1698836434132
1698836432000,1698836433000,1,35595041,1698836434132
[m
[36m[11:00:35.036339] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:35.119706] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836435000-1698836436000[m
[36m[11:00:35.146600] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836433000-1698836434000 [m
[36m[11:00:35.147260] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836433000-1698836434000-261[m
[36m[11:00:35.147348] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836433000-1698836434000[m
[36m[11:00:35.147395] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836433000-1698836434000[m
[36m[11:00:35.147490] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:35.147508] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:35.149447] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836433000,1698836434000,9,299380725,1698836435147
1698836433000,1698836434000,11,317437554,1698836435147
1698836433000,1698836434000,4,2129101570,1698836435147
1698836433000,1698836434000,7,26897684830,1698836435147
1698836433000,1698836434000,10,326613063,1698836435147
1698836433000,1698836434000,8,16371646113,1698836435147
1698836433000,1698836434000,6,5844955708,1698836435147
1698836433000,1698836434000,5,735674759,1698836435147
1698836433000,1698836434000,1,35598984,1698836435147
[m
[36m[11:00:36.037779] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:36.115139] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836436000-1698836437000[m
[36m[11:00:36.158664] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836434000-1698836435000 [m
[36m[11:00:36.159363] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836434000-1698836435000-262[m
[36m[11:00:36.159463] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836434000-1698836435000[m
[36m[11:00:36.159517] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836434000-1698836435000[m
[36m[11:00:36.159623] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:36.159644] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:36.162070] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836434000,1698836435000,9,299383350,1698836436159
1698836434000,1698836435000,11,317440088,1698836436159
1698836434000,1698836435000,4,2129103927,1698836436159
1698836434000,1698836435000,7,26897687190,1698836436159
1698836434000,1698836435000,10,326615616,1698836436159
1698836434000,1698836435000,6,5844957987,1698836436159
1698836434000,1698836435000,8,16371648511,1698836436159
1698836434000,1698836435000,5,735677038,1698836436159
1698836434000,1698836435000,1,35604631,1698836436159
[m
[36m[11:00:36.181488] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:36.182113] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:36.182939] [D] [thread 130572] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:36.183045] [I] [thread 130572] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:36.183063] [I] [thread 130572] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:36.183190] [I] [thread 130572] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:36.183261] [I] [thread 130572] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:36.358851] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:36.359373] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:37.113429] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836437000-1698836438000[m
[36m[11:00:37.172413] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836435000-1698836436000 [m
[36m[11:00:37.173248] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836435000-1698836436000-263[m
[36m[11:00:37.173360] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836435000-1698836436000[m
[36m[11:00:37.173431] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836435000-1698836436000[m
[36m[11:00:37.173551] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:37.173583] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:37.177502] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836435000,1698836436000,11,317442217,1698836437173
1698836435000,1698836436000,4,2129106340,1698836437173
1698836435000,1698836436000,7,26897689521,1698836437173
1698836435000,1698836436000,10,326617788,1698836437173
1698836435000,1698836436000,8,16371650832,1698836437173
1698836435000,1698836436000,6,5844960368,1698836437173
1698836435000,1698836436000,9,299385761,1698836437173
1698836435000,1698836436000,5,735679456,1698836437173
1698836435000,1698836436000,1,35607900,1698836437173
[m
[36m[11:00:37.360645] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:38.115069] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836438000-1698836439000[m
[36m[11:00:38.189025] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836436000-1698836437000 [m
[36m[11:00:38.189924] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836436000-1698836437000-264[m
[36m[11:00:38.190027] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836436000-1698836437000[m
[36m[11:00:38.190089] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836436000-1698836437000[m
[36m[11:00:38.190316] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:38.190356] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:38.194335] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836436000,1698836437000,11,317444893,1698836438190
1698836436000,1698836437000,4,2129108736,1698836438190
1698836436000,1698836437000,7,26897692016,1698836438190
1698836436000,1698836437000,10,326620390,1698836438190
1698836436000,1698836437000,8,16371653299,1698836438190
1698836436000,1698836437000,6,5844962820,1698836438190
1698836436000,1698836437000,9,299388336,1698836438190
1698836436000,1698836437000,5,735681880,1698836438190
1698836436000,1698836437000,1,35610275,1698836438190
[m
[36m[11:00:38.358124] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:38.358708] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:38.359596] [D] [thread 130577] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:38.359693] [I] [thread 130577] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:38.359712] [I] [thread 130577] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:38.359838] [I] [thread 130577] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:38.359852] [I] [thread 130577] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:38.562352] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:38.562687] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:39.127710] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836439000-1698836440000[m
[36m[11:00:39.204745] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836437000-1698836438000 [m
[36m[11:00:39.205644] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836437000-1698836438000-265[m
[36m[11:00:39.205748] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836437000-1698836438000[m
[36m[11:00:39.205809] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836437000-1698836438000[m
[36m[11:00:39.205913] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:39.205941] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:39.209901] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836437000,1698836438000,11,317447069,1698836439205
1698836437000,1698836438000,4,2129111007,1698836439205
1698836437000,1698836438000,7,26897694212,1698836439205
1698836437000,1698836438000,10,326622539,1698836439205
1698836437000,1698836438000,8,16371655453,1698836439205
1698836437000,1698836438000,9,299390475,1698836439205
1698836437000,1698836438000,6,5844965061,1698836439205
1698836437000,1698836438000,5,735684202,1698836439205
1698836437000,1698836438000,1,35615907,1698836439205
[m
[36m[11:00:39.563220] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:40.127038] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836440000-1698836441000[m
[36m[11:00:40.220265] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836438000-1698836439000 [m
[36m[11:00:40.221110] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836438000-1698836439000-266[m
[36m[11:00:40.221212] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836438000-1698836439000[m
[36m[11:00:40.221279] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836438000-1698836439000[m
[36m[11:00:40.221382] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:40.221414] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:40.224788] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836438000,1698836439000,11,317449805,1698836440221
1698836438000,1698836439000,4,2129113502,1698836440221
1698836438000,1698836439000,10,326625115,1698836440221
1698836438000,1698836439000,7,26897696805,1698836440221
1698836438000,1698836439000,8,16371658092,1698836440221
1698836438000,1698836439000,9,299393104,1698836440221
1698836438000,1698836439000,5,735686742,1698836440221
1698836438000,1698836439000,6,5844967640,1698836440221
1698836438000,1698836439000,1,35619929,1698836440221
[m
[36m[11:00:40.564511] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:40.616834] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:40.617177] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:40.618889] [D] [thread 130582] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:40.618984] [I] [thread 130582] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:40.619001] [I] [thread 130582] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:40.619116] [I] [thread 130582] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:40.619128] [I] [thread 130582] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:40.803415] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:40.803749] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:41.116817] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836441000-1698836442000[m
[36m[11:00:41.238773] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836439000-1698836440000 [m
[36m[11:00:41.239600] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836439000-1698836440000-267[m
[36m[11:00:41.239715] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836439000-1698836440000[m
[36m[11:00:41.239785] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836439000-1698836440000[m
[36m[11:00:41.239903] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:41.239934] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:41.243792] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836439000,1698836440000,10,326627338,1698836441239
1698836439000,1698836440000,4,2129115658,1698836441239
1698836439000,1698836440000,7,26897699008,1698836441239
1698836439000,1698836440000,8,16371660287,1698836441239
1698836439000,1698836440000,9,299395258,1698836441239
1698836439000,1698836440000,5,735688865,1698836441239
1698836439000,1698836440000,6,5844969792,1698836441239
1698836439000,1698836440000,11,317452147,1698836441239
1698836439000,1698836440000,1,35625702,1698836441239
[m
[36m[11:00:41.805088] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:42.110695] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836442000-1698836443000[m
[36m[11:00:42.253820] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836440000-1698836441000 [m
[36m[11:00:42.254707] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836440000-1698836441000-268[m
[36m[11:00:42.254807] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836440000-1698836441000[m
[36m[11:00:42.254867] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836440000-1698836441000[m
[36m[11:00:42.254971] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:42.254998] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:42.258390] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836440000,1698836441000,10,326629834,1698836442255
1698836440000,1698836441000,7,26897701521,1698836442255
1698836440000,1698836441000,4,2129118275,1698836442255
1698836440000,1698836441000,8,16371662858,1698836442255
1698836440000,1698836441000,9,299397748,1698836442255
1698836440000,1698836441000,5,735691509,1698836442255
1698836440000,1698836441000,6,5844972514,1698836442255
1698836440000,1698836441000,11,317454559,1698836442255
1698836440000,1698836441000,1,35629741,1698836442255
[m
[36m[11:00:42.806343] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:42.823003] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:42.823332] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:42.824528] [D] [thread 130588] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:42.824638] [I] [thread 130588] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:42.824655] [I] [thread 130588] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:42.824742] [I] [thread 130588] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:42.824754] [I] [thread 130588] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:43.087003] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:43.087318] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:43.116463] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836443000-1698836444000[m
[36m[11:00:43.268854] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836441000-1698836442000 [m
[36m[11:00:43.269543] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836441000-1698836442000-269[m
[36m[11:00:43.269599] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836441000-1698836442000[m
[36m[11:00:43.269638] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836441000-1698836442000[m
[36m[11:00:43.269714] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:43.269733] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:43.271656] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836441000,1698836442000,4,2129120518,1698836443269
1698836441000,1698836442000,10,326632256,1698836443269
1698836441000,1698836442000,7,26897703849,1698836443269
1698836441000,1698836442000,8,16371665157,1698836443269
1698836441000,1698836442000,9,299400127,1698836443269
1698836441000,1698836442000,5,735693660,1698836443269
1698836441000,1698836442000,6,5844974684,1698836443269
1698836441000,1698836442000,11,317456959,1698836443269
1698836441000,1698836442000,1,35635976,1698836443269
[m
[36m[11:00:44.088659] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:44.115721] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836444000-1698836445000[m
[36m[11:00:44.280506] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836442000-1698836443000 [m
[36m[11:00:44.281101] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836442000-1698836443000-270[m
[36m[11:00:44.281174] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836442000-1698836443000[m
[36m[11:00:44.281213] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836442000-1698836443000[m
[36m[11:00:44.281279] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:44.281297] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:44.283173] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836442000,1698836443000,4,2129123220,1698836444281
1698836442000,1698836443000,10,326634563,1698836444281
1698836442000,1698836443000,7,26897706339,1698836444281
1698836442000,1698836443000,8,16371667604,1698836444281
1698836442000,1698836443000,9,299402531,1698836444281
1698836442000,1698836443000,5,735696239,1698836444281
1698836442000,1698836443000,11,317459317,1698836444281
1698836442000,1698836443000,6,5844977260,1698836444281
1698836442000,1698836443000,1,35639961,1698836444281
[m
[36m[11:00:45.090020] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:45.114176] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836445000-1698836446000[m
[36m[11:00:45.195650] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:45.195979] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:45.196979] [D] [thread 130594] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:45.197070] [I] [thread 130594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:45.197087] [I] [thread 130594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:45.197201] [I] [thread 130594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:45.197214] [I] [thread 130594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:45.291557] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836443000-1698836444000 [m
[36m[11:00:45.292901] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836443000-1698836444000-271[m
[36m[11:00:45.293195] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836443000-1698836444000[m
[36m[11:00:45.293281] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836443000-1698836444000[m
[36m[11:00:45.293399] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:45.293467] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:45.296771] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836443000,1698836444000,8,16371670087,1698836445293
1698836443000,1698836444000,10,326637076,1698836445293
1698836443000,1698836444000,7,26897708700,1698836445293
1698836443000,1698836444000,9,299404977,1698836445293
1698836443000,1698836444000,11,317461845,1698836445293
1698836443000,1698836444000,5,735698562,1698836445293
1698836443000,1698836444000,6,5844979540,1698836445293
1698836443000,1698836444000,4,2129125613,1698836445293
1698836443000,1698836444000,1,35644916,1698836445293
[m
[36m[11:00:45.448042] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:45.448425] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:46.121786] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836446000-1698836447000[m
[36m[11:00:46.307819] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836444000-1698836445000 [m
[36m[11:00:46.308593] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836444000-1698836445000-272[m
[36m[11:00:46.308700] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836444000-1698836445000[m
[36m[11:00:46.308763] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836444000-1698836445000[m
[36m[11:00:46.308866] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:46.308892] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:46.312298] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836444000,1698836445000,7,26897710964,1698836446308
1698836444000,1698836445000,10,326639212,1698836446308
1698836444000,1698836445000,9,299407191,1698836446308
1698836444000,1698836445000,5,735700949,1698836446308
1698836444000,1698836445000,11,317464047,1698836446308
1698836444000,1698836445000,4,2129128055,1698836446308
1698836444000,1698836445000,6,5844981918,1698836446308
1698836444000,1698836445000,8,16371672458,1698836446308
1698836444000,1698836445000,1,35647623,1698836446308
[m
[36m[11:00:46.449673] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:47.113548] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836447000-1698836448000[m
[36m[11:00:47.323493] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836445000-1698836446000 [m
[36m[11:00:47.324380] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836445000-1698836446000-273[m
[36m[11:00:47.324501] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836445000-1698836446000[m
[36m[11:00:47.324576] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836445000-1698836446000[m
[36m[11:00:47.324698] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:47.324728] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:47.328611] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836445000,1698836446000,7,26897713591,1698836447324
1698836445000,1698836446000,10,326641886,1698836447324
1698836445000,1698836446000,9,299409752,1698836447324
1698836445000,1698836446000,5,735703425,1698836447324
1698836445000,1698836446000,11,317466662,1698836447324
1698836445000,1698836446000,6,5844984338,1698836447324
1698836445000,1698836446000,8,16371674999,1698836447324
1698836445000,1698836446000,4,2129130413,1698836447324
1698836445000,1698836446000,1,35652323,1698836447324
[m
[36m[11:00:47.450918] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:47.464381] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:47.464722] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:47.465824] [D] [thread 130599] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:47.465921] [I] [thread 130599] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:47.465937] [I] [thread 130599] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:47.466052] [I] [thread 130599] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:47.466065] [I] [thread 130599] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:47.632715] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:47.633077] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:48.152590] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836448000-1698836449000[m
[36m[11:00:48.339345] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836446000-1698836447000 [m
[36m[11:00:48.340272] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836446000-1698836447000-274[m
[36m[11:00:48.340345] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836446000-1698836447000[m
[36m[11:00:48.340398] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836446000-1698836447000[m
[36m[11:00:48.340499] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:48.340525] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:48.344227] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836446000,1698836447000,10,326644138,1698836448340
1698836446000,1698836447000,9,299411917,1698836448340
1698836446000,1698836447000,11,317468826,1698836448340
1698836446000,1698836447000,5,735705631,1698836448340
1698836446000,1698836447000,8,16371677132,1698836448340
1698836446000,1698836447000,4,2129132679,1698836448340
1698836446000,1698836447000,6,5844986591,1698836448340
1698836446000,1698836447000,7,26897715902,1698836448340
1698836446000,1698836447000,1,35657067,1698836448340
[m
[36m[11:00:48.634348] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:49.147113] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836449000-1698836450000[m
[36m[11:00:49.355839] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836447000-1698836448000 [m
[36m[11:00:49.356806] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836447000-1698836448000-275[m
[36m[11:00:49.356918] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836447000-1698836448000[m
[36m[11:00:49.356988] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836447000-1698836448000[m
[36m[11:00:49.357104] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:49.357134] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:49.361005] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836447000,1698836448000,10,326646786,1698836449357
1698836447000,1698836448000,9,299414658,1698836449357
1698836447000,1698836448000,11,317471292,1698836449357
1698836447000,1698836448000,5,735708211,1698836449357
1698836447000,1698836448000,8,16371679830,1698836449357
1698836447000,1698836448000,4,2129135218,1698836449357
1698836447000,1698836448000,6,5844989205,1698836449357
1698836447000,1698836448000,7,26897718563,1698836449357
1698836447000,1698836448000,1,35661072,1698836449357
[m
[36m[11:00:49.635760] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:49.734653] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:49.734959] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:49.736248] [D] [thread 130605] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:49.736358] [I] [thread 130605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:49.736374] [I] [thread 130605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:49.736473] [I] [thread 130605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:49.736487] [I] [thread 130605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:49.942617] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:49.942961] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:50.145793] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836450000-1698836451000[m
[36m[11:00:50.373127] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836448000-1698836449000 [m
[36m[11:00:50.374130] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836448000-1698836449000-276[m
[36m[11:00:50.374273] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836448000-1698836449000[m
[36m[11:00:50.374337] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836448000-1698836449000[m
[36m[11:00:50.374447] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:50.374474] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:50.378285] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836448000,1698836449000,11,317473670,1698836450374
1698836448000,1698836449000,8,16371682033,1698836450374
1698836448000,1698836449000,5,735710375,1698836450374
1698836448000,1698836449000,4,2129137421,1698836450374
1698836448000,1698836449000,6,5844991368,1698836450374
1698836448000,1698836449000,7,26897720755,1698836450374
1698836448000,1698836449000,9,299417025,1698836450374
1698836448000,1698836449000,10,326649193,1698836450374
1698836448000,1698836449000,1,35666795,1698836450374
[m
[36m[11:00:50.944171] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:51.142300] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836451000-1698836452000[m
[36m[11:00:51.388383] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836449000-1698836450000 [m
[36m[11:00:51.389194] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836449000-1698836450000-277[m
[36m[11:00:51.389274] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836449000-1698836450000[m
[36m[11:00:51.389322] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836449000-1698836450000[m
[36m[11:00:51.389427] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:51.389452] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:51.392382] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836449000,1698836450000,11,317476098,1698836451389
1698836449000,1698836450000,8,16371684533,1698836451389
1698836449000,1698836450000,5,735713012,1698836451389
1698836449000,1698836450000,4,2129140132,1698836451389
1698836449000,1698836450000,6,5844993987,1698836451389
1698836449000,1698836450000,9,299419556,1698836451389
1698836449000,1698836450000,7,26897723350,1698836451389
1698836449000,1698836450000,10,326651675,1698836451389
1698836449000,1698836450000,1,35670700,1698836451389
[m
[36m[11:00:51.945458] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:52.009656] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:52.010013] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:52.011233] [D] [thread 130612] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:52.011330] [I] [thread 130612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:52.011347] [I] [thread 130612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:52.011462] [I] [thread 130612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:52.011475] [I] [thread 130612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:52.138264] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836452000-1698836453000[m
[36m[11:00:52.151844] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:52.152194] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:52.401419] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836450000-1698836451000 [m
[36m[11:00:52.402329] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836450000-1698836451000-278[m
[36m[11:00:52.402439] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836450000-1698836451000[m
[36m[11:00:52.402515] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836450000-1698836451000[m
[36m[11:00:52.402640] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:52.402677] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:52.406750] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836450000,1698836451000,11,317478556,1698836452402
1698836450000,1698836451000,4,2129142310,1698836452402
1698836450000,1698836451000,8,16371686862,1698836452402
1698836450000,1698836451000,5,735715233,1698836452402
1698836450000,1698836451000,6,5844996179,1698836452402
1698836450000,1698836451000,9,299421903,1698836452402
1698836450000,1698836451000,7,26897725588,1698836452402
1698836450000,1698836451000,10,326654026,1698836452402
1698836450000,1698836451000,1,35676632,1698836452402
[m
[36m[11:00:53.127099] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836453000-1698836454000[m
[36m[11:00:53.153398] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:53.416183] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836451000-1698836452000 [m
[36m[11:00:53.417235] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836451000-1698836452000-279[m
[36m[11:00:53.417305] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836451000-1698836452000[m
[36m[11:00:53.417354] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836451000-1698836452000[m
[36m[11:00:53.417438] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:53.417460] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:53.421055] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836451000,1698836452000,11,317480791,1698836453417
1698836451000,1698836452000,4,2129144817,1698836453417
1698836451000,1698836452000,8,16371689193,1698836453417
1698836451000,1698836452000,5,735717708,1698836453417
1698836451000,1698836452000,9,299424229,1698836453417
1698836451000,1698836452000,6,5844998617,1698836453417
1698836451000,1698836452000,10,326656317,1698836453417
1698836451000,1698836452000,7,26897727977,1698836453417
1698836451000,1698836452000,1,35679870,1698836453417
[m
[36m[11:00:54.122012] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836454000-1698836455000[m
[36m[11:00:54.154662] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:54.295692] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:54.296030] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:54.297095] [D] [thread 130617] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:54.297193] [I] [thread 130617] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:54.297210] [I] [thread 130617] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:54.297324] [I] [thread 130617] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:54.297344] [I] [thread 130617] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:54.432469] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836452000-1698836453000 [m
[36m[11:00:54.433474] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836452000-1698836453000-280[m
[36m[11:00:54.433578] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836452000-1698836453000[m
[36m[11:00:54.433640] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836452000-1698836453000[m
[36m[11:00:54.433743] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:54.433771] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:54.437471] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836452000,1698836453000,11,317483370,1698836454433
1698836452000,1698836453000,4,2129147125,1698836454433
1698836452000,1698836453000,5,735720065,1698836454433
1698836452000,1698836453000,8,16371691655,1698836454433
1698836452000,1698836453000,9,299426723,1698836454433
1698836452000,1698836453000,6,5845001002,1698836454433
1698836452000,1698836453000,10,326658889,1698836454433
1698836452000,1698836453000,7,26897730386,1698836454433
1698836452000,1698836453000,1,35683952,1698836454433
[m
[36m[11:00:54.538820] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:54.539174] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:55.111438] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836455000-1698836456000[m
[36m[11:00:55.448316] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836453000-1698836454000 [m
[36m[11:00:55.449090] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836453000-1698836454000-281[m
[36m[11:00:55.449188] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836453000-1698836454000[m
[36m[11:00:55.449249] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836453000-1698836454000[m
[36m[11:00:55.449351] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:55.449382] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:55.452765] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836453000,1698836454000,4,2129149441,1698836455449
1698836453000,1698836454000,11,317485519,1698836455449
1698836453000,1698836454000,5,735722375,1698836455449
1698836453000,1698836454000,8,16371693842,1698836455449
1698836453000,1698836454000,9,299428886,1698836455449
1698836453000,1698836454000,7,26897732703,1698836455449
1698836453000,1698836454000,6,5845003281,1698836455449
1698836453000,1698836454000,10,326661092,1698836455449
1698836453000,1698836454000,1,35687998,1698836455449
[m
[36m[11:00:55.540391] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:56.143000] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836456000-1698836457000[m
[36m[11:00:56.464450] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836454000-1698836455000 [m
[36m[11:00:56.465249] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836454000-1698836455000-282[m
[36m[11:00:56.465352] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836454000-1698836455000[m
[36m[11:00:56.465415] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836454000-1698836455000[m
[36m[11:00:56.465517] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:56.465545] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:56.468913] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836454000,1698836455000,11,317488199,1698836456465
1698836454000,1698836455000,4,2129151892,1698836456465
1698836454000,1698836455000,8,16371696490,1698836456465
1698836454000,1698836455000,9,299431541,1698836456465
1698836454000,1698836455000,5,735724851,1698836456465
1698836454000,1698836455000,7,26897735253,1698836456465
1698836454000,1698836455000,6,5845005861,1698836456465
1698836454000,1698836455000,10,326663716,1698836456465
1698836454000,1698836455000,1,35692775,1698836456465
[m
[36m[11:00:56.541818] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:56.572306] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:56.573002] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:56.573710] [D] [thread 130623] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:56.573800] [I] [thread 130623] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:56.573817] [I] [thread 130623] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:56.573931] [I] [thread 130623] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:56.573943] [I] [thread 130623] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:56.740657] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:56.741245] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:57.132644] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836457000-1698836458000[m
[36m[11:00:57.479905] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836455000-1698836456000 [m
[36m[11:00:57.480816] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836455000-1698836456000-283[m
[36m[11:00:57.480919] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836455000-1698836456000[m
[36m[11:00:57.480985] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836455000-1698836456000[m
[36m[11:00:57.481091] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:57.481118] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:57.484905] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836455000,1698836456000,4,2129154330,1698836457481
1698836455000,1698836456000,8,16371698657,1698836457481
1698836455000,1698836456000,9,299433693,1698836457481
1698836455000,1698836456000,5,735727022,1698836457481
1698836455000,1698836456000,7,26897737438,1698836457481
1698836455000,1698836456000,6,5845008017,1698836457481
1698836455000,1698836456000,10,326665868,1698836457481
1698836455000,1698836456000,11,317490567,1698836457481
1698836455000,1698836456000,1,35697720,1698836457481
[m
[36m[11:00:57.742493] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:58.121887] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836458000-1698836459000[m
[36m[11:00:58.496302] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836456000-1698836457000 [m
[36m[11:00:58.497112] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836456000-1698836457000-284[m
[36m[11:00:58.497255] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836456000-1698836457000[m
[36m[11:00:58.497421] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836456000-1698836457000[m
[36m[11:00:58.497578] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:58.497671] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:58.501986] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836456000,1698836457000,8,16371701230,1698836458497
1698836456000,1698836457000,9,299436256,1698836458497
1698836456000,1698836457000,5,735729720,1698836458497
1698836456000,1698836457000,7,26897740087,1698836458497
1698836456000,1698836457000,6,5845010717,1698836458497
1698836456000,1698836457000,10,326668411,1698836458497
1698836456000,1698836457000,11,317493175,1698836458497
1698836456000,1698836457000,4,2129157042,1698836458497
1698836456000,1698836457000,1,35701714,1698836458497
[m
[36m[11:00:58.743751] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:58.762972] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:58.763579] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:58.764379] [D] [thread 130629] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:00:58.764479] [I] [thread 130629] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:58.764497] [I] [thread 130629] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:00:58.764611] [I] [thread 130629] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:00:58.764623] [I] [thread 130629] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:00:58.981098] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:58.981559] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:00:59.116338] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836459000-1698836460000[m
[36m[11:00:59.512479] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836457000-1698836458000 [m
[36m[11:00:59.513186] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836457000-1698836458000-285[m
[36m[11:00:59.513285] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836457000-1698836458000[m
[36m[11:00:59.513333] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836457000-1698836458000[m
[36m[11:00:59.513416] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:00:59.513435] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:00:59.515601] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836457000,1698836458000,8,16371703507,1698836459513
1698836457000,1698836458000,9,299438587,1698836459513
1698836457000,1698836458000,5,735731892,1698836459513
1698836457000,1698836458000,7,26897742272,1698836459513
1698836457000,1698836458000,6,5845012860,1698836459513
1698836457000,1698836458000,10,326670692,1698836459513
1698836457000,1698836458000,4,2129159224,1698836459513
1698836457000,1698836458000,11,317495516,1698836459513
1698836457000,1698836458000,1,35707624,1698836459513
[m
[36m[11:00:59.982445] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:00.108015] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836460000-1698836461000[m
[36m[11:01:00.525430] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836458000-1698836459000 [m
[36m[11:01:00.526373] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836458000-1698836459000-286[m
[36m[11:01:00.526472] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836458000-1698836459000[m
[36m[11:01:00.526533] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836458000-1698836459000[m
[36m[11:01:00.526644] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:00.526673] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:00.530578] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836458000,1698836459000,8,16371705928,1698836460526
1698836458000,1698836459000,9,299440990,1698836460526
1698836458000,1698836459000,5,735734514,1698836460526
1698836458000,1698836459000,7,26897744790,1698836460526
1698836458000,1698836459000,6,5845015354,1698836460526
1698836458000,1698836459000,10,326673098,1698836460526
1698836458000,1698836459000,4,2129161797,1698836460526
1698836458000,1698836459000,11,317497888,1698836460526
1698836458000,1698836459000,1,35711633,1698836460526
[m
[36m[11:01:00.983738] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:01.083665] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:01.084280] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:01.084992] [D] [thread 130634] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:01:01.085088] [I] [thread 130634] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:01.085104] [I] [thread 130634] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:01:01.085219] [I] [thread 130634] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:01.085231] [I] [thread 130634] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:01:01.132590] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836461000-1698836462000[m
[36m[11:01:01.338888] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:01.339492] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:01.541187] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836459000-1698836460000 [m
[36m[11:01:01.542031] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836459000-1698836460000-287[m
[36m[11:01:01.542144] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836459000-1698836460000[m
[36m[11:01:01.542336] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836459000-1698836460000[m
[36m[11:01:01.542479] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:01.542511] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:01.546472] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836459000,1698836460000,9,299443388,1698836461542
1698836459000,1698836460000,8,16371708445,1698836461542
1698836459000,1698836460000,5,735736748,1698836461542
1698836459000,1698836460000,7,26897747092,1698836461542
1698836459000,1698836460000,10,326675540,1698836461542
1698836459000,1698836460000,4,2129164005,1698836461542
1698836459000,1698836460000,6,5845017635,1698836461542
1698836459000,1698836460000,11,317500295,1698836461542
1698836459000,1698836460000,1,35716719,1698836461542
[m
[36m[11:01:02.121458] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836462000-1698836463000[m
[36m[11:01:02.340713] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:02.557879] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836460000-1698836461000 [m
[36m[11:01:02.558811] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836460000-1698836461000-288[m
[36m[11:01:02.558922] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836460000-1698836461000[m
[36m[11:01:02.558992] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836460000-1698836461000[m
[36m[11:01:02.559110] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:02.559140] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:02.563095] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836460000,1698836461000,9,299445825,1698836462559
1698836460000,1698836461000,5,735739179,1698836462559
1698836460000,1698836461000,7,26897749477,1698836462559
1698836460000,1698836461000,10,326677815,1698836462559
1698836460000,1698836461000,4,2129166475,1698836462559
1698836460000,1698836461000,6,5845020026,1698836462559
1698836460000,1698836461000,11,317502504,1698836462559
1698836460000,1698836461000,8,16371710888,1698836462559
1698836460000,1698836461000,1,35719180,1698836462559
[m
[36m[11:01:03.121340] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836463000-1698836464000[m
[36m[11:01:03.336761] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:03.337342] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:03.338079] [D] [thread 130639] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:01:03.338173] [I] [thread 130639] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:03.338220] [I] [thread 130639] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:01:03.338340] [I] [thread 130639] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:03.338362] [I] [thread 130639] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:01:03.506292] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:03.506765] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:03.574569] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836461000-1698836462000 [m
[36m[11:01:03.575350] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836461000-1698836462000-289[m
[36m[11:01:03.575558] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836461000-1698836462000[m
[36m[11:01:03.575624] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836461000-1698836462000[m
[36m[11:01:03.575729] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:03.575756] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:03.579135] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836461000,1698836462000,5,735741565,1698836463575
1698836461000,1698836462000,7,26897751968,1698836463575
1698836461000,1698836462000,10,326680399,1698836463575
1698836461000,1698836462000,4,2129168837,1698836463575
1698836461000,1698836462000,6,5845022512,1698836463575
1698836461000,1698836462000,11,317505137,1698836463575
1698836461000,1698836462000,9,299448494,1698836463575
1698836461000,1698836462000,8,16371713512,1698836463575
1698836461000,1698836462000,1,35725053,1698836463575
[m
[36m[11:01:04.114421] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836464000-1698836465000[m
[36m[11:01:04.508101] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:04.591006] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836462000-1698836463000 [m
[36m[11:01:04.591863] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836462000-1698836463000-290[m
[36m[11:01:04.591971] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836462000-1698836463000[m
[36m[11:01:04.592042] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836462000-1698836463000[m
[36m[11:01:04.592159] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:04.592189] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:04.596101] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836462000,1698836463000,5,735743781,1698836464592
1698836462000,1698836463000,7,26897754198,1698836464592
1698836462000,1698836463000,4,2129171133,1698836464592
1698836462000,1698836463000,10,326682544,1698836464592
1698836462000,1698836463000,6,5845024702,1698836464592
1698836462000,1698836463000,11,317507281,1698836464592
1698836462000,1698836463000,9,299450606,1698836464592
1698836462000,1698836463000,8,16371715693,1698836464592
1698836462000,1698836463000,1,35729046,1698836464592
[m
[36m[11:01:05.117547] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836465000-1698836466000[m
[36m[11:01:05.509561] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:05.533019] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:05.533629] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:05.534464] [D] [thread 130644] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:01:05.534554] [I] [thread 130644] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:05.534571] [I] [thread 130644] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:01:05.534684] [I] [thread 130644] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:05.534696] [I] [thread 130644] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:01:05.606290] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836463000-1698836464000 [m
[36m[11:01:05.607082] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836463000-1698836464000-291[m
[36m[11:01:05.607181] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836463000-1698836464000[m
[36m[11:01:05.607242] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836463000-1698836464000[m
[36m[11:01:05.607347] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:05.607374] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:05.610816] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836463000,1698836464000,7,26897756844,1698836465607
1698836463000,1698836464000,5,735746359,1698836465607
1698836463000,1698836464000,4,2129173664,1698836465607
1698836463000,1698836464000,6,5845027339,1698836465607
1698836463000,1698836464000,10,326685163,1698836465607
1698836463000,1698836464000,11,317509915,1698836465607
1698836463000,1698836464000,9,299453276,1698836465607
1698836463000,1698836464000,8,16371718335,1698836465607
1698836463000,1698836464000,1,35734865,1698836465607
[m
[36m[11:01:05.799706] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:05.800036] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:06.117575] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836466000-1698836467000[m
[36m[11:01:06.623328] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836464000-1698836465000 [m
[36m[11:01:06.624171] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836464000-1698836465000-292[m
[36m[11:01:06.624282] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836464000-1698836465000[m
[36m[11:01:06.624352] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836464000-1698836465000[m
[36m[11:01:06.624466] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:06.624497] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:06.628438] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836464000,1698836465000,5,735748544,1698836466624
1698836464000,1698836465000,7,26897759074,1698836466624
1698836464000,1698836465000,4,2129175898,1698836466624
1698836464000,1698836465000,6,5845029483,1698836466624
1698836464000,1698836465000,10,326687355,1698836466624
1698836464000,1698836465000,11,317512192,1698836466624
1698836464000,1698836465000,8,16371720484,1698836466624
1698836464000,1698836465000,9,299455472,1698836466624
1698836464000,1698836465000,1,35738712,1698836466624
[m
[36m[11:01:06.801363] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:07.123338] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836467000-1698836468000[m
[36m[11:01:07.640382] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836465000-1698836466000 [m
[36m[11:01:07.641104] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836465000-1698836466000-293[m
[36m[11:01:07.641201] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836465000-1698836466000[m
[36m[11:01:07.641251] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836465000-1698836466000[m
[36m[11:01:07.641330] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:07.641348] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:07.643743] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836465000,1698836466000,5,735751388,1698836467641
1698836465000,1698836466000,4,2129178479,1698836467641
1698836465000,1698836466000,6,5845032118,1698836467641
1698836465000,1698836466000,11,317514639,1698836467641
1698836465000,1698836466000,10,326689876,1698836467641
1698836465000,1698836466000,8,16371723045,1698836467641
1698836465000,1698836466000,9,299457990,1698836467641
1698836465000,1698836466000,7,26897761869,1698836467641
1698836465000,1698836466000,1,35743681,1698836467641
[m
[36m[11:01:07.802642] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:07.901804] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:07.902350] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:07.903226] [D] [thread 130649] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:01:07.903330] [I] [thread 130649] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:07.903348] [I] [thread 130649] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:01:07.903467] [I] [thread 130649] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:07.903483] [I] [thread 130649] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:01:08.115034] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:08.115600] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:08.118222] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836468000-1698836469000[m
[36m[11:01:08.652891] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836466000-1698836467000 [m
[36m[11:01:08.653734] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836466000-1698836467000-294[m
[36m[11:01:08.653844] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836466000-1698836467000[m
[36m[11:01:08.653914] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836466000-1698836467000[m
[36m[11:01:08.654029] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:08.654060] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:08.657947] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836466000,1698836467000,4,2129180731,1698836468654
1698836466000,1698836467000,11,317516971,1698836468654
1698836466000,1698836467000,10,326692184,1698836468654
1698836466000,1698836467000,8,16371725274,1698836468654
1698836466000,1698836467000,6,5845034279,1698836468654
1698836466000,1698836467000,9,299460232,1698836468654
1698836466000,1698836467000,5,735753639,1698836468654
1698836466000,1698836467000,7,26897763998,1698836468654
1698836466000,1698836467000,1,35748362,1698836468654
[m
[36m[11:01:09.113731] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836469000-1698836470000[m
[36m[11:01:09.116943] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:09.668636] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836467000-1698836468000 [m
[36m[11:01:09.669480] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836467000-1698836468000-295[m
[36m[11:01:09.669593] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836467000-1698836468000[m
[36m[11:01:09.669663] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836467000-1698836468000[m
[36m[11:01:09.669780] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:09.669810] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:09.673734] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836467000,1698836468000,11,317519202,1698836469669
1698836467000,1698836468000,8,16371727693,1698836469669
1698836467000,1698836468000,10,326694538,1698836469669
1698836467000,1698836468000,6,5845036760,1698836469669
1698836467000,1698836468000,9,299462621,1698836469669
1698836467000,1698836468000,5,735756163,1698836469669
1698836467000,1698836468000,4,2129183405,1698836469669
1698836467000,1698836468000,7,26897766508,1698836469669
1698836467000,1698836468000,1,35751603,1698836469669
[m
[36m[11:01:10.115293] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836470000-1698836471000[m
[36m[11:01:10.118162] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:10.138801] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:10.139483] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:10.140209] [D] [thread 130654] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:01:10.140315] [I] [thread 130654] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:10.140333] [I] [thread 130654] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:01:10.140453] [I] [thread 130654] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:10.140520] [I] [thread 130654] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:01:10.359527] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:10.360075] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:10.684690] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836468000-1698836469000 [m
[36m[11:01:10.685589] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836468000-1698836469000-296[m
[36m[11:01:10.685699] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836468000-1698836469000[m
[36m[11:01:10.685771] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836468000-1698836469000[m
[36m[11:01:10.685886] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:10.685917] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:10.690545] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836468000,1698836469000,11,317521754,1698836470685
1698836468000,1698836469000,8,16371730141,1698836470685
1698836468000,1698836469000,9,299465063,1698836470685
1698836468000,1698836469000,10,326696995,1698836470685
1698836468000,1698836469000,6,5845039140,1698836470685
1698836468000,1698836469000,4,2129185603,1698836470685
1698836468000,1698836469000,7,26897768825,1698836470685
1698836468000,1698836469000,5,735758396,1698836470685
1698836468000,1698836469000,1,35755897,1698836470685
[m
[36m[11:01:11.129891] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836471000-1698836472000[m
[36m[11:01:11.361337] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:11.700634] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836469000-1698836470000 [m
[36m[11:01:11.701483] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836469000-1698836470000-297[m
[36m[11:01:11.701588] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836469000-1698836470000[m
[36m[11:01:11.701653] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836469000-1698836470000[m
[36m[11:01:11.701757] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:11.701789] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:11.705162] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836469000,1698836470000,11,317524013,1698836471701
1698836469000,1698836470000,8,16371732539,1698836471701
1698836469000,1698836470000,9,299467263,1698836471701
1698836469000,1698836470000,10,326699146,1698836471701
1698836469000,1698836470000,6,5845041435,1698836471701
1698836469000,1698836470000,7,26897771165,1698836471701
1698836469000,1698836470000,4,2129188098,1698836471701
1698836469000,1698836470000,5,735760810,1698836471701
1698836469000,1698836470000,1,35759843,1698836471701
[m
[36m[11:01:12.124401] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836472000-1698836473000[m
[36m[11:01:12.362567] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:12.363356] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:12.363946] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:12.364864] [D] [thread 130659] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:01:12.364982] [I] [thread 130659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:12.365001] [I] [thread 130659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:01:12.365134] [I] [thread 130659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:12.365151] [I] [thread 130659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:01:12.563093] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:12.563569] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:12.718767] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836470000-1698836471000 [m
[36m[11:01:12.719609] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836470000-1698836471000-298[m
[36m[11:01:12.719722] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836470000-1698836471000[m
[36m[11:01:12.719791] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836470000-1698836471000[m
[36m[11:01:12.719907] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:12.719943] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:12.723813] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836470000,1698836471000,9,299470052,1698836472719
1698836470000,1698836471000,10,326701839,1698836472719
1698836470000,1698836471000,6,5845043971,1698836472719
1698836470000,1698836471000,7,26897773668,1698836472719
1698836470000,1698836471000,4,2129190505,1698836472719
1698836470000,1698836471000,5,735763266,1698836472719
1698836470000,1698836471000,11,317526937,1698836472719
1698836470000,1698836471000,8,16371735194,1698836472719
1698836470000,1698836471000,1,35765590,1698836472719
[m
[36m[11:01:13.116517] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836473000-1698836474000[m
[36m[11:01:13.564840] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:13.733845] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836471000-1698836472000 [m
[36m[11:01:13.735182] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836471000-1698836472000-299[m
[36m[11:01:13.735265] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836471000-1698836472000[m
[36m[11:01:13.735328] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836471000-1698836472000[m
[36m[11:01:13.735437] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:13.735465] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:13.739719] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836471000,1698836472000,10,326703973,1698836473735
1698836471000,1698836472000,6,5845046196,1698836473735
1698836471000,1698836472000,4,2129192848,1698836473735
1698836471000,1698836472000,7,26897775883,1698836473735
1698836471000,1698836472000,5,735765588,1698836473735
1698836471000,1698836472000,11,317529124,1698836473735
1698836471000,1698836472000,9,299472351,1698836473735
1698836471000,1698836472000,8,16371737409,1698836473735
1698836471000,1698836472000,1,35769692,1698836473735
[m
[36m[11:01:14.116087] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836474000-1698836475000[m
[36m[11:01:14.566072] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:14.567865] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:14.568175] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:14.569273] [D] [thread 130664] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:01:14.569373] [I] [thread 130664] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:14.569390] [I] [thread 130664] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:01:14.569511] [I] [thread 130664] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:01:14.569525] [I] [thread 130664] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:01:14.750506] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836472000-1698836473000 [m
[36m[11:01:14.751349] [D] [thread 129821] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836472000-1698836473000-300[m
[36m[11:01:14.751807] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836472000-1698836473000[m
[36m[11:01:14.752147] [D] [thread 129821] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836472000-1698836473000[m
[36m[11:01:14.752615] [D] [thread 129821] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:01:14.752697] [D] [thread 129821] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:01:14.754754] [D] [thread 129821] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836472000,1698836473000,10,326706539,1698836474752
1698836472000,1698836473000,6,5845048791,1698836474752
1698836472000,1698836473000,7,26897778479,1698836474752
1698836472000,1698836473000,4,2129195330,1698836474752
1698836472000,1698836473000,5,735768182,1698836474752
1698836472000,1698836473000,11,317531668,1698836474752
1698836472000,1698836473000,9,299474994,1698836474752
1698836472000,1698836473000,8,16371739998,1698836474752
1698836472000,1698836473000,1,35775384,1698836474752
[m
[36m[11:01:14.774155] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:14.774496] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:14.943561] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:01:14.943884] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:01:14.944863] [I] [thread 130668] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[11:01:14.944953] [D] [thread 130668] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[11:01:14.945087] [I] [thread 130668] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[11:01:14.945103] [I] [thread 130668] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:01:14.945147] [I] [thread 129811] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:01:14.945197] [I] [thread 129811] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:01:14.945218] [I] [thread 129811] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:01:14.945264] [I] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[11:01:14.945277] [D] [thread 129811] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[11:01:14.945325] [D] [thread 129811] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[11:01:14.945481] [D] [thread 129811] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[11:01:14.945973] [D] [thread 129811] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:01:14.946037] [D] [thread 129811] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:01:14.946118] [D] [thread 129811] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:01:14.946135] [D] [thread 129811] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:01:14.946143] [D] [thread 129811] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[11:01:14.946172] [D] [thread 129811] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[11:01:14.946220] [D] [thread 129811] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:01:14.946263] [D] [thread 129811] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[11:01:14.946276] [D] [thread 129811] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[11:01:14.946418] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:39397[m
[36m[11:01:14.946458] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:39397 queryId=1[m
[36m[11:01:14.952127] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.32:32925[m
[36m[11:01:14.952214] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:32925 queryId=1[m
[36m[11:01:14.956957] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.33:34475[m
[36m[11:01:14.957044] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:34475 queryId=1[m
[36m[11:01:14.961748] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.34:45093[m
[36m[11:01:14.961836] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:45093 queryId=1[m
[36m[11:01:14.966666] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.35:33129[m
[36m[11:01:14.966748] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:33129 queryId=1[m
[36m[11:01:14.971172] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.36:41269[m
[36m[11:01:14.971254] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.36:41269 queryId=1[m
[36m[11:01:14.975634] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:38619[m
[36m[11:01:14.975716] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:38619 queryId=1[m
[36m[11:01:14.980046] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:45685[m
[36m[11:01:14.980130] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:45685 queryId=1[m
[36m[11:01:14.984617] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=11 and IP=192.168.2.39:38971[m
[36m[11:01:14.984747] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.39:38971 queryId=1[m
[36m[11:01:14.989458] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.30:43477[m
[36m[11:01:14.989540] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:43477 queryId=1[m
[36m[11:01:14.994239] [D] [thread 129811] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.31:43211[m
[36m[11:01:14.994310] [D] [thread 129811] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:43211 queryId=1[m
[36m[11:01:14.998657] [D] [thread 129811] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 11 queues[m
[36m[11:01:15.090617] [D] [thread 129823] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[11:01:15.090776] [D] [thread 129823] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[11:01:15.090906] [D] [thread 129823] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  1  type= HardStop[m
[36m[11:01:15.090973] [D] [thread 129823] [DataSource.cpp:218] [stop] DataSource 90: Stop called and source is running[m
[36m[11:01:15.091000] [D] [thread 129823] [DataSource.cpp:237] [stop] DataSource 90 was running, retrieving future now...[m
[36m[11:01:15.109787] [D] [thread 129821] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836475000-1698836476000[m
[36m[11:01:15.293063] [D] [thread 129820] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): EndOfStream received for channel [m
[36m[11:01:15.293217] [D] [thread 129820] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=0)[m
[32m[11:01:15.293371] [I] [thread 129820] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(1)[m
[36m[11:01:15.293420] [D] [thread 129820] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::27::0::0, counter is at 1.[m
[36m[11:01:15.293517] [D] [thread 129820] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:01:15.293594] [W] [thread 129820] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.297304] [D] [thread 129820] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): EndOfStream received for channel [m
[36m[11:01:15.297563] [D] [thread 129820] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[11:01:15.297673] [I] [thread 129820] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[11:01:15.297735] [D] [thread 129820] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[11:01:15.297805] [D] [thread 129820] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:01:15.297842] [W] [thread 129820] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.300533] [D] [thread 129820] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): EndOfStream received for channel [m
[36m[11:01:15.300726] [D] [thread 129820] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=0)[m
[32m[11:01:15.300815] [I] [thread 129820] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(1)[m
[36m[11:01:15.300848] [D] [thread 129820] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::39::0::0, counter is at 1.[m
[36m[11:01:15.300902] [D] [thread 129820] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:01:15.300954] [W] [thread 129820] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.303809] [D] [thread 129820] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): EndOfStream received for channel [m
[36m[11:01:15.303999] [D] [thread 129820] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=0)[m
[32m[11:01:15.304087] [I] [thread 129820] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(1)[m
[36m[11:01:15.304121] [D] [thread 129820] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::45::0::0, counter is at 1.[m
[36m[11:01:15.304178] [D] [thread 129820] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:01:15.304232] [W] [thread 129820] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[11:01:15.364256] [E] [thread 130610] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::42::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaae25da0b7, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff9b3b6d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaae25daa6f, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa52226b7, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa503b2eb, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d3e5207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9ba666e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d3f77e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d3f8773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaae25da0b7, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff9b3b6d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaae25daa6f, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa52226b7, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa503b2eb, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d3e5207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9ba666e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d3f77e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d3f8773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[11:01:15.590763] [D] [thread 129820] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): EndOfStream received for channel [m
[36m[11:01:15.590933] [D] [thread 129820] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[32m[11:01:15.591044] [I] [thread 129820] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[11:01:15.591095] [D] [thread 129820] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[11:01:15.591172] [D] [thread 129820] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:01:15.591216] [W] [thread 129820] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.596372] [D] [thread 129820] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): EndOfStream received for channel [m
[36m[11:01:15.596528] [D] [thread 129820] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=0)[m
[32m[11:01:15.596646] [I] [thread 129820] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(1)[m
[36m[11:01:15.596699] [D] [thread 129820] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::57::0::0, counter is at 1.[m
[36m[11:01:15.596777] [D] [thread 129820] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:01:15.596817] [W] [thread 129820] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.601571] [D] [thread 129820] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): EndOfStream received for channel [m
[36m[11:01:15.601729] [D] [thread 129820] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=0)[m
[32m[11:01:15.601848] [I] [thread 129820] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(1)[m
[36m[11:01:15.601899] [D] [thread 129820] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::63::0::0, counter is at 1.[m
[36m[11:01:15.601976] [D] [thread 129820] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:01:15.602019] [W] [thread 129820] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.605970] [D] [thread 129820] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34047): EndOfStream received for channel [m
[36m[11:01:15.606068] [D] [thread 129820] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::69::0::0(threadId=0)[m
[32m[11:01:15.606147] [I] [thread 129820] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::69::0::0; newCnt(1)[m
[36m[11:01:15.606182] [D] [thread 129820] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::69::0::0, counter is at 1.[m
[36m[11:01:15.606278] [D] [thread 129820] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:01:15.606308] [W] [thread 129820] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[11:01:15.697396] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Transport closed[m
[33m[1m[11:01:15.698176] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:43477 went dead so we remove it[m
[32m[11:01:15.698360] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[11:01:15.698384] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:15.698412] [I] [thread 129828] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:01:15.698420] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:01:15.698430] [I] [thread 129828] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:01:15.698440] [I] [thread 129828] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:01:15.698460] [I] [thread 129828] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:01:15.698469] [I] [thread 129828] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:01:15.698511] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[11:01:15.762007] [D] [thread 129903] [DataSource.cpp:471] [runningRoutineWithGatheringInterval] DataSource 90 call close[m
[36m[11:01:15.762106] [D] [thread 129903] [DataSource.cpp:281] [close] DataSource 90 : Data Source add end of stream. Gracefully=HardStop[m
[36m[11:01:15.762154] [D] [thread 129903] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 90 terminationType=HardStop[m
[36m[11:01:15.762364] [D] [thread 129903] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.762528] [D] [thread 129903] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.762841] [D] [thread 129903] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=90 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.762941] [D] [thread 129903] [FixedSizeBufferPool.cpp:53] [destroy] Destroying LocalBufferPool[m
[36m[11:01:15.763298] [D] [thread 129903] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 90 is notifying completion: HardStop[m
[36m[11:01:15.763368] [D] [thread 129903] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 90 is terminated; tokens left = 13[m
[36m[11:01:15.763394] [D] [thread 129903] [DataSource.cpp:474] [runningRoutineWithGatheringInterval] DataSource 90 end running[m
[36m[11:01:15.763487] [D] [thread 129903] [DataSource.cpp:313] [runningRoutine] DataSource 90 end runningRoutine[m
[36m[11:01:15.763510] [D] [thread 129903] [DataSource.cpp:162] [operator()] DataSource 90: runningRoutine is finished[m
[33m[1m[11:01:15.763672] [W] [thread 129823] [DataSource.cpp:242] [stop] Stopped Source 90 = HardStop[m
[36m[11:01:15.763767] [D] [thread 129823] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.763835] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.763918] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 4 belonging to query id: 1 stage id: 4[m
[36m[11:01:15.764000] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.764079] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 4[m
[36m[11:01:15.764099] [D] [thread 129821] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:1 stage id:4 reached prev=1[m
[36m[11:01:15.764277] [D] [thread 129823] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 27 is notifying completion: HardStop[m
[36m[11:01:15.764328] [D] [thread 129823] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 27 is terminated; tokens left = 12[m
[36m[11:01:15.764454] [D] [thread 129821] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 1 Pipeline 4 is terminated; tokens left = 11[m
[36m[11:01:15.764542] [D] [thread 129823] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 27 terminationType=HardStop[m
[36m[11:01:15.764547] [D] [thread 129821] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.764642] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.764701] [D] [thread 129821] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.764949] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.764954] [D] [thread 129821] [ExecutablePipeline.cpp:286] [postReconfigurationCallback] Going to reconfigure next pipeline belonging to subplanId: 1 stage id: 3 got EndOfStream  with nextPipeline[m
[36m[11:01:15.765193] [D] [thread 129823] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=27 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.765326] [D] [thread 129823] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
2023-11-01 11:01:15.775 postReconfigurationCallback: queryId=1, querySubPlanId=1; queryId=1 subPlanId=1 processedTasks=22488 processedTuple=67755 processedBuffers=22488 processedWatermarks=0 latencyAVG=1676399718653 queueSizeAVG=0 availableGlobalBufferAVG=830 availableFixedBufferAVG=62
[36m[11:01:15.765351] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:01:15.765364] [D] [thread 129823] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.765412] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.765490] [D] [thread 129821] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 0[m
[36m[11:01:15.765526] [D] [thread 129821] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[11:01:15.765534] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.765550] [D] [thread 129821] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::27::0::0[m
[36m[11:01:15.765579] [D] [thread 129821] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::27::0::0[m
[32m[11:01:15.765646] [I] [thread 129821] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(0)[m
[36m[11:01:15.765771] [D] [thread 129823] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 33 is notifying completion: HardStop[m
[36m[11:01:15.765819] [D] [thread 129823] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 33 is terminated; tokens left = 10[m
[36m[11:01:15.765849] [D] [thread 129823] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[11:01:15.765921] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.765923] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.765972] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.766013] [D] [thread 129821] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 9 and now is 8[m
[36m[11:01:15.766065] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.766273] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.766329] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.766337] [D] [thread 129823] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.766351] [D] [thread 129821] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 8 and now is 7[m
[36m[11:01:15.766396] [D] [thread 129823] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:01:15.766427] [D] [thread 129823] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.766471] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.766586] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.766607] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:01:15.766665] [D] [thread 129821] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[11:01:15.766694] [D] [thread 129821] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[11:01:15.766717] [D] [thread 129821] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[11:01:15.766741] [D] [thread 129821] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[36m[11:01:15.766795] [D] [thread 129823] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 39 is notifying completion: HardStop[m
[32m[11:01:15.766802] [I] [thread 129821] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[11:01:15.766844] [D] [thread 129823] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 39 is terminated; tokens left = 9[m
[36m[11:01:15.766874] [D] [thread 129823] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 39 terminationType=HardStop[m
[36m[11:01:15.766946] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.767057] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.767096] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.767147] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.767188] [D] [thread 129821] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 7 and now is 6[m
[36m[11:01:15.767239] [D] [thread 129823] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=39 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.767295] [D] [thread 129823] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:01:15.767324] [D] [thread 129823] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.767365] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.767400] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:01:15.767457] [D] [thread 129821] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 0[m
[36m[11:01:15.767462] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.767486] [D] [thread 129821] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[11:01:15.767508] [D] [thread 129821] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::39::0::0[m
[36m[11:01:15.767532] [D] [thread 129821] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::39::0::0[m
[32m[11:01:15.767588] [I] [thread 129821] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(0)[m
[36m[11:01:15.767655] [D] [thread 129823] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 45 is notifying completion: HardStop[m
[36m[11:01:15.767694] [D] [thread 129823] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 45 is terminated; tokens left = 8[m
[36m[11:01:15.767722] [D] [thread 129823] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 45 terminationType=HardStop[m
[36m[11:01:15.767788] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.767815] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.767861] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.767885] [D] [thread 129821] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 6 and now is 5[m
[36m[11:01:15.767891] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.768054] [D] [thread 129823] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=45 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.768078] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:01:15.768114] [D] [thread 129823] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:01:15.768134] [D] [thread 129821] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 0[m
[36m[11:01:15.768142] [D] [thread 129823] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.768162] [D] [thread 129821] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[11:01:15.768181] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.768184] [D] [thread 129821] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::45::0::0[m
[36m[11:01:15.768208] [D] [thread 129821] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::45::0::0[m
[32m[11:01:15.768263] [I] [thread 129821] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(0)[m
[36m[11:01:15.768282] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.768482] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.768480] [D] [thread 129823] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 51 is notifying completion: HardStop[m
[36m[11:01:15.768544] [D] [thread 129823] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 51 is terminated; tokens left = 7[m
[36m[11:01:15.768548] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.768572] [D] [thread 129821] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 5 and now is 4[m
[36m[11:01:15.768573] [D] [thread 129823] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[11:01:15.768652] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.768759] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.768812] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:01:15.768868] [D] [thread 129821] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[11:01:15.768898] [D] [thread 129821] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[11:01:15.768921] [D] [thread 129821] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[11:01:15.768934] [D] [thread 129823] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.768945] [D] [thread 129821] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[36m[11:01:15.768991] [D] [thread 129823] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[32m[11:01:15.769002] [I] [thread 129821] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[11:01:15.769020] [D] [thread 129823] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.769062] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.769275] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.769304] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.769357] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.769383] [D] [thread 129821] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 4 and now is 3[m
[36m[11:01:15.769544] [D] [thread 129823] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 57 is notifying completion: HardStop[m
[36m[11:01:15.769593] [D] [thread 129823] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 57 is terminated; tokens left = 6[m
[36m[11:01:15.769595] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[11:01:15.769626] [D] [thread 129823] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 57 terminationType=HardStop[m
[36m[11:01:15.769652] [D] [thread 129821] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 0[m
[36m[11:01:15.769684] [D] [thread 129821] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[11:01:15.769704] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.769729] [D] [thread 129821] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::57::0::0[m
[36m[11:01:15.769755] [D] [thread 129821] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::57::0::0[m
[32m[11:01:15.769811] [I] [thread 129821] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(0)[m
[36m[11:01:15.769813] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.770008] [D] [thread 129823] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=57 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.770040] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.770071] [D] [thread 129823] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:01:15.770084] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.770096] [D] [thread 129823] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.770103] [D] [thread 129821] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 3 and now is 2[m
[36m[11:01:15.770132] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.770284] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.770545] [D] [thread 129823] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 63 is notifying completion: HardStop[m
[36m[11:01:15.770590] [D] [thread 129823] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 63 is terminated; tokens left = 5[m
[36m[11:01:15.770616] [D] [thread 129823] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 63 terminationType=HardStop[m
[36m[11:01:15.770683] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.770796] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.770978] [D] [thread 129823] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=63 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.771033] [D] [thread 129823] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:01:15.771059] [D] [thread 129823] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0[m
[36m[11:01:15.771116] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.771230] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:01:15.771478] [D] [thread 129823] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 69 is notifying completion: HardStop[m
[36m[11:01:15.771482] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[11:01:15.771582] [D] [thread 129823] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 69 is terminated; tokens left = 4[m
[36m[11:01:15.771620] [D] [thread 129823] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 69 terminationType=HardStop[m
[36m[11:01:15.771623] [D] [thread 129821] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 0[m
[36m[11:01:15.771653] [D] [thread 129821] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[11:01:15.771674] [D] [thread 129821] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::63::0::0[m
[36m[11:01:15.771694] [D] [thread 129821] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::63::0::0[m
[36m[11:01:15.771705] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[32m[11:01:15.771752] [I] [thread 129821] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(0)[m
[36m[11:01:15.771837] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.772035] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.772039] [D] [thread 129823] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=69 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:01:15.772100] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.772117] [D] [thread 129823] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:01:15.772121] [D] [thread 129821] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 2 and now is 1[m
[36m[11:01:15.772384] [D] [thread 129821] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::69::0::0[m
[36m[11:01:15.772455] [D] [thread 129821] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::69::0::0 Thread 0[m
[36m[11:01:15.772481] [D] [thread 129821] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::69::0::0[m
[36m[11:01:15.772501] [D] [thread 129821] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::69::0::0[m
[36m[11:01:15.772521] [D] [thread 129821] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::69::0::0[m
[32m[11:01:15.772577] [I] [thread 129821] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::69::0::0; newCnt(0)[m
[36m[11:01:15.772813] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:01:15.772908] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:01:15.772926] [D] [thread 129821] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:1 stage id:3 reached prev=1[m
[36m[11:01:15.772969] [D] [thread 129821] [AbstractSlicePreAggregationHandler.cpp:116] [stop] shutdown AbstractSlicePreAggregationHandler: HardStop[m
[36m[11:01:15.773041] [D] [thread 129821] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 1 Pipeline 3 is terminated; tokens left = 3[m
[36m[11:01:15.773091] [D] [thread 129821] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.773206] [D] [thread 129821] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.773404] [D] [thread 129821] [ExecutablePipeline.cpp:286] [postReconfigurationCallback] Going to reconfigure next pipeline belonging to subplanId: 1 stage id: 2 got EndOfStream  with nextPipeline[m
[36m[11:01:15.773624] [D] [thread 129821] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 1 stage id: 2[m
[36m[11:01:15.773695] [D] [thread 129821] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 2[m
[36m[11:01:15.773713] [D] [thread 129821] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:1 stage id:2 reached prev=1[m
[36m[11:01:15.773737] [D] [thread 129821] [KeyedSliceMergingHandler.cpp:38] [stop] stop GlobalSliceMergingHandler: HardStop[m
[36m[11:01:15.773793] [D] [thread 129821] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 1 Pipeline 2 is terminated; tokens left = 2[m
[36m[11:01:15.773841] [D] [thread 129821] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.773938] [D] [thread 129821] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.774134] [D] [thread 129821] [ExecutablePipeline.cpp:293] [postReconfigurationCallback] Going to reconfigure next sink belonging to subplanId: 1 sink id: FileSink() got EndOfStream  with nextPipeline[m
[36m[11:01:15.774399] [D] [thread 129821] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:01:15.774518] [D] [thread 129821] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 1 Sink FileSink() is terminated; tokens left = 1[m
[36m[11:01:15.774575] [D] [thread 129821] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.774716] [D] [thread 129821] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:01:15.774952] [D] [thread 129821] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[11:01:15.775374] [D] [thread 129821] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=1[m
[36m[11:01:15.775410] [D] [thread 129821] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=1[m
[36m[11:01:15.775424] [D] [thread 129821] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-1 is marked as stopped now[m
[36m[11:01:15.775938] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Destroy[m
[36m[11:01:15.776128] [D] [thread 129823] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Destroy[m
[36m[11:01:15.776798] [D] [thread 129823] [DataSource.cpp:124] [~DataSource] DataSource 90: Destroy Data Source.[m
[36m[11:01:15.777155] [D] [thread 129823] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  1[m
[36m[11:01:15.777338] [D] [thread 129823] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 1 was successful[m
[36m[11:01:15.777367] [D] [thread 129823] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  1  succeeded[m
[36m[11:01:15.777386] [D] [thread 129823] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[11:01:15.945068] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:01:16.834524] [E] [thread 130620] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalError: signal [11] error [Success] callstack Stack trace (most recent call last) in thread 422622:
#21   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#20   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffa251b49b, in 
#19   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffffa28dd623, in start_thread
#18   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffffa26aff9b, in 
#17   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1c7173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#16   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1c72c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#15   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1c72ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#14   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1c7317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#13   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1c7363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#12   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1c7da7, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#11   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1c5d7b, in NES::Runtime::ThreadPool::runningRoutine(NES::Runtime::WorkerContext&&)
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1a714b, in NES::Runtime::DynamicQueryManager::processNextTask(bool, NES::Runtime::WorkerContext&)
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac1cbbcb, in NES::Runtime::Task::operator()(NES::Runtime::WorkerContext&)
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac259ed7, in NES::Network::NetworkSink::writeData(NES::Runtime::TupleBuffer&, NES::Runtime::WorkerContext&)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa45547ff, in NES::Runtime::WorkerContext::getNetworkChannel(unsigned long)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac260e2f, in std::unique_ptr<NES::Network::NetworkChannel, std::default_delete<NES::Network::NetworkChannel> >::get() const
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffac260e64, in std::__uniq_ptr_impl<NES::Network::NetworkChannel, std::default_delete<NES::Network::NetworkChannel> >::_M_ptr() const
#4    Object "[vdso: 422609]", at 0xffffafa17597, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa451744f, in NES::Runtime::detail::nesErrorHandler(int)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa2b7eb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa4518ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa4519c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[11:01:16.850550] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:16.851485] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:43477 went dead so we remove it[m
[32m[11:01:16.851629] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:01:16.851658] [W] [thread 129828] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[11:01:16.874324] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Connection reset by peer[m
[33m[1m[11:01:16.876155] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:43211 went dead so we remove it[m
[32m[11:01:16.876400] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[11:01:16.876445] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:16.876483] [I] [thread 129828] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:01:16.876501] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:01:16.876532] [I] [thread 129828] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:01:16.876556] [I] [thread 129828] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:01:16.876578] [I] [thread 129828] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:01:16.876599] [I] [thread 129828] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:01:16.876731] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[1m[41m[11:01:16.880505] [C] [thread 129811] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[11:01:16.880814] [I] [thread 129811] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[11:01:16.880848] [I] [thread 129811] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[11:01:16.880967] [W] [thread 129811] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[11:01:16.880990] [I] [thread 129811] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[11:01:16.881006] [W] [thread 129811] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[11:01:16.946309] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:01:17.076203] [E] [thread 130620] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 4 Reason for failure: onFatalException: exception=[Failed assertion on numberOfReservedBuffers == exclusiveBufferCount error message: one or more buffers were not returned to the pool: 124 but expected 128:: callstack:
Stack trace (most recent call last) in thread 435654:
#14   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#13   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff8016c49b, in 
#12   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff8052e623, in start_thread
#11   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff80300f9b, in 
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e18173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e182c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e182ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e18317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e18363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e18db3, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#4    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff821a4dd7, in NES::Runtime::WorkerContext::~WorkerContext()
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff821b3ccf, in NES::Runtime::LocalBufferPool::destroy()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff807cfb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff82169ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8216ac33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last) in thread 435654:
#14   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#13   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff8016c49b, in 
#12   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff8052e623, in start_thread
#11   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff80300f9b, in 
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e18173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e182c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e182ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e18317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e18363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff89e18db3, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#4    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff821a4dd7, in NES::Runtime::WorkerContext::~WorkerContext()
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff821b3ccf, in NES::Runtime::LocalBufferPool::destroy()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff807cfb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff82169ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8216ac33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[11:01:17.400556] [E] [thread 130610] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 5 Reason for failure: onFatalException: exception=[Failed assertion on numberOfReservedBuffers == exclusiveBufferCount error message: one or more buffers were not returned to the pool: 125 but expected 128:: callstack:
Stack trace (most recent call last) in thread 505393:
#14   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#13   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff89f8e49b, in 
#12   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff8a350623, in start_thread
#11   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff8a122f9b, in 
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a2c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a2ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3adb3, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#4    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8bfc6dd7, in NES::Runtime::WorkerContext::~WorkerContext()
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8bfd5ccf, in NES::Runtime::LocalBufferPool::destroy()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8a5f1b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8bf8bca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8bf8cc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last) in thread 505393:
#14   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#13   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff89f8e49b, in 
#12   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff8a350623, in start_thread
#11   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff8a122f9b, in 
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a2c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a2ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3a363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff93c3adb3, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#4    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8bfc6dd7, in NES::Runtime::WorkerContext::~WorkerContext()
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8bfd5ccf, in NES::Runtime::LocalBufferPool::destroy()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8a5f1b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8bf8bca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8bf8cc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[11:01:17.696468] [E] [thread 130610] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 6 Reason for failure: onFatalException: exception=[Failed assertion on numberOfReservedBuffers == exclusiveBufferCount error message: one or more buffers were not returned to the pool: 124 but expected 128:: callstack:
Stack trace (most recent call last) in thread 530648:
#14   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#13   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9c0c949b, in 
#12   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff9c48b623, in start_thread
#11   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff9c25df9b, in 
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d75173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d752c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d752ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d75317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d75363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d75db3, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#4    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9e101dd7, in NES::Runtime::WorkerContext::~WorkerContext()
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9e110ccf, in NES::Runtime::LocalBufferPool::destroy()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9c72cb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9e0c6ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9e0c7c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last) in thread 530648:
#14   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#13   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9c0c949b, in 
#12   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff9c48b623, in start_thread
#11   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff9c25df9b, in 
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d75173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d752c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d752ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d75317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d75363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa5d75db3, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#4    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9e101dd7, in NES::Runtime::WorkerContext::~WorkerContext()
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9e110ccf, in NES::Runtime::LocalBufferPool::destroy()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9c72cb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9e0c6ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9e0c7c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[11:01:17.947733] [D] [thread 129827] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:01:17.957314] [E] [thread 130610] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 7 Reason for failure: onFatalException: exception=[Failed assertion on numberOfReservedBuffers == exclusiveBufferCount error message: one or more buffers were not returned to the pool: 124 but expected 128:: callstack:
Stack trace (most recent call last) in thread 348121:
#14   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#13   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff97f2249b, in 
#12   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff982e4623, in start_thread
#11   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff980b6f9b, in 
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce2c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce2ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bcedb3, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#4    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff99f5add7, in NES::Runtime::WorkerContext::~WorkerContext()
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff99f69ccf, in NES::Runtime::LocalBufferPool::destroy()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff98585b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff99f1fca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff99f20c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last) in thread 348121:
#14   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#13   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff97f2249b, in 
#12   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff982e4623, in start_thread
#11   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff980b6f9b, in 
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce173, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce2c3, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce2ef, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce317, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bce363, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa1bcedb3, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#4    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff99f5add7, in NES::Runtime::WorkerContext::~WorkerContext()
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff99f69ccf, in NES::Runtime::LocalBufferPool::destroy()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff98585b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff99f1fca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff99f20c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[11:01:18.024325] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.025250] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:43477 went dead so we remove it[m
[32m[11:01:18.025391] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:01:18.025419] [W] [thread 129828] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[11:01:18.030318] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.031240] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:43211 went dead so we remove it[m
[32m[11:01:18.031388] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:01:18.031416] [W] [thread 129828] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[11:01:18.036536] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.037464] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:32925 went dead so we remove it[m
[32m[11:01:18.037613] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[32m[11:01:18.037637] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:18.037648] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:01:18.037671] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:01:18.042776] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.043710] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:34475 went dead so we remove it[m
[32m[11:01:18.043859] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[32m[11:01:18.043884] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:18.043895] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:01:18.043918] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:01:18.049055] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.049989] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:45093 went dead so we remove it[m
[32m[11:01:18.050135] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[32m[11:01:18.050160] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:18.050170] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:01:18.050239] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:01:18.055391] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.056328] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:33129 went dead so we remove it[m
[32m[11:01:18.056515] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=2][m
[32m[11:01:18.056541] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:18.056552] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:01:18.056631] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:01:18.061711] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.062696] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.36:41269 went dead so we remove it[m
[32m[11:01:18.062840] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=2][m
[32m[11:01:18.062864] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:18.062875] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:01:18.062898] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:01:18.068039] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.068976] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.37:38619 went dead so we remove it[m
[32m[11:01:18.069124] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=2][m
[32m[11:01:18.069149] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:18.069160] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:01:18.069182] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:01:18.074273] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.075225] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.38:45685 went dead so we remove it[m
[32m[11:01:18.075373] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=2][m
[32m[11:01:18.075398] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:18.075409] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:01:18.075432] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:01:18.080562] [E] [thread 129828] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:01:18.081491] [W] [thread 129828] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.39:38971 went dead so we remove it[m
[32m[11:01:18.081638] [I] [thread 129828] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=2][m
[32m[11:01:18.081662] [I] [thread 129828] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:01:18.081672] [I] [thread 129828] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:01:18.081696] [D] [thread 129828] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
