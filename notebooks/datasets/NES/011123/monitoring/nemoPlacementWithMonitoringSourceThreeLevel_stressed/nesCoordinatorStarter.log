
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[10:16:36.511196] [I] [thread 127666] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 1
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[10:16:36.511394] [I] [thread 127666] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[10:16:36.511646] [D] [thread 127666] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[10:16:36.512694] [D] [thread 127666] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[10:16:36.513055] [I] [thread 127666] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[10:16:36.513810] [D] [thread 127666] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[10:16:36.513884] [D] [thread 127666] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[10:16:36.514614] [D] [thread 127666] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[10:16:36.514729] [D] [thread 127666] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[10:16:36.514849] [D] [thread 127666] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[10:16:36.515181] [D] [thread 127666] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[10:16:36.515344] [D] [thread 127666] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[10:16:36.567717] [D] [thread 127666] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[10:16:36.567810] [D] [thread 127666] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:16:36.568295] [D] [thread 127666] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:16:36.568711] [D] [thread 127666] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:16:36.569045] [D] [thread 127666] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:16:36.569341] [D] [thread 127666] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:16:36.569524] [D] [thread 127666] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:16:36.569914] [D] [thread 127666] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[10:16:36.571147] [D] [thread 127666] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[10:16:36.571220] [D] [thread 127666] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[10:16:36.571501] [D] [thread 127666] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[10:16:36.571795] [D] [thread 127666] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[10:16:36.572105] [D] [thread 127666] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[10:16:36.573072] [D] [thread 127666] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[10:16:36.573563] [D] [thread 127666] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= true[m
[36m[10:16:36.573758] [D] [thread 127666] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[10:16:36.574016] [D] [thread 127666] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= true , storage= NewestEntry [m
[32m[10:16:36.574852] [I] [thread 127666] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedCpuMetrics[m
[32m[10:16:36.575377] [I] [thread 127666] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source DiskMetric[m
[32m[10:16:36.575884] [I] [thread 127666] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source MemoryMetric[m
[32m[10:16:36.576710] [I] [thread 127666] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedNetworkMetrics[m
[32m[10:16:36.576879] [I] [thread 127666] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[10:16:36.576912] [D] [thread 127666] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[10:16:36.577282] [D] [thread 127666] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[10:16:36.577299] [I] [thread 127674] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[10:16:36.577344] [D] [thread 127674] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:16:36.577751] [D] [thread 127675] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[10:16:36.584575] [D] [thread 127675] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[10:16:36.584604] [D] [thread 127666] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[10:16:36.584649] [D] [thread 127666] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[10:16:36.585055] [D] [thread 127666] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedCpuMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[36m[10:16:36.585120] [D] [thread 127666] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedCpuMetrics already exist.[m
[36m[10:16:36.585153] [D] [thread 127666] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedCpuMetrics[m
[36m[10:16:36.585317] [D] [thread 127666] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= DiskMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[36m[10:16:36.585339] [D] [thread 127666] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source DiskMetric already exist.[m
[36m[10:16:36.585352] [D] [thread 127666] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source DiskMetric[m
[36m[10:16:36.585519] [D] [thread 127666] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= MemoryMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[36m[10:16:36.585537] [D] [thread 127666] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source MemoryMetric already exist.[m
[36m[10:16:36.585567] [D] [thread 127666] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source MemoryMetric[m
[36m[10:16:36.585776] [D] [thread 127666] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedNetworkMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:16:36.585811] [D] [thread 127666] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedNetworkMetrics already exist.[m
[36m[10:16:36.585827] [D] [thread 127666] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedNetworkMetrics[m
[36m[10:16:36.585868] [D] [thread 127666] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[10:16:36.585877] [D] [thread 127666] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[10:16:36.586496] [D] [thread 127666] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[10:16:36.586657] [D] [thread 127666] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[10:16:36.586678] [D] [thread 127666] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[10:16:36.586705] [D] [thread 127666] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=true[m
[36m[10:16:36.586932] [D] [thread 127666] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[10:16:36.586998] [D] [thread 127666] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[10:16:36.587083] [I] [thread 127666] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:16:36.587619] [I] [thread 127666] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[10:16:36.587689] [I] [thread 127666] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:16:36.587912] [I] [thread 127666] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[10:16:36.587960] [I] [thread 127666] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:16:36.588412] [I] [thread 127666] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[10:16:36.588467] [I] [thread 127666] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:16:36.589108] [I] [thread 127666] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:16:36.589465] [D] [thread 127666] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[10:16:36.589710] [D] [thread 127666] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=true[m
[32m[10:16:36.589947] [I] [thread 127666] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config DiskMetric _ph with wait time 1000[m
[32m[10:16:36.590218] [I] [thread 127666] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config MemoryMetric _ph with wait time 1000[m
[32m[10:16:36.590321] [I] [thread 127666] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedCpuMetrics _ph with wait time 1000[m
[32m[10:16:36.590371] [I] [thread 127666] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedNetworkMetrics _ph with wait time 1000[m
[36m[10:16:36.601369] [D] [thread 127666] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975446528 available bytes[m
[36m[10:16:36.613151] [D] [thread 127666] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[10:16:36.664259] [D] [thread 127666] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[33m[1m[10:16:36.664683] [W] [thread 127666] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[10:16:36.664827] [D] [thread 127666] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:16:36.664955] [D] [thread 127666] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:16:36.665129] [D] [thread 127666] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:16:36.665198] [D] [thread 127666] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:16:36.665603] [D] [thread 127666] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[10:16:36.665717] [D] [thread 127666] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[10:16:36.666072] [D] [thread 127666] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[10:16:36.666348] [D] [thread 127666] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[10:16:36.666389] [W] [thread 127666] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[10:16:36.666449] [D] [thread 127666] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[10:16:36.669106] [D] [thread 127680] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[10:16:36.670813] [D] [thread 127680] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[10:16:36.670970] [D] [thread 127680] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 39449[m
[36m[10:16:36.672108] [D] [thread 127683] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 39449[m
[32m[10:16:36.672251] [I] [thread 127666] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:39449[m
[36m[10:16:36.672351] [D] [thread 127666] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1698944823  with numThreads= 1[m
[36m[10:16:36.672704] [D] [thread 127666] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[10:16:36.673273] [D] [thread 127666] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[10:16:36.673322] [D] [thread 127666] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[10:16:36.673364] [D] [thread 127684] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[10:16:36.673466] [D] [thread 127666] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[10:16:36.673499] [D] [thread 127666] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[10:16:36.673612] [D] [thread 127684] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[10:16:36.673985] [D] [thread 127685] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[10:16:36.674511] [D] [thread 127685] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[10:16:36.677444] [D] [thread 127685] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 34709[m
[36m[10:16:36.677476] [D] [thread 127666] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:34709: 34709[m
[36m[10:16:36.677507] [D] [thread 127666] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[10:16:36.677570] [D] [thread 127666] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[10:16:36.677676] [D] [thread 127666] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[10:16:36.679707] [D] [thread 127685] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[10:16:36.680149] [D] [thread 127666] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[32m[10:16:36.681101] [I] [thread 127666] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[36m[10:16:36.681163] [D] [thread 127666] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[10:16:36.684832] [D] [thread 127666] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 34709
dataPort: 39449
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1654686783
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:36.698114] [D] [thread 127676] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 34709
dataPort: 39449
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1654686783
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:36.698470] [D] [thread 127676] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 34709
dataPort: 39449
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1654686783
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:36.698621] [D] [thread 127676] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[10:16:36.698665] [W] [thread 127676] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[10:16:36.698761] [D] [thread 127676] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:16:36.698790] [D] [thread 127676] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:16:36.698837] [D] [thread 127676] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[10:16:36.699125] [D] [thread 127676] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[10:16:36.699267] [I] [thread 127676] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[10:16:36.699414] [D] [thread 127676] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:16:36.699740] [D] [thread 127676] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[10:16:36.699852] [I] [thread 127676] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:16:36.699886] [D] [thread 127676] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:16:36.699943] [D] [thread 127676] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:16:36.699959] [D] [thread 127676] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:16:36.699995] [D] [thread 127676] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:16:36.701388] [D] [thread 127676] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[10:16:36.703274] [D] [thread 127666] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[10:16:36.703355] [D] [thread 127666] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[10:16:36.703457] [D] [thread 127666] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[10:16:36.703473] [D] [thread 127666] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[10:16:36.737900] [D] [thread 127666] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[10:16:36.738093] [D] [thread 127666] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[10:16:36.738108] [D] [thread 127666] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[10:16:36.738680] [D] [thread 127666] [NesWorker.cpp:377] [connect] NesWorker: start with register source[m
[36m[10:16:36.738734] [D] [thread 127666] [NesWorker.cpp:458] [waitForConnect] NesWorker::waitForConnect()[m
[36m[10:16:36.738753] [D] [thread 127666] [NesWorker.cpp:462] [waitForConnect] waitForConnect: check connect[m
[36m[10:16:36.738760] [D] [thread 127666] [NesWorker.cpp:467] [waitForConnect] waitForConnect: connected[m
[36m[10:16:36.738793] [D] [thread 127666] [CoordinatorRPCClient.cpp:168] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources: got 4 physical sources to register for worker with id 1[m
[36m[10:16:36.739051] [D] [thread 127666] [CoordinatorRPCClient.cpp:180] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources request=workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[36m[10:16:36.741272] [D] [thread 127676] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:16:36.741370] [I] [thread 127676] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:16:36.741394] [D] [thread 127676] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:16:36.741478] [D] [thread 127676] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:16:36.741701] [D] [thread 127676] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:16:36.741753] [D] [thread 127676] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:16:36.741941] [D] [thread 127676] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:16:36.742005] [D] [thread 127676] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:36.742078] [D] [thread 127676] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:16:36.742128] [D] [thread 127676] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:16:36.742320] [D] [thread 127676] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:16:36.742357] [D] [thread 127676] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:16:36.742417] [D] [thread 127676] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:16:36.742433] [D] [thread 127676] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:36.742459] [D] [thread 127676] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:16:36.742489] [D] [thread 127676] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:16:36.742571] [D] [thread 127676] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:16:36.742594] [D] [thread 127676] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:16:36.742641] [D] [thread 127676] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:16:36.742657] [D] [thread 127676] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:36.742681] [D] [thread 127676] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:16:36.742707] [D] [thread 127676] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:16:36.742786] [D] [thread 127676] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:16:36.742811] [D] [thread 127676] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:16:36.742844] [D] [thread 127676] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:16:36.742857] [D] [thread 127676] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:36.742877] [D] [thread 127676] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:16:36.742888] [D] [thread 127676] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:16:36.744101] [D] [thread 127666] [CoordinatorRPCClient.cpp:129] [onSuccess] CoordinatorRPCClient::: status ok return success=true[m
[36m[10:16:36.744219] [D] [thread 127666] [NesWorker.cpp:419] [registerPhysicalSources] NesWorker::registerPhysicalSources success=true[m
[36m[10:16:36.744234] [D] [thread 127666] [NesWorker.cpp:379] [connect] registered= true[m
[36m[10:16:36.744277] [D] [thread 127666] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[10:16:36.744402] [D] [thread 127666] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[10:16:36.745018] [D] [thread 127666] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[10:16:36.745104] [I] [thread 127689] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[10:16:36.761031] [I] [thread 127689] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[10:16:36.761334] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:36.776762] [D] [thread 127666] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[10:16:36.776857] [D] [thread 127666] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[10:16:36.776928] [D] [thread 127666] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[10:16:36.777397] [D] [thread 127666] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[10:16:37.762483] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:38.763792] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:39.460081] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:39.461427] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:39.463600] [D] [thread 127692] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[10:16:39.466641] [D] [thread 127692] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[10:16:39.466760] [D] [thread 127692] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[10:16:39.466879] [D] [thread 127692] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));;}
}
[m
[36m[10:16:39.469447] [D] [thread 127693] [File.cpp:27] [createFile] Create File to file:///tmp/query_01-11-2023_10-16-39_6012015.cpp[m
[36m[10:16:39.470683] [D] [thread 127693] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:16:39.471481] [D] [thread 127693] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -o/tmp/query_01-11-2023_10-16-39_6012015.so -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_01-11-2023_10-16-39_6012015.cpp'[m
[36m[10:16:40.462677] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:16:41.218568] [I] [thread 127693] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1749.31277ms[m
[36m[10:16:41.220268] [D] [thread 127692] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[10:16:41.220471] [D] [thread 127692] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[10:16:41.220501] [D] [thread 127692] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[10:16:41.220550] [D] [thread 127692] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[10:16:41.463961] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:41.491597] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:41.492035] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:16:41.493044] [I] [thread 127699] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:16:41.494566] [I] [thread 127699] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:16:41.843091] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:41.843581] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:16:41.844797] [I] [thread 127700] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:16:41.845671] [I] [thread 127700] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:16:41.993054] [D] [thread 127687] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 40681
dataPort: 44031
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:16:41.993319] [D] [thread 127687] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 40681
dataPort: 44031
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:16:41.993395] [D] [thread 127687] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:16:41.993601] [D] [thread 127687] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:16:41.993631] [D] [thread 127687] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:16:41.993688] [D] [thread 127687] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[10:16:41.993848] [D] [thread 127687] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:16:41.993949] [I] [thread 127687] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:16:41.994155] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:41.994498] [D] [thread 127687] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[10:16:41.994812] [D] [thread 127687] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:16:41.995169] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:16:41.995292] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:16:41.995332] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:16:41.995381] [D] [thread 127687] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:16:41.995406] [D] [thread 127687] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:16:41.995434] [D] [thread 127687] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:16:41.996125] [D] [thread 127687] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[10:16:42.844851] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:43.846142] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:44.847484] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:44.950584] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:44.951033] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:16:44.952313] [I] [thread 127701] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:16:44.953302] [I] [thread 127701] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:16:45.093856] [D] [thread 127687] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 41205
dataPort: 36609
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:16:45.094103] [D] [thread 127687] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 41205
dataPort: 36609
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:16:45.094170] [D] [thread 127687] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:16:45.094480] [D] [thread 127687] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:16:45.094519] [D] [thread 127687] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:16:45.094576] [D] [thread 127687] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[10:16:45.094776] [D] [thread 127687] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:16:45.094866] [I] [thread 127687] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:16:45.094992] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:45.095088] [D] [thread 127687] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[10:16:45.095180] [D] [thread 127687] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:16:45.095407] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:16:45.095463] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:16:45.095488] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:16:45.095527] [D] [thread 127687] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:16:45.095547] [D] [thread 127687] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:16:45.095570] [D] [thread 127687] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:16:45.096096] [D] [thread 127687] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[10:16:45.952331] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:46.953640] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:47.954964] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:48.051220] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:48.051676] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:16:48.052613] [I] [thread 127702] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:16:48.054011] [I] [thread 127702] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:16:48.199316] [D] [thread 127687] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 40249
dataPort: 33777
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688657549
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:48.199566] [D] [thread 127687] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 40249
dataPort: 33777
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688657549
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:48.199634] [D] [thread 127687] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:16:48.199924] [D] [thread 127687] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:16:48.199951] [D] [thread 127687] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:16:48.200028] [D] [thread 127687] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[10:16:48.200177] [D] [thread 127687] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:16:48.200256] [I] [thread 127687] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:16:48.200383] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:48.200465] [D] [thread 127687] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[10:16:48.200559] [D] [thread 127687] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:16:48.200821] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:16:48.200879] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:16:48.200908] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:16:48.200946] [D] [thread 127687] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:16:48.200967] [D] [thread 127687] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:16:48.200991] [D] [thread 127687] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:16:48.201563] [D] [thread 127687] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[10:16:48.238537] [D] [thread 127687] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 4
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream3"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:16:48.238626] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:16:48.238654] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:16:48.238715] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= test_stream3 logical source= debs[m
[36m[10:16:48.238867] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:16:48.238899] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream3[m
[36m[10:16:48.238965] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream3 does not exist, try to add[m
[36m[10:16:48.238987] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:48.239038] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:16:48.239074] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:16:48.239163] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:16:48.239189] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:16:48.239250] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:16:48.239283] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:16:48.239300] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:48.239342] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:16:48.239374] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:16:48.239477] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:16:48.239508] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:16:48.239537] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:16:48.239561] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:16:48.239577] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:48.239602] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:16:48.239629] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:16:48.239703] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:16:48.239733] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:16:48.239763] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:48.239783] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:16:48.239798] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:48.239823] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:16:48.239852] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:16:48.239926] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:16:48.239952] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:16:48.239982] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:48.240013] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:16:48.240031] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:48.240056] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:16:48.240070] [D] [thread 127687] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:16:48.245586] [D] [thread 127703] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 2
[m
[36m[10:16:48.245706] [D] [thread 127703] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[10:16:48.245732] [I] [thread 127703] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:16:48.245756] [D] [thread 127703] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:16:48.245780] [D] [thread 127703] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[10:16:48.245794] [I] [thread 127703] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:16:48.245808] [D] [thread 127703] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:16:48.245825] [D] [thread 127703] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:16:48.245896] [D] [thread 127703] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:16:48.246026] [I] [thread 127703] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:48.246092] [D] [thread 127703] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:16:48.246115] [D] [thread 127703] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:16:48.246143] [D] [thread 127703] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 2[m
[32m[10:16:48.246175] [I] [thread 127703] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:16:48.246238] [D] [thread 127703] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:16:48.246262] [D] [thread 127703] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[10:16:48.246277] [I] [thread 127703] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:16:48.246291] [D] [thread 127703] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:16:48.246307] [D] [thread 127703] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:16:48.246414] [I] [thread 127703] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:16:48.246467] [D] [thread 127703] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:16:48.246698] [D] [thread 127703] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:16:48.246723] [D] [thread 127703] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:16:49.052924] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:50.054285] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:51.055593] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:51.123605] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:51.124107] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:16:51.125046] [I] [thread 127704] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:16:51.126813] [I] [thread 127704] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:16:51.264816] [D] [thread 127703] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 45351
dataPort: 33771
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688533452
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:51.265095] [D] [thread 127703] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 45351
dataPort: 33771
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688533452
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:51.265172] [D] [thread 127703] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:16:51.265551] [D] [thread 127703] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:16:51.265583] [D] [thread 127703] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:16:51.265644] [D] [thread 127703] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[10:16:51.265809] [D] [thread 127703] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:16:51.265896] [I] [thread 127703] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:16:51.266040] [I] [thread 127703] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:51.266126] [D] [thread 127703] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[10:16:51.266294] [D] [thread 127703] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:16:51.266660] [D] [thread 127703] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:16:51.266734] [I] [thread 127703] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:16:51.266767] [D] [thread 127703] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:16:51.266812] [D] [thread 127703] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:16:51.266835] [D] [thread 127703] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:16:51.266862] [D] [thread 127703] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:16:51.267472] [D] [thread 127703] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[10:16:51.304349] [D] [thread 127687] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:16:51.304457] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:16:51.304494] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:16:51.304569] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[10:16:51.304745] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:16:51.304787] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[10:16:51.304852] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:16:51.304883] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[10:16:51.304909] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:51.304952] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:16:51.304993] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:16:51.305086] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:16:51.305121] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:16:51.305160] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:16:51.305184] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:16:51.305206] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:16:51.305227] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:51.305259] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:16:51.305297] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:16:51.305380] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:16:51.305415] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:16:51.305450] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:16:51.305474] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:16:51.305498] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:16:51.305518] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:51.305548] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:16:51.305584] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:16:51.305679] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:16:51.305717] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:16:51.305760] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:51.305783] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:51.305808] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:16:51.305829] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:51.305863] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:16:51.305905] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:16:51.306020] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:16:51.306057] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:16:51.306099] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:51.306148] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:51.306177] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:16:51.306254] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:51.306312] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:16:51.306335] [D] [thread 127687] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:16:51.310001] [D] [thread 127687] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[10:16:51.310081] [D] [thread 127687] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[10:16:51.310107] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:16:51.310134] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:16:51.310159] [D] [thread 127687] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[10:16:51.310174] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:16:51.310232] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:16:51.310264] [D] [thread 127687] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:16:51.310335] [D] [thread 127687] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:16:51.310471] [I] [thread 127687] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:51.310508] [D] [thread 127687] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:16:51.310597] [D] [thread 127687] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:16:51.310626] [D] [thread 127687] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[10:16:51.310644] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:16:51.310664] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:16:51.310685] [D] [thread 127687] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[10:16:51.310700] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:16:51.310716] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:16:51.310734] [D] [thread 127687] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:16:51.310850] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:16:51.310907] [D] [thread 127687] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:16:51.311192] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:16:51.311273] [D] [thread 127687] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:16:52.125370] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:53.126691] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:54.087352] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:54.087879] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:16:54.088821] [I] [thread 127706] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:16:54.090870] [I] [thread 127706] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:16:54.234627] [D] [thread 127687] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 37269
dataPort: 46385
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688222677
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:54.234874] [D] [thread 127687] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 37269
dataPort: 46385
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688222677
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:54.234940] [D] [thread 127687] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:16:54.235319] [D] [thread 127687] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:16:54.235375] [D] [thread 127687] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:16:54.235451] [D] [thread 127687] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[10:16:54.235606] [D] [thread 127687] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:16:54.235684] [I] [thread 127687] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:16:54.235809] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:54.235885] [D] [thread 127687] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[10:16:54.235981] [D] [thread 127687] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:16:54.236321] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:16:54.236378] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:16:54.236407] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:16:54.236448] [D] [thread 127687] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:16:54.236469] [D] [thread 127687] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:16:54.236493] [D] [thread 127687] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:16:54.237037] [D] [thread 127687] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[10:16:54.273896] [D] [thread 127687] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:16:54.274020] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:16:54.274062] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:16:54.274152] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[10:16:54.274434] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:16:54.274528] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[10:16:54.274614] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:16:54.274651] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:16:54.274688] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[10:16:54.274721] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:54.274780] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:16:54.274858] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:16:54.275020] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:16:54.275070] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:16:54.275132] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:16:54.275166] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:16:54.275194] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:16:54.275226] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:16:54.275255] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:54.275287] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:16:54.275339] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:16:54.275469] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:16:54.275515] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:16:54.275568] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:16:54.275600] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:16:54.275628] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:16:54.275661] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:16:54.275689] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:54.275718] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:16:54.275768] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:16:54.275894] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:16:54.275940] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:16:54.275995] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:54.276027] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:54.276055] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:54.276086] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:16:54.276115] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:54.276146] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:16:54.276195] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:16:54.276324] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:16:54.276370] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:16:54.276423] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:54.276454] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:54.276482] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:54.276514] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:16:54.276542] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:54.276574] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:16:54.276597] [D] [thread 127687] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:16:54.281081] [D] [thread 127687] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[10:16:54.281138] [D] [thread 127687] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[10:16:54.281157] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:16:54.281196] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:16:54.281219] [D] [thread 127687] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[10:16:54.281230] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:16:54.281242] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:16:54.281256] [D] [thread 127687] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:16:54.281313] [D] [thread 127687] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:16:54.281433] [I] [thread 127687] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:54.281465] [D] [thread 127687] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:16:54.281482] [D] [thread 127687] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:16:54.281499] [D] [thread 127687] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[10:16:54.281513] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:16:54.281527] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:16:54.281543] [D] [thread 127687] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[10:16:54.281553] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:16:54.281564] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:16:54.281577] [D] [thread 127687] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:16:54.281659] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:16:54.281702] [D] [thread 127687] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:16:54.281945] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:16:54.281967] [D] [thread 127687] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:16:55.089207] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:56.090439] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:57.091709] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:57.251348] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:57.251742] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:16:57.252321] [I] [thread 127708] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:16:57.253703] [I] [thread 127708] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:16:57.408059] [D] [thread 127707] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 42061
dataPort: 44525
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688145712
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:57.408344] [D] [thread 127707] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 42061
dataPort: 44525
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688145712
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:16:57.408421] [D] [thread 127707] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:16:57.408897] [D] [thread 127707] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:16:57.408963] [D] [thread 127707] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:16:57.409051] [D] [thread 127707] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[10:16:57.409227] [D] [thread 127707] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:16:57.409316] [I] [thread 127707] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:16:57.409460] [I] [thread 127707] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:57.409544] [D] [thread 127707] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[10:16:57.409648] [D] [thread 127707] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:16:57.410135] [D] [thread 127707] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:16:57.410275] [I] [thread 127707] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:16:57.410318] [D] [thread 127707] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:16:57.410367] [D] [thread 127707] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:16:57.410392] [D] [thread 127707] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:16:57.410419] [D] [thread 127707] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:16:57.411028] [D] [thread 127707] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[10:16:57.449420] [D] [thread 127707] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:16:57.449544] [I] [thread 127707] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:16:57.449587] [D] [thread 127707] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:16:57.449676] [D] [thread 127707] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[10:16:57.449885] [D] [thread 127707] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:16:57.449939] [D] [thread 127707] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[10:16:57.450019] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:16:57.450055] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:16:57.450083] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:16:57.450118] [D] [thread 127707] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[10:16:57.450150] [D] [thread 127707] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:57.450185] [D] [thread 127707] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:16:57.450314] [D] [thread 127707] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:16:57.450451] [D] [thread 127707] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:16:57.450512] [D] [thread 127707] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:16:57.450577] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:16:57.450612] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:16:57.450640] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:16:57.450668] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:16:57.450703] [D] [thread 127707] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:16:57.450735] [D] [thread 127707] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:57.450788] [D] [thread 127707] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:16:57.450848] [D] [thread 127707] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:16:57.451001] [D] [thread 127707] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:16:57.451050] [D] [thread 127707] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:16:57.451109] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:16:57.451141] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:16:57.451169] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:16:57.451197] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:16:57.451230] [D] [thread 127707] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:16:57.451258] [D] [thread 127707] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:57.451342] [D] [thread 127707] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:16:57.451425] [D] [thread 127707] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:16:57.451596] [D] [thread 127707] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:16:57.451653] [D] [thread 127707] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:16:57.451718] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:57.451752] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:57.451780] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:57.451807] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:16:57.451840] [D] [thread 127707] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:16:57.451871] [D] [thread 127707] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:57.451921] [D] [thread 127707] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:16:57.451977] [D] [thread 127707] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:16:57.452129] [D] [thread 127707] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:16:57.452180] [D] [thread 127707] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:16:57.452240] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:57.452273] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:57.452301] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:57.452328] [D] [thread 127707] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:16:57.452360] [D] [thread 127707] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:16:57.452390] [D] [thread 127707] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:16:57.452439] [D] [thread 127707] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:16:57.452464] [D] [thread 127707] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:16:57.457086] [D] [thread 127709] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 2
[m
[36m[10:16:57.457172] [D] [thread 127709] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[10:16:57.457203] [I] [thread 127709] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:16:57.457238] [D] [thread 127709] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:16:57.457271] [D] [thread 127709] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[10:16:57.457291] [I] [thread 127709] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:16:57.457323] [D] [thread 127709] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:16:57.457350] [D] [thread 127709] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:16:57.457431] [D] [thread 127709] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:16:57.457598] [I] [thread 127709] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:16:57.457643] [D] [thread 127709] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:16:57.457671] [D] [thread 127709] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:16:57.457698] [D] [thread 127709] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 2[m
[32m[10:16:57.457720] [I] [thread 127709] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:16:57.457744] [D] [thread 127709] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:16:57.457770] [D] [thread 127709] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[10:16:57.457816] [I] [thread 127709] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:16:57.457840] [D] [thread 127709] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:16:57.457864] [D] [thread 127709] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:16:57.458008] [I] [thread 127709] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:16:57.458061] [D] [thread 127709] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:16:57.458646] [D] [thread 127709] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:16:57.458697] [D] [thread 127709] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:16:58.252993] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:16:59.254361] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:00.255641] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:00.507686] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:00.508086] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:17:00.508762] [I] [thread 127710] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:17:00.511186] [I] [thread 127710] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:17:00.658726] [D] [thread 127687] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.36"
grpcPort: 36639
dataPort: 39209
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688785024
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:17:00.658922] [D] [thread 127687] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.36"
grpcPort: 36639
dataPort: 39209
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688785024
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:17:00.658970] [D] [thread 127687] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:17:00.659291] [D] [thread 127687] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:17:00.659331] [D] [thread 127687] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:17:00.659386] [D] [thread 127687] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[10:17:00.659496] [D] [thread 127687] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:17:00.659539] [I] [thread 127687] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:17:00.659616] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:17:00.659671] [D] [thread 127687] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[10:17:00.659742] [D] [thread 127687] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:17:00.659970] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:17:00.660034] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:17:00.660053] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:17:00.660082] [D] [thread 127687] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:17:00.660092] [D] [thread 127687] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:17:00.660108] [D] [thread 127687] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:17:00.660546] [D] [thread 127687] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[10:17:00.699294] [D] [thread 127687] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:17:00.699422] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:17:00.699466] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:17:00.699559] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[10:17:00.699772] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:17:00.699824] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[10:17:00.699906] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:17:00.699942] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:17:00.699971] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:17:00.699999] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:17:00.700035] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[10:17:00.700068] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:00.700125] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:17:00.700181] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:17:00.700310] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:17:00.700388] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:17:00.700452] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:17:00.700488] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:17:00.700517] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:17:00.700545] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:17:00.700572] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:17:00.700606] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:17:00.700659] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:00.700695] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:17:00.700753] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:17:00.700919] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:17:00.700970] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:17:00.701032] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:17:00.701066] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:17:00.701094] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:17:00.701122] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:17:00.701150] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:17:00.701183] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:17:00.701214] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:00.701245] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:17:00.701295] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:17:00.701428] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:17:00.701476] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:17:00.701562] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:00.701598] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:00.701627] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:00.701669] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:00.701700] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:00.701735] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:17:00.701768] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:00.701803] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:17:00.701858] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:17:00.702019] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:17:00.702067] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:17:00.702125] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:00.702157] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:00.702185] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:00.702274] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:00.702304] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:00.702359] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:17:00.702395] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:00.702431] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:17:00.702455] [D] [thread 127687] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:17:00.706907] [D] [thread 127687] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[10:17:00.706983] [D] [thread 127687] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[10:17:00.707040] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:17:00.707078] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:17:00.707110] [D] [thread 127687] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[10:17:00.707131] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:17:00.707175] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:17:00.707205] [D] [thread 127687] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:17:00.707287] [D] [thread 127687] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:17:00.707450] [I] [thread 127687] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:17:00.707496] [D] [thread 127687] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:17:00.707523] [D] [thread 127687] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:17:00.707552] [D] [thread 127687] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[10:17:00.707575] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:17:00.707599] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:17:00.707626] [D] [thread 127687] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[10:17:00.707646] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:17:00.707667] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:17:00.707692] [D] [thread 127687] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:17:00.707810] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:17:00.707875] [D] [thread 127687] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:17:00.708375] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:17:00.708454] [D] [thread 127687] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:17:01.509478] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:02.510922] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:03.512239] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:03.694081] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:03.694647] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:17:03.695622] [I] [thread 127715] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:17:03.698491] [I] [thread 127715] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:17:03.841180] [D] [thread 127687] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 46763
dataPort: 33129
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688893553
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:17:03.841450] [D] [thread 127687] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 46763
dataPort: 33129
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688893553
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:17:03.841529] [D] [thread 127687] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:17:03.842471] [D] [thread 127687] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:17:03.842544] [D] [thread 127687] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:17:03.842640] [D] [thread 127687] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[10:17:03.842814] [D] [thread 127687] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:17:03.842943] [I] [thread 127687] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:17:03.843298] [I] [thread 127687] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:17:03.843486] [D] [thread 127687] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[10:17:03.843675] [D] [thread 127687] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:17:03.844597] [D] [thread 127687] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:17:03.844873] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:17:03.844915] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:17:03.844965] [D] [thread 127687] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:17:03.844989] [D] [thread 127687] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:17:03.845015] [D] [thread 127687] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:17:03.846083] [D] [thread 127687] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[10:17:03.883193] [D] [thread 127687] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:17:03.883280] [I] [thread 127687] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:17:03.883307] [D] [thread 127687] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:17:03.883369] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[10:17:03.883518] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:17:03.883551] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[10:17:03.883606] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:17:03.883656] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:17:03.883683] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:17:03.883699] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:17:03.883714] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:17:03.883735] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[10:17:03.883771] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:03.883864] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:17:03.883945] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:17:03.884160] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:17:03.884278] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:17:03.884494] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:17:03.884529] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:17:03.884651] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:17:03.884692] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:17:03.884761] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:17:03.884781] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:17:03.884867] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:17:03.884918] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:03.885008] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:17:03.885181] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:17:03.885548] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:17:03.885655] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:17:03.885790] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:17:03.886553] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:17:03.886638] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:17:03.886661] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:17:03.886677] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:17:03.886692] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:17:03.886719] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:17:03.886749] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:03.886774] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:17:03.886839] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:17:03.887172] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:17:03.887258] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:17:03.887377] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:03.887439] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:03.887464] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:03.887495] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:03.887566] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:03.887615] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:03.887676] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:17:03.887713] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:03.887834] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:17:03.887935] [D] [thread 127687] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:17:03.888169] [D] [thread 127687] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:17:03.888255] [D] [thread 127687] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:17:03.888392] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:03.888473] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:03.888513] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:03.888571] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:03.888607] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:03.888640] [D] [thread 127687] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:03.888703] [D] [thread 127687] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:17:03.888740] [D] [thread 127687] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:03.888803] [D] [thread 127687] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:17:03.888828] [D] [thread 127687] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:17:03.893130] [D] [thread 127716] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 3
[m
[36m[10:17:03.893225] [D] [thread 127716] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[10:17:03.893247] [I] [thread 127716] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:17:03.893269] [D] [thread 127716] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:17:03.893289] [D] [thread 127716] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[10:17:03.893300] [I] [thread 127716] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:17:03.893311] [D] [thread 127716] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:17:03.893325] [D] [thread 127716] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:17:03.893384] [D] [thread 127716] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:17:03.893496] [I] [thread 127716] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:17:03.893524] [D] [thread 127716] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:17:03.893541] [D] [thread 127716] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:17:03.893558] [D] [thread 127716] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 3[m
[32m[10:17:03.893570] [I] [thread 127716] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:17:03.893584] [D] [thread 127716] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:17:03.893598] [D] [thread 127716] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[10:17:03.893609] [I] [thread 127716] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:17:03.893620] [D] [thread 127716] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:17:03.893634] [D] [thread 127716] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:17:03.893710] [I] [thread 127716] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:17:03.893754] [D] [thread 127716] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:17:03.894079] [D] [thread 127716] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:17:03.894102] [D] [thread 127716] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:17:04.695934] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:05.697226] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:06.698552] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:06.790858] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:06.791372] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:17:06.792189] [I] [thread 127717] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:17:06.794792] [I] [thread 127717] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:17:07.026010] [D] [thread 127711] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 39503
dataPort: 38007
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689011020
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:17:07.026573] [D] [thread 127711] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 39503
dataPort: 38007
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689011020
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:17:07.026677] [D] [thread 127711] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:17:07.027376] [D] [thread 127711] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:17:07.027459] [D] [thread 127711] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:17:07.027563] [D] [thread 127711] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[10:17:07.027746] [D] [thread 127711] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:17:07.027817] [I] [thread 127711] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:17:07.027888] [I] [thread 127711] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:17:07.028012] [D] [thread 127711] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[10:17:07.028084] [D] [thread 127711] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:17:07.028391] [D] [thread 127711] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:17:07.028452] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:17:07.028473] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:17:07.028501] [D] [thread 127711] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:17:07.028512] [D] [thread 127711] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:17:07.028527] [D] [thread 127711] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:17:07.028921] [D] [thread 127711] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[10:17:07.066143] [D] [thread 127711] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:17:07.066344] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:17:07.066391] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:17:07.066479] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[10:17:07.066686] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:17:07.066739] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[10:17:07.066819] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:17:07.066853] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:17:07.066882] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:17:07.066908] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:17:07.066936] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:17:07.066962] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:17:07.066997] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[10:17:07.067029] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:07.067066] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:17:07.067137] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:17:07.067279] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:17:07.067326] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:17:07.067384] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:17:07.067434] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:17:07.067470] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:17:07.067497] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:17:07.067524] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:17:07.067552] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:17:07.067593] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[10:17:07.067631] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:17:07.067665] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:07.067698] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:17:07.067756] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:17:07.067911] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:17:07.067966] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:17:07.068027] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:17:07.068059] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:17:07.068087] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:17:07.068114] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:17:07.068141] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:17:07.068197] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:17:07.068227] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[10:17:07.068265] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:17:07.068297] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:07.068357] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:17:07.068419] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:17:07.068584] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:17:07.068649] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:17:07.068712] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:07.068745] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:07.068774] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:07.068802] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:07.068830] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:07.068858] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:07.068885] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:07.068919] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:17:07.068950] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:07.068984] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:17:07.069037] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:17:07.069268] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:17:07.069328] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:17:07.069392] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:07.069425] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:07.069453] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:07.069481] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:07.069509] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:07.069536] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:07.069563] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:07.069599] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:17:07.069630] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:07.069664] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:17:07.069690] [D] [thread 127711] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:17:07.074400] [D] [thread 127711] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 3
[m
[36m[10:17:07.074514] [D] [thread 127711] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[10:17:07.074588] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:17:07.074649] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:17:07.074690] [D] [thread 127711] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[10:17:07.074702] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:17:07.074768] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:17:07.074845] [D] [thread 127711] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:17:07.074970] [D] [thread 127711] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:17:07.075214] [I] [thread 127711] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:17:07.075261] [D] [thread 127711] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:17:07.075323] [D] [thread 127711] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:17:07.075403] [D] [thread 127711] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 3[m
[32m[10:17:07.075423] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:17:07.075482] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:17:07.075537] [D] [thread 127711] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[10:17:07.075568] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:17:07.075630] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:17:07.075680] [D] [thread 127711] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:17:07.075870] [I] [thread 127711] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:17:07.075994] [D] [thread 127711] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:17:07.076615] [D] [thread 127711] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:17:07.076685] [D] [thread 127711] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:17:07.792785] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:08.794290] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:09.822343] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:10.139751] [D] [thread 127711] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.39"
grpcPort: 46225
dataPort: 46229
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688955215
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:17:10.140044] [D] [thread 127711] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.39"
grpcPort: 46225
dataPort: 46229
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688955215
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:17:10.140116] [D] [thread 127711] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:17:10.140693] [D] [thread 127711] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:17:10.140749] [D] [thread 127711] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:17:10.140828] [D] [thread 127711] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 11 and resources 65535[m
[36m[10:17:10.140984] [D] [thread 127711] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:17:10.141063] [I] [thread 127711] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:17:10.141188] [I] [thread 127711] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:17:10.141264] [D] [thread 127711] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 11[m
[36m[10:17:10.141361] [D] [thread 127711] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:17:10.141892] [D] [thread 127711] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:17:10.141981] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:17:10.142013] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:17:10.142055] [D] [thread 127711] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:17:10.142076] [D] [thread 127711] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:17:10.142100] [D] [thread 127711] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:17:10.142710] [D] [thread 127711] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=11[m
[36m[10:17:10.179417] [D] [thread 127711] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 11
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream10"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:17:10.179531] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:17:10.179569] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:17:10.179649] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= test_stream10 logical source= debs[m
[36m[10:17:10.179840] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:17:10.179886] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream10[m
[36m[10:17:10.179960] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:17:10.179990] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:17:10.180039] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:17:10.180065] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:17:10.180088] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:17:10.180110] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:17:10.180133] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=test_stream9[m
[36m[10:17:10.180165] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream10 does not exist, try to add[m
[36m[10:17:10.180196] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:10.180228] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:17:10.180276] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:17:10.180396] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:17:10.180438] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:17:10.180486] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:17:10.180529] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:17:10.180556] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:17:10.180580] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:17:10.180604] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:17:10.180628] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:17:10.180661] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[10:17:10.180688] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=DiskMetric_ph[m
[36m[10:17:10.180718] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:17:10.180746] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:10.180800] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:17:10.180853] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:17:10.180986] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:17:10.181030] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:17:10.181083] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:17:10.181110] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:17:10.181134] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:17:10.181182] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:17:10.181209] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:17:10.181233] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:17:10.181256] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[10:17:10.181280] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=MemoryMetric_ph[m
[36m[10:17:10.181310] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:17:10.181337] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:10.181383] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:17:10.181432] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:17:10.181553] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:17:10.181596] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:17:10.181645] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:10.181697] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:10.181725] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:10.181750] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:10.181773] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:10.181804] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:10.181828] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:10.181852] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedCpuMetrics_ph[m
[36m[10:17:10.181883] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:17:10.181910] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:10.181972] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:17:10.182025] [D] [thread 127711] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:17:10.182242] [D] [thread 127711] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:17:10.182298] [D] [thread 127711] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:17:10.182360] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:10.182387] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:10.182412] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:10.182436] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:10.182459] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:10.182483] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:10.182507] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:10.182553] [D] [thread 127711] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:17:10.182588] [D] [thread 127711] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:17:10.182617] [D] [thread 127711] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:17:10.182666] [D] [thread 127711] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:17:10.182692] [D] [thread 127711] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:17:10.186956] [D] [thread 127711] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 11
oldParent: 1
newParent: 3
[m
[36m[10:17:10.187024] [D] [thread 127711] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 11  parentId= 1[m
[32m[10:17:10.187050] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:17:10.187080] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:17:10.187109] [D] [thread 127711] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  11  exists[m
[32m[10:17:10.187126] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:17:10.187163] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:17:10.187189] [D] [thread 127711] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:17:10.187263] [D] [thread 127711] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:17:10.187408] [I] [thread 127711] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:17:10.187450] [D] [thread 127711] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:17:10.187473] [D] [thread 127711] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:17:10.187498] [D] [thread 127711] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 11  parentId= 3[m
[32m[10:17:10.187518] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:17:10.187540] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:17:10.187563] [D] [thread 127711] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 11 exists[m
[32m[10:17:10.187580] [I] [thread 127711] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:17:10.187598] [D] [thread 127711] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:17:10.187618] [D] [thread 127711] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:17:10.187739] [I] [thread 127711] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:17:10.187784] [D] [thread 127711] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:17:10.188328] [D] [thread 127711] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:17:10.188362] [D] [thread 127711] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:17:10.611195] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:10.611584] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:17:10.612179] [I] [thread 127720] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:17:10.615639] [I] [thread 127720] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:17:11.612886] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:12.286307] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:12.287033] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:12.443758] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:12.444552] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:12.446520] [D] [thread 127725] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[10:17:12.446652] [I] [thread 127725] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[10:17:12.446685] [I] [thread 127725] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[10:17:12.446740] [D] [thread 127725] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[10:17:12.446845] [D] [thread 127725] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "WrappedNetworkMetrics"[m
[36m[10:17:12.446918] [D] [thread 127725] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));[m
[36m[10:17:12.447053] [D] [thread 127725] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));
}
}
[m
[36m[10:17:12.448614] [D] [thread 127726] [File.cpp:27] [createFile] Create File to file:///tmp/query_01-11-2023_10-17-12_8730539.cpp[m
[36m[10:17:12.449201] [D] [thread 127726] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:17:12.449289] [D] [thread 127726] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[10:17:12.449655] [D] [thread 127726] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -o/tmp/query_01-11-2023_10-17-12_8730539.so -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_01-11-2023_10-17-12_8730539.cpp'[m
[36m[10:17:13.445822] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:14.446335] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:17:15.345031] [I] [thread 127726] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2896.520632ms[m
[36m[10:17:15.345497] [D] [thread 127725] [Query.cpp:231] [from] Query: create new Query with source WrappedNetworkMetrics[m
[36m[10:17:15.345549] [D] [thread 127725] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  WrappedNetworkMetrics[m
[32m[10:17:15.345810] [I] [thread 127725] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.347071] [D] [thread 127725] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[10:17:15.347573] [D] [thread 127725] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[10:17:15.348017] [I] [thread 127725] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.348233] [D] [thread 127725] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[10:17:15.348431] [D] [thread 127725] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.348482] [D] [thread 127725] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:17:15.349006] [I] [thread 127725] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[10:17:15.349222] [D] [thread 127725] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Avg;) as new root of the plan.[m
[36m[10:17:15.349362] [D] [thread 127725] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.349379] [D] [thread 127725] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.349596] [D] [thread 127725] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[10:17:15.349728] [I] [thread 127725] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:17:15.349845] [D] [thread 127725] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[10:17:15.349978] [D] [thread 127725] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.349995] [D] [thread 127725] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.350960] [D] [thread 127725] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.351159] [D] [thread 127725] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.351318] [D] [thread 127725] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.351477] [D] [thread 127725] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.351548] [D] [thread 127725] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.351581] [D] [thread 127725] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.351685] [D] [thread 127725] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:17:15.351736] [D] [thread 127725] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.351771] [D] [thread 127725] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.351798] [D] [thread 127725] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.352463] [D] [thread 127725] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source WrappedNetworkMetrics with schema: WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.352499] [D] [thread 127725] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.352617] [D] [thread 127725] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.353727] [D] [thread 127725] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.354521] [D] [thread 127725] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:17:15.355049] [I] [thread 127725] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[10:17:15.355759] [I] [thread 127725] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[10:17:15.355952] [I] [thread 127725] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:17:15.356014] [I] [thread 127674] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:17:15.356137] [I] [thread 127674] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:17:15.356176] [I] [thread 127674] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:17:15.356460] [I] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[10:17:15.356592] [D] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:17:15.356622] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.356694] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.356744] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.356803] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.356847] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.357736] [D] [thread 127674] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.358318] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.358405] [D] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:17:15.358430] [D] [thread 127674] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:17:15.358666] [D] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[10:17:15.358692] [I] [thread 127674] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:17:15.358888] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:17:15.359223] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:17:15.359554] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:17:15.359781] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.360118] [D] [thread 127674] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[10:17:15.360455] [D] [thread 127674] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.360691] [D] [thread 127674] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[10:17:15.360829] [I] [thread 127674] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.360966] [D] [thread 127674] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:17:15.360993] [I] [thread 127674] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:17:15.361168] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:17:15.361338] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:17:15.361553] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:17:15.361789] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.362033] [D] [thread 127674] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[10:17:15.362300] [I] [thread 127674] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.362374] [D] [thread 127674] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:17:15.362388] [I] [thread 127674] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:17:15.362483] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:17:15.362631] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:17:15.362837] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:17:15.363015] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.363216] [D] [thread 127674] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[10:17:15.363361] [I] [thread 127674] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[10:17:15.363498] [I] [thread 127674] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.363648] [D] [thread 127674] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[10:17:15.363776] [D] [thread 127674] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.363863] [D] [thread 127674] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.363972] [D] [thread 127674] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[10:17:15.364071] [D] [thread 127674] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.364153] [D] [thread 127674] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.364261] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.364309] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.364358] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.364404] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.364440] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.365189] [D] [thread 127674] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.365639] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:17:15.365713] [I] [thread 127674] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[10:17:15.365888] [I] [thread 127674] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:17:15.365921] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.366013] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.366055] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[10:17:15.366750] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.366841] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.366940] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.366960] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.366995] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.367209] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:17:15.367696] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.367772] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.367848] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.367864] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.367893] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.368060] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:17:15.368325] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.368391] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.368481] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.368499] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.368527] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.368707] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:17:15.369024] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.369085] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.369145] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.369160] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.369233] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.369410] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:17:15.369680] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.369741] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.369800] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.369814] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.369863] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.370023] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:17:15.370341] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.370417] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.370490] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.370505] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.370533] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.370707] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:17:15.370988] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.371053] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.371115] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.371130] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.371156] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.371349] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:17:15.371645] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.371708] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.371776] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.371798] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.371827] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.371989] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:17:15.372272] [I] [thread 127674] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:17:15.372332] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:17:15.372395] [D] [thread 127674] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:17:15.372410] [D] [thread 127674] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:17:15.372436] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:17:15.372617] [D] [thread 127674] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[10:17:15.373230] [D] [thread 127674] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[32m[10:17:15.373343] [I] [thread 127674] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[10:17:15.373626] [D] [thread 127674] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.373952] [D] [thread 127674] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[10:17:15.374314] [D] [thread 127674] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.374383] [D] [thread 127674] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[10:17:15.374667] [D] [thread 127674] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.375049] [D] [thread 127674] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[10:17:15.375126] [D] [thread 127674] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[10:17:15.375176] [D] [thread 127674] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:17:15.375295] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:17:15.375318] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:17:15.375351] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:17:15.375362] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[10:17:15.375726] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:17:15.375769] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[10:17:15.375943] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:17:15.375973] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[10:17:15.376071] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:17:15.376086] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[10:17:15.376157] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:17:15.376171] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[10:17:15.376283] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:17:15.376300] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[10:17:15.376377] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:17:15.376391] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[10:17:15.376464] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:17:15.376478] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[10:17:15.376971] [I] [thread 127674] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:17:15.377045] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377058] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377068] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377078] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377087] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377096] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377106] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377115] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377123] [I] [thread 127674] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:15.377143] [I] [thread 127674] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:17:15.377155] [I] [thread 127674] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:17:15.377163] [I] [thread 127674] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:17:15.377291] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:17:15.377537] [D] [thread 127674] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(23) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:17:15.377886] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[10:17:15.378008] [D] [thread 127674] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[10:17:15.378589] [D] [thread 127674] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.378950] [D] [thread 127674] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.379198] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.379306] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.379378] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[10:17:15.379441] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.379484] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.380895] [D] [thread 127674] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:17:15.381205] [I] [thread 127674] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:17:15.381326] [I] [thread 127674] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.382716] [D] [thread 127674] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:17:15.383005] [I] [thread 127674] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:17:15.383124] [I] [thread 127674] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.383254] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.384063] [D] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:17:15.384114] [D] [thread 127674] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:17:15.384442] [D] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:17:15.384551] [D] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[10:17:15.384571] [D] [thread 127674] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[10:17:15.384627] [I] [thread 127674] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[10:17:15.384667] [I] [thread 127674] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:17:15.384774] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:17:15.384936] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[10:17:15.385267] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[10:17:15.385487] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[10:17:15.385657] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[10:17:15.385840] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[10:17:15.386011] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[10:17:15.386164] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[10:17:15.386356] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[10:17:15.386523] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[10:17:15.386686] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[10:17:15.386849] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[10:17:15.387102] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[10:17:15.387307] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[10:17:15.387490] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[10:17:15.387665] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[10:17:15.387838] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[10:17:15.388036] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[10:17:15.388232] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[10:17:15.388889] [D] [thread 127674] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:17:15.388948] [D] [thread 127674] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:17:15.389009] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389053] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389078] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389114] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389140] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389168] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389192] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389223] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389247] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389268] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389289] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389310] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389328] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.389359] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389373] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.389408] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389421] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.389442] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389455] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.389472] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389483] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.389505] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389517] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.389535] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389546] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.389575] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.389589] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.390877] [D] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:17:15.390935] [D] [thread 127674] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:17:15.391011] [D] [thread 127674] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:17:15.391030] [D] [thread 127674] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:17:15.391050] [D] [thread 127674] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[10:17:15.391063] [D] [thread 127674] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[10:17:15.391089] [I] [thread 127674] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[10:17:15.391677] [D] [thread 127674] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.391738] [D] [thread 127674] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:17:15.391754] [D] [thread 127674] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:17:15.391813] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.391857] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.391879] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.391901] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.391922] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.391943] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.391967] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.391990] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392011] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392032] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392052] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392087] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392103] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.392136] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392149] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.392175] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392188] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.392210] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392222] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.392239] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392258] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.392284] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392297] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.392315] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392327] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.392343] [D] [thread 127674] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:17:15.392355] [D] [thread 127674] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:17:15.392577] [D] [thread 127674] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[10:17:15.392638] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:17:15.392668] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[10:17:15.392747] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:17:15.392761] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[10:17:15.392797] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:17:15.392809] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[10:17:15.392830] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:17:15.392841] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[10:17:15.392858] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:17:15.392869] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[10:17:15.392901] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:17:15.392914] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[10:17:15.392932] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:17:15.392942] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[10:17:15.392961] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:17:15.392972] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[10:17:15.392993] [I] [thread 127674] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:17:15.393004] [D] [thread 127674] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:17:15.393073] [I] [thread 127674] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[10:17:15.393284] [D] [thread 127674] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:17:15.393441] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.393552] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.393643] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.393819] [D] [thread 127674] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:17:15.393881] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.393946] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.394019] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.394146] [D] [thread 127674] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:17:15.394285] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.394365] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.394447] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.394584] [D] [thread 127674] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:17:15.394643] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.394727] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.394805] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.394917] [D] [thread 127674] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:17:15.394969] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395028] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395096] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395208] [D] [thread 127674] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:17:15.395290] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395354] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395426] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395534] [D] [thread 127674] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:17:15.395586] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395644] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395757] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.395882] [D] [thread 127674] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:17:15.395938] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.396000] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.396072] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[10:17:15.396123] [I] [thread 127674] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 8 sub-graphs to create a single sub-graph[m
[36m[10:17:15.396134] [D] [thread 127674] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[10:17:15.396566] [D] [thread 127674] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[10:17:15.396583] [D] [thread 127674] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:17:15.396647] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.396661] [D] [thread 127674] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:17:15.396688] [D] [thread 127674] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:17:15.396822] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.396924] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.396965] [D] [thread 127674] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:17:15.397015] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.397026] [D] [thread 127674] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:17:15.397054] [D] [thread 127674] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:17:15.397101] [W] [thread 127674] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:17:15.397116] [D] [thread 127674] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:17:15.397163] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.397174] [D] [thread 127674] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:17:15.397195] [D] [thread 127674] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:17:15.397267] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.397328] [D] [thread 127674] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:17:15.397404] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.397419] [D] [thread 127674] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:17:15.397437] [D] [thread 127674] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:17:15.397485] [W] [thread 127674] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:17:15.397500] [D] [thread 127674] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:17:15.397547] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.397559] [D] [thread 127674] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:17:15.397584] [D] [thread 127674] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:17:15.397628] [W] [thread 127674] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:17:15.397655] [D] [thread 127674] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:17:15.397707] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.397721] [D] [thread 127674] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:17:15.397737] [D] [thread 127674] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:17:15.397782] [W] [thread 127674] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:17:15.397797] [D] [thread 127674] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:17:15.397856] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.397877] [D] [thread 127674] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:17:15.397896] [D] [thread 127674] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:17:15.397944] [W] [thread 127674] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:17:15.397959] [D] [thread 127674] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:17:15.398010] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:17:15.398023] [D] [thread 127674] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:17:15.398039] [D] [thread 127674] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:17:15.398082] [W] [thread 127674] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:17:15.398165] [D] [thread 127674] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:17:15.398180] [D] [thread 127674] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[10:17:15.398262] [D] [thread 127674] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:17:15.398276] [D] [thread 127674] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[10:17:15.398300] [D] [thread 127674] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:17:15.398309] [D] [thread 127674] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[10:17:15.398335] [D] [thread 127674] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:17:15.398531] [D] [thread 127674] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[10:17:15.398644] [D] [thread 127674] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:17:15.398721] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:17:15.398755] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.398814] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[10:17:15.398830] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.398902] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:17:15.398918] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.398935] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:17:15.398988] [W] [thread 127674] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:17:15.399007] [W] [thread 127674] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:17:15.399041] [D] [thread 127674] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:17:15.399081] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:17:15.399098] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.399137] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[10:17:15.399152] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.399198] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:17:15.399213] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.399224] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:17:15.399276] [W] [thread 127674] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:17:15.399291] [W] [thread 127674] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:17:15.399323] [D] [thread 127674] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:17:15.399357] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:17:15.399372] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.399407] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[10:17:15.399422] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.399463] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:17:15.399478] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.399489] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:17:15.399545] [W] [thread 127674] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:17:15.399559] [W] [thread 127674] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:17:15.399591] [D] [thread 127674] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:17:15.399624] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:17:15.399654] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.399693] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[10:17:15.399708] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.399752] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:17:15.399767] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.399778] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:17:15.399841] [D] [thread 127674] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:17:15.399878] [D] [thread 127674] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:17:15.399891] [D] [thread 127674] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:17:15.400071] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:17:15.400094] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.400107] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:17:15.400158] [D] [thread 127674] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:17:15.400179] [D] [thread 127674] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:17:15.400189] [D] [thread 127674] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:17:15.400314] [D] [thread 127674] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:17:15.400368] [D] [thread 127674] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:17:15.400406] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:17:15.400424] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.400460] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[10:17:15.400474] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.400528] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:17:15.400548] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.400561] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:17:15.400602] [W] [thread 127674] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:17:15.400618] [W] [thread 127674] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:17:15.400653] [D] [thread 127674] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:17:15.400689] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:17:15.400704] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.400740] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(18)[m
[36m[10:17:15.400754] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.400812] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:17:15.400836] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.400849] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:17:15.400899] [W] [thread 127674] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:17:15.400915] [W] [thread 127674] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:17:15.400949] [D] [thread 127674] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:17:15.400986] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:17:15.401008] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.401049] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[10:17:15.401064] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.401109] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:17:15.401133] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.401145] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:17:15.401205] [W] [thread 127674] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:17:15.401222] [W] [thread 127674] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:17:15.401256] [D] [thread 127674] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:17:15.401293] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:17:15.401309] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.401346] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(22)[m
[36m[10:17:15.401360] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.401405] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:17:15.401420] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.401430] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:17:15.401494] [D] [thread 127674] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:17:15.401517] [D] [thread 127674] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:17:15.401528] [D] [thread 127674] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:17:15.401666] [D] [thread 127674] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:17:15.401688] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.401699] [D] [thread 127674] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:17:15.401743] [D] [thread 127674] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:17:15.401762] [D] [thread 127674] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:17:15.401772] [D] [thread 127674] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:17:15.401888] [D] [thread 127674] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:17:15.401902] [D] [thread 127674] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.401914] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.401971] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.402007] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:17:15.402281] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 4[m
[36m[10:17:15.402307] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.402339] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.402537] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[10:17:15.402734] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:17:15.402754] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.402762] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.402789] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.402815] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.402945] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:17:15.403033] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.403072] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:17:15.403095] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:17:15.403191] [D] [thread 127674] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 4[m
[36m[10:17:15.403388] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.403413] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.403453] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:17:15.403478] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.403540] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.403623] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.403644] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:17:15.403714] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:17:15.403727] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:17:15.403767] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 4[m
[36m[10:17:15.403779] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.403794] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.403825] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.403838] [D] [thread 127674] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:17:15.403875] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.403892] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.403964] [D] [thread 127674] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:17:15.403976] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.404008] [D] [thread 127674] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:17:15.404104] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[10:17:15.404306] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.404328] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.404345] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[10:17:15.404355] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[10:17:15.404488] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:17:15.404555] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.404573] [D] [thread 127674] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:17:15.404611] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:17:15.404630] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.404645] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:17:15.404654] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:17:15.404751] [D] [thread 127674] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[10:17:15.404810] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.404828] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.404844] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:17:15.404865] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.404918] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.404987] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:17:15.405008] [W] [thread 127674] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:17:15.405018] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.405031] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.405080] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.405100] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:17:15.405190] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 5[m
[36m[10:17:15.405205] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.405217] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.405311] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[10:17:15.405524] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:17:15.405545] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.405554] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.405576] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.405587] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.405639] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:17:15.405668] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.405682] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:17:15.405691] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:17:15.405749] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[10:17:15.405830] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.405849] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.405863] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:17:15.405883] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.405934] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.406003] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.406021] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:17:15.406070] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:17:15.406097] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:17:15.406132] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 5[m
[36m[10:17:15.406144] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.406156] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.406180] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.406226] [D] [thread 127674] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:17:15.406267] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.406281] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.406346] [D] [thread 127674] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:17:15.406359] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.406379] [D] [thread 127674] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:17:15.406453] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[10:17:15.406632] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.406654] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.406668] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[10:17:15.406678] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[10:17:15.406798] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:17:15.406848] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.406865] [D] [thread 127674] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:17:15.406900] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:17:15.406930] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.406945] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:17:15.406954] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:17:15.407010] [D] [thread 127674] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[10:17:15.407050] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.407066] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.407082] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:17:15.407103] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.407152] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.407219] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:17:15.407241] [W] [thread 127674] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:17:15.407251] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.407264] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.407311] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.407330] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:17:15.407415] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 6[m
[36m[10:17:15.407430] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.407441] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.407529] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[10:17:15.407688] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:17:15.407719] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.407728] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.407750] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.407766] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.407818] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:17:15.407849] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.407865] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:17:15.407874] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:17:15.407927] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[10:17:15.407979] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.407996] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.408011] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:17:15.408031] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.408082] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.408163] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.408183] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:17:15.408234] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:17:15.408246] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:17:15.408276] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 6[m
[36m[10:17:15.408288] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.408300] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.408324] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.408336] [D] [thread 127674] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:17:15.408365] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.408387] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.408441] [D] [thread 127674] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:17:15.408453] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.408472] [D] [thread 127674] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:17:15.408539] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[10:17:15.408710] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.408730] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.408744] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[10:17:15.408753] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[10:17:15.408872] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:17:15.408941] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.408959] [D] [thread 127674] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:17:15.408996] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:17:15.409015] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.409030] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:17:15.409039] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:17:15.409091] [D] [thread 127674] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[10:17:15.409130] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.409147] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.409162] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:17:15.409188] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.409237] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.409303] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:17:15.409325] [W] [thread 127674] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:17:15.409334] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.409348] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.409401] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.409420] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:17:15.409513] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 7[m
[36m[10:17:15.409527] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.409539] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.409627] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[10:17:15.409793] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:17:15.409810] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.409817] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.409839] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.409850] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.409900] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:17:15.409928] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.409944] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:17:15.409953] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:17:15.410004] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[10:17:15.410051] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.410081] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.410097] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:17:15.410118] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.410168] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.410289] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.410317] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:17:15.410373] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:17:15.410385] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:17:15.410434] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[10:17:15.410447] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.410467] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.410494] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.410508] [D] [thread 127674] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:17:15.410550] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.410563] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.410663] [D] [thread 127674] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:17:15.410677] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.410696] [D] [thread 127674] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:17:15.410771] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[10:17:15.410952] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.410980] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.410994] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[10:17:15.411004] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[10:17:15.411134] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:17:15.411184] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.411205] [D] [thread 127674] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:17:15.411246] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:17:15.411267] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.411282] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:17:15.411290] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:17:15.411349] [D] [thread 127674] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[10:17:15.411400] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.411421] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.411437] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:17:15.411458] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.411507] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.411573] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.411601] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.411686] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(23) on execution node with id 2[m
[36m[10:17:15.411700] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.411724] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.411835] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:17:15.412027] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(23) as new root of the plan.[m
[36m[10:17:15.412044] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.412052] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.412073] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.412084] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.412135] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:17:15.412172] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.412188] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:17:15.412196] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:17:15.412250] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[10:17:15.412301] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.412319] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.412348] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 2[m
[36m[10:17:15.412370] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.412422] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.412491] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:17:15.412519] [W] [thread 127674] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:17:15.412529] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.412543] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.412551] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.412611] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.412632] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:17:15.412722] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 8[m
[36m[10:17:15.412742] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.412754] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.412845] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[10:17:15.413023] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:17:15.413040] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.413047] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.413069] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.413080] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.413141] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:17:15.413177] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.413193] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:17:15.413202] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:17:15.413256] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[10:17:15.413313] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.413330] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.413345] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:17:15.413365] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.413427] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.413492] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.413512] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:17:15.413561] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:17:15.413573] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:17:15.413602] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 8[m
[36m[10:17:15.413613] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.413625] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.413649] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.413661] [D] [thread 127674] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:17:15.413689] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.413700] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.413764] [D] [thread 127674] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:17:15.413776] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.413794] [D] [thread 127674] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:17:15.413901] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[10:17:15.414075] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.414096] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.414109] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[10:17:15.414119] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[10:17:15.414285] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:17:15.414362] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.414381] [D] [thread 127674] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:17:15.414422] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:17:15.414441] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.414455] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:17:15.414464] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:17:15.414534] [D] [thread 127674] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[10:17:15.414579] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.414605] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.414622] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:17:15.414643] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.414693] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.414767] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:17:15.414789] [W] [thread 127674] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:17:15.414798] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.414810] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.414862] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.414883] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:17:15.414980] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 9[m
[36m[10:17:15.414995] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.415007] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.415105] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[10:17:15.415291] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:17:15.415311] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.415318] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.415341] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.415353] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.415408] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:17:15.415440] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.415456] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:17:15.415465] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:17:15.415526] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[10:17:15.415588] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.415608] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.415624] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:17:15.415646] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.415703] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.415778] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.415800] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:17:15.415860] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:17:15.415873] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:17:15.415907] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(18) on execution node with id 9[m
[36m[10:17:15.415932] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.415947] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.415977] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.415991] [D] [thread 127674] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:17:15.416028] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.416050] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.416120] [D] [thread 127674] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:17:15.416133] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.416154] [D] [thread 127674] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:17:15.416235] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[10:17:15.416440] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.416465] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.416478] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:17:15.416488] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[10:17:15.416626] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:17:15.416684] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.416703] [D] [thread 127674] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:17:15.416749] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:17:15.416771] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.416787] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:17:15.416796] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:17:15.416860] [D] [thread 127674] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[10:17:15.416911] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.416929] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.416945] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:17:15.416968] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.417026] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.417105] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:17:15.417130] [W] [thread 127674] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:17:15.417140] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.417154] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.417206] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.417227] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:17:15.417328] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 10[m
[36m[10:17:15.417344] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.417356] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.417496] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[10:17:15.417693] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:17:15.417714] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.417722] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.417746] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.417773] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.417833] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:17:15.417869] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.417886] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:17:15.417895] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:17:15.417957] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[10:17:15.418069] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.418095] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.418125] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:17:15.418149] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.418247] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.418345] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.418368] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:17:15.418426] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:17:15.418440] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:17:15.418476] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 10[m
[36m[10:17:15.418488] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.418502] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.418531] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.418545] [D] [thread 127674] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:17:15.418580] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.418592] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.418652] [D] [thread 127674] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:17:15.418664] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.418703] [D] [thread 127674] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:17:15.418792] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[10:17:15.419003] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.419029] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.419043] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[10:17:15.419053] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[10:17:15.419201] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:17:15.419262] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.419281] [D] [thread 127674] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:17:15.419328] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:17:15.419351] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.419379] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:17:15.419389] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:17:15.419458] [D] [thread 127674] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[10:17:15.419513] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.419532] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.419557] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:17:15.419582] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.419640] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.419718] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:17:15.419742] [W] [thread 127674] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:17:15.419751] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.419764] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.419814] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.419834] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:17:15.419931] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 11[m
[36m[10:17:15.419953] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.419965] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.420063] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[10:17:15.420247] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:17:15.420266] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.420274] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.420296] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.420307] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.420359] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:17:15.420389] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.420405] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:17:15.420413] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:17:15.420470] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 11 to the query Id 1[m
[36m[10:17:15.420524] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.420541] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.420557] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:17:15.420576] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.420627] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.420693] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:17:15.420713] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:17:15.420762] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:17:15.420775] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:17:15.420805] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(22) on execution node with id 11[m
[36m[10:17:15.420816] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.420827] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.420850] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.420862] [D] [thread 127674] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:17:15.420892] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.420903] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.420954] [D] [thread 127674] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:17:15.420979] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.420998] [D] [thread 127674] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:17:15.421067] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[10:17:15.421244] [D] [thread 127674] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:17:15.421276] [D] [thread 127674] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:17:15.421292] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[10:17:15.421303] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[10:17:15.421429] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:17:15.421480] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.421506] [D] [thread 127674] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:17:15.421545] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:17:15.421565] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.421579] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:17:15.421588] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:17:15.421644] [D] [thread 127674] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[10:17:15.421687] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.421704] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.421720] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:17:15.421740] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.421786] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.421850] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.421878] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.421965] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 3[m
[36m[10:17:15.421979] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.421991] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.422128] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[10:17:15.422388] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(24) as new root of the plan.[m
[36m[10:17:15.422411] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.422433] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.422460] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.422473] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.422533] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:17:15.422568] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.422584] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:17:15.422593] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:17:15.422652] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[10:17:15.422706] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.422724] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.422740] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 3[m
[36m[10:17:15.422760] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.422812] [D] [thread 127674] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:17:15.422884] [D] [thread 127674] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:17:15.422908] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:17:15.422993] [D] [thread 127674] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[10:17:15.423008] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:17:15.423020] [W] [thread 127674] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:17:15.423111] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:17:15.423266] [D] [thread 127674] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[10:17:15.423283] [D] [thread 127674] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:15.423290] [D] [thread 127674] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:15.423311] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.423321] [D] [thread 127674] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:17:15.423367] [D] [thread 127674] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:17:15.423396] [D] [thread 127674] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:17:15.423410] [W] [thread 127674] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:17:15.423420] [D] [thread 127674] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:17:15.423491] [D] [thread 127674] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[10:17:15.423546] [D] [thread 127674] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:17:15.423564] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:17:15.423578] [I] [thread 127674] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:17:15.423597] [D] [thread 127674] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:17:15.423620] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.423635] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.423644] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.423653] [D] [thread 127674] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:17:15.423670] [D] [thread 127674] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[10:17:15.423711] [I] [thread 127674] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[10:17:15.423733] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.423795] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:17:15.423810] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[10:17:15.423839] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.423975] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.424010] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.424033] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[10:17:15.424081] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.424158] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.424184] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.424192] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.424309] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:17:15.424390] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:17:15.424403] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:17:15.424424] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.424439] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.424469] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:17:15.424481] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[10:17:15.424625] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[10:17:15.424812] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[10:17:15.424888] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.424934] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.424946] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:17:15.424963] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.424976] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.425214] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[10:17:15.425272] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:17:15.425288] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:17:15.425446] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:17:15.425464] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:17:15.425478] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[10:17:15.425492] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.425522] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:17:15.425556] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.425610] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:17:15.425623] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[10:17:15.425650] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.425766] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.425810] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.425843] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.425882] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.425961] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.425977] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.425984] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.426049] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:17:15.426123] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:17:15.426135] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:17:15.426153] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.426168] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.426230] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:17:15.426248] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[10:17:15.426327] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[10:17:15.426511] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[10:17:15.426584] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.426629] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.426640] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:17:15.426659] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.426672] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.426780] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[10:17:15.426822] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:17:15.426835] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:17:15.426967] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:17:15.426986] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:17:15.426997] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[10:17:15.427020] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.427070] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:17:15.427105] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.427157] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:17:15.427178] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[10:17:15.427207] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.427323] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.427372] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.427412] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:17:15.427448] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.427522] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.427538] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.427545] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.427610] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:17:15.427680] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:17:15.427692] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:17:15.427709] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.427724] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.427751] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:17:15.427765] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[10:17:15.427837] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[10:17:15.427991] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[10:17:15.428065] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.428108] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.428120] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:17:15.428136] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.428155] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.428302] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[10:17:15.428351] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:17:15.428366] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:17:15.428519] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:17:15.428537] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:17:15.428562] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[10:17:15.428575] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.428609] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:17:15.428641] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.428691] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:17:15.428710] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[10:17:15.428739] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.428852] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.428902] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.428941] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[10:17:15.428976] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.429041] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.429063] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.429071] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.429134] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:17:15.429201] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:17:15.429224] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:17:15.429242] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.429257] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.429284] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:17:15.429297] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[10:17:15.429368] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[10:17:15.429526] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[10:17:15.429596] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.429652] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.429673] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:17:15.429691] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.429703] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.429813] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[10:17:15.429855] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:17:15.429868] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:17:15.430016] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:17:15.430034] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:17:15.430045] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[10:17:15.430067] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.430100] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:17:15.430139] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.430373] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.430402] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.430424] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[10:17:15.430463] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.430524] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.430538] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.430545] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.430610] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.430683] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.430696] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:17:15.430714] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.430730] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.430756] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:17:15.430777] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[10:17:15.430852] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[10:17:15.431009] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(23) as root operator.[m
[36m[10:17:15.431083] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:17:15.431125] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:17:15.431137] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:17:15.431153] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.431164] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.431333] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[10:17:15.431379] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:17:15.431393] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:17:15.431538] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:17:15.431556] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:17:15.431569] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:17:15.431580] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.431606] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:17:15.431638] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.431684] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:17:15.431698] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[10:17:15.431723] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.431835] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.431856] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.431874] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[10:17:15.431905] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.431971] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.431985] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.431992] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.432054] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:17:15.432138] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:17:15.432153] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:17:15.432170] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.432190] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.432219] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:17:15.432232] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[10:17:15.432304] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[10:17:15.432460] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[10:17:15.432559] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.432606] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.432618] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:17:15.432635] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.432648] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.432753] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[10:17:15.432796] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:17:15.432809] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:17:15.432935] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:17:15.432952] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:17:15.432964] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[10:17:15.432985] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.433014] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:17:15.433047] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.433094] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[10:17:15.433107] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[10:17:15.433131] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.433236] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.433281] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.433314] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.433351] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.433429] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.433445] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.433452] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.433515] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:17:15.433583] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:17:15.433595] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:17:15.433613] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.433627] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.433655] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[10:17:15.433667] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[10:17:15.433776] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[10:17:15.433937] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(18) as root operator.[m
[36m[10:17:15.434007] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.434049] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.434061] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:17:15.434078] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.434090] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.434232] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[10:17:15.434287] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:17:15.434302] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:17:15.434454] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:17:15.434473] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:17:15.434486] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[10:17:15.434496] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.434529] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:17:15.434560] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.434609] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[10:17:15.434622] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[10:17:15.434647] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.434754] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.434799] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.434852] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:17:15.434891] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.434955] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.434981] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.434990] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.435054] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:17:15.435123] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:17:15.435136] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:17:15.435153] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.435168] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.435194] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[10:17:15.435206] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[10:17:15.435277] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[10:17:15.435424] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[10:17:15.435491] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.435533] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.435545] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:17:15.435560] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.435572] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.435672] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[10:17:15.435711] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:17:15.435724] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:17:15.435858] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:17:15.435876] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:17:15.435887] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[10:17:15.435897] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.435930] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:17:15.435961] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.436008] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[10:17:15.436022] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[10:17:15.436061] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.436165] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.436216] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.436298] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[10:17:15.436340] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.436407] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.436422] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.436429] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.436489] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:17:15.436561] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:17:15.436574] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:17:15.436591] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.436605] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.436632] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[10:17:15.436645] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[10:17:15.436714] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[10:17:15.436861] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(22) as root operator.[m
[36m[10:17:15.436928] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.436970] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.436981] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:17:15.436997] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.437008] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.437105] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[10:17:15.437144] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:17:15.437156] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:17:15.437293] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:17:15.437310] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:17:15.437321] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  11[m
[36m[10:17:15.437330] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.437359] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:17:15.437395] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.437546] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.437587] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.437619] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.437656] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.437709] [D] [thread 127674] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:17:15.437724] [D] [thread 127674] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:17:15.437731] [D] [thread 127674] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:17:15.437787] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.437852] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.437864] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:17:15.437881] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.437894] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.437918] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:17:15.437931] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[10:17:15.437998] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[10:17:15.438137] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[10:17:15.438242] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:17:15.438295] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:17:15.438307] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:17:15.438324] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.438336] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:17:15.438438] [I] [thread 127674] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[10:17:15.438497] [D] [thread 127674] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:17:15.438568] [D] [thread 127674] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:17:15.438734] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:17:15.438754] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:17:15.438766] [D] [thread 127674] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:17:15.438781] [D] [thread 127674] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:17:15.438816] [D] [thread 127674] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:17:15.438874] [D] [thread 127674] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:17:15.438923] [D] [thread 127674] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[10:17:15.438935] [D] [thread 127674] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:17:15.438950] [D] [thread 127674] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:17:15.438968] [D] [thread 127674] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[10:17:15.438989] [D] [thread 127674] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:17:15.439049] [D] [thread 127674] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[10:17:15.439072] [D] [thread 127674] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:17:15.439099] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.439114] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.439355] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.439405] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.439441] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.439485] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.439511] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.440095] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.440157] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.440184] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.440335] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.440376] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.440406] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.440441] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.440465] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.440991] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.441041] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.441058] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.441194] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.441230] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.441257] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.441289] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.441325] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.441838] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.441881] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.441904] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.442067] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.442107] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.442136] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.442170] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.442236] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.442765] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.442816] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.442834] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.443009] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.443056] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.443094] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[10:17:15.443128] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.443148] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.443756] [D] [thread 127674] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:17:15.444050] [I] [thread 127674] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:17:15.444151] [I] [thread 127674] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.444259] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.444304] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.444320] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.444471] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.444521] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.444550] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.444586] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.444607] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.445141] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.445191] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.445209] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.445347] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.445383] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.445423] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.445458] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.445481] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.445983] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.446034] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.446050] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.446181] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.446259] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.446302] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.446343] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.446369] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.446914] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.446962] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.446978] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.447125] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.447161] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.447187] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:17:15.447219] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.447240] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.447540] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:15.447771] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.447819] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.447834] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.448019] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.448066] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.448105] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[10:17:15.448140] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.448161] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.448759] [D] [thread 127674] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:17:15.449038] [I] [thread 127674] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:17:15.449135] [I] [thread 127674] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.449274] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.449321] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.449337] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.449490] [D] [thread 127674] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:17:15.449534] [D] [thread 127674] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:17:15.449567] [D] [thread 127674] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:17:15.449600] [D] [thread 127674] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:17:15.449621] [D] [thread 127674] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:17:15.449750] [D] [thread 127674] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:17:15.449799] [D] [thread 127674] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[10:17:15.451632] [D] [thread 127674] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:11)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.30:44031 1::37::0::0})
|    SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.31:36609 1::52::0::0})
|--ExecutionNode(id:2, ip:192.168.2.30, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.11:39449)})
|  |    CENTRALWINDOW(23)
|  |      SOURCE(25,,NetworkSourceDescriptor{tcp://192.168.2.32:33777 1::25::0::0})
|  |      SOURCE(28,,NetworkSourceDescriptor{tcp://192.168.2.33:33771 1::28::0::0})
|  |      SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.34:46385 1::31::0::0})
|  |      SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.35:44525 1::34::0::0})
|  |--ExecutionNode(id:4, ip:192.168.2.32, topologyId:4)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(27: {NetworkSinkDescriptor(partition=1::25::0::0;nodeLocation=tcp://192.168.2.30:44031)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:5, ip:192.168.2.33, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(30: {NetworkSinkDescriptor(partition=1::28::0::0;nodeLocation=tcp://192.168.2.30:44031)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:6, ip:192.168.2.34, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.30:44031)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:7, ip:192.168.2.35, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:44031)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|--ExecutionNode(id:3, ip:192.168.2.31, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.11:39449)})
|  |    CENTRALWINDOW(24)
|  |      SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.36:39209 1::40::0::0})
|  |      SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.37:33129 1::43::0::0})
|  |      SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.38:38007 1::46::0::0})
|  |      SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.39:46229 1::49::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.36, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.31:36609)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.31:36609)})
|  |  |    WATERMARKASSIGNER(18)
|  |  |      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.31:36609)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:11, ip:192.168.2.39, topologyId:11)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  |  SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.31:36609)})
|  |  |    WATERMARKASSIGNER(22)
|  |  |      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.451766] [D] [thread 127674] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[10:17:15.451811] [D] [thread 127674] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:17:15.452080] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452103] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452316] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452334] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452419] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452436] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452479] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452492] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452530] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452545] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452584] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452596] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452634] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452646] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452685] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452698] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452739] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452751] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452789] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452801] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.452839] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.452862] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.453029] [D] [thread 127674] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[10:17:15.453061] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[10:17:15.453070] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.453087] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.453302] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:40249[m
[36m[10:17:15.453344] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:40249 queryId=1 querySubPlanId = 1[m
[36m[10:17:15.453619] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(27: {NetworkSinkDescriptor(partition=1::25::0::0;nodeLocation=tcp://192.168.2.30:44031)})
  WATERMARKASSIGNER(8)
    SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.453654] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.453913] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.457864] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.459100] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.459638] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.460128] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.460970] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:17:15.462045] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.462559] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.463068] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.463422] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.463885] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.464462] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:17:15.464825] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.465379] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.466040] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.466575] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.466928] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.467404] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.480152] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[10:17:15.480280] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.480300] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.480429] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:45351[m
[36m[10:17:15.480460] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:45351 queryId=1 querySubPlanId = 2[m
[36m[10:17:15.480662] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(30: {NetworkSinkDescriptor(partition=1::28::0::0;nodeLocation=tcp://192.168.2.30:44031)})
  WATERMARKASSIGNER(10)
    SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.480736] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.480915] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.481287] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.481795] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.482153] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.482680] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.483248] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:17:15.483355] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.483638] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.484139] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.484486] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.484967] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.485471] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:17:15.485732] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.486286] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.486784] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.487270] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.487606] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.488091] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.497791] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[10:17:15.497897] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.497971] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.498227] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:37269[m
[36m[10:17:15.498331] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:37269 queryId=1 querySubPlanId = 3[m
[36m[10:17:15.498644] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.30:44031)})
  WATERMARKASSIGNER(12)
    SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.498732] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.498963] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.499433] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.500011] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.500394] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.500881] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.501473] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:17:15.501584] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.501871] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.502415] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.502766] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.503253] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.503754] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:17:15.504017] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.504509] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.505005] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.505494] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.505834] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.506352] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.515793] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[10:17:15.515839] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.515860] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.515981] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:42061[m
[36m[10:17:15.516013] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:42061 queryId=1 querySubPlanId = 4[m
[36m[10:17:15.516215] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:44031)})
  WATERMARKASSIGNER(14)
    SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.516250] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.516412] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.516791] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.517314] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.517677] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.518153] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.518804] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:17:15.518920] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.519213] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.519707] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.520054] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.520531] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.521021] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:17:15.521287] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.521783] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.522319] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.522809] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.523162] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.523637] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.533681] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[10:17:15.533797] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.533822] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.534021] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:40681[m
[36m[10:17:15.534068] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:40681 queryId=1 querySubPlanId = 5[m
[36m[10:17:15.534500] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.11:39449)})
  CENTRALWINDOW(23)
    SOURCE(25,,NetworkSourceDescriptor{tcp://192.168.2.32:33777 1::25::0::0})
    SOURCE(28,,NetworkSourceDescriptor{tcp://192.168.2.33:33771 1::28::0::0})
    SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.34:46385 1::31::0::0})
    SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.35:44525 1::34::0::0})
[m
[36m[10:17:15.534563] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.534847] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.535292] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.535600] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.535874] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.536118] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.536867] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:17:15.537270] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.537876] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:17:15.538142] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.538352] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:17:15.538517] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.539221] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.539824] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.540118] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.540317] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.540848] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:33777 1::25::0::0}[m
[36m[10:17:15.541179] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.541764] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.542594] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.543196] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.543653] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.544233] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.544970] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:33771 1::28::0::0}[m
[36m[10:17:15.545268] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.545835] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.546555] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.547140] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.547573] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.548152] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.548897] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:46385 1::31::0::0}[m
[36m[10:17:15.549191] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.549755] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.550418] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.550950] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.551372] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.551938] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.552592] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:44525 1::34::0::0}[m
[36m[10:17:15.552848] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.553357] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.553911] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.554496] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.554907] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.555474] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.570591] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[10:17:15.570675] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.570708] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.570850] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.36:36639[m
[36m[10:17:15.570889] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.36:36639 queryId=1 querySubPlanId = 6[m
[36m[10:17:15.571105] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.31:36609)})
  WATERMARKASSIGNER(16)
    SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.571147] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.571328] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.571736] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.572326] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.572761] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.573316] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.574068] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:17:15.574257] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.574609] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.575161] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.575534] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.576035] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.576657] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:17:15.576976] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.577533] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.578128] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.578665] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.579028] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.579520] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.589437] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[10:17:15.589513] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.589545] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.589668] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:46763[m
[36m[10:17:15.589699] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:46763 queryId=1 querySubPlanId = 7[m
[36m[10:17:15.589898] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.31:36609)})
  WATERMARKASSIGNER(18)
    SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.589935] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.590091] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.590643] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.591173] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.591553] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.592039] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.592700] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:17:15.592906] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.593251] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.593836] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.594304] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.594875] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.595515] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:17:15.595830] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.596394] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.596995] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.597570] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.598018] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.598637] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.608616] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[10:17:15.608706] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.608739] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.608868] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:39503[m
[36m[10:17:15.608906] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:39503 queryId=1 querySubPlanId = 8[m
[36m[10:17:15.609118] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.31:36609)})
  WATERMARKASSIGNER(20)
    SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.609159] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.609335] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.609774] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.610433] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.610869] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.611445] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.612164] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:17:15.612306] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.612631] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.613182] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.613608] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.614159] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.614751] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:17:15.615026] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.615529] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.616053] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.616593] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.617002] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.617560] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.627697] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=11[m
[36m[10:17:15.627773] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.627835] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.627975] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.39:46225[m
[36m[10:17:15.628008] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.39:46225 queryId=1 querySubPlanId = 9[m
[36m[10:17:15.628218] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.31:36609)})
  WATERMARKASSIGNER(22)
    SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:17:15.628267] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.628445] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.628841] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.629398] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.629816] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.630426] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.631132] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:17:15.631284] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.631604] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.632159] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.632570] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.633123] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.633746] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:17:15.634061] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.634657] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.635256] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.635850] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.636276] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.636842] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.646860] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[10:17:15.646947] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.646980] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.647103] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:41205[m
[36m[10:17:15.647140] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:41205 queryId=1 querySubPlanId = 10[m
[36m[10:17:15.647446] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.11:39449)})
  CENTRALWINDOW(24)
    SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.36:39209 1::40::0::0})
    SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.37:33129 1::43::0::0})
    SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.38:38007 1::46::0::0})
    SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.39:46229 1::49::0::0})
[m
[36m[10:17:15.647509] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.647700] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.647988] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.648204] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.648404] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.648585] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.649068] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:17:15.649246] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.649436] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:17:15.649597] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.649668] [D] [thread 127674] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:17:15.649752] [D] [thread 127674] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:17:15.650126] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.650702] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.651002] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.651225] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.651779] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.36:39209 1::40::0::0}[m
[36m[10:17:15.652068] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.652602] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.653199] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.653703] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.654071] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.654611] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.655256] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:33129 1::43::0::0}[m
[36m[10:17:15.655531] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.656102] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.656782] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.657373] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.657807] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.658439] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.659163] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:38007 1::46::0::0}[m
[36m[10:17:15.659462] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.660037] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.660700] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.661293] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.661732] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.662370] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.663101] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.39:46229 1::49::0::0}[m
[36m[10:17:15.663382] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.663895] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.664465] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.664951] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.665292] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:17:15.665847] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.680825] [D] [thread 127674] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[10:17:15.680961] [D] [thread 127674] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:17:15.680984] [D] [thread 127674] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:17:15.681136] [D] [thread 127674] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:34709[m
[36m[10:17:15.681168] [D] [thread 127674] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:34709 queryId=1 querySubPlanId = 11[m
[36m[10:17:15.681393] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.30:44031 1::37::0::0})
  SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.31:36609 1::52::0::0})
[m
[36m[10:17:15.681457] [D] [thread 127674] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:17:15.681619] [D] [thread 127674] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:17:15.681928] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.682150] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.682379] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.682568] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.683001] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:44031 1::37::0::0}[m
[36m[10:17:15.683141] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.683320] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.683652] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.683846] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.684010] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.684183] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.684600] [D] [thread 127674] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:36609 1::52::0::0}[m
[36m[10:17:15.684743] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.684916] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.685216] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.685391] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.685546] [D] [thread 127674] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:15.685709] [D] [thread 127674] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:17:15.693611] [D] [thread 127674] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 11 queues[m
[36m[10:17:15.921330] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:15.921657] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:16.698986] [D] [thread 127686] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:17:16.699161] [D] [thread 127686] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:17:16.700104] [D] [thread 127686] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:17:16.700407] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[10:17:16.700630] [D] [thread 127686] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:17:16.701311] [D] [thread 127686] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:17:16.701433] [D] [thread 127686] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:17:16.702069] [D] [thread 127686] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:17:16.704133] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[10:17:16.704403] [D] [thread 127686] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:17:16.705453] [D] [thread 127686] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:17:16.705614] [D] [thread 127686] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:17:16.706552] [D] [thread 127686] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:17:16.708209] [D] [thread 127686] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:17:16.708516] [D] [thread 127686] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:17:16.709196] [D] [thread 127686] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:17:16.709402] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[10:17:16.709473] [D] [thread 127686] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:17:16.710252] [D] [thread 127686] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:17:16.710346] [D] [thread 127686] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:17:16.710941] [D] [thread 127686] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:17:16.712421] [D] [thread 127686] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(56: {FileSinkDescriptor()})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:44031 1::37::0::0})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:36609 1::52::0::0})
[m
[32m[10:17:16.712527] [I] [thread 127686] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 11 [m
[32m[10:17:16.712655] [I] [thread 127686] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
Dumping queryPlan: [36m[10:17:16.713119] [D] [thread 127686] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 11[m
[36m[10:17:16.713203] [D] [thread 127686] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-11-2023-11-01 10:17:16 - 1. LogicalQueryPlan[m
SINK(56: {FileSinkDescriptor()})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:44031 1::37::0::0})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:36609 1::52::0::0})

[32m[10:17:16.713956] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[32m[10:17:16.714117] [I] [thread 127686] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:17:16.714136] [I] [thread 127686] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:17:16.714144] [I] [thread 127686] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:17:16.714166] [I] [thread 127686] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:16.714175] [I] [thread 127686] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:17:16.714337] [I] [thread 127686] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:17:16.714907] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[10:17:16.715140] [D] [thread 127686] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:17:16.715189] [I] [thread 127686] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:17:16.715200] [I] [thread 127686] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[10:17:16.715405] [D] [thread 127686] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:17:16.715430] [D] [thread 127686] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:17:16.715560] [D] [thread 127686] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:17:16.715632] [D] [thread 127686] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:17:16.715956] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[10:17:16.716167] [D] [thread 127686] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:17:16.716249] [D] [thread 127686] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:17:16.716315] [I] [thread 127686] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:17:16.716379] [I] [thread 127686] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:17:16.716405] [I] [thread 127686] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:17:16.716603] [D] [thread 127686] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:17:16.716684] [D] [thread 127686] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:17:16.716845] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[10:17:16.717202] [D] [thread 127686] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:17:16.717269] [D] [thread 127686] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:17:16.717332] [I] [thread 127686] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:17:16.717341] [I] [thread 127686] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:17:16.717354] [I] [thread 127686] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:17:16.717490] [D] [thread 127686] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:17:16.717514] [D] [thread 127686] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[10:17:16.717806] [D] [thread 127686] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-11-2023-11-01 10:17:16 - 2. PhysicalQueryPlan[m
Dumping queryPlan: PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[36m[10:17:16.718231] [D] [thread 127686] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 11[m
[32m[10:17:16.718685] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[10:17:16.718964] [D] [thread 127686] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[10:17:16.719010] [D] [thread 127686] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:16.719030] [D] [thread 127686] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:17:16.719605] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[10:17:16.719844] [D] [thread 127686] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:17:16.719884] [D] [thread 127686] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:17:16.719894] [D] [thread 127686] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:17:16.720102] [I] [thread 127686] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[10:17:16.720287] [D] [thread 127686] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:17:16.720319] [D] [thread 127686] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
Dumping pipelineQueryPlan: [36m[10:17:16.720336] [D] [thread 127686] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:17:16.720438] [D] [thread 127686] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-11-01 10:17:16 - 3. AfterPipelinedQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 11, no. pipelines: 3
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


Dumping pipelineQueryPlan: [36m[10:17:16.720831] [D] [thread 127686] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-11-01 10:17:16 - 4. AfterAddScanAndEmitPhase[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 11, no. pipelines: 3
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[10:17:16.721123] [D] [thread 127686] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 11[m
[36m[10:17:16.721437] [D] [thread 127686] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  59[m
[32m[10:17:16.721529] [I] [thread 127686] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[10:17:16.722351] [D] [thread 127686] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out[m
[32m[10:17:16.723069] [I] [thread 127686] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:17:16.723806] [D] [thread 127686] [DataSource.cpp:75] [DataSource] DataSource  37 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:17:16.724824] [I] [thread 127686] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:17:16.725210] [D] [thread 127686] [DataSource.cpp:75] [DataSource] DataSource  52 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:17:16.726436] [D] [thread 127686] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 11[m
[36m[10:17:16.726650] [D] [thread 127686] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  11  as a singleton[m
[36m[10:17:16.726679] [D] [thread 127686] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=11[m
[36m[10:17:16.726730] [D] [thread 127686] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 2[m
[36m[10:17:16.726765] [D] [thread 127686] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  37  not found. Creating new element with with qep [m
[36m[10:17:16.727046] [D] [thread 127686] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  52  not found. Creating new element with with qep [m
[36m[10:17:16.727128] [D] [thread 127686] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 11  pair queryId= 1  subplanId= 11[m
2023-11-01 10:17:16.727 setup: queryId=1, querySubPlanId=11; 
[36m[10:17:16.727565] [D] [thread 127686] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=11[m
2023-11-01 10:17:16.727 start: queryId=1, querySubPlanId=11; 
[36m[10:17:16.727760] [D] [thread 127686] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=11[m
[36m[10:17:16.728106] [D] [thread 127686] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::37::0::0 from 192.168.2.30[m
[36m[10:17:16.728478] [D] [thread 127686] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::37::0::0=1[m
[36m[10:17:16.728542] [D] [thread 127686] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff3800eb60  started successfully[m
[36m[10:17:16.728607] [D] [thread 127686] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::52::0::0 from 192.168.2.31[m
[36m[10:17:16.728681] [D] [thread 127686] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::52::0::0=1[m
[36m[10:17:16.728697] [D] [thread 127686] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff3800ef20  started successfully[m
[36m[10:17:16.728762] [D] [thread 127686] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[10:17:16.728898] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[10:17:16.729278] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[10:17:16.730184] [D] [thread 127684] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::37::0::0[m
[36m[10:17:16.730403] [D] [thread 127686] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::37::0::0[m
[36m[10:17:16.730579] [D] [thread 127686] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[10:17:16.730644] [D] [thread 127686] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff3800eb60  started successfully[m
[36m[10:17:16.730695] [D] [thread 127686] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:17:16.730778] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[10:17:16.730957] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[10:17:16.731424] [D] [thread 127684] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[10:17:16.731533] [D] [thread 127686] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[10:17:16.731585] [D] [thread 127686] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:17:16.731603] [D] [thread 127686] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff3800ef20  started successfully[m
[36m[10:17:16.731651] [D] [thread 127686] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[10:17:16.731946] [D] [thread 127686] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  11  succeeded[m
[36m[10:17:16.732080] [D] [thread 127686] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[10:17:16.922897] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:17.083565] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:17.084068] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:17.215411] [D] [thread 127683] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39449): ClientAnnouncement received for channel 0:1::52::0::0[m
[32m[10:17:17.215589] [I] [thread 127683] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::52::0::0(threadId=0) Data[m
[36m[10:17:17.215717] [D] [thread 127683] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::52::0::0(threadId=0) REGISTERED[m
[36m[10:17:17.219062] [D] [thread 127683] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39449): ClientAnnouncement received for channel 0:1::37::0::0[m
[32m[10:17:17.219192] [I] [thread 127683] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::37::0::0(threadId=0) Data[m
[36m[10:17:17.219283] [D] [thread 127683] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::37::0::0(threadId=0) REGISTERED[m
[36m[10:17:17.852126] [D] [thread 127674] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[10:17:17.852257] [D] [thread 127674] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[10:17:17.852797] [D] [thread 127674] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[10:17:17.852962] [D] [thread 127674] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[10:17:17.852997] [D] [thread 127674] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[10:17:17.853116] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.32[m
[36m[10:17:17.853151] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:40249 queryId=1[m
[36m[10:17:17.857912] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.33[m
[36m[10:17:17.857996] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:45351 queryId=1[m
[36m[10:17:17.862448] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.34[m
[36m[10:17:17.862527] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:37269 queryId=1[m
[36m[10:17:17.869031] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.35[m
[36m[10:17:17.869175] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:42061 queryId=1[m
[36m[10:17:17.874591] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.30[m
[36m[10:17:17.874674] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:40681 queryId=1[m
[36m[10:17:17.879355] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.36[m
[36m[10:17:17.879431] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.36:36639 queryId=1[m
[36m[10:17:17.884068] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[10:17:17.884147] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:46763 queryId=1[m
[36m[10:17:17.888994] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[10:17:17.889084] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:39503 queryId=1[m
[36m[10:17:17.893950] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=11 and IP=192.168.2.39[m
[36m[10:17:17.894031] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.39:46225 queryId=1[m
[36m[10:17:17.898597] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.31[m
[36m[10:17:17.898682] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:41205 queryId=1[m
[36m[10:17:17.903243] [D] [thread 127674] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[10:17:17.903378] [D] [thread 127674] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:34709 queryId=1[m
[36m[10:17:17.908128] [D] [thread 127674] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 11 queues[m
[36m[10:17:18.000926] [D] [thread 127738] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[10:17:18.001026] [D] [thread 127738] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[10:17:18.001145] [D] [thread 127738] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  11   1[m
[36m[10:17:18.001272] [D] [thread 127738] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1698833838001[m
[36m[10:17:18.001291] [D] [thread 127738] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  11  succeeded[m
[36m[10:17:18.001314] [D] [thread 127738] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[10:17:18.006350] [D] [thread 127674] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[10:17:18.006434] [D] [thread 127674] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[10:17:18.006981] [I] [thread 127674] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[10:17:18.007143] [D] [thread 127674] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:17:18.085313] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:18.171074] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:18.175538] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833837000,1698833838000,5,733338881,1698833838171
1698833837000,1698833838000,4,2126754980,1698833838171
1698833837000,1698833838000,6,5842622497,1698833838171
1698833837000,1698833838000,7,26895353736,1698833838171
[m
[36m[10:17:18.176046] [D] [thread 127684] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1698833838176[m
[36m[10:17:18.218454] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:18.218557] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:18.221089] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833837000,1698833838000,8,16369317738,1698833838218
1698833837000,1698833838000,9,297056897,1698833838218
1698833837000,1698833838000,10,324293645,1698833838218
1698833837000,1698833838000,11,315117103,1698833838218
[m
[36m[10:17:18.276824] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:18.277149] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:18.278379] [D] [thread 127743] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:18.278500] [I] [thread 127743] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:18.278522] [I] [thread 127743] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:18.278731] [I] [thread 127743] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:18.278753] [I] [thread 127743] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:18.457135] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:18.457606] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:19.155990] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:19.156070] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:19.157648] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833838000,1698833839000,5,733339842,1698833839156
1698833838000,1698833839000,4,2126756017,1698833839156
1698833838000,1698833839000,6,5842623758,1698833839156
1698833838000,1698833839000,7,26895355265,1698833839156
[m
[36m[10:17:19.193796] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:19.193864] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:19.195360] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833838000,1698833839000,8,16369319469,1698833839193
1698833838000,1698833839000,9,297058688,1698833839193
1698833838000,1698833839000,10,324295992,1698833839193
1698833838000,1698833839000,11,315119175,1698833839193
[m
[36m[10:17:19.458942] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:20.146474] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:20.146571] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:20.148933] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833839000,1698833840000,4,2126758269,1698833840146
1698833839000,1698833840000,5,733342125,1698833840146
1698833839000,1698833840000,6,5842625956,1698833840146
1698833839000,1698833840000,7,26895357497,1698833840146
[m
[36m[10:17:20.169910] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:20.169986] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:20.172403] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833839000,1698833840000,8,16369321657,1698833840170
1698833839000,1698833840000,9,297060884,1698833840170
1698833839000,1698833840000,10,324298197,1698833840170
1698833839000,1698833840000,11,315121488,1698833840170
[m
[36m[10:17:20.460226] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:20.478840] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:20.479448] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:20.480141] [D] [thread 127748] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:20.480211] [I] [thread 127748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:20.480227] [I] [thread 127748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:20.480334] [I] [thread 127748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:20.480346] [I] [thread 127748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:20.651466] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:20.652035] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:21.139303] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:21.139406] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:21.141486] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833840000,1698833841000,4,2126760924,1698833841139
1698833840000,1698833841000,5,733344753,1698833841139
1698833840000,1698833841000,7,26895360158,1698833841139
1698833840000,1698833841000,6,5842628665,1698833841139
[m
[36m[10:17:21.198123] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:21.198270] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:21.200471] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833840000,1698833841000,10,324300813,1698833841198
1698833840000,1698833841000,8,16369324306,1698833841198
1698833840000,1698833841000,9,297063532,1698833841198
1698833840000,1698833841000,11,315124023,1698833841198
[m
[36m[10:17:21.653328] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:22.203465] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:22.203575] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:22.205824] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833841000,1698833842000,4,2126763233,1698833842203
1698833841000,1698833842000,5,733346969,1698833842203
1698833841000,1698833842000,7,26895362371,1698833842203
1698833841000,1698833842000,6,5842630834,1698833842203
[m
[36m[10:17:22.228737] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:22.228927] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:22.230965] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833841000,1698833842000,9,297065956,1698833842228
1698833841000,1698833842000,8,16369326524,1698833842228
1698833841000,1698833842000,11,315126408,1698833842228
1698833841000,1698833842000,10,324303236,1698833842228
[m
[36m[10:17:22.654345] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:22.754012] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:22.754361] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:22.755350] [D] [thread 127754] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:22.755447] [I] [thread 127754] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:22.755465] [I] [thread 127754] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:22.755583] [I] [thread 127754] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:22.755596] [I] [thread 127754] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:22.956443] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:22.956807] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:23.170656] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:23.170731] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:23.172099] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833842000,1698833843000,5,733349525,1698833843170
1698833842000,1698833843000,7,26895364888,1698833843170
1698833842000,1698833843000,6,5842633400,1698833843170
1698833842000,1698833843000,4,2126765963,1698833843170
[m
[36m[10:17:23.216504] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:23.216608] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:23.218949] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833842000,1698833843000,8,16369329027,1698833843216
1698833842000,1698833843000,11,315128796,1698833843216
1698833842000,1698833843000,10,324305628,1698833843216
1698833842000,1698833843000,9,297068553,1698833843216
[m
[36m[10:17:23.958021] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:24.132193] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:24.132267] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:24.133522] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833843000,1698833844000,5,733351858,1698833844132
1698833843000,1698833844000,7,26895367272,1698833844132
1698833843000,1698833844000,6,5842635695,1698833844132
1698833843000,1698833844000,4,2126768157,1698833844132
[m
[36m[10:17:24.222381] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:24.222488] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:24.224811] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833843000,1698833844000,8,16369331531,1698833844222
1698833843000,1698833844000,11,315131276,1698833844222
1698833843000,1698833844000,10,324308069,1698833844222
1698833843000,1698833844000,9,297070933,1698833844222
[m
[36m[10:17:24.958338] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:25.090784] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:25.091148] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:25.092279] [D] [thread 127759] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:25.092409] [I] [thread 127759] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:25.092428] [I] [thread 127759] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:25.092548] [I] [thread 127759] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:25.092562] [I] [thread 127759] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:25.223640] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:25.223744] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:25.226073] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833844000,1698833845000,5,733354402,1698833845223
1698833844000,1698833845000,7,26895369778,1698833845223
1698833844000,1698833845000,6,5842638107,1698833845223
1698833844000,1698833845000,4,2126770733,1698833845223
[m
[36m[10:17:25.226738] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:25.226820] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:25.228962] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833844000,1698833845000,11,315133634,1698833845226
1698833844000,1698833845000,10,324310425,1698833845226
1698833844000,1698833845000,9,297073212,1698833845226
1698833844000,1698833845000,8,16369334002,1698833845226
[m
[36m[10:17:25.358349] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:25.358714] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:26.211067] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:26.211145] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:26.212353] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833845000,1698833846000,6,5842640633,1698833846211
1698833845000,1698833846000,4,2126773298,1698833846211
1698833845000,1698833846000,5,733356885,1698833846211
1698833845000,1698833846000,7,26895372391,1698833846211
[m
[36m[10:17:26.220464] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:26.220535] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:26.221818] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833845000,1698833846000,9,297075900,1698833846220
1698833845000,1698833846000,10,324313186,1698833846220
1698833845000,1698833846000,11,315136469,1698833846220
1698833845000,1698833846000,8,16369336526,1698833846220
[m
[36m[10:17:26.359921] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:27.209888] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:27.209958] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:27.211812] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833846000,1698833847000,6,5842643028,1698833847210
1698833846000,1698833847000,5,733359239,1698833847210
1698833846000,1698833847000,4,2126775589,1698833847210
1698833846000,1698833847000,7,26895374636,1698833847210
[m
[36m[10:17:27.222583] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:27.222683] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:27.224343] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833846000,1698833847000,9,297078009,1698833847222
1698833846000,1698833847000,11,315138671,1698833847222
1698833846000,1698833847000,10,324315332,1698833847222
1698833846000,1698833847000,8,16369338792,1698833847222
[m
[36m[10:17:27.360471] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:27.360790] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:27.362058] [D] [thread 127764] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:27.362174] [I] [thread 127764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:27.362224] [I] [thread 127764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:27.362354] [I] [thread 127764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:27.362380] [I] [thread 127764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:27.623536] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:27.623862] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:28.215602] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:28.215674] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:28.217888] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833847000,1698833848000,9,297080782,1698833848215
1698833847000,1698833848000,11,315141255,1698833848215
1698833847000,1698833848000,10,324317939,1698833848215
1698833847000,1698833848000,8,16369341476,1698833848215
[m
[36m[10:17:28.218553] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:28.218638] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:28.220765] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833847000,1698833848000,4,2126778237,1698833848218
1698833847000,1698833848000,6,5842645748,1698833848218
1698833847000,1698833848000,5,733361898,1698833848218
1698833847000,1698833848000,7,26895377306,1698833848218
[m
[36m[10:17:28.625189] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:29.199020] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:29.199125] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:29.200971] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833848000,1698833849000,6,5842647915,1698833849199
1698833848000,1698833849000,7,26895379458,1698833849199
1698833848000,1698833849000,5,733364059,1698833849199
1698833848000,1698833849000,4,2126780494,1698833849199
[m
[36m[10:17:29.216193] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:29.216263] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:29.217546] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833848000,1698833849000,11,315143666,1698833849216
1698833848000,1698833849000,9,297083104,1698833849216
1698833848000,1698833849000,10,324320215,1698833849216
1698833848000,1698833849000,8,16369343629,1698833849216
[m
[36m[10:17:29.626435] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:29.668235] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:29.668605] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:29.669815] [D] [thread 127769] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:29.669935] [I] [thread 127769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:29.669953] [I] [thread 127769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:29.670073] [I] [thread 127769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:29.670088] [I] [thread 127769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:29.838989] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:29.839335] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:30.187673] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:30.187780] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:30.190076] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833849000,1698833850000,7,26895382028,1698833850187
1698833849000,1698833850000,4,2126783208,1698833850187
1698833849000,1698833850000,6,5842650542,1698833850187
1698833849000,1698833850000,5,733366767,1698833850187
[m
[36m[10:17:30.201763] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:30.201850] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:30.203654] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833849000,1698833850000,9,297085589,1698833850201
1698833849000,1698833850000,10,324322623,1698833850201
1698833849000,1698833850000,11,315146206,1698833850201
1698833849000,1698833850000,8,16369346192,1698833850201
[m
[36m[10:17:30.840500] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:31.190044] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:31.190153] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:31.192476] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833850000,1698833851000,4,2126785300,1698833851190
1698833850000,1698833851000,7,26895384324,1698833851190
1698833850000,1698833851000,6,5842652813,1698833851190
1698833850000,1698833851000,5,733368934,1698833851190
[m
[36m[10:17:31.205943] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:31.206021] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:31.208133] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833850000,1698833851000,9,297087944,1698833851206
1698833850000,1698833851000,11,315148662,1698833851206
1698833850000,1698833851000,10,324325027,1698833851206
1698833850000,1698833851000,8,16369348521,1698833851206
[m
[36m[10:17:31.841767] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:31.963864] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:31.964221] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:31.965778] [D] [thread 127774] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:31.965897] [I] [thread 127774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:31.965915] [I] [thread 127774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:31.966035] [I] [thread 127774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:31.966051] [I] [thread 127774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:32.191477] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:32.191547] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:32.192539] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:32.192755] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833851000,1698833852000,4,2126787777,1698833852191
1698833851000,1698833852000,7,26895386739,1698833852191
1698833851000,1698833852000,6,5842655281,1698833852191
1698833851000,1698833852000,5,733371434,1698833852191
[m
[36m[10:17:32.192904] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:32.213021] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:32.213104] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:32.214800] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833851000,1698833852000,9,297090394,1698833852213
1698833851000,1698833852000,11,315150933,1698833852213
1698833851000,1698833852000,8,16369350932,1698833852213
1698833851000,1698833852000,10,324327337,1698833852213
[m
[36m[10:17:33.192408] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:33.192482] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:33.193748] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833852000,1698833853000,11,315153572,1698833853192
1698833852000,1698833853000,10,324329924,1698833853192
1698833852000,1698833853000,8,16369353439,1698833853192
1698833852000,1698833853000,9,297093026,1698833853192
[m
[36m[10:17:33.194067] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:33.219366] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:33.219448] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:33.220878] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833852000,1698833853000,4,2126790270,1698833853219
1698833852000,1698833853000,7,26895389239,1698833853219
1698833852000,1698833853000,6,5842657705,1698833853219
1698833852000,1698833853000,5,733373853,1698833853219
[m
[36m[10:17:34.194420] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:34.199303] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:34.199377] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:34.200626] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833853000,1698833854000,7,26895391538,1698833854199
1698833853000,1698833854000,6,5842660074,1698833854199
1698833853000,1698833854000,5,733376273,1698833854199
1698833853000,1698833854000,4,2126792803,1698833854199
[m
[36m[10:17:34.216087] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:34.216464] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:34.217472] [D] [thread 127779] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:34.217571] [I] [thread 127779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:34.217589] [I] [thread 127779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:34.217705] [I] [thread 127779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:34.217863] [I] [thread 127779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:34.218533] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:34.218596] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:34.219783] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833853000,1698833854000,11,315155868,1698833854218
1698833853000,1698833854000,10,324332065,1698833854218
1698833853000,1698833854000,8,16369355761,1698833854218
1698833853000,1698833854000,9,297095240,1698833854218
[m
[36m[10:17:34.388893] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:34.389223] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:35.184480] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:35.184585] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:35.186978] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833854000,1698833855000,7,26895394142,1698833855184
1698833854000,1698833855000,6,5842662587,1698833855184
1698833854000,1698833855000,5,733378714,1698833855184
1698833854000,1698833855000,4,2126795180,1698833855184
[m
[36m[10:17:35.194952] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:35.195047] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:35.196928] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833854000,1698833855000,10,324334715,1698833855195
1698833854000,1698833855000,9,297097926,1698833855195
1698833854000,1698833855000,8,16369358305,1698833855195
1698833854000,1698833855000,11,315158736,1698833855195
[m
[36m[10:17:35.390473] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:36.164445] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:36.164552] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:36.166924] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833855000,1698833856000,7,26895396300,1698833856164
1698833855000,1698833856000,6,5842664803,1698833856164
1698833855000,1698833856000,5,733380982,1698833856164
1698833855000,1698833856000,4,2126797504,1698833856164
[m
[36m[10:17:36.227251] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:36.227348] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:36.229609] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833855000,1698833856000,10,324336996,1698833856227
1698833855000,1698833856000,9,297100066,1698833856227
1698833855000,1698833856000,8,16369360517,1698833856227
1698833855000,1698833856000,11,315160871,1698833856227
[m
[36m[10:17:36.391767] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:36.458257] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:36.458607] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:36.459790] [D] [thread 127784] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:36.459886] [I] [thread 127784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:36.459904] [I] [thread 127784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:36.460022] [I] [thread 127784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:36.460034] [I] [thread 127784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:36.659351] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:36.659679] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:37.148557] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:37.148663] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:37.151056] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833856000,1698833857000,7,26895399017,1698833857148
1698833856000,1698833857000,6,5842667443,1698833857148
1698833856000,1698833857000,4,2126800037,1698833857148
1698833856000,1698833857000,5,733383613,1698833857148
[m
[36m[10:17:37.206757] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:37.206853] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:37.209115] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833856000,1698833857000,9,297102635,1698833857206
1698833856000,1698833857000,11,315163393,1698833857206
1698833856000,1698833857000,8,16369363189,1698833857206
1698833856000,1698833857000,10,324339676,1698833857206
[m
[36m[10:17:37.661024] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:38.138833] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:38.138939] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:38.141213] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833857000,1698833858000,7,26895401163,1698833858139
1698833857000,1698833858000,4,2126802106,1698833858139
1698833857000,1698833858000,6,5842669603,1698833858139
1698833857000,1698833858000,5,733385739,1698833858139
[m
[36m[10:17:38.216906] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:38.217007] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:38.219339] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833857000,1698833858000,9,297104998,1698833858217
1698833857000,1698833858000,11,315165742,1698833858217
1698833857000,1698833858000,8,16369365429,1698833858217
1698833857000,1698833858000,10,324341891,1698833858217
[m
[36m[10:17:38.662310] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:38.672527] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:38.672836] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:38.673843] [D] [thread 127789] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:38.673939] [I] [thread 127789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:38.673957] [I] [thread 127789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:38.674073] [I] [thread 127789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:38.674086] [I] [thread 127789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:38.879113] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:38.879436] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:39.192872] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:39.192982] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:39.195356] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833858000,1698833859000,11,315168185,1698833859193
1698833858000,1698833859000,8,16369367909,1698833859193
1698833858000,1698833859000,10,324344378,1698833859193
1698833858000,1698833859000,9,297107658,1698833859193
[m
[36m[10:17:39.222263] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:39.222352] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:39.224343] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833858000,1698833859000,4,2126804941,1698833859222
1698833858000,1698833859000,7,26895403862,1698833859222
1698833858000,1698833859000,6,5842672210,1698833859222
1698833858000,1698833859000,5,733388434,1698833859222
[m
[36m[10:17:39.880689] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:40.212174] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:40.212250] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:40.213637] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833859000,1698833860000,11,315170771,1698833860212
1698833859000,1698833860000,8,16369370324,1698833860212
1698833859000,1698833860000,10,324346774,1698833860212
1698833859000,1698833860000,9,297110009,1698833860212
[m
[36m[10:17:40.218586] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:40.218661] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:40.220028] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833859000,1698833860000,6,5842674524,1698833860218
1698833859000,1698833860000,5,733390729,1698833860218
1698833859000,1698833860000,4,2126807254,1698833860218
1698833859000,1698833860000,7,26895406277,1698833860218
[m
[36m[10:17:40.882008] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:40.982627] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:40.982998] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:40.984105] [D] [thread 127794] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:40.984201] [I] [thread 127794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:40.984219] [I] [thread 127794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:40.984354] [I] [thread 127794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:40.984371] [I] [thread 127794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:41.194891] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:41.194958] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:41.196144] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833860000,1698833861000,8,16369372679,1698833861194
1698833860000,1698833861000,10,324349103,1698833861194
1698833860000,1698833861000,9,297112332,1698833861194
1698833860000,1698833861000,11,315173217,1698833861194
[m
[36m[10:17:41.207425] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:41.207753] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:41.210610] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:41.210680] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:41.211894] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833860000,1698833861000,6,5842676957,1698833861210
1698833860000,1698833861000,5,733393141,1698833861210
1698833860000,1698833861000,4,2126809730,1698833861210
1698833860000,1698833861000,7,26895408736,1698833861210
[m
[36m[10:17:42.171439] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:42.171545] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:42.173861] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833861000,1698833862000,8,16369375228,1698833862171
1698833861000,1698833862000,9,297114874,1698833862171
1698833861000,1698833862000,10,324351677,1698833862171
1698833861000,1698833862000,11,315175760,1698833862171
[m
[36m[10:17:42.209110] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:42.223328] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:42.223412] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:42.225566] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833861000,1698833862000,6,5842679497,1698833862223
1698833861000,1698833862000,5,733395579,1698833862223
1698833861000,1698833862000,4,2126812012,1698833862223
1698833861000,1698833862000,7,26895411134,1698833862223
[m
[36m[10:17:43.210410] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:43.216822] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:43.216917] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:43.219221] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833862000,1698833863000,5,733397930,1698833863216
1698833862000,1698833863000,4,2126814372,1698833863216
1698833862000,1698833863000,7,26895413401,1698833863216
1698833862000,1698833863000,6,5842681942,1698833863216
[m
[36m[10:17:43.225693] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:43.225779] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:43.227579] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833862000,1698833863000,8,16369377591,1698833863225
1698833862000,1698833863000,9,297117031,1698833863225
1698833862000,1698833863000,10,324353855,1698833863225
1698833862000,1698833863000,11,315177966,1698833863225
[m
[36m[10:17:43.253328] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:43.253654] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:43.254690] [D] [thread 127799] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:43.254795] [I] [thread 127799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:43.254813] [I] [thread 127799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:43.254928] [I] [thread 127799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:43.254941] [I] [thread 127799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:43.429342] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:43.429678] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:44.211515] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:44.211621] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:44.213950] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833863000,1698833864000,5,733400440,1698833864211
1698833863000,1698833864000,4,2126816795,1698833864211
1698833863000,1698833864000,7,26895415954,1698833864211
1698833863000,1698833864000,6,5842684462,1698833864211
[m
[36m[10:17:44.226336] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:44.226436] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:44.228245] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833863000,1698833864000,9,297119743,1698833864226
1698833863000,1698833864000,10,324356503,1698833864226
1698833863000,1698833864000,11,315180623,1698833864226
1698833863000,1698833864000,8,16369380320,1698833864226
[m
[36m[10:17:44.430906] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:45.217946] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:45.218053] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:45.220406] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833864000,1698833865000,5,733402864,1698833865218
1698833864000,1698833865000,4,2126818967,1698833865218
1698833864000,1698833865000,7,26895418128,1698833865218
1698833864000,1698833865000,6,5842686734,1698833865218
[m
[36m[10:17:45.226993] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:45.227090] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:45.228894] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833864000,1698833865000,9,297121903,1698833865227
1698833864000,1698833865000,10,324358824,1698833865227
1698833864000,1698833865000,11,315182826,1698833865227
1698833864000,1698833865000,8,16369382490,1698833865227
[m
[36m[10:17:45.432260] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:45.539659] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:45.540260] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:45.541071] [D] [thread 127804] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:45.541169] [I] [thread 127804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:45.541186] [I] [thread 127804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:45.541302] [I] [thread 127804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:45.541315] [I] [thread 127804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:45.744722] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:45.745213] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:46.213824] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:46.213893] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:46.215568] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833865000,1698833866000,4,2126821549,1698833866213
1698833865000,1698833866000,7,26895420835,1698833866213
1698833865000,1698833866000,6,5842689337,1698833866213
1698833865000,1698833866000,5,733405548,1698833866213
[m
[36m[10:17:46.221372] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:46.221464] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:46.223700] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833865000,1698833866000,11,315185470,1698833866221
1698833865000,1698833866000,9,297124596,1698833866221
1698833865000,1698833866000,8,16369385158,1698833866221
1698833865000,1698833866000,10,324361483,1698833866221
[m
[36m[10:17:46.746500] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:47.202834] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:47.202908] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:47.204261] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833866000,1698833867000,4,2126823702,1698833867202
1698833866000,1698833867000,7,26895423019,1698833867202
1698833866000,1698833867000,6,5842691587,1698833867202
1698833866000,1698833867000,5,733407844,1698833867202
[m
[36m[10:17:47.210240] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:47.210314] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:47.211710] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833866000,1698833867000,8,16369387413,1698833867210
1698833866000,1698833867000,10,324363793,1698833867210
1698833866000,1698833867000,11,315187969,1698833867210
1698833866000,1698833867000,9,297127057,1698833867210
[m
[36m[10:17:47.747889] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:47.791254] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:47.791770] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:47.792581] [D] [thread 127809] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:47.792673] [I] [thread 127809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:47.792692] [I] [thread 127809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:47.792808] [I] [thread 127809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:47.792821] [I] [thread 127809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:47.958477] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:47.958997] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:48.200367] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:48.200474] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:48.202882] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833867000,1698833868000,11,315190345,1698833868200
1698833867000,1698833868000,10,324366201,1698833868200
1698833867000,1698833868000,8,16369389918,1698833868200
1698833867000,1698833868000,9,297129495,1698833868200
[m
[36m[10:17:48.227097] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:48.227190] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:48.229137] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833867000,1698833868000,4,2126826457,1698833868227
1698833867000,1698833868000,7,26895425580,1698833868227
1698833867000,1698833868000,6,5842694172,1698833868227
1698833867000,1698833868000,5,733410458,1698833868227
[m
[36m[10:17:48.960294] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:49.194826] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:49.194931] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:49.197225] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833868000,1698833869000,11,315192842,1698833869195
1698833868000,1698833869000,10,324368646,1698833869195
1698833868000,1698833869000,8,16369392428,1698833869195
1698833868000,1698833869000,9,297131823,1698833869195
[m
[36m[10:17:49.202806] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:49.202899] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:49.205109] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833868000,1698833869000,7,26895427900,1698833869202
1698833868000,1698833869000,6,5842696443,1698833869202
1698833868000,1698833869000,5,733412675,1698833869202
1698833868000,1698833869000,4,2126828791,1698833869202
[m
[36m[10:17:49.961609] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:50.065620] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:50.066186] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:50.067005] [D] [thread 127814] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:50.067099] [I] [thread 127814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:50.067117] [I] [thread 127814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:50.067232] [I] [thread 127814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:50.067246] [I] [thread 127814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:50.181392] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:50.181503] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:50.183872] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833869000,1698833870000,7,26895430255,1698833870181
1698833869000,1698833870000,6,5842698849,1698833870181
1698833869000,1698833870000,5,733415121,1698833870181
1698833869000,1698833870000,4,2126831202,1698833870181
[m
[36m[10:17:50.210294] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:50.210381] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:50.212376] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833869000,1698833870000,11,315195183,1698833870210
1698833869000,1698833870000,10,324370797,1698833870210
1698833869000,1698833870000,9,297134067,1698833870210
1698833869000,1698833870000,8,16369394729,1698833870210
[m
[36m[10:17:50.281867] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:50.282329] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:51.168120] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:51.168212] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:51.170473] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833870000,1698833871000,7,26895432798,1698833871168
1698833870000,1698833871000,5,733417526,1698833871168
1698833870000,1698833871000,4,2126833566,1698833871168
1698833870000,1698833871000,6,5842701279,1698833871168
[m
[36m[10:17:51.198245] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:51.198335] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:51.200572] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833870000,1698833871000,10,324373352,1698833871198
1698833870000,1698833871000,9,297136561,1698833871198
1698833870000,1698833871000,8,16369397261,1698833871198
1698833870000,1698833871000,11,315197887,1698833871198
[m
[36m[10:17:51.283587] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:52.162012] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:52.162118] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:52.164188] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833871000,1698833872000,7,26895434968,1698833872162
1698833871000,1698833872000,4,2126835889,1698833872162
1698833871000,1698833872000,5,733419849,1698833872162
1698833871000,1698833872000,6,5842703540,1698833872162
[m
[36m[10:17:52.226159] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:52.226286] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:52.228503] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833871000,1698833872000,10,324375695,1698833872226
1698833871000,1698833872000,9,297138862,1698833872226
1698833871000,1698833872000,11,315200016,1698833872226
1698833871000,1698833872000,8,16369399527,1698833872226
[m
[36m[10:17:52.284879] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:52.337326] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:52.337916] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:52.338762] [D] [thread 127819] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:52.338858] [I] [thread 127819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:52.338875] [I] [thread 127819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:52.338991] [I] [thread 127819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:52.339004] [I] [thread 127819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:52.511990] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:52.512310] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:53.202819] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:53.202891] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:53.204024] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833872000,1698833873000,11,315202658,1698833873202
1698833872000,1698833873000,8,16369402118,1698833873202
1698833872000,1698833873000,9,297141636,1698833873202
1698833872000,1698833873000,10,324378501,1698833873202
[m
[36m[10:17:53.214668] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:53.214722] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:53.215984] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833872000,1698833873000,7,26895437792,1698833873214
1698833872000,1698833873000,4,2126838374,1698833873214
1698833872000,1698833873000,5,733422414,1698833873214
1698833872000,1698833873000,6,5842706165,1698833873214
[m
[36m[10:17:53.513510] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:54.197152] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:54.197224] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:54.198682] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833873000,1698833874000,11,315204905,1698833874197
1698833873000,1698833874000,9,297143765,1698833874197
1698833873000,1698833874000,10,324380624,1698833874197
1698833873000,1698833874000,8,16369404373,1698833874197
[m
[36m[10:17:54.209580] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:54.209643] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:54.211023] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833873000,1698833874000,4,2126840749,1698833874209
1698833873000,1698833874000,6,5842708380,1698833874209
1698833873000,1698833874000,5,733424629,1698833874209
1698833873000,1698833874000,7,26895440134,1698833874209
[m
[36m[10:17:54.514924] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:54.559997] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:54.560339] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:54.561360] [D] [thread 127824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:54.561461] [I] [thread 127824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:54.561479] [I] [thread 127824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:54.561597] [I] [thread 127824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:54.561659] [I] [thread 127824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:54.754654] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:54.754995] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:55.194476] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:55.194581] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:55.196588] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833874000,1698833875000,11,315207369,1698833875194
1698833874000,1698833875000,9,297146302,1698833875194
1698833874000,1698833875000,10,324383114,1698833875194
1698833874000,1698833875000,8,16369406990,1698833875194
[m
[36m[10:17:55.197278] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:55.197350] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:55.199288] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833874000,1698833875000,6,5842711002,1698833875197
1698833874000,1698833875000,5,733427282,1698833875197
1698833874000,1698833875000,7,26895442783,1698833875197
1698833874000,1698833875000,4,2126843434,1698833875197
[m
[36m[10:17:55.756213] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:56.186040] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:56.186146] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:56.188452] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833875000,1698833876000,5,733429438,1698833876186
1698833875000,1698833876000,6,5842713187,1698833876186
1698833875000,1698833876000,4,2126845515,1698833876186
1698833875000,1698833876000,7,26895444966,1698833876186
[m
[36m[10:17:56.210169] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:56.210310] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:56.212259] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833875000,1698833876000,11,315209905,1698833876210
1698833875000,1698833876000,9,297148556,1698833876210
1698833875000,1698833876000,10,324385434,1698833876210
1698833875000,1698833876000,8,16369409201,1698833876210
[m
[36m[10:17:56.757502] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:56.786008] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:56.786381] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:56.787447] [D] [thread 127829] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:56.787547] [I] [thread 127829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:56.787565] [I] [thread 127829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:56.787683] [I] [thread 127829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:56.787748] [I] [thread 127829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:57.004988] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:57.005484] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:57.179091] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:57.179201] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:57.181490] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833876000,1698833877000,5,733432037,1698833877179
1698833876000,1698833877000,6,5842715732,1698833877179
1698833876000,1698833877000,4,2126848149,1698833877179
1698833876000,1698833877000,7,26895447502,1698833877179
[m
[36m[10:17:57.214897] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:57.214980] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:57.216616] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833876000,1698833877000,9,297151045,1698833877215
1698833876000,1698833877000,10,324387773,1698833877215
1698833876000,1698833877000,8,16369411751,1698833877215
1698833876000,1698833877000,11,315212310,1698833877215
[m
[36m[10:17:58.006374] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:58.201931] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:58.202037] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:58.204376] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833877000,1698833878000,4,2126850528,1698833878202
1698833877000,1698833878000,5,733434308,1698833878202
1698833877000,1698833878000,6,5842718062,1698833878202
1698833877000,1698833878000,7,26895449785,1698833878202
[m
[36m[10:17:58.226680] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:58.226767] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:58.228671] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833877000,1698833878000,10,324390438,1698833878226
1698833877000,1698833878000,8,16369414033,1698833878226
1698833877000,1698833878000,11,315214894,1698833878226
1698833877000,1698833878000,9,297153530,1698833878226
[m
[36m[10:17:59.007650] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:59.108724] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:59.109088] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:59.110270] [D] [thread 127834] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:17:59.110364] [I] [thread 127834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:59.110383] [I] [thread 127834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:17:59.110501] [I] [thread 127834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:17:59.110514] [I] [thread 127834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:17:59.218438] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:59.218546] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:59.220401] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833878000,1698833879000,11,315217025,1698833879218
1698833878000,1698833879000,8,16369416357,1698833879218
1698833878000,1698833879000,9,297155747,1698833879218
1698833878000,1698833879000,10,324392702,1698833879218
[m
[36m[10:17:59.221094] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:17:59.221164] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:17:59.222953] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833878000,1698833879000,6,5842720551,1698833879221
1698833878000,1698833879000,5,733436691,1698833879221
1698833878000,1698833879000,7,26895452136,1698833879221
1698833878000,1698833879000,4,2126853025,1698833879221
[m
[36m[10:17:59.351554] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:17:59.351905] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:00.195801] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:00.195875] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:00.196994] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833879000,1698833880000,11,315219731,1698833880195
1698833879000,1698833880000,8,16369418937,1698833880195
1698833879000,1698833880000,9,297158362,1698833880195
1698833879000,1698833880000,10,324395334,1698833880195
[m
[36m[10:18:00.218115] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:00.218259] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:00.220191] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833879000,1698833880000,5,733439232,1698833880218
1698833879000,1698833880000,7,26895454718,1698833880218
1698833879000,1698833880000,4,2126855421,1698833880218
1698833879000,1698833880000,6,5842723186,1698833880218
[m
[36m[10:18:00.353144] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:01.222593] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:01.222663] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:01.223861] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833880000,1698833881000,5,733441639,1698833881222
1698833880000,1698833881000,7,26895456913,1698833881222
1698833880000,1698833881000,4,2126857683,1698833881222
1698833880000,1698833881000,6,5842725476,1698833881222
[m
[36m[10:18:01.226424] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:01.226499] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:01.227853] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833880000,1698833881000,11,315222019,1698833881226
1698833880000,1698833881000,8,16369421094,1698833881226
1698833880000,1698833881000,9,297160456,1698833881226
1698833880000,1698833881000,10,324397489,1698833881226
[m
[36m[10:18:01.354365] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:01.366814] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:01.367181] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:01.368446] [D] [thread 127840] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:01.368568] [I] [thread 127840] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:01.368588] [I] [thread 127840] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:01.368730] [I] [thread 127840] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:01.368790] [I] [thread 127840] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:01.631587] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:01.631906] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:02.215274] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:02.215381] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:02.217663] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833881000,1698833882000,9,297163051,1698833882215
1698833881000,1698833882000,8,16369423722,1698833882215
1698833881000,1698833882000,10,324400103,1698833882215
1698833881000,1698833882000,11,315224687,1698833882215
[m
[36m[10:18:02.222293] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:02.222386] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:02.224595] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833881000,1698833882000,7,26895459502,1698833882222
1698833881000,1698833882000,4,2126860167,1698833882222
1698833881000,1698833882000,6,5842728036,1698833882222
1698833881000,1698833882000,5,733444293,1698833882222
[m
[36m[10:18:02.633107] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:03.219250] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:03.219356] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:03.221704] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833882000,1698833883000,7,26895461722,1698833883219
1698833882000,1698833883000,4,2126862435,1698833883219
1698833882000,1698833883000,6,5842730226,1698833883219
1698833882000,1698833883000,5,733446512,1698833883219
[m
[36m[10:18:03.224277] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:03.224350] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:03.226096] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833882000,1698833883000,9,297165393,1698833883224
1698833882000,1698833883000,10,324402304,1698833883224
1698833882000,1698833883000,8,16369425959,1698833883224
1698833882000,1698833883000,11,315226918,1698833883224
[m
[36m[10:18:03.634352] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:03.776962] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:03.777287] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:03.778521] [D] [thread 127845] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:03.778615] [I] [thread 127845] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:03.778632] [I] [thread 127845] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:03.778749] [I] [thread 127845] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:03.778762] [I] [thread 127845] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:04.039758] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:04.040085] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:04.198378] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:04.198488] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:04.200258] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833883000,1698833884000,10,324404645,1698833884198
1698833883000,1698833884000,8,16369428376,1698833884198
1698833883000,1698833884000,11,315229232,1698833884198
1698833883000,1698833884000,9,297167906,1698833884198
[m
[36m[10:18:04.212449] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:04.212525] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:04.214304] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833883000,1698833884000,7,26895464352,1698833884212
1698833883000,1698833884000,6,5842732773,1698833884212
1698833883000,1698833884000,5,733449106,1698833884212
1698833883000,1698833884000,4,2126865170,1698833884212
[m
[36m[10:18:05.041462] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:05.212129] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:05.212226] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:05.214297] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833884000,1698833885000,6,5842735033,1698833885212
1698833884000,1698833885000,4,2126867291,1698833885212
1698833884000,1698833885000,7,26895466766,1698833885212
1698833884000,1698833885000,5,733451293,1698833885212
[m
[36m[10:18:05.214840] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:05.214913] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:05.216828] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833884000,1698833885000,10,324407194,1698833885214
1698833884000,1698833885000,8,16369430737,1698833885214
1698833884000,1698833885000,11,315231710,1698833885214
1698833884000,1698833885000,9,297170269,1698833885214
[m
[36m[10:18:06.042426] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:06.083928] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:06.084259] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:06.085621] [D] [thread 127851] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:06.085716] [I] [thread 127851] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:06.085734] [I] [thread 127851] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:06.085852] [I] [thread 127851] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:06.085864] [I] [thread 127851] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:06.190307] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:06.190413] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:06.192707] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833885000,1698833886000,8,16369433149,1698833886190
1698833885000,1698833886000,11,315233883,1698833886190
1698833885000,1698833886000,9,297172515,1698833886190
1698833885000,1698833886000,10,324409455,1698833886190
[m
[36m[10:18:06.213242] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:06.213328] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:06.215166] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833885000,1698833886000,4,2126869711,1698833886213
1698833885000,1698833886000,7,26895469176,1698833886213
1698833885000,1698833886000,6,5842737479,1698833886213
1698833885000,1698833886000,5,733453825,1698833886213
[m
[36m[10:18:06.252371] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:06.252695] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:07.181587] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:07.181656] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:07.182897] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833886000,1698833887000,8,16369435694,1698833887181
1698833886000,1698833887000,9,297175161,1698833887181
1698833886000,1698833887000,11,315236607,1698833887181
1698833886000,1698833887000,10,324412127,1698833887181
[m
[36m[10:18:07.206807] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:07.206886] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:07.208416] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833886000,1698833887000,4,2126872081,1698833887206
1698833886000,1698833887000,7,26895471666,1698833887206
1698833886000,1698833887000,6,5842739969,1698833887206
1698833886000,1698833887000,5,733456211,1698833887206
[m
[36m[10:18:07.254010] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:08.157788] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:08.157895] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:08.160263] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833887000,1698833888000,8,16369437884,1698833888157
1698833887000,1698833888000,9,297177242,1698833888157
1698833887000,1698833888000,11,315238763,1698833888157
1698833887000,1698833888000,10,324414212,1698833888157
[m
[36m[10:18:08.200468] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:08.200558] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:08.202831] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833887000,1698833888000,4,2126874383,1698833888200
1698833887000,1698833888000,7,26895473922,1698833888200
1698833887000,1698833888000,6,5842742265,1698833888200
1698833887000,1698833888000,5,733458546,1698833888200
[m
[36m[10:18:08.255378] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:08.307576] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:08.307935] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:08.308939] [D] [thread 127857] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:08.309052] [I] [thread 127857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:08.309070] [I] [thread 127857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:08.309186] [I] [thread 127857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:08.309202] [I] [thread 127857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:08.492607] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:08.492922] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:09.213246] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:09.213353] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:09.215715] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833888000,1698833889000,8,16369440549,1698833889213
1698833888000,1698833889000,9,297180029,1698833889213
1698833888000,1698833889000,11,315241351,1698833889213
1698833888000,1698833889000,10,324416783,1698833889213
[m
[36m[10:18:09.227842] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:09.227936] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:09.229761] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833888000,1698833889000,4,2126876936,1698833889227
1698833888000,1698833889000,7,26895476536,1698833889227
1698833888000,1698833889000,6,5842744842,1698833889227
1698833888000,1698833889000,5,733461075,1698833889227
[m
[36m[10:18:09.494085] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:10.207900] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:10.208005] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:10.210351] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833889000,1698833890000,7,26895478650,1698833890208
1698833889000,1698833890000,6,5842747026,1698833890208
1698833889000,1698833890000,5,733463295,1698833890208
1698833889000,1698833890000,4,2126879276,1698833890208
[m
[36m[10:18:10.221189] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:10.221281] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:10.223185] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833889000,1698833890000,8,16369442832,1698833890221
1698833889000,1698833890000,11,315243575,1698833890221
1698833889000,1698833890000,10,324418971,1698833890221
1698833889000,1698833890000,9,297182334,1698833890221
[m
[36m[10:18:10.494358] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:10.511762] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:10.512068] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:10.513146] [D] [thread 127863] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:10.513248] [I] [thread 127863] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:10.513266] [I] [thread 127863] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:10.513384] [I] [thread 127863] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:10.513445] [I] [thread 127863] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:10.727890] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:10.728469] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:11.215988] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:11.216097] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:11.218481] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833890000,1698833891000,7,26895481254,1698833891216
1698833890000,1698833891000,6,5842749682,1698833891216
1698833890000,1698833891000,5,733465898,1698833891216
1698833890000,1698833891000,4,2126881862,1698833891216
[m
[36m[10:18:11.226373] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:11.226473] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:11.228162] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833890000,1698833891000,10,324421593,1698833891226
1698833890000,1698833891000,11,315246193,1698833891226
1698833890000,1698833891000,9,297184826,1698833891226
1698833890000,1698833891000,8,16369445527,1698833891226
[m
[36m[10:18:11.729752] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:12.207361] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:12.207471] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:12.209764] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833891000,1698833892000,7,26895483530,1698833892207
1698833891000,1698833892000,6,5842751856,1698833892207
1698833891000,1698833892000,5,733468026,1698833892207
1698833891000,1698833892000,4,2126883988,1698833892207
[m
[36m[10:18:12.219408] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:12.219502] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:12.221331] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833891000,1698833892000,9,297187098,1698833892219
1698833891000,1698833892000,10,324423952,1698833892219
1698833891000,1698833892000,8,16369447815,1698833892219
1698833891000,1698833892000,11,315248625,1698833892219
[m
[36m[10:18:12.731010] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:12.767045] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:12.767604] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:12.768413] [D] [thread 127872] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:12.768505] [I] [thread 127872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:12.768523] [I] [thread 127872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:12.768639] [I] [thread 127872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:12.768652] [I] [thread 127872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:12.942955] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:12.943296] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:13.188086] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:13.188195] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:13.190541] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833892000,1698833893000,7,26895486042,1698833893188
1698833892000,1698833893000,6,5842754431,1698833893188
1698833892000,1698833893000,5,733470722,1698833893188
1698833892000,1698833893000,4,2126886559,1698833893188
[m
[36m[10:18:13.208802] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:13.208897] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:13.210952] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833892000,1698833893000,9,297189594,1698833893208
1698833892000,1698833893000,10,324426362,1698833893208
1698833892000,1698833893000,8,16369450309,1698833893208
1698833892000,1698833893000,11,315251037,1698833893208
[m
[36m[10:18:13.944536] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:14.205334] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:14.205412] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:14.206782] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833893000,1698833894000,10,324428804,1698833894205
1698833893000,1698833894000,11,315253504,1698833894205
1698833893000,1698833894000,8,16369452685,1698833894205
1698833893000,1698833894000,9,297192058,1698833894205
[m
[36m[10:18:14.215704] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:14.215778] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:14.217034] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833893000,1698833894000,7,26895488490,1698833894215
1698833893000,1698833894000,6,5842756745,1698833894215
1698833893000,1698833894000,5,733473008,1698833894215
1698833893000,1698833894000,4,2126888913,1698833894215
[m
[36m[10:18:14.945837] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:15.119674] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:15.119982] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:15.121063] [D] [thread 127879] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:15.121161] [I] [thread 127879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:15.121179] [I] [thread 127879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:15.121297] [I] [thread 127879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:15.121356] [I] [thread 127879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:15.202807] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:15.202914] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:15.205236] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833894000,1698833895000,10,324430894,1698833895203
1698833894000,1698833895000,11,315255622,1698833895203
1698833894000,1698833895000,9,297194312,1698833895203
1698833894000,1698833895000,8,16369455040,1698833895203
[m
[36m[10:18:15.207274] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:15.207354] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:15.209070] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833894000,1698833895000,6,5842759056,1698833895207
1698833894000,1698833895000,5,733475374,1698833895207
1698833894000,1698833895000,4,2126891297,1698833895207
1698833894000,1698833895000,7,26895491031,1698833895207
[m
[36m[10:18:15.330334] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:15.330723] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:16.196008] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:16.196104] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:16.198134] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833895000,1698833896000,6,5842761579,1698833896196
1698833895000,1698833896000,5,733477793,1698833896196
1698833895000,1698833896000,4,2126893665,1698833896196
1698833895000,1698833896000,7,26895493479,1698833896196
[m
[36m[10:18:16.202339] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:16.202423] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:16.204357] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833895000,1698833896000,10,324433557,1698833896202
1698833895000,1698833896000,11,315258339,1698833896202
1698833895000,1698833896000,9,297196934,1698833896202
1698833895000,1698833896000,8,16369457556,1698833896202
[m
[36m[10:18:16.331971] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:17.218252] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:17.218357] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:17.220681] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833896000,1698833897000,10,324435842,1698833897218
1698833896000,1698833897000,11,315260451,1698833897218
1698833896000,1698833897000,9,297199061,1698833897218
1698833896000,1698833897000,8,16369459720,1698833897218
[m
[36m[10:18:17.221290] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:17.221377] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:17.223235] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833896000,1698833897000,6,5842763981,1698833897221
1698833896000,1698833897000,5,733480122,1698833897221
1698833896000,1698833897000,4,2126895901,1698833897221
1698833896000,1698833897000,7,26895495654,1698833897221
[m
[36m[10:18:17.333286] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:17.395666] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:17.396214] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:17.397002] [D] [thread 127884] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:17.397097] [I] [thread 127884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:17.397116] [I] [thread 127884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:17.397233] [I] [thread 127884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:17.397246] [I] [thread 127884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:17.572603] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:17.573139] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:18.194149] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:18.194306] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:18.196591] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833897000,1698833898000,11,315263019,1698833898194
1698833897000,1698833898000,9,297201613,1698833898194
1698833897000,1698833898000,8,16369462355,1698833898194
1698833897000,1698833898000,10,324438529,1698833898194
[m
[36m[10:18:18.205240] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:18.205331] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:18.207055] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833897000,1698833898000,4,2126898392,1698833898205
1698833897000,1698833898000,5,733482673,1698833898205
1698833897000,1698833898000,7,26895498323,1698833898205
1698833897000,1698833898000,6,5842766649,1698833898205
[m
[36m[10:18:18.574406] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:19.211975] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:19.212080] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:19.214488] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833898000,1698833899000,4,2126900688,1698833899212
1698833898000,1698833899000,5,733484804,1698833899212
1698833898000,1698833899000,7,26895500490,1698833899212
1698833898000,1698833899000,6,5842768768,1698833899212
[m
[36m[10:18:19.217095] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:19.217187] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:19.219179] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833898000,1698833899000,11,315265409,1698833899217
1698833898000,1698833899000,9,297203815,1698833899217
1698833898000,1698833899000,8,16369464522,1698833899217
1698833898000,1698833899000,10,324440717,1698833899217
[m
[36m[10:18:19.575674] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:19.629031] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:19.629644] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:19.630431] [D] [thread 127889] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:19.630522] [I] [thread 127889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:19.630539] [I] [thread 127889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:19.630659] [I] [thread 127889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:19.630673] [I] [thread 127889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:19.827930] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:19.828531] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:20.195391] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:20.195461] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:20.197291] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833899000,1698833900000,5,733487527,1698833900195
1698833899000,1698833900000,7,26895503079,1698833900195
1698833899000,1698833900000,6,5842771497,1698833900195
1698833899000,1698833900000,4,2126903402,1698833900195
[m
[36m[10:18:20.224692] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:20.224776] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:20.226779] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833899000,1698833900000,9,297206448,1698833900224
1698833899000,1698833900000,10,324443275,1698833900224
1698833899000,1698833900000,8,16369467058,1698833900224
1698833899000,1698833900000,11,315268027,1698833900224
[m
[36m[10:18:20.829816] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:21.207959] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:21.208033] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:21.209196] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833900000,1698833901000,8,16369469334,1698833901208
1698833900000,1698833901000,10,324445646,1698833901208
1698833900000,1698833901000,11,315270361,1698833901208
1698833900000,1698833901000,9,297208826,1698833901208
[m
[36m[10:18:21.221435] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:21.221508] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:21.222914] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833900000,1698833901000,5,733489862,1698833901221
1698833900000,1698833901000,7,26895505324,1698833901221
1698833900000,1698833901000,6,5842773690,1698833901221
1698833900000,1698833901000,4,2126905532,1698833901221
[m
[36m[10:18:21.831121] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:21.931681] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:21.932333] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:21.933069] [D] [thread 127895] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:21.933161] [I] [thread 127895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:21.933179] [I] [thread 127895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:21.933293] [I] [thread 127895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:21.933305] [I] [thread 127895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:22.158847] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:22.159165] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:22.167806] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:22.167871] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:22.169088] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833901000,1698833902000,7,26895507746,1698833902167
1698833901000,1698833902000,6,5842776214,1698833902167
1698833901000,1698833902000,4,2126908052,1698833902167
1698833901000,1698833902000,5,733492396,1698833902167
[m
[36m[10:18:22.193142] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:22.193243] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:22.195583] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833901000,1698833902000,10,324447929,1698833902193
1698833901000,1698833902000,11,315272595,1698833902193
1698833901000,1698833902000,8,16369471791,1698833902193
1698833901000,1698833902000,9,297211216,1698833902193
[m
[36m[10:18:23.160403] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:23.177393] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:23.177492] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:23.179862] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833902000,1698833903000,10,324450420,1698833903177
1698833902000,1698833903000,11,315275134,1698833903177
1698833902000,1698833903000,8,16369474218,1698833903177
1698833902000,1698833903000,9,297213649,1698833903177
[m
[36m[10:18:23.206934] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:23.207026] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:23.209279] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833902000,1698833903000,5,733494660,1698833903207
1698833902000,1698833903000,7,26895510169,1698833903207
1698833902000,1698833903000,4,2126910291,1698833903207
1698833902000,1698833903000,6,5842778537,1698833903207
[m
[36m[10:18:24.161729] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:24.196951] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:24.197055] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:24.199201] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833903000,1698833904000,7,26895512399,1698833904197
1698833903000,1698833904000,4,2126912658,1698833904197
1698833903000,1698833904000,6,5842780853,1698833904197
1698833903000,1698833904000,5,733497194,1698833904197
[m
[36m[10:18:24.226247] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:24.226329] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:24.228341] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833903000,1698833904000,10,324452664,1698833904226
1698833903000,1698833904000,11,315277377,1698833904226
1698833903000,1698833904000,8,16369476402,1698833904226
1698833903000,1698833904000,9,297215743,1698833904226
[m
[36m[10:18:24.396707] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:24.397042] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:24.398051] [D] [thread 127900] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:24.398148] [I] [thread 127900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:24.398166] [I] [thread 127900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:24.398317] [I] [thread 127900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:24.398333] [I] [thread 127900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:24.659196] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:24.659529] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:25.189678] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:25.189786] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:25.192142] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833904000,1698833905000,4,2126915172,1698833905189
1698833904000,1698833905000,6,5842783398,1698833905189
1698833904000,1698833905000,7,26895514966,1698833905189
1698833904000,1698833905000,5,733499682,1698833905189
[m
[36m[10:18:25.207633] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:25.207740] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:25.209575] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833904000,1698833905000,8,16369479017,1698833905207
1698833904000,1698833905000,9,297218402,1698833905207
1698833904000,1698833905000,11,315280079,1698833905207
1698833904000,1698833905000,10,324455406,1698833905207
[m
[36m[10:18:25.660783] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:26.190726] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:26.190834] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:26.193127] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833905000,1698833906000,8,16369481167,1698833906190
1698833905000,1698833906000,9,297220623,1698833906190
1698833905000,1698833906000,11,315282319,1698833906190
1698833905000,1698833906000,10,324457616,1698833906190
[m
[36m[10:18:26.214493] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:26.214587] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:26.216431] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833905000,1698833906000,4,2126917361,1698833906214
1698833905000,1698833906000,7,26895517146,1698833906214
1698833905000,1698833906000,6,5842785535,1698833906214
1698833905000,1698833906000,5,733501817,1698833906214
[m
[36m[10:18:26.662086] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:26.761017] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:26.761369] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:26.762443] [D] [thread 127905] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:26.762536] [I] [thread 127905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:26.762554] [I] [thread 127905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:26.762671] [I] [thread 127905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:26.762685] [I] [thread 127905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:26.957832] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:26.958173] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:27.194684] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:27.194762] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:27.196136] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833906000,1698833907000,9,297223085,1698833907194
1698833906000,1698833907000,8,16369483713,1698833907194
1698833906000,1698833907000,11,315284706,1698833907194
1698833906000,1698833907000,10,324460037,1698833907194
[m
[36m[10:18:27.219499] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:27.219573] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:27.220775] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833906000,1698833907000,7,26895519733,1698833907219
1698833906000,1698833907000,6,5842788156,1698833907219
1698833906000,1698833907000,5,733504423,1698833907219
1698833906000,1698833907000,4,2126920186,1698833907219
[m
[36m[10:18:27.959402] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:28.210605] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:28.210709] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:28.212952] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833907000,1698833908000,11,315287299,1698833908210
1698833907000,1698833908000,9,297225389,1698833908210
1698833907000,1698833908000,8,16369486028,1698833908210
1698833907000,1698833908000,10,324462443,1698833908210
[m
[36m[10:18:28.213564] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:28.213648] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:28.215875] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833907000,1698833908000,7,26895522018,1698833908213
1698833907000,1698833908000,6,5842790421,1698833908213
1698833907000,1698833908000,5,733506698,1698833908213
1698833907000,1698833908000,4,2126922230,1698833908213
[m
[36m[10:18:28.960753] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:29.107483] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:29.107843] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:29.109007] [D] [thread 127910] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:29.109103] [I] [thread 127910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:29.109120] [I] [thread 127910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:29.109236] [I] [thread 127910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:29.109249] [I] [thread 127910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:29.219819] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:29.219911] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:29.222089] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833908000,1698833909000,6,5842792962,1698833909219
1698833908000,1698833909000,7,26895524489,1698833909219
1698833908000,1698833909000,5,733509186,1698833909219
1698833908000,1698833909000,4,2126924736,1698833909219
[m
[36m[10:18:29.229649] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:29.229758] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:29.231611] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833908000,1698833909000,9,297227750,1698833909229
1698833908000,1698833909000,8,16369488389,1698833909229
1698833908000,1698833909000,10,324464669,1698833909229
1698833908000,1698833909000,11,315289630,1698833909229
[m
[36m[10:18:29.351703] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:29.352218] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:30.205517] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:30.205625] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:30.207749] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833909000,1698833910000,8,16369490905,1698833910205
1698833909000,1698833910000,10,324467277,1698833910205
1698833909000,1698833910000,11,315292196,1698833910205
1698833909000,1698833910000,9,297230445,1698833910205
[m
[36m[10:18:30.208317] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:30.208390] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:30.210329] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833909000,1698833910000,5,733511594,1698833910208
1698833909000,1698833910000,7,26895527117,1698833910208
1698833909000,1698833910000,6,5842795535,1698833910208
1698833909000,1698833910000,4,2126927019,1698833910208
[m
[36m[10:18:30.353554] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:31.180749] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:31.180892] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:31.182903] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833910000,1698833911000,8,16369493050,1698833911180
1698833910000,1698833911000,10,324469402,1698833911180
1698833910000,1698833911000,11,315294271,1698833911180
1698833910000,1698833911000,9,297232611,1698833911180
[m
[36m[10:18:31.197038] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:31.197126] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:31.198945] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833910000,1698833911000,5,733513833,1698833911197
1698833910000,1698833911000,4,2126929384,1698833911197
1698833910000,1698833911000,7,26895529328,1698833911197
1698833910000,1698833911000,6,5842797792,1698833911197
[m
[36m[10:18:31.354959] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:31.374271] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:31.374790] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:31.375584] [D] [thread 127915] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:31.375674] [I] [thread 127915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:31.375692] [I] [thread 127915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:31.375808] [I] [thread 127915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:31.375822] [I] [thread 127915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:31.583221] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:31.583738] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:32.187962] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:32.188067] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:32.190361] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833911000,1698833912000,5,733516439,1698833912188
1698833911000,1698833912000,4,2126931876,1698833912188
1698833911000,1698833912000,7,26895531966,1698833912188
1698833911000,1698833912000,6,5842800361,1698833912188
[m
[36m[10:18:32.224599] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:32.224694] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:32.226770] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833911000,1698833912000,8,16369495818,1698833912224
1698833911000,1698833912000,11,315296844,1698833912224
1698833911000,1698833912000,10,324471958,1698833912224
1698833911000,1698833912000,9,297235123,1698833912224
[m
[36m[10:18:32.585079] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:33.185269] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:33.185375] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:33.187757] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833912000,1698833913000,5,733518617,1698833913185
1698833912000,1698833913000,4,2126934024,1698833913185
1698833912000,1698833913000,6,5842802487,1698833913185
1698833912000,1698833913000,7,26895534106,1698833913185
[m
[36m[10:18:33.216464] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:33.216552] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:33.218582] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833912000,1698833913000,11,315299297,1698833913216
1698833912000,1698833913000,10,324474240,1698833913216
1698833912000,1698833913000,9,297237340,1698833913216
1698833912000,1698833913000,8,16369498095,1698833913216
[m
[36m[10:18:33.586383] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:33.702392] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:33.702996] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:33.703773] [D] [thread 127921] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:33.703867] [I] [thread 127921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:33.703885] [I] [thread 127921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:33.704003] [I] [thread 127921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:33.704016] [I] [thread 127921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:33.927241] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:33.927795] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:34.179921] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:34.179994] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:34.181339] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833913000,1698833914000,5,733521274,1698833914180
1698833913000,1698833914000,4,2126936647,1698833914180
1698833913000,1698833914000,6,5842805185,1698833914180
1698833913000,1698833914000,7,26895536745,1698833914180
[m
[36m[10:18:34.210227] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:34.210304] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:34.211833] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833913000,1698833914000,10,324476663,1698833914210
1698833913000,1698833914000,9,297239896,1698833914210
1698833913000,1698833914000,11,315301824,1698833914210
1698833913000,1698833914000,8,16369500720,1698833914210
[m
[36m[10:18:34.929111] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:35.161867] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:35.161978] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:35.163929] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833914000,1698833915000,5,733523467,1698833915162
1698833914000,1698833915000,4,2126938839,1698833915162
1698833914000,1698833915000,6,5842807443,1698833915162
1698833914000,1698833915000,7,26895539043,1698833915162
[m
[36m[10:18:35.213288] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:35.213388] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:35.215734] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833914000,1698833915000,10,324479272,1698833915213
1698833914000,1698833915000,9,297242217,1698833915213
1698833914000,1698833915000,11,315304324,1698833915213
1698833914000,1698833915000,8,16369503004,1698833915213
[m
[36m[10:18:35.930417] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:36.106812] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:36.107406] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:36.108136] [D] [thread 127927] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:36.108229] [I] [thread 127927] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:36.108246] [I] [thread 127927] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:36.108361] [I] [thread 127927] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:36.108375] [I] [thread 127927] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:36.222677] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:36.222785] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:36.225074] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833915000,1698833916000,5,733525862,1698833916222
1698833915000,1698833916000,4,2126941335,1698833916222
1698833915000,1698833916000,6,5842809816,1698833916222
1698833915000,1698833916000,7,26895541323,1698833916222
[m
[36m[10:18:36.229088] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:36.229181] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:36.231444] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833915000,1698833916000,9,297244514,1698833916229
1698833915000,1698833916000,11,315306510,1698833916229
1698833915000,1698833916000,10,324481561,1698833916229
1698833915000,1698833916000,8,16369505290,1698833916229
[m
[36m[10:18:36.335607] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:36.336169] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:37.210486] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:37.210576] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:37.212382] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833916000,1698833917000,11,315309308,1698833917210
1698833916000,1698833917000,10,324484115,1698833917210
1698833916000,1698833917000,8,16369507839,1698833917210
1698833916000,1698833917000,9,297247141,1698833917210
[m
[36m[10:18:37.219583] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:37.219657] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:37.221222] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833916000,1698833917000,5,733528456,1698833917219
1698833916000,1698833917000,7,26895543791,1698833917219
1698833916000,1698833917000,6,5842812240,1698833917219
1698833916000,1698833917000,4,2126943841,1698833917219
[m
[36m[10:18:37.337494] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:38.185876] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:38.185977] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:38.188055] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833917000,1698833918000,10,324486257,1698833918186
1698833917000,1698833918000,8,16369510010,1698833918186
1698833917000,1698833918000,9,297249293,1698833918186
1698833917000,1698833918000,11,315311511,1698833918186
[m
[36m[10:18:38.211470] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:38.211551] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:38.213172] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833917000,1698833918000,7,26895546031,1698833918211
1698833917000,1698833918000,6,5842814500,1698833918211
1698833917000,1698833918000,4,2126946146,1698833918211
1698833917000,1698833918000,5,733530919,1698833918211
[m
[36m[10:18:38.338812] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:38.361783] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:38.362338] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:38.363169] [D] [thread 127932] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:38.363259] [I] [thread 127932] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:38.363276] [I] [thread 127932] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:38.363394] [I] [thread 127932] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:38.363408] [I] [thread 127932] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:38.580361] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:38.580838] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:39.174455] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:39.174552] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:39.176836] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833918000,1698833919000,10,324488834,1698833919174
1698833918000,1698833919000,11,315314018,1698833919174
1698833918000,1698833919000,8,16369512600,1698833919174
1698833918000,1698833919000,9,297251969,1698833919174
[m
[36m[10:18:39.210670] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:39.210760] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:39.212714] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833918000,1698833919000,7,26895548640,1698833919210
1698833918000,1698833919000,6,5842817113,1698833919210
1698833918000,1698833919000,4,2126948647,1698833919210
1698833918000,1698833919000,5,733533407,1698833919210
[m
[36m[10:18:39.582159] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:40.166421] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:40.166506] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:40.168158] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833919000,1698833920000,11,315316313,1698833920166
1698833919000,1698833920000,10,324491047,1698833920166
1698833919000,1698833920000,9,297254073,1698833920166
1698833919000,1698833920000,8,16369514745,1698833920166
[m
[36m[10:18:40.206260] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:40.206347] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:40.208141] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833919000,1698833920000,7,26895550798,1698833920206
1698833919000,1698833920000,6,5842819294,1698833920206
1698833919000,1698833920000,4,2126950739,1698833920206
1698833919000,1698833920000,5,733535571,1698833920206
[m
[36m[10:18:40.583534] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:40.656429] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:40.656989] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:40.657830] [D] [thread 127937] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:40.657928] [I] [thread 127937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:40.657946] [I] [thread 127937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:40.658061] [I] [thread 127937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:40.658075] [I] [thread 127937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:40.791823] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:40.792450] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:41.201508] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:41.201589] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:41.202996] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833920000,1698833921000,11,315318843,1698833921201
1698833920000,1698833921000,9,297256508,1698833921201
1698833920000,1698833921000,10,324493483,1698833921201
1698833920000,1698833921000,8,16369517355,1698833921201
[m
[36m[10:18:41.222114] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:41.222218] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:41.223507] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833920000,1698833921000,7,26895553484,1698833921222
1698833920000,1698833921000,6,5842821905,1698833921222
1698833920000,1698833921000,4,2126953449,1698833921222
1698833920000,1698833921000,5,733538311,1698833921222
[m
[36m[10:18:41.793706] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:42.194424] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:42.194525] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:42.196527] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833921000,1698833922000,6,5842824159,1698833922194
1698833921000,1698833922000,4,2126955559,1698833922194
1698833921000,1698833922000,5,733540451,1698833922194
1698833921000,1698833922000,7,26895555916,1698833922194
[m
[36m[10:18:42.219039] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:42.219140] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:42.221159] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833921000,1698833922000,9,297258926,1698833922219
1698833921000,1698833922000,10,324496000,1698833922219
1698833921000,1698833922000,8,16369519670,1698833922219
1698833921000,1698833922000,11,315321331,1698833922219
[m
[36m[10:18:42.795062] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:42.848917] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:42.849433] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:42.850287] [D] [thread 127942] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:42.850377] [I] [thread 127942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:42.850396] [I] [thread 127942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:42.850515] [I] [thread 127942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:42.850528] [I] [thread 127942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:43.044249] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:43.044852] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:43.194338] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:43.194439] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:43.196419] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833922000,1698833923000,8,16369522030,1698833923194
1698833922000,1698833923000,11,315323568,1698833923194
1698833922000,1698833923000,9,297261435,1698833923194
1698833922000,1698833923000,10,324498397,1698833923194
[m
[36m[10:18:43.220562] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:43.220648] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:43.222653] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833922000,1698833923000,6,5842826769,1698833923220
1698833922000,1698833923000,4,2126958239,1698833923220
1698833922000,1698833923000,5,733543005,1698833923220
1698833922000,1698833923000,7,26895558390,1698833923220
[m
[36m[10:18:44.046152] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:44.214269] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:44.214352] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:44.215918] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833923000,1698833924000,7,26895560680,1698833924214
1698833923000,1698833924000,5,733545262,1698833924214
1698833923000,1698833924000,4,2126960601,1698833924214
1698833923000,1698833924000,6,5842829217,1698833924214
[m
[36m[10:18:44.225928] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:44.225997] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:44.227324] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833923000,1698833924000,8,16369524453,1698833924226
1698833923000,1698833924000,11,315326108,1698833924226
1698833923000,1698833924000,9,297263838,1698833924226
1698833923000,1698833924000,10,324500920,1698833924226
[m
[36m[10:18:45.047494] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:45.147878] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:45.148492] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:45.149250] [D] [thread 127948] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:45.149344] [I] [thread 127948] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:45.149361] [I] [thread 127948] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:45.149478] [I] [thread 127948] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:45.149491] [I] [thread 127948] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:45.208378] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:45.208476] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:45.210669] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833924000,1698833925000,7,26895562972,1698833925208
1698833924000,1698833925000,5,733547733,1698833925208
1698833924000,1698833925000,4,2126962999,1698833925208
1698833924000,1698833925000,6,5842831594,1698833925208
[m
[36m[10:18:45.218793] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:45.218884] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:45.220493] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833924000,1698833925000,11,315328346,1698833925218
1698833924000,1698833925000,8,16369526712,1698833925218
1698833924000,1698833925000,9,297266010,1698833925218
1698833924000,1698833925000,10,324503095,1698833925218
[m
[36m[10:18:45.391650] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:45.391994] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:46.196283] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:46.196390] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:46.198272] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833925000,1698833926000,4,2126965426,1698833926196
1698833925000,1698833926000,7,26895565531,1698833926196
1698833925000,1698833926000,5,733550146,1698833926196
1698833925000,1698833926000,6,5842834040,1698833926196
[m
[36m[10:18:46.226766] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:46.226848] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:46.228435] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833925000,1698833926000,8,16369529445,1698833926226
1698833925000,1698833926000,9,297268754,1698833926226
1698833925000,1698833926000,10,324505743,1698833926226
1698833925000,1698833926000,11,315331085,1698833926226
[m
[36m[10:18:46.393191] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:47.222590] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:47.222689] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:47.224736] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833926000,1698833927000,11,315333247,1698833927222
1698833926000,1698833927000,10,324507893,1698833927222
1698833926000,1698833927000,9,297271057,1698833927222
1698833926000,1698833927000,8,16369531704,1698833927222
[m
[36m[10:18:47.225275] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:47.225350] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:47.227316] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833926000,1698833927000,4,2126967852,1698833927225
1698833926000,1698833927000,7,26895567727,1698833927225
1698833926000,1698833927000,5,733552422,1698833927225
1698833926000,1698833927000,6,5842836269,1698833927225
[m
[36m[10:18:47.391545] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:47.391916] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:47.393452] [D] [thread 127953] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:47.393549] [I] [thread 127953] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:47.393567] [I] [thread 127953] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:47.393685] [I] [thread 127953] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:47.393746] [I] [thread 127953] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:47.611613] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:47.611957] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:48.209841] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:48.209914] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:48.211271] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833927000,1698833928000,7,26895570384,1698833928209
1698833927000,1698833928000,5,733555002,1698833928209
1698833927000,1698833928000,6,5842838947,1698833928209
1698833927000,1698833928000,4,2126970515,1698833928209
[m
[36m[10:18:48.216382] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:48.216465] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:48.217901] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833927000,1698833928000,11,315335808,1698833928216
1698833927000,1698833928000,9,297273702,1698833928216
1698833927000,1698833928000,8,16369534391,1698833928216
1698833927000,1698833928000,10,324510515,1698833928216
[m
[36m[10:18:48.613317] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:49.214623] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:49.214722] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:49.216748] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833928000,1698833929000,11,315338221,1698833929214
1698833928000,1698833929000,9,297275818,1698833929214
1698833928000,1698833929000,8,16369536556,1698833929214
1698833928000,1698833929000,10,324512719,1698833929214
[m
[36m[10:18:49.219115] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:49.219200] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:49.221144] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833928000,1698833929000,7,26895572636,1698833929219
1698833928000,1698833929000,5,733557227,1698833929219
1698833928000,1698833929000,6,5842841081,1698833929219
1698833928000,1698833929000,4,2126972596,1698833929219
[m
[36m[10:18:49.614607] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:49.679588] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:49.679933] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:49.680994] [D] [thread 127958] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:49.681092] [I] [thread 127958] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:49.681110] [I] [thread 127958] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:49.681226] [I] [thread 127958] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:49.681291] [I] [thread 127958] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:49.850281] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:49.850761] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:50.207302] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:50.207410] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:50.209722] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833929000,1698833930000,5,733559821,1698833930207
1698833929000,1698833930000,6,5842843684,1698833930207
1698833929000,1698833930000,4,2126975226,1698833930207
1698833929000,1698833930000,7,26895575422,1698833930207
[m
[36m[10:18:50.212372] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:50.212444] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:50.214042] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833929000,1698833930000,9,297278350,1698833930212
1698833929000,1698833930000,10,324515173,1698833930212
1698833929000,1698833930000,8,16369539149,1698833930212
1698833929000,1698833930000,11,315340690,1698833930212
[m
[36m[10:18:50.852109] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:51.192913] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:51.193022] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:51.195402] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833930000,1698833931000,5,733561996,1698833931193
1698833930000,1698833931000,6,5842845911,1698833931193
1698833930000,1698833931000,4,2126977326,1698833931193
1698833930000,1698833931000,7,26895577650,1698833931193
[m
[36m[10:18:51.198326] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:51.198421] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:51.200580] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833930000,1698833931000,11,315343070,1698833931198
1698833930000,1698833931000,10,324517459,1698833931198
1698833930000,1698833931000,9,297280847,1698833931198
1698833930000,1698833931000,8,16369541429,1698833931198
[m
[36m[10:18:51.853580] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:51.882173] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:51.882799] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:51.883658] [D] [thread 127963] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:51.883756] [I] [thread 127963] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:51.883774] [I] [thread 127963] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:51.883890] [I] [thread 127963] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:51.883903] [I] [thread 127963] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:52.092436] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:52.092948] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:52.173815] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:52.173922] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:52.176270] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833931000,1698833932000,5,733564507,1698833932173
1698833931000,1698833932000,6,5842848448,1698833932173
1698833931000,1698833932000,4,2126979887,1698833932173
1698833931000,1698833932000,7,26895580047,1698833932173
[m
[36m[10:18:52.185245] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:52.185338] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:52.187007] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833931000,1698833932000,11,315345243,1698833932185
1698833931000,1698833932000,9,297283171,1698833932185
1698833931000,1698833932000,10,324519768,1698833932185
1698833931000,1698833932000,8,16369543814,1698833932185
[m
[36m[10:18:53.094278] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:53.160672] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:53.160912] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:53.163210] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833932000,1698833933000,6,5842850758,1698833933160
1698833932000,1698833933000,5,733566902,1698833933160
1698833932000,1698833933000,4,2126982128,1698833933160
1698833932000,1698833933000,7,26895582391,1698833933160
[m
[36m[10:18:53.176579] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:53.176661] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:53.178467] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833932000,1698833933000,9,297285631,1698833933176
1698833932000,1698833933000,11,315347918,1698833933176
1698833932000,1698833933000,10,324522285,1698833933176
1698833932000,1698833933000,8,16369546191,1698833933176
[m
[36m[10:18:54.095534] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:54.125734] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:54.126801] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:54.127494] [D] [thread 127968] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:54.127603] [I] [thread 127968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:54.127621] [I] [thread 127968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:54.127770] [I] [thread 127968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:54.127790] [I] [thread 127968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:54.208848] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:54.208921] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:54.210343] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833933000,1698833934000,9,297288052,1698833934208
1698833933000,1698833934000,11,315350040,1698833934208
1698833933000,1698833934000,10,324524519,1698833934208
1698833933000,1698833934000,8,16369548582,1698833934208
[m
[36m[10:18:54.220816] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:54.220891] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:54.222684] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833933000,1698833934000,5,733569440,1698833934220
1698833933000,1698833934000,6,5842853149,1698833934220
1698833933000,1698833934000,4,2126984529,1698833934220
1698833933000,1698833934000,7,26895584804,1698833934220
[m
[36m[10:18:54.338800] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:54.339152] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:55.200958] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:55.201070] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:55.203496] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833934000,1698833935000,11,315352665,1698833935201
1698833934000,1698833935000,10,324527114,1698833935201
1698833934000,1698833935000,8,16369551150,1698833935201
1698833934000,1698833935000,9,297290725,1698833935201
[m
[36m[10:18:55.212325] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:55.212434] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:55.213920] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833934000,1698833935000,6,5842855676,1698833935212
1698833934000,1698833935000,4,2126986904,1698833935212
1698833934000,1698833935000,7,26895587398,1698833935212
1698833934000,1698833935000,5,733572007,1698833935212
[m
[36m[10:18:55.340318] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:56.205224] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:56.205329] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:56.207669] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833935000,1698833936000,10,324529380,1698833936205
1698833935000,1698833936000,11,315354821,1698833936205
1698833935000,1698833936000,8,16369553264,1698833936205
1698833935000,1698833936000,9,297292805,1698833936205
[m
[36m[10:18:56.231091] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:56.231187] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:56.233138] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833935000,1698833936000,6,5842858071,1698833936231
1698833935000,1698833936000,4,2126989312,1698833936231
1698833935000,1698833936000,7,26895589524,1698833936231
1698833935000,1698833936000,5,733574234,1698833936231
[m
[36m[10:18:56.341605] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:56.439940] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:56.440251] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:56.441524] [D] [thread 127973] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:56.441640] [I] [thread 127973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:56.441658] [I] [thread 127973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:56.441782] [I] [thread 127973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:56.441822] [I] [thread 127973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:56.638412] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:56.638821] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:57.215174] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:57.215284] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:57.217580] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833936000,1698833937000,7,26895592184,1698833937215
1698833936000,1698833937000,5,733576841,1698833937215
1698833936000,1698833937000,6,5842860777,1698833937215
1698833936000,1698833937000,4,2126991904,1698833937215
[m
[36m[10:18:57.222049] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:57.222145] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:57.223798] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833936000,1698833937000,11,315357513,1698833937222
1698833936000,1698833937000,8,16369555935,1698833937222
1698833936000,1698833937000,9,297295420,1698833937222
1698833936000,1698833937000,10,324532058,1698833937222
[m
[36m[10:18:57.639995] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:58.195400] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:58.195509] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:58.197771] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833937000,1698833938000,8,16369558132,1698833938195
1698833937000,1698833938000,9,297297607,1698833938195
1698833937000,1698833938000,10,324534301,1698833938195
1698833937000,1698833938000,11,315359912,1698833938195
[m
[36m[10:18:58.202931] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:58.203029] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:58.204643] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833937000,1698833938000,7,26895594336,1698833938203
1698833937000,1698833938000,5,733579027,1698833938203
1698833937000,1698833938000,6,5842862956,1698833938203
1698833937000,1698833938000,4,2126994045,1698833938203
[m
[36m[10:18:58.641259] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:58.747054] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:58.747408] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:58.748435] [D] [thread 127978] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:18:58.748558] [I] [thread 127978] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:58.748576] [I] [thread 127978] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:18:58.748698] [I] [thread 127978] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:18:58.748713] [I] [thread 127978] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:18:58.967052] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:58.967400] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:18:59.216558] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:59.216665] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:59.219043] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833938000,1698833939000,9,297300209,1698833939216
1698833938000,1698833939000,8,16369560656,1698833939216
1698833938000,1698833939000,10,324536574,1698833939216
1698833938000,1698833939000,11,315362231,1698833939216
[m
[36m[10:18:59.221486] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:18:59.221580] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:18:59.223844] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833938000,1698833939000,7,26895597036,1698833939221
1698833938000,1698833939000,4,2126996646,1698833939221
1698833938000,1698833939000,5,733581606,1698833939221
1698833938000,1698833939000,6,5842865556,1698833939221
[m
[36m[10:18:59.968611] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:00.197899] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:00.198007] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:00.200403] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833939000,1698833940000,8,16369562954,1698833940198
1698833939000,1698833940000,10,324538960,1698833940198
1698833939000,1698833940000,11,315364654,1698833940198
1698833939000,1698833940000,9,297302666,1698833940198
[m
[36m[10:19:00.208082] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:00.208177] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:00.209811] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833939000,1698833940000,4,2126998833,1698833940208
1698833939000,1698833940000,5,733583800,1698833940208
1698833939000,1698833940000,6,5842867807,1698833940208
1698833939000,1698833940000,7,26895599467,1698833940208
[m
[36m[10:19:00.969877] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:01.107175] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:01.107480] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:01.108609] [D] [thread 127985] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:01.108714] [I] [thread 127985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:01.108733] [I] [thread 127985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:01.108863] [I] [thread 127985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:01.108890] [I] [thread 127985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:01.183113] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:01.183195] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:01.184650] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833940000,1698833941000,10,324541226,1698833941183
1698833940000,1698833941000,8,16369565309,1698833941183
1698833940000,1698833941000,11,315366940,1698833941183
1698833940000,1698833941000,9,297304918,1698833941183
[m
[36m[10:19:01.202709] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:01.202781] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:01.204119] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833940000,1698833941000,4,2127001340,1698833941202
1698833940000,1698833941000,5,733586308,1698833941202
1698833940000,1698833941000,6,5842870210,1698833941202
1698833940000,1698833941000,7,26895601858,1698833941202
[m
[36m[10:19:01.270292] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:01.270613] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:02.191159] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:02.191267] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:02.193567] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833941000,1698833942000,4,2127003665,1698833942191
1698833941000,1698833942000,5,733588739,1698833942191
1698833941000,1698833942000,6,5842872663,1698833942191
1698833941000,1698833942000,7,26895604335,1698833942191
[m
[36m[10:19:02.226090] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:02.226177] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:02.228360] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833941000,1698833942000,10,324543918,1698833942226
1698833941000,1698833942000,11,315369663,1698833942226
1698833941000,1698833942000,8,16369567842,1698833942226
1698833941000,1698833942000,9,297307432,1698833942226
[m
[36m[10:19:02.271773] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:03.210992] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:03.211099] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:03.213353] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833942000,1698833943000,4,2127006185,1698833943211
1698833942000,1698833943000,5,733591030,1698833943211
1698833942000,1698833943000,6,5842874923,1698833943211
1698833942000,1698833943000,7,26895606622,1698833943211
[m
[36m[10:19:03.215189] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:03.215283] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:03.217471] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833942000,1698833943000,8,16369570081,1698833943215
1698833942000,1698833943000,9,297309625,1698833943215
1698833942000,1698833943000,11,315371855,1698833943215
1698833942000,1698833943000,10,324546127,1698833943215
[m
[36m[10:19:03.273069] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:03.320200] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:03.320559] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:03.322165] [D] [thread 127992] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:03.322290] [I] [thread 127992] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:03.322308] [I] [thread 127992] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:03.322424] [I] [thread 127992] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:03.322437] [I] [thread 127992] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:03.505956] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:03.506332] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:04.192332] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:04.192441] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:04.194840] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833943000,1698833944000,5,733593531,1698833944192
1698833943000,1698833944000,7,26895609210,1698833944192
1698833943000,1698833944000,6,5842877573,1698833944192
1698833943000,1698833944000,4,2127008727,1698833944192
[m
[36m[10:19:04.217171] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:04.217270] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:04.219632] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833943000,1698833944000,8,16369572676,1698833944217
1698833943000,1698833944000,9,297312428,1698833944217
1698833943000,1698833944000,11,315374412,1698833944217
1698833943000,1698833944000,10,324548749,1698833944217
[m
[36m[10:19:04.507586] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:05.176198] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:05.176306] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:05.178662] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833944000,1698833945000,5,733595739,1698833945176
1698833944000,1698833945000,7,26895611339,1698833945176
1698833944000,1698833945000,6,5842879718,1698833945176
1698833944000,1698833945000,4,2127010923,1698833945176
[m
[36m[10:19:05.202141] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:05.202262] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:05.203990] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833944000,1698833945000,8,16369574826,1698833945202
1698833944000,1698833945000,11,315376705,1698833945202
1698833944000,1698833945000,10,324550898,1698833945202
1698833944000,1698833945000,9,297314615,1698833945202
[m
[36m[10:19:05.508944] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:05.520067] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:05.520407] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:05.521441] [D] [thread 127997] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:05.521554] [I] [thread 127997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:05.521573] [I] [thread 127997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:05.521698] [I] [thread 127997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:05.521728] [I] [thread 127997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:05.742100] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:05.742470] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:06.163115] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:06.163222] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:06.165537] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833945000,1698833946000,5,733598406,1698833946163
1698833945000,1698833946000,7,26895613947,1698833946163
1698833945000,1698833946000,4,2127013502,1698833946163
1698833945000,1698833946000,6,5842882415,1698833946163
[m
[36m[10:19:06.226242] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:06.226345] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:06.228633] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833945000,1698833946000,8,16369577583,1698833946226
1698833945000,1698833946000,11,315379147,1698833946226
1698833945000,1698833946000,9,297317147,1698833946226
1698833945000,1698833946000,10,324553450,1698833946226
[m
[36m[10:19:06.743683] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:07.157148] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:07.157255] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:07.159602] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833946000,1698833947000,5,733600541,1698833947157
1698833946000,1698833947000,7,26895616239,1698833947157
1698833946000,1698833947000,4,2127015600,1698833947157
1698833946000,1698833947000,6,5842884545,1698833947157
[m
[36m[10:19:07.210277] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:07.210362] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:07.212280] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833946000,1698833947000,11,315381576,1698833947210
1698833946000,1698833947000,9,297319446,1698833947210
1698833946000,1698833947000,10,324555749,1698833947210
1698833946000,1698833947000,8,16369579944,1698833947210
[m
[36m[10:19:07.745127] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:07.844984] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:07.845309] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:07.846420] [D] [thread 128005] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:07.846516] [I] [thread 128005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:07.846535] [I] [thread 128005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:07.846650] [I] [thread 128005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:07.846713] [I] [thread 128005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:08.013024] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:08.013346] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:08.206630] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:08.206702] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:08.208016] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833947000,1698833948000,9,297321935,1698833948206
1698833947000,1698833948000,10,324558153,1698833948206
1698833947000,1698833948000,8,16369582438,1698833948206
1698833947000,1698833948000,11,315383992,1698833948206
[m
[36m[10:19:08.210902] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:08.210973] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:08.212303] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833947000,1698833948000,4,2127018378,1698833948210
1698833947000,1698833948000,5,733603154,1698833948210
1698833947000,1698833948000,7,26895618747,1698833948210
1698833947000,1698833948000,6,5842887102,1698833948210
[m
[36m[10:19:09.014582] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:09.179640] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:09.179756] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:09.182181] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833948000,1698833949000,5,733605445,1698833949179
1698833948000,1698833949000,7,26895621089,1698833949179
1698833948000,1698833949000,6,5842889434,1698833949179
1698833948000,1698833949000,4,2127020683,1698833949179
[m
[36m[10:19:09.216212] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:09.216318] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:09.218644] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833948000,1698833949000,9,297324378,1698833949216
1698833948000,1698833949000,10,324560604,1698833949216
1698833948000,1698833949000,11,315386473,1698833949216
1698833948000,1698833949000,8,16369584833,1698833949216
[m
[36m[10:19:10.015904] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:10.159819] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:10.160149] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:10.161303] [D] [thread 128010] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:10.161400] [I] [thread 128010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:10.161418] [I] [thread 128010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:10.161535] [I] [thread 128010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:10.161548] [I] [thread 128010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:10.200688] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:10.200791] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:10.203068] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833949000,1698833950000,10,324562777,1698833950200
1698833949000,1698833950000,11,315388604,1698833950200
1698833949000,1698833950000,8,16369587124,1698833950200
1698833949000,1698833950000,9,297326695,1698833950200
[m
[36m[10:19:10.212212] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:10.212304] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:10.214103] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833949000,1698833950000,5,733607987,1698833950212
1698833949000,1698833950000,7,26895623367,1698833950212
1698833949000,1698833950000,6,5842891781,1698833950212
1698833949000,1698833950000,4,2127023045,1698833950212
[m
[36m[10:19:10.331844] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:10.332202] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:11.183470] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:11.183578] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:11.185836] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833950000,1698833951000,10,324565437,1698833951183
1698833950000,1698833951000,11,315391212,1698833951183
1698833950000,1698833951000,9,297329336,1698833951183
1698833950000,1698833951000,8,16369589690,1698833951183
[m
[36m[10:19:11.206949] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:11.207047] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:11.209023] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833950000,1698833951000,7,26895625913,1698833951207
1698833950000,1698833951000,6,5842894257,1698833951207
1698833950000,1698833951000,4,2127025478,1698833951207
1698833950000,1698833951000,5,733610500,1698833951207
[m
[36m[10:19:11.333446] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:12.215509] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:12.215616] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:12.217927] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833951000,1698833952000,7,26895628073,1698833952215
1698833951000,1698833952000,6,5842896493,1698833952215
1698833951000,1698833952000,4,2127027919,1698833952215
1698833951000,1698833952000,5,733612817,1698833952215
[m
[36m[10:19:12.219022] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:12.219113] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:12.221359] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833951000,1698833952000,10,324567672,1698833952219
1698833951000,1698833952000,11,315393421,1698833952219
1698833951000,1698833952000,9,297331511,1698833952219
1698833951000,1698833952000,8,16369591818,1698833952219
[m
[36m[10:19:12.334716] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:12.366131] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:12.366527] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:12.368193] [D] [thread 128015] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:12.368324] [I] [thread 128015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:12.368343] [I] [thread 128015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:12.368462] [I] [thread 128015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:12.368486] [I] [thread 128015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:12.584198] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:12.584764] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:13.210185] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:13.210320] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:13.212565] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833952000,1698833953000,9,297334112,1698833953210
1698833952000,1698833953000,8,16369594451,1698833953210
1698833952000,1698833953000,10,324570426,1698833953210
1698833952000,1698833953000,11,315396065,1698833953210
[m
[36m[10:19:13.214559] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:13.214650] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:13.216902] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833952000,1698833953000,7,26895630853,1698833953214
1698833952000,1698833953000,6,5842899078,1698833953214
1698833952000,1698833953000,5,733615331,1698833953214
1698833952000,1698833953000,4,2127030541,1698833953214
[m
[36m[10:19:13.586077] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:14.204191] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:14.204298] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:14.206681] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833953000,1698833954000,9,297336404,1698833954204
1698833953000,1698833954000,8,16369596650,1698833954204
1698833953000,1698833954000,10,324572624,1698833954204
1698833953000,1698833954000,11,315398376,1698833954204
[m
[36m[10:19:14.207273] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:14.207358] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:14.209534] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833953000,1698833954000,6,5842901272,1698833954207
1698833953000,1698833954000,4,2127032657,1698833954207
1698833953000,1698833954000,5,733617489,1698833954207
1698833953000,1698833954000,7,26895633099,1698833954207
[m
[36m[10:19:14.587376] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:14.624122] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:14.624688] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:14.625564] [D] [thread 128020] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:14.625667] [I] [thread 128020] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:14.625686] [I] [thread 128020] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:14.625815] [I] [thread 128020] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:14.625832] [I] [thread 128020] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:14.775878] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:14.776519] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:15.193991] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:15.194059] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:15.195361] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833954000,1698833955000,8,16369599260,1698833955194
1698833954000,1698833955000,11,315400851,1698833955194
1698833954000,1698833955000,10,324575112,1698833955194
1698833954000,1698833955000,9,297339122,1698833955194
[m
[36m[10:19:15.205535] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:15.205605] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:15.207262] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833954000,1698833955000,6,5842903902,1698833955205
1698833954000,1698833955000,4,2127035372,1698833955205
1698833954000,1698833955000,5,733620226,1698833955205
1698833954000,1698833955000,7,26895635796,1698833955205
[m
[36m[10:19:15.777828] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:16.182824] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:16.182928] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:16.185715] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833955000,1698833956000,11,315403219,1698833956183
1698833955000,1698833956000,8,16369601492,1698833956183
1698833955000,1698833956000,9,297341435,1698833956183
1698833955000,1698833956000,10,324577443,1698833956183
[m
[36m[10:19:16.221910] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:16.221982] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:16.223529] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833955000,1698833956000,6,5842906235,1698833956222
1698833955000,1698833956000,4,2127037404,1698833956222
1698833955000,1698833956000,5,733622395,1698833956222
1698833955000,1698833956000,7,26895638045,1698833956222
[m
[36m[10:19:16.779153] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:16.890494] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:16.890878] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:16.892284] [D] [thread 128027] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:16.892380] [I] [thread 128027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:16.892398] [I] [thread 128027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:16.892517] [I] [thread 128027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:16.892530] [I] [thread 128027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:17.123075] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:17.123388] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:17.164762] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:17.164833] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:17.166055] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833956000,1698833957000,11,315405474,1698833957164
1698833956000,1698833957000,9,297343765,1698833957164
1698833956000,1698833957000,8,16369603927,1698833957164
1698833956000,1698833957000,10,324579800,1698833957164
[m
[36m[10:19:17.214156] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:17.214280] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:17.216074] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833956000,1698833957000,4,2127039987,1698833957214
1698833956000,1698833957000,5,733624914,1698833957214
1698833956000,1698833957000,7,26895640518,1698833957214
1698833956000,1698833957000,6,5842908892,1698833957214
[m
[36m[10:19:18.124628] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:18.216568] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:18.216672] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:18.219094] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833957000,1698833958000,11,315408196,1698833958216
1698833957000,1698833958000,9,297346321,1698833958216
1698833957000,1698833958000,8,16369606328,1698833958216
1698833957000,1698833958000,10,324582315,1698833958216
[m
[36m[10:19:18.219694] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:18.219776] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:18.221956] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833957000,1698833958000,4,2127042359,1698833958219
1698833957000,1698833958000,5,733627222,1698833958219
1698833957000,1698833958000,7,26895642828,1698833958219
1698833957000,1698833958000,6,5842911171,1698833958219
[m
[36m[10:19:19.125948] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:19.184905] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:19.184975] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:19.186338] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833958000,1698833959000,8,16369608578,1698833959185
1698833958000,1698833959000,10,324584427,1698833959185
1698833958000,1698833959000,11,315410435,1698833959185
1698833958000,1698833959000,9,297348630,1698833959185
[m
[36m[10:19:19.219502] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:19.219591] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:19.221413] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833958000,1698833959000,5,733629572,1698833959219
1698833958000,1698833959000,7,26895645137,1698833959219
1698833958000,1698833959000,4,2127044845,1698833959219
1698833958000,1698833959000,6,5842913500,1698833959219
[m
[36m[10:19:19.240064] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:19.240418] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:19.242040] [D] [thread 128032] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:19.242137] [I] [thread 128032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:19.242155] [I] [thread 128032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:19.242306] [I] [thread 128032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:19.242323] [I] [thread 128032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:19.411516] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:19.411858] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:20.211735] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:20.211938] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:20.214178] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833959000,1698833960000,5,733632024,1698833960211
1698833959000,1698833960000,7,26895647718,1698833960211
1698833959000,1698833960000,4,2127047222,1698833960211
1698833959000,1698833960000,6,5842916021,1698833960211
[m
[36m[10:19:20.215654] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:20.215741] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:20.217987] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833959000,1698833960000,10,324587155,1698833960215
1698833959000,1698833960000,8,16369611182,1698833960215
1698833959000,1698833960000,11,315413051,1698833960215
1698833959000,1698833960000,9,297351259,1698833960215
[m
[36m[10:19:20.413093] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:21.189268] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:21.189341] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:21.190586] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833960000,1698833961000,8,16369613326,1698833961189
1698833960000,1698833961000,11,315415219,1698833961189
1698833960000,1698833961000,9,297353514,1698833961189
1698833960000,1698833961000,10,324589449,1698833961189
[m
[36m[10:19:21.202102] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:21.202167] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:21.203403] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833960000,1698833961000,5,733634239,1698833961202
1698833960000,1698833961000,7,26895649882,1698833961202
1698833960000,1698833961000,4,2127049385,1698833961202
1698833960000,1698833961000,6,5842918206,1698833961202
[m
[36m[10:19:21.414383] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:21.475610] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:21.475950] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:21.476930] [D] [thread 128037] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:21.477026] [I] [thread 128037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:21.477044] [I] [thread 128037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:21.477161] [I] [thread 128037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:21.477174] [I] [thread 128037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:21.674623] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:21.674938] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:22.169068] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:22.169136] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:22.170348] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833961000,1698833962000,8,16369615950,1698833962169
1698833961000,1698833962000,9,297356074,1698833962169
1698833961000,1698833962000,11,315417773,1698833962169
1698833961000,1698833962000,10,324592039,1698833962169
[m
[36m[10:19:22.193870] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:22.193946] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:22.195367] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833961000,1698833962000,5,733636869,1698833962193
1698833961000,1698833962000,4,2127052051,1698833962193
1698833961000,1698833962000,7,26895652569,1698833962193
1698833961000,1698833962000,6,5842920863,1698833962193
[m
[36m[10:19:22.676163] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:23.198680] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:23.198785] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:23.201097] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833962000,1698833963000,4,2127054327,1698833963198
1698833962000,1698833963000,5,733639049,1698833963198
1698833962000,1698833963000,7,26895654725,1698833963198
1698833962000,1698833963000,6,5842922999,1698833963198
[m
[36m[10:19:23.215319] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:23.215395] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:23.216875] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833962000,1698833963000,8,16369618213,1698833963215
1698833962000,1698833963000,9,297358403,1698833963215
1698833962000,1698833963000,11,315420081,1698833963215
1698833962000,1698833963000,10,324594313,1698833963215
[m
[36m[10:19:23.677453] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:23.710252] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:23.710603] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:23.711733] [D] [thread 128043] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:23.711831] [I] [thread 128043] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:23.711849] [I] [thread 128043] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:23.711967] [I] [thread 128043] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:23.711979] [I] [thread 128043] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:23.883636] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:23.883987] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:24.175055] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:24.175161] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:24.177454] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833963000,1698833964000,5,733641691,1698833964175
1698833963000,1698833964000,7,26895657270,1698833964175
1698833963000,1698833964000,6,5842925642,1698833964175
1698833963000,1698833964000,4,2127057080,1698833964175
[m
[36m[10:19:24.226403] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:24.226473] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:24.227744] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833963000,1698833964000,8,16369620854,1698833964226
1698833963000,1698833964000,11,315422518,1698833964226
1698833963000,1698833964000,10,324596677,1698833964226
1698833963000,1698833964000,9,297360991,1698833964226
[m
[36m[10:19:24.885258] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:25.172897] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:25.173002] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:25.175347] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833964000,1698833965000,5,733643909,1698833965173
1698833964000,1698833965000,7,26895659582,1698833965173
1698833964000,1698833965000,4,2127059172,1698833965173
1698833964000,1698833965000,6,5842927822,1698833965173
[m
[36m[10:19:25.226319] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:25.226427] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:25.228503] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833964000,1698833965000,10,324599185,1698833965226
1698833964000,1698833965000,9,297363346,1698833965226
1698833964000,1698833965000,11,315425087,1698833965226
1698833964000,1698833965000,8,16369623237,1698833965226
[m
[36m[10:19:25.886558] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:26.124263] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:26.124894] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:26.125609] [D] [thread 128048] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:26.125702] [I] [thread 128048] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:26.125720] [I] [thread 128048] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:26.125838] [I] [thread 128048] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:26.125852] [I] [thread 128048] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:26.163125] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:26.163231] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:26.165529] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833965000,1698833966000,5,733646236,1698833966163
1698833965000,1698833966000,7,26895661876,1698833966163
1698833965000,1698833966000,4,2127061520,1698833966163
1698833965000,1698833966000,6,5842930170,1698833966163
[m
[36m[10:19:26.223857] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:26.223953] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:26.226294] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833965000,1698833966000,9,297365512,1698833966224
1698833965000,1698833966000,11,315427224,1698833966224
1698833965000,1698833966000,8,16369625565,1698833966224
1698833965000,1698833966000,10,324601478,1698833966224
[m
[36m[10:19:26.367389] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:26.367901] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:27.223890] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:27.224000] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:27.226365] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833966000,1698833967000,9,297368231,1698833967224
1698833966000,1698833967000,11,315429855,1698833967224
1698833966000,1698833967000,10,324604022,1698833967224
1698833966000,1698833967000,8,16369628059,1698833967224
[m
[36m[10:19:27.226966] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:27.227047] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:27.229158] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833966000,1698833967000,4,2127064003,1698833967227
1698833966000,1698833967000,7,26895664345,1698833967227
1698833966000,1698833967000,5,733648646,1698833967227
1698833966000,1698833967000,6,5842932656,1698833967227
[m
[36m[10:19:27.369125] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:28.212155] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:28.212234] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:28.214412] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833967000,1698833968000,7,26895666529,1698833968212
1698833967000,1698833968000,5,733650971,1698833968212
1698833967000,1698833968000,6,5842934861,1698833968212
1698833967000,1698833968000,4,2127066498,1698833968212
[m
[36m[10:19:28.217349] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:28.217439] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:28.219716] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833967000,1698833968000,11,315432067,1698833968217
1698833967000,1698833968000,10,324606173,1698833968217
1698833967000,1698833968000,9,297370478,1698833968217
1698833967000,1698833968000,8,16369630289,1698833968217
[m
[36m[10:19:28.370437] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:28.391976] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:28.392571] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:28.393309] [D] [thread 128053] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:28.393406] [I] [thread 128053] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:28.393424] [I] [thread 128053] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:28.393542] [I] [thread 128053] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:28.393555] [I] [thread 128053] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:28.663589] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:28.664159] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:29.212202] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:29.212305] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:29.213434] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833968000,1698833969000,11,315434720,1698833969212
1698833968000,1698833969000,10,324608786,1698833969212
1698833968000,1698833969000,9,297373137,1698833969212
1698833968000,1698833969000,8,16369632962,1698833969212
[m
[36m[10:19:29.218228] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:29.218290] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:29.219387] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833968000,1698833969000,7,26895669312,1698833969218
1698833968000,1698833969000,5,733653618,1698833969218
1698833968000,1698833969000,6,5842937504,1698833969218
1698833968000,1698833969000,4,2127068969,1698833969218
[m
[36m[10:19:29.665426] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:30.205659] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:30.205767] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:30.208077] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833969000,1698833970000,5,733655747,1698833970205
1698833969000,1698833970000,6,5842939648,1698833970205
1698833969000,1698833970000,4,2127071080,1698833970205
1698833969000,1698833970000,7,26895671642,1698833970205
[m
[36m[10:19:30.210620] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:30.210713] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:30.212955] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833969000,1698833970000,10,324611008,1698833970210
1698833969000,1698833970000,9,297375314,1698833970210
1698833969000,1698833970000,11,315437089,1698833970210
1698833969000,1698833970000,8,16369635113,1698833970210
[m
[36m[10:19:30.666461] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:30.695231] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:30.695826] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:30.696540] [D] [thread 128058] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:30.696633] [I] [thread 128058] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:30.696651] [I] [thread 128058] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:30.696770] [I] [thread 128058] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:30.696783] [I] [thread 128058] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:30.959480] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:30.960062] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:31.201366] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:31.201467] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:31.203820] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833970000,1698833971000,5,733658353,1698833971201
1698833970000,1698833971000,6,5842942242,1698833971201
1698833970000,1698833971000,4,2127073729,1698833971201
1698833970000,1698833971000,7,26895674192,1698833971201
[m
[36m[10:19:31.222683] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:31.222785] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:31.225023] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833970000,1698833971000,10,324613455,1698833971222
1698833970000,1698833971000,9,297377718,1698833971222
1698833970000,1698833971000,11,315439440,1698833971222
1698833970000,1698833971000,8,16369637641,1698833971222
[m
[36m[10:19:31.961286] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:32.184465] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:32.184573] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:32.186993] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833971000,1698833972000,5,733660545,1698833972184
1698833971000,1698833972000,6,5842944510,1698833972184
1698833971000,1698833972000,4,2127075860,1698833972184
1698833971000,1698833972000,7,26895676450,1698833972184
[m
[36m[10:19:32.213156] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:32.213254] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:32.215530] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833971000,1698833972000,9,297380233,1698833972213
1698833971000,1698833972000,11,315441877,1698833972213
1698833971000,1698833972000,8,16369639914,1698833972213
1698833971000,1698833972000,10,324615926,1698833972213
[m
[36m[10:19:32.962586] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:33.088802] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:33.089311] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:33.090168] [D] [thread 128063] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:33.090299] [I] [thread 128063] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:33.090317] [I] [thread 128063] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:33.090436] [I] [thread 128063] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:33.090449] [I] [thread 128063] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:33.172345] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:33.172453] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:33.174792] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833972000,1698833973000,5,733662972,1698833973172
1698833972000,1698833973000,6,5842946879,1698833973172
1698833972000,1698833973000,4,2127078346,1698833973172
1698833972000,1698833973000,7,26895678778,1698833973172
[m
[36m[10:19:33.197968] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:33.198046] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:33.199824] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833972000,1698833973000,11,315444046,1698833973198
1698833972000,1698833973000,8,16369642236,1698833973198
1698833972000,1698833973000,10,324618124,1698833973198
1698833972000,1698833973000,9,297382563,1698833973198
[m
[36m[10:19:33.303899] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:33.304543] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:34.214540] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:34.214653] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:34.216949] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833973000,1698833974000,11,315446821,1698833974214
1698833973000,1698833974000,8,16369644727,1698833974214
1698833973000,1698833974000,9,297385124,1698833974214
1698833973000,1698833974000,10,324620772,1698833974214
[m
[36m[10:19:34.223548] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:34.223798] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:34.225849] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833973000,1698833974000,5,733665589,1698833974223
1698833973000,1698833974000,6,5842949327,1698833974223
1698833973000,1698833974000,4,2127080815,1698833974223
1698833973000,1698833974000,7,26895681213,1698833974223
[m
[36m[10:19:34.305838] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:35.186473] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:35.186551] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:35.188177] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833974000,1698833975000,8,16369646920,1698833975186
1698833974000,1698833975000,9,297387271,1698833975186
1698833974000,1698833975000,10,324622953,1698833975186
1698833974000,1698833975000,11,315449037,1698833975186
[m
[36m[10:19:35.220651] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:35.220727] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:35.222130] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833974000,1698833975000,6,5842951590,1698833975220
1698833974000,1698833975000,7,26895683523,1698833975220
1698833974000,1698833975000,4,2127083241,1698833975220
1698833974000,1698833975000,5,733668026,1698833975220
[m
[36m[10:19:35.307069] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:35.401011] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:35.401356] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:35.402472] [D] [thread 128068] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:35.402574] [I] [thread 128068] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:35.402592] [I] [thread 128068] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:35.402710] [I] [thread 128068] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:35.402770] [I] [thread 128068] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:35.620992] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:35.621349] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:36.215433] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:36.215541] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:36.217818] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833975000,1698833976000,6,5842954259,1698833976215
1698833975000,1698833976000,7,26895686113,1698833976215
1698833975000,1698833976000,4,2127085725,1698833976215
1698833975000,1698833976000,5,733670515,1698833976215
[m
[36m[10:19:36.220357] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:36.220453] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:36.222736] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833975000,1698833976000,9,297389979,1698833976220
1698833975000,1698833976000,8,16369649553,1698833976220
1698833975000,1698833976000,10,324625496,1698833976220
1698833975000,1698833976000,11,315451553,1698833976220
[m
[36m[10:19:36.622721] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:37.193007] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:37.193114] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:37.195447] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833976000,1698833977000,10,324627663,1698833977193
1698833976000,1698833977000,8,16369651704,1698833977193
1698833976000,1698833977000,11,315453745,1698833977193
1698833976000,1698833977000,9,297392228,1698833977193
[m
[36m[10:19:37.207313] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:37.207407] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:37.209226] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833976000,1698833977000,7,26895688245,1698833977207
1698833976000,1698833977000,4,2127087855,1698833977207
1698833976000,1698833977000,5,733672667,1698833977207
1698833976000,1698833977000,6,5842956557,1698833977207
[m
[36m[10:19:37.623977] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:37.635964] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:37.636303] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:37.637350] [D] [thread 128073] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:37.637446] [I] [thread 128073] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:37.637463] [I] [thread 128073] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:37.637582] [I] [thread 128073] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:37.637595] [I] [thread 128073] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:37.845672] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:37.846036] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:38.204638] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:38.204746] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:38.207131] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833977000,1698833978000,7,26895690753,1698833978204
1698833977000,1698833978000,4,2127090623,1698833978204
1698833977000,1698833978000,5,733675344,1698833978204
1698833977000,1698833978000,6,5842959161,1698833978204
[m
[36m[10:19:38.218903] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:38.218999] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:38.220806] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833977000,1698833978000,10,324630283,1698833978219
1698833977000,1698833978000,11,315456286,1698833978219
1698833977000,1698833978000,8,16369654221,1698833978219
1698833977000,1698833978000,9,297394719,1698833978219
[m
[36m[10:19:38.847334] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:39.202998] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:39.203105] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:39.205403] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833978000,1698833979000,8,16369656554,1698833979203
1698833978000,1698833979000,9,297397036,1698833979203
1698833978000,1698833979000,11,315458862,1698833979203
1698833978000,1698833979000,10,324632724,1698833979203
[m
[36m[10:19:39.228497] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:39.228599] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:39.230964] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833978000,1698833979000,7,26895693012,1698833979228
1698833978000,1698833979000,4,2127092803,1698833979228
1698833978000,1698833979000,6,5842961366,1698833979228
1698833978000,1698833979000,5,733677551,1698833979228
[m
[36m[10:19:39.848576] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:40.048454] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:40.049029] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:40.049925] [D] [thread 128079] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:40.050024] [I] [thread 128079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:40.050043] [I] [thread 128079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:40.050163] [I] [thread 128079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:40.050178] [I] [thread 128079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:40.219683] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:40.219791] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:40.222076] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833979000,1698833980000,8,16369659035,1698833980219
1698833979000,1698833980000,9,297399417,1698833980219
1698833979000,1698833980000,11,315461040,1698833980219
1698833979000,1698833980000,10,324634956,1698833980219
[m
[36m[10:19:40.223884] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:40.223979] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:40.226176] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833979000,1698833980000,7,26895695422,1698833980224
1698833979000,1698833980000,5,733679998,1698833980224
1698833979000,1698833980000,6,5842963821,1698833980224
1698833979000,1698833980000,4,2127095334,1698833980224
[m
[36m[10:19:40.267082] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:40.267425] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:41.214709] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:41.214819] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:41.217111] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833980000,1698833981000,10,324637492,1698833981214
1698833980000,1698833981000,11,315463651,1698833981214
1698833980000,1698833981000,9,297401990,1698833981214
1698833980000,1698833981000,8,16369661582,1698833981214
[m
[36m[10:19:41.217862] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:41.217946] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:41.219972] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833980000,1698833981000,7,26895698054,1698833981217
1698833980000,1698833981000,6,5842966175,1698833981217
1698833980000,1698833981000,5,733682349,1698833981217
1698833980000,1698833981000,4,2127097617,1698833981217
[m
[36m[10:19:41.268703] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:42.211800] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:42.211872] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:42.213095] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833981000,1698833982000,10,324639651,1698833982211
1698833981000,1698833982000,11,315465784,1698833982211
1698833981000,1698833982000,9,297404145,1698833982211
1698833981000,1698833982000,8,16369663831,1698833982211
[m
[36m[10:19:42.214236] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:42.214310] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:42.215642] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833981000,1698833982000,6,5842968514,1698833982214
1698833981000,1698833982000,5,733684677,1698833982214
1698833981000,1698833982000,7,26895700413,1698833982214
1698833981000,1698833982000,4,2127099930,1698833982214
[m
[36m[10:19:42.270008] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:42.453907] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:42.454262] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:42.455293] [D] [thread 128084] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:42.455390] [I] [thread 128084] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:42.455409] [I] [thread 128084] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:42.455527] [I] [thread 128084] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:42.455541] [I] [thread 128084] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:42.726668] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:42.726992] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:43.207595] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:43.207684] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:43.209468] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833982000,1698833983000,10,324642331,1698833983207
1698833982000,1698833983000,11,315468368,1698833983207
1698833982000,1698833983000,9,297406804,1698833983207
1698833982000,1698833983000,8,16369666454,1698833983207
[m
[36m[10:19:43.212909] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:43.212984] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:43.214798] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833982000,1698833983000,5,733687264,1698833983213
1698833982000,1698833983000,6,5842971046,1698833983213
1698833982000,1698833983000,4,2127102481,1698833983213
1698833982000,1698833983000,7,26895703024,1698833983213
[m
[36m[10:19:43.728192] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:44.210316] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:44.210413] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:44.212683] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833983000,1698833984000,9,297408946,1698833984210
1698833983000,1698833984000,11,315470616,1698833984210
1698833983000,1698833984000,10,324644706,1698833984210
1698833983000,1698833984000,8,16369668651,1698833984210
[m
[36m[10:19:44.215492] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:44.215595] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:44.217863] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833983000,1698833984000,5,733689442,1698833984215
1698833983000,1698833984000,4,2127104577,1698833984215
1698833983000,1698833984000,6,5842973209,1698833984215
1698833983000,1698833984000,7,26895705178,1698833984215
[m
[36m[10:19:44.729606] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:44.827236] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:44.827584] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:44.828559] [D] [thread 128090] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:44.828653] [I] [thread 128090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:44.828672] [I] [thread 128090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:44.828788] [I] [thread 128090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:44.828801] [I] [thread 128090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:45.036368] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:45.036700] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:45.203634] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:45.203740] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:45.205789] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833984000,1698833985000,4,2127107099,1698833985203
1698833984000,1698833985000,5,733691961,1698833985203
1698833984000,1698833985000,6,5842975740,1698833985203
1698833984000,1698833985000,7,26895707747,1698833985203
[m
[36m[10:19:45.212559] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:45.212783] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:45.214744] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833984000,1698833985000,9,297411457,1698833985212
1698833984000,1698833985000,11,315472837,1698833985212
1698833984000,1698833985000,10,324647072,1698833985212
1698833984000,1698833985000,8,16369671096,1698833985212
[m
[36m[10:19:46.037956] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:46.194569] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:46.194668] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:46.196506] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833985000,1698833986000,11,315475378,1698833986194
1698833985000,1698833986000,8,16369673480,1698833986194
1698833985000,1698833986000,10,324649513,1698833986194
1698833985000,1698833986000,9,297413948,1698833986194
[m
[36m[10:19:46.201157] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:46.201235] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:46.202918] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833985000,1698833986000,4,2127109288,1698833986201
1698833985000,1698833986000,5,733694234,1698833986201
1698833985000,1698833986000,6,5842978026,1698833986201
1698833985000,1698833986000,7,26895710050,1698833986201
[m
[36m[10:19:47.039290] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:47.195289] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:47.195600] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:47.196592] [D] [thread 128096] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:47.196687] [I] [thread 128096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:47.196705] [I] [thread 128096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:47.196822] [I] [thread 128096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:47.196834] [I] [thread 128096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:47.218498] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:47.218588] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:47.220405] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833986000,1698833987000,11,315477636,1698833987218
1698833986000,1698833987000,8,16369675700,1698833987218
1698833986000,1698833987000,9,297416085,1698833987218
1698833986000,1698833987000,10,324651675,1698833987218
[m
[36m[10:19:47.224124] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:47.224207] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:47.225952] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833986000,1698833987000,4,2127111766,1698833987224
1698833986000,1698833987000,5,733696593,1698833987224
1698833986000,1698833987000,6,5842980371,1698833987224
1698833986000,1698833987000,7,26895712340,1698833987224
[m
[36m[10:19:47.355965] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:47.356319] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:48.190738] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:48.190809] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:48.192402] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833987000,1698833988000,9,297418722,1698833988190
1698833987000,1698833988000,8,16369678286,1698833988190
1698833987000,1698833988000,10,324654383,1698833988190
1698833987000,1698833988000,11,315480467,1698833988190
[m
[36m[10:19:48.203254] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:48.203347] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:48.205161] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833987000,1698833988000,5,733699071,1698833988203
1698833987000,1698833988000,6,5842982895,1698833988203
1698833987000,1698833988000,7,26895714839,1698833988203
1698833987000,1698833988000,4,2127114332,1698833988203
[m
[36m[10:19:48.357535] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:49.183130] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:49.183205] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:49.184676] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833988000,1698833989000,9,297420864,1698833989183
1698833988000,1698833989000,8,16369680522,1698833989183
1698833988000,1698833989000,11,315482637,1698833989183
1698833988000,1698833989000,10,324656487,1698833989183
[m
[36m[10:19:49.186978] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:49.187051] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:49.188306] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833988000,1698833989000,6,5842985079,1698833989187
1698833988000,1698833989000,5,733701366,1698833989187
1698833988000,1698833989000,7,26895717034,1698833989187
1698833988000,1698833989000,4,2127116606,1698833989187
[m
[36m[10:19:49.358835] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:49.624297] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:49.624667] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:49.626243] [D] [thread 128101] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:49.626334] [I] [thread 128101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:49.626351] [I] [thread 128101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:49.626471] [I] [thread 128101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:49.626484] [I] [thread 128101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:49.907563] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:49.907887] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:50.168486] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:50.168592] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:50.170848] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833989000,1698833990000,9,297423355,1698833990168
1698833989000,1698833990000,11,315485101,1698833990168
1698833989000,1698833990000,8,16369683063,1698833990168
1698833989000,1698833990000,10,324658935,1698833990168
[m
[36m[10:19:50.180563] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:50.180647] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:50.182499] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833989000,1698833990000,6,5842987759,1698833990180
1698833989000,1698833990000,5,733703943,1698833990180
1698833989000,1698833990000,7,26895719696,1698833990180
1698833989000,1698833990000,4,2127119107,1698833990180
[m
[36m[10:19:50.909173] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:51.158906] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:51.158996] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:51.161168] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833990000,1698833991000,6,5842989885,1698833991159
1698833990000,1698833991000,5,733706072,1698833991159
1698833990000,1698833991000,7,26895721888,1698833991159
1698833990000,1698833991000,4,2127121263,1698833991159
[m
[36m[10:19:51.225123] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:51.225203] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:51.227285] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833990000,1698833991000,11,315487546,1698833991225
1698833990000,1698833991000,9,297425704,1698833991225
1698833990000,1698833991000,10,324661239,1698833991225
1698833990000,1698833991000,8,16369685293,1698833991225
[m
[36m[10:19:51.910426] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:52.148190] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:52.148296] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:52.150395] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833991000,1698833992000,6,5842992224,1698833992148
1698833991000,1698833992000,5,733708413,1698833992148
1698833991000,1698833992000,7,26895724145,1698833992148
1698833991000,1698833992000,4,2127123584,1698833992148
[m
[36m[10:19:52.204063] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:52.204158] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:52.206141] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833991000,1698833992000,10,324663379,1698833992204
1698833991000,1698833992000,8,16369687502,1698833992204
1698833991000,1698833992000,11,315489792,1698833992204
1698833991000,1698833992000,9,297427958,1698833992204
[m
[36m[10:19:52.355754] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:52.356093] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:52.357097] [D] [thread 128106] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:52.357178] [I] [thread 128106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:52.357194] [I] [thread 128106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:52.357301] [I] [thread 128106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:52.357314] [I] [thread 128106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:52.543578] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:52.543939] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:53.195155] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:53.195261] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:53.197556] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833992000,1698833993000,8,16369690073,1698833993195
1698833992000,1698833993000,11,315492464,1698833993195
1698833992000,1698833993000,10,324666072,1698833993195
1698833992000,1698833993000,9,297430563,1698833993195
[m
[36m[10:19:53.211025] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:53.211117] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:53.212967] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833992000,1698833993000,6,5842994746,1698833993211
1698833992000,1698833993000,4,2127126112,1698833993211
1698833992000,1698833993000,5,733710881,1698833993211
1698833992000,1698833993000,7,26895726650,1698833993211
[m
[36m[10:19:53.545172] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:54.178800] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:54.178908] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:54.181206] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833993000,1698833994000,8,16369692257,1698833994178
1698833993000,1698833994000,9,297432729,1698833994178
1698833993000,1698833994000,11,315494648,1698833994178
1698833993000,1698833994000,10,324668166,1698833994178
[m
[36m[10:19:54.218884] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:54.218967] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:54.220552] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833993000,1698833994000,6,5842997029,1698833994218
1698833993000,1698833994000,5,733713042,1698833994218
1698833993000,1698833994000,7,26895728764,1698833994218
1698833993000,1698833994000,4,2127128363,1698833994218
[m
[36m[10:19:54.546497] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:54.716541] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:54.716884] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:54.717962] [D] [thread 128111] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:54.718060] [I] [thread 128111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:54.718078] [I] [thread 128111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:54.718232] [I] [thread 128111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:54.718250] [I] [thread 128111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:54.934521] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:54.934863] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:55.155536] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:55.155618] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:55.156914] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833994000,1698833995000,8,16369694824,1698833995155
1698833994000,1698833995000,9,297435228,1698833995155
1698833994000,1698833995000,11,315497061,1698833995155
1698833994000,1698833995000,10,324670653,1698833995155
[m
[36m[10:19:55.208534] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:55.208615] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:55.210552] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833994000,1698833995000,7,26895731426,1698833995208
1698833994000,1698833995000,5,733715693,1698833995208
1698833994000,1698833995000,4,2127130968,1698833995208
1698833994000,1698833995000,6,5842999801,1698833995208
[m
[36m[10:19:55.936079] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:56.205144] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:56.205215] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:56.206425] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833995000,1698833996000,9,297437658,1698833996205
1698833995000,1698833996000,8,16369697138,1698833996205
1698833995000,1698833996000,11,315499466,1698833996205
1698833995000,1698833996000,10,324673035,1698833996205
[m
[36m[10:19:56.217927] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:56.217993] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:56.219289] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833995000,1698833996000,7,26895733834,1698833996218
1698833995000,1698833996000,5,733717894,1698833996218
1698833995000,1698833996000,4,2127133108,1698833996218
1698833995000,1698833996000,6,5843002027,1698833996218
[m
[36m[10:19:56.937532] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:57.217399] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:57.217504] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:57.219858] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833996000,1698833997000,5,733720201,1698833997217
1698833996000,1698833997000,4,2127135481,1698833997217
1698833996000,1698833997000,6,5843004362,1698833997217
1698833996000,1698833997000,7,26895736251,1698833997217
[m
[36m[10:19:57.220459] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:57.220543] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:57.222794] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833996000,1698833997000,8,16369699322,1698833997220
1698833996000,1698833997000,11,315501713,1698833997220
1698833996000,1698833997000,10,324675116,1698833997220
1698833996000,1698833997000,9,297439918,1698833997220
[m
[36m[10:19:57.261995] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:57.262572] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:57.263334] [D] [thread 128116] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:57.263427] [I] [thread 128116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:57.263445] [I] [thread 128116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:57.263562] [I] [thread 128116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:57.263577] [I] [thread 128116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:57.449139] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:57.449485] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:58.223360] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:58.223469] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:58.225745] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833997000,1698833998000,10,324677899,1698833998223
1698833997000,1698833998000,8,16369701915,1698833998223
1698833997000,1698833998000,9,297442528,1698833998223
1698833997000,1698833998000,11,315504486,1698833998223
[m
[36m[10:19:58.227475] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:58.227569] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:58.229827] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833997000,1698833998000,5,733722720,1698833998227
1698833997000,1698833998000,4,2127138017,1698833998227
1698833997000,1698833998000,6,5843006862,1698833998227
1698833997000,1698833998000,7,26895738727,1698833998227
[m
[36m[10:19:58.450703] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:59.199671] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:59.199765] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:59.201798] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833998000,1698833999000,5,733724919,1698833999199
1698833998000,1698833999000,6,5843009038,1698833999199
1698833998000,1698833999000,7,26895740894,1698833999199
1698833998000,1698833999000,4,2127140361,1698833999199
[m
[36m[10:19:59.202416] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:19:59.202497] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:19:59.204419] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833998000,1698833999000,8,16369704135,1698833999202
1698833998000,1698833999000,9,297444665,1698833999202
1698833998000,1698833999000,11,315506653,1698833999202
1698833998000,1698833999000,10,324680147,1698833999202
[m
[36m[10:19:59.452025] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:59.609316] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:59.609636] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:59.610631] [D] [thread 128123] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:19:59.610731] [I] [thread 128123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:59.610749] [I] [thread 128123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:19:59.610866] [I] [thread 128123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:19:59.610879] [I] [thread 128123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:19:59.854121] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:59.854717] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:00.189249] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:00.189339] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:00.191186] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833999000,1698834000000,5,733727608,1698834000189
1698833999000,1698834000000,6,5843011711,1698834000189
1698833999000,1698834000000,7,26895743557,1698834000189
1698833999000,1698834000000,4,2127142900,1698834000189
[m
[36m[10:20:00.202444] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:00.202521] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:00.204398] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833999000,1698834000000,9,297447309,1698834000202
1698833999000,1698834000000,8,16369706664,1698834000202
1698833999000,1698834000000,11,315509011,1698834000202
1698833999000,1698834000000,10,324682673,1698834000202
[m
[36m[10:20:00.856017] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:01.210902] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:01.210998] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:01.213015] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834000000,1698834001000,8,16369708941,1698834001211
1698834000000,1698834001000,11,315511531,1698834001211
1698834000000,1698834001000,9,297449684,1698834001211
1698834000000,1698834001000,10,324684977,1698834001211
[m
[36m[10:20:01.218268] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:01.218351] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:01.220271] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834000000,1698834001000,5,733729869,1698834001218
1698834000000,1698834001000,6,5843013866,1698834001218
1698834000000,1698834001000,4,2127145064,1698834001218
1698834000000,1698834001000,7,26895745758,1698834001218
[m
[36m[10:20:01.857313] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:02.125050] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:02.125720] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:02.126649] [D] [thread 128129] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:02.126737] [I] [thread 128129] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:02.126756] [I] [thread 128129] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:02.126872] [I] [thread 128129] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:02.126885] [I] [thread 128129] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:02.191391] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:02.191470] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:02.192924] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834001000,1698834002000,8,16369711239,1698834002191
1698834001000,1698834002000,9,297451887,1698834002191
1698834001000,1698834002000,10,324687208,1698834002191
1698834001000,1698834002000,11,315513852,1698834002191
[m
[36m[10:20:02.216110] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:02.216185] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:02.217369] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834001000,1698834002000,4,2127147508,1698834002216
1698834001000,1698834002000,7,26895748150,1698834002216
1698834001000,1698834002000,6,5843016293,1698834002216
1698834001000,1698834002000,5,733732485,1698834002216
[m
[36m[10:20:02.340242] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:02.340940] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:03.208002] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:03.208154] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:03.210888] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834002000,1698834003000,4,2127149863,1698834003208
1698834002000,1698834003000,7,26895750585,1698834003208
1698834002000,1698834003000,6,5843018775,1698834003208
1698834002000,1698834003000,5,733734946,1698834003208
[m
[36m[10:20:03.211564] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:03.211734] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:03.214112] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834002000,1698834003000,8,16369713733,1698834003211
1698834002000,1698834003000,9,297454586,1698834003211
1698834002000,1698834003000,11,315516533,1698834003211
1698834002000,1698834003000,10,324689833,1698834003211
[m
[36m[10:20:03.342259] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:04.177646] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:04.177752] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:04.180380] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834003000,1698834004000,8,16369715982,1698834004177
1698834003000,1698834004000,11,315518660,1698834004177
1698834003000,1698834004000,10,324691875,1698834004177
1698834003000,1698834004000,9,297456901,1698834004177
[m
[36m[10:20:04.215663] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:04.215778] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:04.218140] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834003000,1698834004000,4,2127152258,1698834004215
1698834003000,1698834004000,7,26895752721,1698834004215
1698834003000,1698834004000,6,5843020901,1698834004215
1698834003000,1698834004000,5,733737202,1698834004215
[m
[36m[10:20:04.343561] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:04.683795] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:04.684478] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:04.685166] [D] [thread 128134] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:04.685257] [I] [thread 128134] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:04.685275] [I] [thread 128134] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:04.685391] [I] [thread 128134] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:04.685404] [I] [thread 128134] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:04.908445] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:04.908907] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:05.149977] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:05.150085] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:05.152450] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834004000,1698834005000,8,16369718506,1698834005150
1698834004000,1698834005000,11,315521088,1698834005150
1698834004000,1698834005000,10,324694277,1698834005150
1698834004000,1698834005000,9,297459405,1698834005150
[m
[36m[10:20:05.199253] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:05.199341] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:05.201320] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834004000,1698834005000,7,26895755368,1698834005199
1698834004000,1698834005000,6,5843023562,1698834005199
1698834004000,1698834005000,5,733739789,1698834005199
1698834004000,1698834005000,4,2127154913,1698834005199
[m
[36m[10:20:05.910403] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:06.192455] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:06.192562] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:06.195128] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834005000,1698834006000,7,26895757608,1698834006192
1698834005000,1698834006000,6,5843025811,1698834006192
1698834005000,1698834006000,4,2127157055,1698834006192
1698834005000,1698834006000,5,733741948,1698834006192
[m
[36m[10:20:06.220612] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:06.220692] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:06.222476] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834005000,1698834006000,8,16369720896,1698834006220
1698834005000,1698834006000,11,315523546,1698834006220
1698834005000,1698834006000,9,297461691,1698834006220
1698834005000,1698834006000,10,324696612,1698834006220
[m
[36m[10:20:06.911726] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:07.109505] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:07.110091] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:07.110983] [D] [thread 128140] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:07.111080] [I] [thread 128140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:07.111098] [I] [thread 128140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:07.111215] [I] [thread 128140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:07.111229] [I] [thread 128140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:07.182372] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:07.182481] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:07.184755] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834006000,1698834007000,7,26895759949,1698834007182
1698834006000,1698834007000,6,5843028275,1698834007182
1698834006000,1698834007000,4,2127159499,1698834007182
1698834006000,1698834007000,5,733744421,1698834007182
[m
[36m[10:20:07.216155] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:07.216231] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:07.218451] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834006000,1698834007000,9,297463987,1698834007216
1698834006000,1698834007000,10,324698775,1698834007216
1698834006000,1698834007000,11,315525768,1698834007216
1698834006000,1698834007000,8,16369723331,1698834007216
[m
[36m[10:20:07.340164] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:07.340713] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:08.172116] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:08.172226] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:08.174620] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834007000,1698834008000,7,26895762375,1698834008172
1698834007000,1698834008000,4,2127161800,1698834008172
1698834007000,1698834008000,6,5843030679,1698834008172
1698834007000,1698834008000,5,733746733,1698834008172
[m
[36m[10:20:08.218329] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:08.218415] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:08.220586] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834007000,1698834008000,10,324701455,1698834008218
1698834007000,1698834008000,11,315528456,1698834008218
1698834007000,1698834008000,9,297466599,1698834008218
1698834007000,1698834008000,8,16369725736,1698834008218
[m
[36m[10:20:08.342023] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:09.215768] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:09.215847] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:09.217219] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834008000,1698834009000,10,324703697,1698834009215
1698834008000,1698834009000,11,315530655,1698834009215
1698834008000,1698834009000,9,297468775,1698834009215
1698834008000,1698834009000,8,16369728022,1698834009215
[m
[36m[10:20:09.223713] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:09.223788] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:09.225220] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834008000,1698834009000,7,26895764557,1698834009223
1698834008000,1698834009000,4,2127164205,1698834009223
1698834008000,1698834009000,6,5843032863,1698834009223
1698834008000,1698834009000,5,733749024,1698834009223
[m
[36m[10:20:09.343343] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:09.548332] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:09.548903] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:09.549687] [D] [thread 128145] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:09.549779] [I] [thread 128145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:09.549797] [I] [thread 128145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:09.549913] [I] [thread 128145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:09.549926] [I] [thread 128145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:09.783062] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:09.783651] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:10.212738] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:10.212837] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:10.214886] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834009000,1698834010000,9,297471451,1698834010212
1698834009000,1698834010000,11,315533136,1698834010212
1698834009000,1698834010000,10,324706387,1698834010212
1698834009000,1698834010000,8,16369730668,1698834010212
[m
[36m[10:20:10.216633] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:10.216856] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:10.218817] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834009000,1698834010000,7,26895767204,1698834010216
1698834009000,1698834010000,6,5843035483,1698834010216
1698834009000,1698834010000,5,733751679,1698834010216
1698834009000,1698834010000,4,2127166824,1698834010216
[m
[36m[10:20:10.784950] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:11.208732] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:11.208837] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:11.211210] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834010000,1698834011000,11,315535414,1698834011208
1698834010000,1698834011000,10,324708665,1698834011208
1698834010000,1698834011000,9,297473798,1698834011208
1698834010000,1698834011000,8,16369732829,1698834011208
[m
[36m[10:20:11.215328] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:11.215421] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:11.217624] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834010000,1698834011000,7,26895769538,1698834011215
1698834010000,1698834011000,6,5843037679,1698834011215
1698834010000,1698834011000,5,733753798,1698834011215
1698834010000,1698834011000,4,2127168963,1698834011215
[m
[36m[10:20:11.786300] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:11.976786] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:11.977392] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:11.978115] [D] [thread 128150] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:11.978241] [I] [thread 128150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:11.978262] [I] [thread 128150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:11.978380] [I] [thread 128150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:11.978395] [I] [thread 128150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:12.189768] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:12.189837] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:12.191046] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834011000,1698834012000,11,315537630,1698834012189
1698834011000,1698834012000,10,324710977,1698834012189
1698834011000,1698834012000,9,297476128,1698834012189
1698834011000,1698834012000,8,16369735256,1698834012189
[m
[36m[10:20:12.194593] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:12.195147] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:12.201256] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:12.201327] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:12.202552] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834011000,1698834012000,6,5843040193,1698834012201
1698834011000,1698834012000,5,733756353,1698834012201
1698834011000,1698834012000,7,26895772138,1698834012201
1698834011000,1698834012000,4,2127171538,1698834012201
[m
[36m[10:20:13.190534] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:13.190632] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:13.192906] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834012000,1698834013000,6,5843042579,1698834013190
1698834012000,1698834013000,5,733758596,1698834013190
1698834012000,1698834013000,4,2127173674,1698834013190
1698834012000,1698834013000,7,26895774428,1698834013190
[m
[36m[10:20:13.196450] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:13.227266] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:13.227345] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:13.229083] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834012000,1698834013000,11,315540353,1698834013227
1698834012000,1698834013000,9,297478643,1698834013227
1698834012000,1698834013000,10,324713472,1698834013227
1698834012000,1698834013000,8,16369737607,1698834013227
[m
[36m[10:20:14.191626] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:14.191734] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:14.193544] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834013000,1698834014000,6,5843044749,1698834014191
1698834013000,1698834014000,5,733760844,1698834014191
1698834013000,1698834014000,4,2127176003,1698834014191
1698834013000,1698834014000,7,26895776607,1698834014191
[m
[36m[10:20:14.197690] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:14.219277] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:14.219357] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:14.221240] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834013000,1698834014000,10,324715595,1698834014219
1698834013000,1698834014000,8,16369739801,1698834014219
1698834013000,1698834014000,9,297480918,1698834014219
1698834013000,1698834014000,11,315542601,1698834014219
[m
[36m[10:20:14.422288] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:14.422877] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:14.423704] [D] [thread 128155] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:14.423796] [I] [thread 128155] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:14.423813] [I] [thread 128155] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:14.423929] [I] [thread 128155] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:14.423942] [I] [thread 128155] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:14.656102] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:14.656458] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:15.210736] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:15.210845] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:15.212681] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834014000,1698834015000,10,324718220,1698834015210
1698834014000,1698834015000,9,297483522,1698834015210
1698834014000,1698834015000,8,16369742492,1698834015210
1698834014000,1698834015000,11,315545195,1698834015210
[m
[36m[10:20:15.213894] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:15.213972] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:15.215752] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834014000,1698834015000,6,5843047446,1698834015214
1698834014000,1698834015000,5,733763464,1698834015214
1698834014000,1698834015000,4,2127178474,1698834015214
1698834014000,1698834015000,7,26895779276,1698834015214
[m
[36m[10:20:15.657695] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:16.194987] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:16.195069] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:16.196416] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834015000,1698834016000,9,297485718,1698834016195
1698834015000,1698834016000,8,16369744696,1698834016195
1698834015000,1698834016000,11,315547474,1698834016195
1698834015000,1698834016000,10,324720606,1698834016195
[m
[36m[10:20:16.215725] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:16.215800] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:16.217080] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834015000,1698834016000,4,2127180735,1698834016215
1698834015000,1698834016000,5,733765693,1698834016215
1698834015000,1698834016000,7,26895781522,1698834016215
1698834015000,1698834016000,6,5843049726,1698834016215
[m
[36m[10:20:16.658971] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:16.911786] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:16.912448] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:16.913171] [D] [thread 128161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:16.913262] [I] [thread 128161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:16.913279] [I] [thread 128161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:16.913397] [I] [thread 128161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:16.913411] [I] [thread 128161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:17.147545] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:17.148086] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:17.195558] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:17.195670] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:17.197924] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834016000,1698834017000,5,733768234,1698834017195
1698834016000,1698834017000,7,26895783988,1698834017195
1698834016000,1698834017000,6,5843052348,1698834017195
1698834016000,1698834017000,4,2127183469,1698834017195
[m
[36m[10:20:17.215974] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:17.216054] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:17.217755] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834016000,1698834017000,9,297488263,1698834017216
1698834016000,1698834017000,8,16369747100,1698834017216
1698834016000,1698834017000,10,324722849,1698834017216
1698834016000,1698834017000,11,315549690,1698834017216
[m
[36m[10:20:18.149428] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:18.185008] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:18.185128] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:18.187485] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834017000,1698834018000,8,16369749454,1698834018185
1698834017000,1698834018000,10,324725359,1698834018185
1698834017000,1698834018000,11,315552242,1698834018185
1698834017000,1698834018000,9,297490719,1698834018185
[m
[36m[10:20:18.220969] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:18.221058] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:18.223043] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834017000,1698834018000,5,733770592,1698834018221
1698834017000,1698834018000,7,26895786306,1698834018221
1698834017000,1698834018000,6,5843054653,1698834018221
1698834017000,1698834018000,4,2127185577,1698834018221
[m
[36m[10:20:19.150696] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:19.160679] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:19.160872] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:19.163314] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834018000,1698834019000,10,324727482,1698834019160
1698834018000,1698834019000,8,16369751708,1698834019160
1698834018000,1698834019000,11,315554388,1698834019160
1698834018000,1698834019000,9,297492898,1698834019160
[m
[36m[10:20:19.217824] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:19.217905] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:19.219707] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834018000,1698834019000,7,26895788487,1698834019217
1698834018000,1698834019000,4,2127187901,1698834019217
1698834018000,1698834019000,6,5843056877,1698834019217
1698834018000,1698834019000,5,733773039,1698834019217
[m
[36m[10:20:19.403397] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:19.403993] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:19.404723] [D] [thread 128166] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:19.404817] [I] [thread 128166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:19.404835] [I] [thread 128166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:19.404953] [I] [thread 128166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:19.404966] [I] [thread 128166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:19.681559] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:19.682816] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:20.214488] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:20.214595] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:20.216895] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834019000,1698834020000,4,2127190302,1698834020214
1698834019000,1698834020000,7,26895791143,1698834020214
1698834019000,1698834020000,6,5843059435,1698834020214
1698834019000,1698834020000,5,733775482,1698834020214
[m
[36m[10:20:20.219304] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:20.219397] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:20.221607] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834019000,1698834020000,10,324730181,1698834020219
1698834019000,1698834020000,8,16369754358,1698834020219
1698834019000,1698834020000,11,315556928,1698834020219
1698834019000,1698834020000,9,297495534,1698834020219
[m
[36m[10:20:20.684100] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.200530] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:21.200628] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:21.202894] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834020000,1698834021000,4,2127192381,1698834021200
1698834020000,1698834021000,7,26895793316,1698834021200
1698834020000,1698834021000,6,5843061563,1698834021200
1698834020000,1698834021000,5,733777695,1698834021200
[m
[36m[10:20:21.223683] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:21.223777] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:21.225764] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834020000,1698834021000,8,16369756507,1698834021223
1698834020000,1698834021000,9,297497671,1698834021223
1698834020000,1698834021000,11,315559315,1698834021223
1698834020000,1698834021000,10,324732525,1698834021223
[m
[36m[10:20:21.685390] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.899529] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.899846] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.900830] [D] [thread 128171] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:21.900927] [I] [thread 128171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:21.900944] [I] [thread 128171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:21.901061] [I] [thread 128171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:21.901075] [I] [thread 128171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:22.130505] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:22.131039] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:22.215414] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:22.215522] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:22.217781] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834021000,1698834022000,4,2127195064,1698834022215
1698834021000,1698834022000,7,26895795794,1698834022215
1698834021000,1698834022000,6,5843064128,1698834022215
1698834021000,1698834022000,5,733780321,1698834022215
[m
[36m[10:20:22.225295] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:22.225390] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:22.227138] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834021000,1698834022000,8,16369758910,1698834022225
1698834021000,1698834022000,9,297500162,1698834022225
1698834021000,1698834022000,10,324734880,1698834022225
1698834021000,1698834022000,11,315561676,1698834022225
[m
[36m[10:20:23.132315] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:23.190437] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:23.190512] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:23.191857] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834022000,1698834023000,7,26895798139,1698834023190
1698834022000,1698834023000,6,5843066436,1698834023190
1698834022000,1698834023000,5,733782582,1698834023190
1698834022000,1698834023000,4,2127197400,1698834023190
[m
[36m[10:20:23.216095] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:23.216164] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:23.217371] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834022000,1698834023000,8,16369761413,1698834023216
1698834022000,1698834023000,10,324737428,1698834023216
1698834022000,1698834023000,11,315564221,1698834023216
1698834022000,1698834023000,9,297502705,1698834023216
[m
[36m[10:20:24.133725] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:24.169541] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:24.169638] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:24.171734] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834023000,1698834024000,7,26895800491,1698834024169
1698834023000,1698834024000,6,5843068794,1698834024169
1698834023000,1698834024000,5,733784884,1698834024169
1698834023000,1698834024000,4,2127199770,1698834024169
[m
[36m[10:20:24.218581] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:24.218678] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:24.220906] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834023000,1698834024000,11,315566297,1698834024218
1698834023000,1698834024000,10,324739535,1698834024218
1698834023000,1698834024000,9,297504798,1698834024218
1698834023000,1698834024000,8,16369763837,1698834024218
[m
[36m[10:20:24.451294] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:24.452536] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:24.452833] [D] [thread 128176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:24.452938] [I] [thread 128176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:24.452957] [I] [thread 128176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:24.453174] [I] [thread 128176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:24.453273] [I] [thread 128176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:24.664505] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:24.664823] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:25.162401] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:25.162500] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:25.164519] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834024000,1698834025000,7,26895803076,1698834025162
1698834024000,1698834025000,6,5843071316,1698834025162
1698834024000,1698834025000,4,2127202135,1698834025162
1698834024000,1698834025000,5,733787356,1698834025162
[m
[36m[10:20:25.206957] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:25.207044] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:25.208821] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834024000,1698834025000,11,315568793,1698834025207
1698834024000,1698834025000,10,324742086,1698834025207
1698834024000,1698834025000,9,297507416,1698834025207
1698834024000,1698834025000,8,16369766443,1698834025207
[m
[36m[10:20:25.666097] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.157212] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:26.157311] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:26.159344] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834025000,1698834026000,7,26895805215,1698834026157
1698834025000,1698834026000,6,5843073446,1698834026157
1698834025000,1698834026000,4,2127204235,1698834026157
1698834025000,1698834026000,5,733789484,1698834026157
[m
[36m[10:20:26.213978] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:26.214076] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:26.216315] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834025000,1698834026000,11,315571218,1698834026214
1698834025000,1698834026000,10,324744298,1698834026214
1698834025000,1698834026000,9,297509516,1698834026214
1698834025000,1698834026000,8,16369768571,1698834026214
[m
[36m[10:20:26.667435] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.767845] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.768523] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.769275] [D] [thread 128181] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:26.769369] [I] [thread 128181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:26.769387] [I] [thread 128181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:26.769505] [I] [thread 128181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:26.769518] [I] [thread 128181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:26.919163] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.919666] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:27.149614] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:27.149703] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:27.151570] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834026000,1698834027000,6,5843076019,1698834027149
1698834026000,1698834027000,7,26895807767,1698834027149
1698834026000,1698834027000,4,2127206855,1698834027149
1698834026000,1698834027000,5,733792137,1698834027149
[m
[36m[10:20:27.212826] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:27.212922] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:27.214980] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834026000,1698834027000,10,324746673,1698834027212
1698834026000,1698834027000,9,297511993,1698834027212
1698834026000,1698834027000,8,16369771029,1698834027212
1698834026000,1698834027000,11,315573646,1698834027212
[m
[36m[10:20:27.920902] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:28.223471] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:28.223577] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:28.225806] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834027000,1698834028000,6,5843078400,1698834028223
1698834027000,1698834028000,7,26895810209,1698834028223
1698834027000,1698834028000,4,2127209104,1698834028223
1698834027000,1698834028000,5,733794410,1698834028223
[m
[36m[10:20:28.227837] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:28.227932] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:28.229600] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834027000,1698834028000,10,324749286,1698834028227
1698834027000,1698834028000,8,16369773330,1698834028227
1698834027000,1698834028000,11,315576029,1698834028227
1698834027000,1698834028000,9,297514468,1698834028227
[m
[36m[10:20:28.922185] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:29.102553] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:29.103225] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:29.104118] [D] [thread 128186] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:29.104237] [I] [thread 128186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:29.104256] [I] [thread 128186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:29.104383] [I] [thread 128186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:29.104401] [I] [thread 128186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:29.210079] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:29.210169] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:29.212028] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834028000,1698834029000,11,315578179,1698834029210
1698834028000,1698834029000,8,16369775617,1698834029210
1698834028000,1698834029000,9,297516738,1698834029210
1698834028000,1698834029000,10,324751614,1698834029210
[m
[36m[10:20:29.219272] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:29.219351] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:29.220958] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834028000,1698834029000,4,2127211473,1698834029219
1698834028000,1698834029000,5,733796785,1698834029219
1698834028000,1698834029000,6,5843080910,1698834029219
1698834028000,1698834029000,7,26895812711,1698834029219
[m
[36m[10:20:29.323723] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:29.324318] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:30.182164] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:30.182317] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:30.184400] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834029000,1698834030000,11,315580833,1698834030182
1698834029000,1698834030000,8,16369778226,1698834030182
1698834029000,1698834030000,9,297519304,1698834030182
1698834029000,1698834030000,10,324754263,1698834030182
[m
[36m[10:20:30.213068] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:30.213145] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:30.214511] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834029000,1698834030000,4,2127213995,1698834030213
1698834029000,1698834030000,5,733799227,1698834030213
1698834029000,1698834030000,6,5843083454,1698834030213
1698834029000,1698834030000,7,26895815178,1698834030213
[m
[36m[10:20:30.325559] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:31.197120] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:31.197228] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:31.199887] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834030000,1698834031000,9,297521530,1698834031197
1698834030000,1698834031000,11,315582960,1698834031197
1698834030000,1698834031000,8,16369780396,1698834031197
1698834030000,1698834031000,10,324756320,1698834031197
[m
[36m[10:20:31.210321] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:31.210559] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:31.212510] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834030000,1698834031000,5,733801473,1698834031210
1698834030000,1698834031000,4,2127216459,1698834031210
1698834030000,1698834031000,6,5843085701,1698834031210
1698834030000,1698834031000,7,26895817412,1698834031210
[m
[36m[10:20:31.326457] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:31.347114] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:31.347643] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:31.348462] [D] [thread 128191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:31.348589] [I] [thread 128191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:31.348608] [I] [thread 128191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:31.348728] [I] [thread 128191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:31.348752] [I] [thread 128191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:31.518326] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:31.518674] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:32.168212] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:32.168311] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:32.170628] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834031000,1698834032000,11,315585476,1698834032168
1698834031000,1698834032000,10,324758910,1698834032168
1698834031000,1698834032000,8,16369783036,1698834032168
1698834031000,1698834032000,9,297524290,1698834032168
[m
[36m[10:20:32.209524] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:32.209611] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:32.212215] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834031000,1698834032000,5,733804196,1698834032209
1698834031000,1698834032000,4,2127218873,1698834032209
1698834031000,1698834032000,7,26895819970,1698834032209
1698834031000,1698834032000,6,5843088245,1698834032209
[m
[36m[10:20:32.519931] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.223585] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:33.223697] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:33.226308] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834032000,1698834033000,4,2127221185,1698834033223
1698834032000,1698834033000,7,26895822157,1698834033223
1698834032000,1698834033000,6,5843090406,1698834033223
1698834032000,1698834033000,5,733806524,1698834033223
[m
[36m[10:20:33.227127] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:33.227209] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:33.230272] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834032000,1698834033000,11,315587839,1698834033227
1698834032000,1698834033000,10,324761241,1698834033227
1698834032000,1698834033000,9,297526406,1698834033227
1698834032000,1698834033000,8,16369785160,1698834033227
[m
[36m[10:20:33.521196] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.535595] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.535913] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.537629] [D] [thread 128197] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:33.537726] [I] [thread 128197] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:33.537745] [I] [thread 128197] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:33.537859] [I] [thread 128197] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:33.537872] [I] [thread 128197] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:33.744782] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.745145] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:34.196114] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:34.196211] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:34.198542] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834033000,1698834034000,7,26895824768,1698834034196
1698834033000,1698834034000,6,5843093033,1698834034196
1698834033000,1698834034000,5,733809161,1698834034196
1698834033000,1698834034000,4,2127223841,1698834034196
[m
[36m[10:20:34.209384] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:34.209468] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:34.211623] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834033000,1698834034000,9,297529028,1698834034209
1698834033000,1698834034000,8,16369787800,1698834034209
1698834033000,1698834034000,10,324763866,1698834034209
1698834033000,1698834034000,11,315590470,1698834034209
[m
[36m[10:20:34.746372] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:35.182785] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:35.182897] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:35.185662] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834034000,1698834035000,8,16369790009,1698834035182
1698834034000,1698834035000,10,324766135,1698834035182
1698834034000,1698834035000,9,297531385,1698834035182
1698834034000,1698834035000,11,315592754,1698834035182
[m
[36m[10:20:35.186318] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:35.186436] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:35.188966] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834034000,1698834035000,7,26895826924,1698834035186
1698834034000,1698834035000,6,5843095215,1698834035186
1698834034000,1698834035000,4,2127226001,1698834035186
1698834034000,1698834035000,5,733811330,1698834035186
[m
[36m[10:20:35.724064] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:35.724393] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:35.725386] [D] [thread 128204] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:35.725482] [I] [thread 128204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:35.725500] [I] [thread 128204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:35.725617] [I] [thread 128204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:35.725630] [I] [thread 128204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:35.991115] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:35.991445] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:36.174477] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:36.174560] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:36.176387] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834035000,1698834036000,4,2127228625,1698834036174
1698834035000,1698834036000,7,26895829524,1698834036174
1698834035000,1698834036000,6,5843097866,1698834036174
1698834035000,1698834036000,5,733813959,1698834036174
[m
[36m[10:20:36.205849] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:36.205924] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:36.207295] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834035000,1698834036000,9,297533986,1698834036205
1698834035000,1698834036000,10,324768527,1698834036205
1698834035000,1698834036000,8,16369792554,1698834036205
1698834035000,1698834036000,11,315595247,1698834036205
[m
[36m[10:20:36.992685] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:37.163595] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:37.163663] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:37.165677] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834036000,1698834037000,10,324770915,1698834037163
1698834036000,1698834037000,8,16369794918,1698834037163
1698834036000,1698834037000,11,315597665,1698834037163
1698834036000,1698834037000,9,297536445,1698834037163
[m
[36m[10:20:37.215682] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:37.215767] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:37.218356] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834036000,1698834037000,4,2127230935,1698834037215
1698834036000,1698834037000,6,5843100152,1698834037215
1698834036000,1698834037000,7,26895831836,1698834037215
1698834036000,1698834037000,5,733816186,1698834037215
[m
[36m[10:20:37.993998] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:38.132671] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:38.133039] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:38.134776] [D] [thread 128211] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:38.134873] [I] [thread 128211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:38.134891] [I] [thread 128211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:38.135007] [I] [thread 128211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:38.135020] [I] [thread 128211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:38.186626] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:38.186713] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:38.189249] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834037000,1698834038000,7,26895834135,1698834038186
1698834037000,1698834038000,6,5843102437,1698834038186
1698834037000,1698834038000,5,733818564,1698834038186
1698834037000,1698834038000,4,2127233438,1698834038186
[m
[36m[10:20:38.207163] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:38.207250] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:38.209180] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834037000,1698834038000,10,324773151,1698834038207
1698834037000,1698834038000,11,315599776,1698834038207
1698834037000,1698834038000,8,16369797146,1698834038207
1698834037000,1698834038000,9,297538582,1698834038207
[m
[36m[10:20:38.374843] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:38.375187] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:39.156782] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:39.156889] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:39.159327] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834038000,1698834039000,7,26895836646,1698834039156
1698834038000,1698834039000,6,5843104928,1698834039156
1698834038000,1698834039000,5,733821019,1698834039156
1698834038000,1698834039000,4,2127235760,1698834039156
[m
[36m[10:20:39.215110] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:39.215196] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:39.217201] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834038000,1698834039000,9,297541251,1698834039215
1698834038000,1698834039000,11,315602549,1698834039215
1698834038000,1698834039000,8,16369799676,1698834039215
1698834038000,1698834039000,10,324775899,1698834039215
[m
[36m[10:20:39.376448] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:40.194479] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:40.194586] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:40.196773] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834039000,1698834040000,8,16369801820,1698834040194
1698834039000,1698834040000,10,324777985,1698834040194
1698834039000,1698834040000,9,297543485,1698834040194
1698834039000,1698834040000,11,315604776,1698834040194
[m
[36m[10:20:40.221170] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:40.221259] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:40.223339] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834039000,1698834040000,7,26895838977,1698834040221
1698834039000,1698834040000,6,5843107111,1698834040221
1698834039000,1698834040000,5,733823287,1698834040221
1698834039000,1698834040000,4,2127238024,1698834040221
[m
[36m[10:20:40.377698] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:40.388148] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:40.388485] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:40.389519] [D] [thread 128216] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:40.389617] [I] [thread 128216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:40.389634] [I] [thread 128216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:40.389751] [I] [thread 128216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:40.389766] [I] [thread 128216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:40.611425] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:40.611781] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:41.162566] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:41.162672] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:41.164703] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834040000,1698834041000,8,16369804459,1698834041162
1698834040000,1698834041000,9,297546099,1698834041162
1698834040000,1698834041000,10,324780548,1698834041162
1698834040000,1698834041000,11,315607358,1698834041162
[m
[36m[10:20:41.214683] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:41.214774] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:41.216760] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834040000,1698834041000,4,2127240643,1698834041214
1698834040000,1698834041000,5,733825837,1698834041214
1698834040000,1698834041000,6,5843109717,1698834041214
1698834040000,1698834041000,7,26895841661,1698834041214
[m
[36m[10:20:41.613086] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:42.190830] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:42.190938] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:42.193225] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834041000,1698834042000,9,297548351,1698834042191
1698834041000,1698834042000,8,16369806716,1698834042191
1698834041000,1698834042000,10,324782844,1698834042191
1698834041000,1698834042000,11,315609615,1698834042191
[m
[36m[10:20:42.223531] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:42.223636] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:42.225638] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834041000,1698834042000,5,733828138,1698834042223
1698834041000,1698834042000,6,5843112051,1698834042223
1698834041000,1698834042000,4,2127242877,1698834042223
1698834041000,1698834042000,7,26895843785,1698834042223
[m
[36m[10:20:42.614335] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:42.627715] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:42.628041] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:42.629088] [D] [thread 128221] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:42.629185] [I] [thread 128221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:42.629203] [I] [thread 128221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:42.629320] [I] [thread 128221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:42.629383] [I] [thread 128221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:42.836870] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:42.837220] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:43.220804] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:43.220878] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:43.222149] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834042000,1698834043000,4,2127245555,1698834043220
1698834042000,1698834043000,7,26895846477,1698834043220
1698834042000,1698834043000,6,5843114827,1698834043220
1698834042000,1698834043000,5,733830910,1698834043220
[m
[36m[10:20:43.222669] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:43.222726] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:43.224083] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834042000,1698834043000,8,16369809225,1698834043222
1698834042000,1698834043000,11,315612132,1698834043222
1698834042000,1698834043000,10,324785408,1698834043222
1698834042000,1698834043000,9,297551010,1698834043222
[m
[36m[10:20:43.838423] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:44.200107] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:44.200215] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:44.202314] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834043000,1698834044000,8,16369811544,1698834044200
1698834043000,1698834044000,9,297553346,1698834044200
1698834043000,1698834044000,10,324787894,1698834044200
1698834043000,1698834044000,11,315614631,1698834044200
[m
[36m[10:20:44.210287] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:44.210371] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:44.212048] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834043000,1698834044000,4,2127247661,1698834044210
1698834043000,1698834044000,7,26895848726,1698834044210
1698834043000,1698834044000,5,733833087,1698834044210
1698834043000,1698834044000,6,5843116981,1698834044210
[m
[36m[10:20:44.839703] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:44.874621] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:44.874931] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:44.876068] [D] [thread 128226] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:44.876176] [I] [thread 128226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:44.876194] [I] [thread 128226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:44.876321] [I] [thread 128226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:44.876338] [I] [thread 128226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:45.051217] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:45.051798] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:45.217412] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:45.217523] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:45.219661] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834044000,1698834045000,8,16369813897,1698834045217
1698834044000,1698834045000,9,297555798,1698834045217
1698834044000,1698834045000,10,324790167,1698834045217
1698834044000,1698834045000,11,315616942,1698834045217
[m
[36m[10:20:45.224496] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:45.224592] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:45.226690] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834044000,1698834045000,4,2127250314,1698834045224
1698834044000,1698834045000,7,26895851165,1698834045224
1698834044000,1698834045000,5,733835619,1698834045224
1698834044000,1698834045000,6,5843119471,1698834045224
[m
[36m[10:20:46.053068] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:46.211609] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:46.211695] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:46.213325] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834045000,1698834046000,7,26895853516,1698834046211
1698834045000,1698834046000,5,733837926,1698834046211
1698834045000,1698834046000,6,5843121799,1698834046211
1698834045000,1698834046000,4,2127252693,1698834046211
[m
[36m[10:20:46.227345] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:46.227426] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:46.229703] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834045000,1698834046000,8,16369816463,1698834046227
1698834045000,1698834046000,10,324792611,1698834046227
1698834045000,1698834046000,11,315619415,1698834046227
1698834045000,1698834046000,9,297558315,1698834046227
[m
[36m[10:20:47.054364] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:47.159510] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:47.160002] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:47.160850] [D] [thread 128231] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:47.160944] [I] [thread 128231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:47.160962] [I] [thread 128231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:47.161081] [I] [thread 128231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:47.161095] [I] [thread 128231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:47.201180] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:47.201293] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:47.204014] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834046000,1698834047000,7,26895855801,1698834047201
1698834046000,1698834047000,5,733840278,1698834047201
1698834046000,1698834047000,6,5843124168,1698834047201
1698834046000,1698834047000,4,2127255144,1698834047201
[m
[36m[10:20:47.218461] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:47.218535] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:47.220246] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834046000,1698834047000,10,324794896,1698834047218
1698834046000,1698834047000,11,315621573,1698834047218
1698834046000,1698834047000,9,297560450,1698834047218
1698834046000,1698834047000,8,16369818905,1698834047218
[m
[36m[10:20:47.329088] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:47.329424] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:48.184415] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:48.184524] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:48.187084] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834047000,1698834048000,7,26895858324,1698834048184
1698834047000,1698834048000,5,733842708,1698834048184
1698834047000,1698834048000,4,2127257473,1698834048184
1698834047000,1698834048000,6,5843126654,1698834048184
[m
[36m[10:20:48.212596] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:48.212691] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:48.214932] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834047000,1698834048000,11,315624198,1698834048212
1698834047000,1698834048000,9,297562979,1698834048212
1698834047000,1698834048000,10,324797591,1698834048212
1698834047000,1698834048000,8,16369821459,1698834048212
[m
[36m[10:20:48.330643] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:49.213440] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:49.213509] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:49.215598] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834048000,1698834049000,11,315626498,1698834049213
1698834048000,1698834049000,9,297565134,1698834049213
1698834048000,1698834049000,10,324799712,1698834049213
1698834048000,1698834049000,8,16369823624,1698834049213
[m
[36m[10:20:49.222949] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:49.223053] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:49.225211] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834048000,1698834049000,7,26895860703,1698834049223
1698834048000,1698834049000,5,733844991,1698834049223
1698834048000,1698834049000,4,2127259773,1698834049223
1698834048000,1698834049000,6,5843128884,1698834049223
[m
[36m[10:20:49.331944] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:49.397422] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:49.397756] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:49.399456] [D] [thread 128237] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:49.399552] [I] [thread 128237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:49.399570] [I] [thread 128237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:49.399686] [I] [thread 128237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:49.399699] [I] [thread 128237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:49.567407] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:49.567722] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:50.213372] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:50.213458] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:50.215294] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834049000,1698834050000,5,733847578,1698834050213
1698834049000,1698834050000,4,2127262267,1698834050213
1698834049000,1698834050000,6,5843131477,1698834050213
1698834049000,1698834050000,7,26895863449,1698834050213
[m
[36m[10:20:50.215858] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:50.215905] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:50.217577] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834049000,1698834050000,9,297567872,1698834050215
1698834049000,1698834050000,10,324802310,1698834050215
1698834049000,1698834050000,11,315629200,1698834050215
1698834049000,1698834050000,8,16369826268,1698834050215
[m
[36m[10:20:50.568945] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:51.210081] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:51.210235] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:51.212802] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834050000,1698834051000,4,2127264370,1698834051210
1698834050000,1698834051000,5,733849745,1698834051210
1698834050000,1698834051000,6,5843133605,1698834051210
1698834050000,1698834051000,7,26895865612,1698834051210
[m
[36m[10:20:51.213451] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:51.213617] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:51.216070] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834050000,1698834051000,10,324804459,1698834051213
1698834050000,1698834051000,11,315631380,1698834051213
1698834050000,1698834051000,9,297570197,1698834051213
1698834050000,1698834051000,8,16369828399,1698834051213
[m
[36m[10:20:51.570265] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:51.575850] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:51.576161] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:51.577865] [D] [thread 128242] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:51.577962] [I] [thread 128242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:51.577980] [I] [thread 128242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:51.578099] [I] [thread 128242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:51.578111] [I] [thread 128242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:51.807411] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:51.807734] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:52.211769] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:52.211878] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:52.214637] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834051000,1698834052000,4,2127267069,1698834052211
1698834051000,1698834052000,5,733852410,1698834052211
1698834051000,1698834052000,6,5843136250,1698834052211
1698834051000,1698834052000,7,26895868224,1698834052211
[m
[36m[10:20:52.215251] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:52.215374] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:52.217866] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834051000,1698834052000,10,324806945,1698834052215
1698834051000,1698834052000,9,297572630,1698834052215
1698834051000,1698834052000,11,315633783,1698834052215
1698834051000,1698834052000,8,16369831027,1698834052215
[m
[36m[10:20:52.808945] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:53.186544] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:53.186654] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:53.189205] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834052000,1698834053000,5,733854572,1698834053186
1698834052000,1698834053000,6,5843138403,1698834053186
1698834052000,1698834053000,7,26895870407,1698834053186
1698834052000,1698834053000,4,2127269350,1698834053186
[m
[36m[10:20:53.214777] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:53.214853] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:53.216822] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834052000,1698834053000,10,324809450,1698834053214
1698834052000,1698834053000,9,297575007,1698834053214
1698834052000,1698834053000,11,315636183,1698834053214
1698834052000,1698834053000,8,16369833253,1698834053214
[m
[36m[10:20:53.810247] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:53.830367] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:53.830677] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:53.831706] [D] [thread 128247] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:53.831802] [I] [thread 128247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:53.831820] [I] [thread 128247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:53.831934] [I] [thread 128247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:53.831946] [I] [thread 128247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:54.038621] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:54.038946] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:54.207627] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:54.207734] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:54.210341] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834053000,1698834054000,11,315638477,1698834054207
1698834053000,1698834054000,8,16369835776,1698834054207
1698834053000,1698834054000,9,297577478,1698834054207
1698834053000,1698834054000,10,324811947,1698834054207
[m
[36m[10:20:54.215763] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:54.215846] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:54.217975] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834053000,1698834054000,5,733857221,1698834054215
1698834053000,1698834054000,6,5843140954,1698834054215
1698834053000,1698834054000,7,26895872902,1698834054215
1698834053000,1698834054000,4,2127271918,1698834054215
[m
[36m[10:20:55.040153] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:55.200968] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:55.201086] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:55.203593] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834054000,1698834055000,11,315640989,1698834055201
1698834054000,1698834055000,9,297579859,1698834055201
1698834054000,1698834055000,10,324814375,1698834055201
1698834054000,1698834055000,8,16369838125,1698834055201
[m
[36m[10:20:55.204292] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:55.204394] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:55.206750] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834054000,1698834055000,6,5843143281,1698834055204
1698834054000,1698834055000,4,2127274118,1698834055204
1698834054000,1698834055000,7,26895875227,1698834055204
1698834054000,1698834055000,5,733859654,1698834055204
[m
[36m[10:20:56.041400] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:56.183991] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:56.184355] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:56.185500] [D] [thread 128252] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:56.185596] [I] [thread 128252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:56.185613] [I] [thread 128252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:56.185730] [I] [thread 128252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:56.185742] [I] [thread 128252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:56.195089] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:56.195161] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:56.196360] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834055000,1698834056000,6,5843145587,1698834056195
1698834055000,1698834056000,4,2127276497,1698834056195
1698834055000,1698834056000,7,26895877540,1698834056195
1698834055000,1698834056000,5,733862011,1698834056195
[m
[36m[10:20:56.210627] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:56.210712] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:56.212645] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834055000,1698834056000,11,315643259,1698834056210
1698834055000,1698834056000,9,297582197,1698834056210
1698834055000,1698834056000,10,324816512,1698834056210
1698834055000,1698834056000,8,16369840388,1698834056210
[m
[36m[10:20:56.409963] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:56.410329] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:57.192446] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:57.192518] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:57.193870] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834056000,1698834057000,10,324819101,1698834057192
1698834056000,1698834057000,8,16369842960,1698834057192
1698834056000,1698834057000,9,297584979,1698834057192
1698834056000,1698834057000,11,315646033,1698834057192
[m
[36m[10:20:57.211892] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:57.211974] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:57.213317] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834056000,1698834057000,4,2127278985,1698834057212
1698834056000,1698834057000,6,5843148095,1698834057212
1698834056000,1698834057000,7,26895880145,1698834057212
1698834056000,1698834057000,5,733864528,1698834057212
[m
[36m[10:20:57.411568] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:58.177149] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:58.177256] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:58.179635] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834057000,1698834058000,10,324821194,1698834058177
1698834057000,1698834058000,8,16369845091,1698834058177
1698834057000,1698834058000,9,297587053,1698834058177
1698834057000,1698834058000,11,315648199,1698834058177
[m
[36m[10:20:58.203685] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:58.203782] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:58.205721] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834057000,1698834058000,7,26895882291,1698834058203
1698834057000,1698834058000,6,5843150249,1698834058203
1698834057000,1698834058000,5,733866740,1698834058203
1698834057000,1698834058000,4,2127281432,1698834058203
[m
[36m[10:20:58.412805] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:58.505229] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:58.505809] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:58.506590] [D] [thread 128257] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:58.506686] [I] [thread 128257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:58.506704] [I] [thread 128257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:58.506818] [I] [thread 128257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:58.506842] [I] [thread 128257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:58.824208] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:58.824897] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:59.183472] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:59.183582] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:59.185933] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834058000,1698834059000,7,26895884911,1698834059183
1698834058000,1698834059000,6,5843152899,1698834059183
1698834058000,1698834059000,5,733869383,1698834059183
1698834058000,1698834059000,4,2127283963,1698834059183
[m
[36m[10:20:59.226532] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:20:59.226632] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:59.228840] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834058000,1698834059000,10,324823889,1698834059226
1698834058000,1698834059000,9,297589575,1698834059226
1698834058000,1698834059000,11,315650710,1698834059226
1698834058000,1698834059000,8,16369847715,1698834059226
[m
[36m[10:20:59.826244] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:00.159541] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:00.159649] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:00.161901] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834059000,1698834060000,7,26895887054,1698834060159
1698834059000,1698834060000,6,5843155141,1698834060159
1698834059000,1698834060000,5,733871504,1698834060159
1698834059000,1698834060000,4,2127286087,1698834060159
[m
[36m[10:21:00.202666] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:00.202753] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:00.204903] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834059000,1698834060000,9,297591736,1698834060202
1698834059000,1698834060000,11,315653038,1698834060202
1698834059000,1698834060000,8,16369849997,1698834060202
1698834059000,1698834060000,10,324826279,1698834060202
[m
[36m[10:21:00.827529] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:00.964886] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:00.965221] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:00.966971] [D] [thread 128262] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:00.967068] [I] [thread 128262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:00.967085] [I] [thread 128262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:00.967202] [I] [thread 128262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:00.967215] [I] [thread 128262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:01.151096] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:01.151203] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:01.153528] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834060000,1698834061000,7,26895889463,1698834061151
1698834060000,1698834061000,6,5843157541,1698834061151
1698834060000,1698834061000,5,733873960,1698834061151
1698834060000,1698834061000,4,2127288577,1698834061151
[m
[36m[10:21:01.193620] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:01.193948] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:01.217525] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:01.217620] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:01.219699] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834060000,1698834061000,11,315655330,1698834061217
1698834060000,1698834061000,9,297594129,1698834061217
1698834060000,1698834061000,8,16369852358,1698834061217
1698834060000,1698834061000,10,324828479,1698834061217
[m
[36m[10:21:02.195193] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:02.209022] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:02.209105] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:02.211181] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834061000,1698834062000,8,16369854794,1698834062209
1698834061000,1698834062000,10,324830977,1698834062209
1698834061000,1698834062000,11,315657941,1698834062209
1698834061000,1698834062000,9,297596742,1698834062209
[m
[36m[10:21:02.223017] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:02.223090] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:02.224692] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834061000,1698834062000,7,26895892029,1698834062223
1698834061000,1698834062000,4,2127290953,1698834062223
1698834061000,1698834062000,6,5843159904,1698834062223
1698834061000,1698834062000,5,733876300,1698834062223
[m
[36m[10:21:03.196550] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:03.200927] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:03.201042] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:03.203462] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834062000,1698834063000,8,16369857024,1698834063201
1698834062000,1698834063000,11,315660069,1698834063201
1698834062000,1698834063000,10,324833129,1698834063201
1698834062000,1698834063000,9,297598944,1698834063201
[m
[36m[10:21:03.210033] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:03.210141] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:03.211482] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834062000,1698834063000,6,5843162247,1698834063210
1698834062000,1698834063000,5,733878663,1698834063210
1698834062000,1698834063000,7,26895894504,1698834063210
1698834062000,1698834063000,4,2127293396,1698834063210
[m
[36m[10:21:03.232350] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:03.232666] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:03.233738] [D] [thread 128267] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:03.233838] [I] [thread 128267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:03.233856] [I] [thread 128267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:03.233971] [I] [thread 128267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:03.233985] [I] [thread 128267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:03.396225] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:03.396635] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:04.216490] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:04.216562] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:04.217745] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834063000,1698834064000,6,5843164877,1698834064216
1698834063000,1698834064000,5,733881208,1698834064216
1698834063000,1698834064000,4,2127295855,1698834064216
1698834063000,1698834064000,7,26895896998,1698834064216
[m
[36m[10:21:04.218236] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:04.218296] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:04.219432] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834063000,1698834064000,11,315662739,1698834064218
1698834063000,1698834064000,8,16369859595,1698834064218
1698834063000,1698834064000,10,324835866,1698834064218
1698834063000,1698834064000,9,297601572,1698834064218
[m
[36m[10:21:04.397875] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:05.187023] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:05.187129] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:05.189417] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834064000,1698834065000,8,16369861746,1698834065187
1698834064000,1698834065000,10,324837964,1698834065187
1698834064000,1698834065000,9,297603661,1698834065187
1698834064000,1698834065000,11,315665074,1698834065187
[m
[36m[10:21:05.208542] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:05.208618] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:05.210462] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834064000,1698834065000,5,733883400,1698834065208
1698834064000,1698834065000,4,2127298115,1698834065208
1698834064000,1698834065000,7,26895899211,1698834065208
1698834064000,1698834065000,6,5843167187,1698834065208
[m
[36m[10:21:05.399179] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:05.405473] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:05.405804] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:05.406999] [D] [thread 128272] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:05.407103] [I] [thread 128272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:05.407119] [I] [thread 128272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:05.407235] [I] [thread 128272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:05.407249] [I] [thread 128272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:05.623855] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:05.624195] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:06.167247] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:06.167353] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:06.169676] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834065000,1698834066000,8,16369864476,1698834066167
1698834065000,1698834066000,10,324840509,1698834066167
1698834065000,1698834066000,9,297606270,1698834066167
1698834065000,1698834066000,11,315667638,1698834066167
[m
[36m[10:21:06.216992] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:06.217089] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:06.219201] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834065000,1698834066000,5,733886142,1698834066217
1698834065000,1698834066000,4,2127300599,1698834066217
1698834065000,1698834066000,7,26895901804,1698834066217
1698834065000,1698834066000,6,5843169827,1698834066217
[m
[36m[10:21:06.625464] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:07.155331] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:07.155438] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:07.157738] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834066000,1698834067000,8,16369866605,1698834067155
1698834066000,1698834067000,9,297608474,1698834067155
1698834066000,1698834067000,11,315669857,1698834067155
1698834066000,1698834067000,10,324842698,1698834067155
[m
[36m[10:21:07.205048] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:07.205142] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:07.207230] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834066000,1698834067000,4,2127302747,1698834067205
1698834066000,1698834067000,7,26895903983,1698834067205
1698834066000,1698834067000,6,5843171978,1698834067205
1698834066000,1698834067000,5,733888397,1698834067205
[m
[36m[10:21:07.626754] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:07.729811] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:07.730148] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:07.731278] [D] [thread 128278] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:07.731400] [I] [thread 128278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:07.731420] [I] [thread 128278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:07.731544] [I] [thread 128278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:07.731561] [I] [thread 128278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:07.892687] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:07.893024] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:08.192830] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:08.192938] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:08.195312] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834067000,1698834068000,4,2127305381,1698834068193
1698834067000,1698834068000,7,26895906498,1698834068193
1698834067000,1698834068000,6,5843174575,1698834068193
1698834067000,1698834068000,5,733891008,1698834068193
[m
[36m[10:21:08.225524] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:08.225614] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:08.227717] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834067000,1698834068000,8,16369869196,1698834068225
1698834067000,1698834068000,11,315672288,1698834068225
1698834067000,1698834068000,9,297610900,1698834068225
1698834067000,1698834068000,10,324845030,1698834068225
[m
[36m[10:21:08.894184] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:09.208484] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:09.208588] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:09.210992] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834068000,1698834069000,4,2127307707,1698834069208
1698834068000,1698834069000,6,5843176772,1698834069208
1698834068000,1698834069000,7,26895908781,1698834069208
1698834068000,1698834069000,5,733893257,1698834069208
[m
[36m[10:21:09.218095] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:09.218231] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:09.219948] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834068000,1698834069000,9,297613259,1698834069218
1698834068000,1698834069000,10,324847423,1698834069218
1698834068000,1698834069000,11,315674782,1698834069218
1698834068000,1698834069000,8,16369871626,1698834069218
[m
[36m[10:21:09.895429] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:09.900046] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:09.900353] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:09.901400] [D] [thread 128283] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:09.901489] [I] [thread 128283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:09.901506] [I] [thread 128283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:09.901623] [I] [thread 128283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:09.901636] [I] [thread 128283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:10.122929] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:10.123288] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:10.191093] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:10.191169] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:10.192717] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834069000,1698834070000,7,26895911274,1698834070191
1698834069000,1698834070000,6,5843179289,1698834070191
1698834069000,1698834070000,5,733895835,1698834070191
1698834069000,1698834070000,4,2127310307,1698834070191
[m
[36m[10:21:10.228324] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:10.228459] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:10.230147] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834069000,1698834070000,9,297615729,1698834070228
1698834069000,1698834070000,10,324849731,1698834070228
1698834069000,1698834070000,11,315677059,1698834070228
1698834069000,1698834070000,8,16369874055,1698834070228
[m
[36m[10:21:11.124543] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:11.167435] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:11.167523] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:11.169364] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834070000,1698834071000,7,26895913657,1698834071167
1698834070000,1698834071000,6,5843181632,1698834071167
1698834070000,1698834071000,5,733898140,1698834071167
1698834070000,1698834071000,4,2127312558,1698834071167
[m
[36m[10:21:11.212623] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:11.212769] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:11.215060] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834070000,1698834071000,10,324852402,1698834071212
1698834070000,1698834071000,11,315679563,1698834071212
1698834070000,1698834071000,8,16369876481,1698834071212
1698834070000,1698834071000,9,297618330,1698834071212
[m
[36m[10:21:12.125837] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:12.167398] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:12.167521] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:12.170480] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834071000,1698834072000,7,26895915888,1698834072167
1698834071000,1698834072000,6,5843184008,1698834072167
1698834071000,1698834072000,4,2127314901,1698834072167
1698834071000,1698834072000,5,733900496,1698834072167
[m
[36m[10:21:12.193347] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:12.193703] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:12.194718] [D] [thread 128289] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:12.194817] [I] [thread 128289] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:12.194835] [I] [thread 128289] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:12.194950] [I] [thread 128289] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:12.194963] [I] [thread 128289] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:12.211148] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:12.211211] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:12.212929] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834071000,1698834072000,11,315681719,1698834072211
1698834071000,1698834072000,8,16369878797,1698834072211
1698834071000,1698834072000,10,324854699,1698834072211
1698834071000,1698834072000,9,297620437,1698834072211
[m
[36m[10:21:12.336086] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:12.336471] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:13.153590] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:13.153698] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:13.156233] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834072000,1698834073000,7,26895918448,1698834073153
1698834072000,1698834073000,6,5843186506,1698834073153
1698834072000,1698834073000,4,2127317292,1698834073153
1698834072000,1698834073000,5,733902961,1698834073153
[m
[36m[10:21:13.207425] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:13.207523] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:13.209733] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834072000,1698834073000,11,315684440,1698834073207
1698834072000,1698834073000,10,324857353,1698834073207
1698834072000,1698834073000,9,297623060,1698834073207
1698834072000,1698834073000,8,16369881343,1698834073207
[m
[36m[10:21:13.337811] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:14.188926] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:14.189039] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:14.191748] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834073000,1698834074000,10,324859478,1698834074189
1698834073000,1698834074000,9,297625195,1698834074189
1698834073000,1698834074000,8,16369883518,1698834074189
1698834073000,1698834074000,11,315686659,1698834074189
[m
[36m[10:21:14.219252] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:14.219348] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:14.221536] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834073000,1698834074000,7,26895920796,1698834074219
1698834073000,1698834074000,6,5843188709,1698834074219
1698834073000,1698834074000,4,2127319533,1698834074219
1698834073000,1698834074000,5,733905194,1698834074219
[m
[36m[10:21:14.339101] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:14.395809] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:14.396159] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:14.397723] [D] [thread 128294] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:14.397821] [I] [thread 128294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:14.397838] [I] [thread 128294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:14.397955] [I] [thread 128294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:14.397967] [I] [thread 128294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:14.598398] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:14.598707] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:15.181413] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:15.181521] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:15.184170] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834074000,1698834075000,10,324862040,1698834075181
1698834074000,1698834075000,11,315689143,1698834075181
1698834074000,1698834075000,8,16369886134,1698834075181
1698834074000,1698834075000,9,297627751,1698834075181
[m
[36m[10:21:15.215575] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:15.215652] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:15.217302] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834074000,1698834075000,6,5843191268,1698834075215
1698834074000,1698834075000,4,2127322064,1698834075215
1698834074000,1698834075000,5,733907779,1698834075215
1698834074000,1698834075000,7,26895923527,1698834075215
[m
[36m[10:21:15.599903] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:16.173037] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:16.173107] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:16.174431] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834075000,1698834076000,10,324864309,1698834076173
1698834075000,1698834076000,11,315691353,1698834076173
1698834075000,1698834076000,8,16369888265,1698834076173
1698834075000,1698834076000,9,297629921,1698834076173
[m
[36m[10:21:16.219840] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:16.219910] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:16.221210] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834075000,1698834076000,6,5843193545,1698834076219
1698834075000,1698834076000,5,733909930,1698834076219
1698834075000,1698834076000,4,2127324350,1698834076219
1698834075000,1698834076000,7,26895925661,1698834076219
[m
[36m[10:21:16.601091] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:16.603560] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:16.603885] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:16.604894] [D] [thread 128299] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:16.604989] [I] [thread 128299] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:16.605007] [I] [thread 128299] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:16.605125] [I] [thread 128299] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:16.605139] [I] [thread 128299] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:16.864647] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:16.865017] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:17.216379] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:17.216470] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:17.217922] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834076000,1698834077000,5,733912772,1698834077216
1698834076000,1698834077000,7,26895928303,1698834077216
1698834076000,1698834077000,6,5843196331,1698834077216
1698834076000,1698834077000,4,2127327119,1698834077216
[m
[36m[10:21:17.218426] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:17.218487] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:17.219783] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834076000,1698834077000,10,324866854,1698834077218
1698834076000,1698834077000,11,315693814,1698834077218
1698834076000,1698834077000,8,16369890869,1698834077218
1698834076000,1698834077000,9,297632463,1698834077218
[m
[36m[10:21:17.866275] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:18.213821] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:18.213928] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:18.216280] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834077000,1698834078000,7,26895930530,1698834078213
1698834077000,1698834078000,6,5843198573,1698834078213
1698834077000,1698834078000,4,2127329167,1698834078213
1698834077000,1698834078000,5,733915035,1698834078213
[m
[36m[10:21:18.216889] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:18.216968] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:18.219280] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834077000,1698834078000,11,315696382,1698834078217
1698834077000,1698834078000,8,16369893161,1698834078217
1698834077000,1698834078000,9,297634716,1698834078217
1698834077000,1698834078000,10,324869341,1698834078217
[m
[36m[10:21:18.867633] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:18.987794] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:18.988159] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:18.989250] [D] [thread 128305] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:18.989343] [I] [thread 128305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:18.989361] [I] [thread 128305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:18.989478] [I] [thread 128305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:18.989491] [I] [thread 128305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:19.191343] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:19.191447] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:19.193677] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834078000,1698834079000,9,297636970,1698834079191
1698834078000,1698834079000,8,16369895571,1698834079191
1698834078000,1698834079000,10,324871573,1698834079191
1698834078000,1698834079000,11,315698712,1698834079191
[m
[36m[10:21:19.197903] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:19.197981] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:19.199747] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834078000,1698834079000,7,26895932941,1698834079198
1698834078000,1698834079000,6,5843200996,1698834079198
1698834078000,1698834079000,4,2127331642,1698834079198
1698834078000,1698834079000,5,733917527,1698834079198
[m
[36m[10:21:19.250097] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:19.250455] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:20.192072] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:20.192179] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:20.194502] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834079000,1698834080000,7,26895935379,1698834080192
1698834079000,1698834080000,6,5843203390,1698834080192
1698834079000,1698834080000,4,2127333927,1698834080192
1698834079000,1698834080000,5,733919833,1698834080192
[m
[36m[10:21:20.216791] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:20.216881] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:20.218890] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834079000,1698834080000,9,297639606,1698834080216
1698834079000,1698834080000,8,16369897988,1698834080216
1698834079000,1698834080000,10,324874131,1698834080216
1698834079000,1698834080000,11,315701204,1698834080216
[m
[36m[10:21:20.251621] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:21.178599] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:21.178688] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:21.180880] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834080000,1698834081000,7,26895937582,1698834081178
1698834080000,1698834081000,6,5843205633,1698834081178
1698834080000,1698834081000,5,733922107,1698834081178
1698834080000,1698834081000,4,2127336193,1698834081178
[m
[36m[10:21:21.196823] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:21.196922] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:21.198990] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834080000,1698834081000,8,16369900111,1698834081196
1698834080000,1698834081000,10,324876198,1698834081196
1698834080000,1698834081000,11,315703269,1698834081196
1698834080000,1698834081000,9,297641803,1698834081196
[m
[36m[10:21:21.252871] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:21.417890] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:21.418269] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:21.419291] [D] [thread 128310] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:21.419386] [I] [thread 128310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:21.419404] [I] [thread 128310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:21.419520] [I] [thread 128310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:21.419533] [I] [thread 128310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:21.632294] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:21.632924] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:22.169643] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:22.169757] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:22.172078] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834081000,1698834082000,8,16369902764,1698834082169
1698834081000,1698834082000,10,324878829,1698834082169
1698834081000,1698834082000,11,315705809,1698834082169
1698834081000,1698834082000,9,297644423,1698834082169
[m
[36m[10:21:22.172685] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:22.172767] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:22.174956] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834081000,1698834082000,7,26895940171,1698834082172
1698834081000,1698834082000,4,2127338655,1698834082172
1698834081000,1698834082000,5,733924661,1698834082172
1698834081000,1698834082000,6,5843208177,1698834082172
[m
[36m[10:21:22.634277] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:23.161197] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:23.161276] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:23.163233] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834082000,1698834083000,4,2127340784,1698834083161
1698834082000,1698834083000,7,26895942337,1698834083161
1698834082000,1698834083000,5,733926846,1698834083161
1698834082000,1698834083000,6,5843210341,1698834083161
[m
[36m[10:21:23.231194] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:23.231286] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:23.233525] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834082000,1698834083000,8,16369905058,1698834083231
1698834082000,1698834083000,10,324881150,1698834083231
1698834082000,1698834083000,11,315708021,1698834083231
1698834082000,1698834083000,9,297646572,1698834083231
[m
[36m[10:21:23.635703] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:23.752703] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:23.753231] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:23.754082] [D] [thread 128315] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:23.754177] [I] [thread 128315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:23.754227] [I] [thread 128315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:23.754351] [I] [thread 128315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:23.754367] [I] [thread 128315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:23.968812] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:23.969278] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:24.224630] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:24.224709] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:24.226098] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834083000,1698834084000,4,2127343487,1698834084224
1698834083000,1698834084000,7,26895944862,1698834084224
1698834083000,1698834084000,5,733929501,1698834084224
1698834083000,1698834084000,6,5843212967,1698834084224
[m
[36m[10:21:24.226594] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:24.226778] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:24.228096] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834083000,1698834084000,11,315710528,1698834084226
1698834083000,1698834084000,9,297649058,1698834084226
1698834083000,1698834084000,8,16369907770,1698834084226
1698834083000,1698834084000,10,324883759,1698834084226
[m
[36m[10:21:24.970706] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:25.215682] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:25.215785] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:25.218090] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834084000,1698834085000,7,26895947201,1698834085215
1698834084000,1698834085000,5,733931695,1698834085215
1698834084000,1698834085000,6,5843215261,1698834085215
1698834084000,1698834085000,4,2127345751,1698834085215
[m
[36m[10:21:25.218771] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:25.218868] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:25.221070] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834084000,1698834085000,11,315713125,1698834085218
1698834084000,1698834085000,8,16369910111,1698834085218
1698834084000,1698834085000,9,297651514,1698834085218
1698834084000,1698834085000,10,324886106,1698834085218
[m
[36m[10:21:25.972022] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:26.072061] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:26.072701] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:26.073467] [D] [thread 128320] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:26.073559] [I] [thread 128320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:26.073576] [I] [thread 128320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:26.073693] [I] [thread 128320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:26.073706] [I] [thread 128320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:26.195228] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:26.195337] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:26.197580] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834085000,1698834086000,7,26895949507,1698834086195
1698834085000,1698834086000,5,733934107,1698834086195
1698834085000,1698834086000,6,5843217669,1698834086195
1698834085000,1698834086000,4,2127348257,1698834086195
[m
[36m[10:21:26.222871] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:26.222951] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:26.224677] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834085000,1698834086000,11,315715411,1698834086222
1698834085000,1698834086000,9,297653791,1698834086222
1698834085000,1698834086000,8,16369912398,1698834086222
1698834085000,1698834086000,10,324888342,1698834086222
[m
[36m[10:21:26.321554] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:26.322057] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:27.215167] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:27.215263] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:27.217268] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834086000,1698834087000,5,733936621,1698834087215
1698834086000,1698834087000,7,26895952018,1698834087215
1698834086000,1698834087000,6,5843220089,1698834087215
1698834086000,1698834087000,4,2127350603,1698834087215
[m
[36m[10:21:27.218796] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:27.218880] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:27.220812] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834086000,1698834087000,9,297656281,1698834087218
1698834086000,1698834087000,8,16369914844,1698834087218
1698834086000,1698834087000,11,315718109,1698834087218
1698834086000,1698834087000,10,324890879,1698834087218
[m
[36m[10:21:27.322352] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:28.216413] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:28.216511] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:28.218834] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834087000,1698834088000,9,297658537,1698834088216
1698834087000,1698834088000,11,315720229,1698834088216
1698834087000,1698834088000,8,16369917064,1698834088216
1698834087000,1698834088000,10,324893016,1698834088216
[m
[36m[10:21:28.219430] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:28.219514] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:28.221667] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834087000,1698834088000,7,26895954226,1698834088219
1698834087000,1698834088000,6,5843222347,1698834088219
1698834087000,1698834088000,4,2127352866,1698834088219
1698834087000,1698834088000,5,733939039,1698834088219
[m
[36m[10:21:28.323575] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:28.399587] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:28.400100] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:28.400886] [D] [thread 128325] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:28.400978] [I] [thread 128325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:28.400995] [I] [thread 128325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:28.401112] [I] [thread 128325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:28.401125] [I] [thread 128325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:28.613766] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:28.614292] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:29.205729] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:29.205838] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:29.207914] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834088000,1698834089000,11,315722715,1698834089205
1698834088000,1698834089000,8,16369919692,1698834089205
1698834088000,1698834089000,10,324895638,1698834089205
1698834088000,1698834089000,9,297661299,1698834089205
[m
[36m[10:21:29.220534] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:29.220617] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:29.222495] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834088000,1698834089000,7,26895956991,1698834089220
1698834088000,1698834089000,6,5843224884,1698834089220
1698834088000,1698834089000,4,2127355393,1698834089220
1698834088000,1698834089000,5,733941537,1698834089220
[m
[36m[10:21:29.615507] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:30.206560] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:30.206626] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:30.208100] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834089000,1698834090000,11,315725185,1698834090206
1698834089000,1698834090000,8,16369921889,1698834090206
1698834089000,1698834090000,10,324897842,1698834090206
1698834089000,1698834090000,9,297663425,1698834090206
[m
[36m[10:21:30.216278] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:30.216364] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:30.218289] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834089000,1698834090000,6,5843227051,1698834090216
1698834089000,1698834090000,4,2127357546,1698834090216
1698834089000,1698834090000,5,733943673,1698834090216
1698834089000,1698834090000,7,26895959229,1698834090216
[m
[36m[10:21:30.616773] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:30.672101] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:30.672478] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:30.674071] [D] [thread 128330] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:30.674162] [I] [thread 128330] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:30.674181] [I] [thread 128330] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:30.674332] [I] [thread 128330] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:30.674349] [I] [thread 128330] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:30.850538] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:30.850870] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:31.195473] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:31.195570] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:31.197216] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834090000,1698834091000,9,297665858,1698834091195
1698834090000,1698834091000,10,324900300,1698834091195
1698834090000,1698834091000,8,16369924479,1698834091195
1698834090000,1698834091000,11,315727704,1698834091195
[m
[36m[10:21:31.223053] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:31.223125] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:31.224384] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834090000,1698834091000,4,2127360238,1698834091223
1698834090000,1698834091000,6,5843229691,1698834091223
1698834090000,1698834091000,5,733946408,1698834091223
1698834090000,1698834091000,7,26895961855,1698834091223
[m
[36m[10:21:31.852098] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:32.199607] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:32.199714] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:32.202023] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834091000,1698834092000,6,5843231966,1698834092199
1698834091000,1698834092000,5,733948544,1698834092199
1698834091000,1698834092000,7,26895964113,1698834092199
1698834091000,1698834092000,4,2127362570,1698834092199
[m
[36m[10:21:32.202676] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:32.202757] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:32.204864] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834091000,1698834092000,9,297668227,1698834092202
1698834091000,1698834092000,10,324902671,1698834092202
1698834091000,1698834092000,11,315730138,1698834092202
1698834091000,1698834092000,8,16369926728,1698834092202
[m
[36m[10:21:32.853420] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:32.895791] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:32.896108] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:32.897093] [D] [thread 128336] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:32.897188] [I] [thread 128336] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:32.897205] [I] [thread 128336] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:32.897322] [I] [thread 128336] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:32.897336] [I] [thread 128336] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:33.088671] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:33.088990] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:33.188686] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:33.188791] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:33.191176] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834092000,1698834093000,6,5843234396,1698834093188
1698834092000,1698834093000,5,733951116,1698834093188
1698834092000,1698834093000,7,26895966652,1698834093188
1698834092000,1698834093000,4,2127365092,1698834093188
[m
[36m[10:21:33.225152] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:33.225239] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:33.226992] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834092000,1698834093000,9,297670670,1698834093225
1698834092000,1698834093000,10,324904901,1698834093225
1698834092000,1698834093000,11,315732361,1698834093225
1698834092000,1698834093000,8,16369929165,1698834093225
[m
[36m[10:21:34.090356] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:34.218238] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:34.218343] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:34.220614] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834093000,1698834094000,6,5843236835,1698834094218
1698834093000,1698834094000,4,2127367286,1698834094218
1698834093000,1698834094000,5,733953373,1698834094218
1698834093000,1698834094000,7,26895969004,1698834094218
[m
[36m[10:21:34.221229] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:34.221309] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:34.223522] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834093000,1698834094000,11,315734977,1698834094221
1698834093000,1698834094000,10,324907353,1698834094221
1698834093000,1698834094000,8,16369931512,1698834094221
1698834093000,1698834094000,9,297673235,1698834094221
[m
[36m[10:21:35.091659] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.212350] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:35.212462] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:35.214926] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834094000,1698834095000,4,2127369658,1698834095212
1698834094000,1698834095000,7,26895971245,1698834095212
1698834094000,1698834095000,5,733955747,1698834095212
1698834094000,1698834095000,6,5843239299,1698834095212
[m
[36m[10:21:35.217091] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:35.217199] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:35.219631] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834094000,1698834095000,10,324909647,1698834095217
1698834094000,1698834095000,8,16369933737,1698834095217
1698834094000,1698834095000,9,297675380,1698834095217
1698834094000,1698834095000,11,315737208,1698834095217
[m
[36m[10:21:35.242336] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.242659] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.243903] [D] [thread 128341] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:35.243999] [I] [thread 128341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:35.244017] [I] [thread 128341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:35.244134] [I] [thread 128341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:35.244146] [I] [thread 128341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:35.455396] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.455911] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:36.198417] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:36.198523] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:36.200833] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834095000,1698834096000,4,2127372072,1698834096198
1698834095000,1698834096000,7,26895973793,1698834096198
1698834095000,1698834096000,5,733958161,1698834096198
1698834095000,1698834096000,6,5843241735,1698834096198
[m
[36m[10:21:36.205863] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:36.205960] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:36.208244] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834095000,1698834096000,8,16369936360,1698834096205
1698834095000,1698834096000,11,315739898,1698834096205
1698834095000,1698834096000,9,297677939,1698834096205
1698834095000,1698834096000,10,324912441,1698834096205
[m
[36m[10:21:36.457167] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:37.181141] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:37.181211] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:37.182401] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834096000,1698834097000,9,297680056,1698834097181
1698834096000,1698834097000,11,315742082,1698834097181
1698834096000,1698834097000,8,16369938568,1698834097181
1698834096000,1698834097000,10,324914523,1698834097181
[m
[36m[10:21:37.199940] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:37.200024] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:37.201953] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834096000,1698834097000,4,2127374384,1698834097200
1698834096000,1698834097000,7,26895975975,1698834097200
1698834096000,1698834097000,5,733960428,1698834097200
1698834096000,1698834097000,6,5843243983,1698834097200
[m
[36m[10:21:37.458427] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:37.487443] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:37.488069] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:37.488776] [D] [thread 128346] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:37.488867] [I] [thread 128346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:37.488884] [I] [thread 128346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:37.489002] [I] [thread 128346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:37.489015] [I] [thread 128346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:37.710305] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:37.710821] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:38.160261] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:38.160357] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:38.162458] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834097000,1698834098000,9,297682567,1698834098160
1698834097000,1698834098000,11,315744510,1698834098160
1698834097000,1698834098000,8,16369941199,1698834098160
1698834097000,1698834098000,10,324917020,1698834098160
[m
[36m[10:21:38.196788] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:38.196856] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:38.198010] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834097000,1698834098000,7,26895978672,1698834098196
1698834097000,1698834098000,5,733963027,1698834098196
1698834097000,1698834098000,6,5843246642,1698834098196
1698834097000,1698834098000,4,2127377114,1698834098196
[m
[36m[10:21:38.712074] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:39.190119] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:39.190270] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:39.192494] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834098000,1698834099000,7,26895980801,1698834099190
1698834098000,1698834099000,5,733965182,1698834099190
1698834098000,1698834099000,4,2127379199,1698834099190
1698834098000,1698834099000,6,5843248788,1698834099190
[m
[36m[10:21:39.222778] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:39.222859] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:39.224994] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834098000,1698834099000,9,297684916,1698834099222
1698834098000,1698834099000,11,315746876,1698834099222
1698834098000,1698834099000,10,324919241,1698834099222
1698834098000,1698834099000,8,16369943383,1698834099222
[m
[36m[10:21:39.713350] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:39.747666] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:39.748269] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:39.749042] [D] [thread 128351] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:39.749136] [I] [thread 128351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:39.749154] [I] [thread 128351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:39.749271] [I] [thread 128351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:39.749285] [I] [thread 128351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:39.945380] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:39.945844] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:40.203827] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:40.203934] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:40.206302] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834099000,1698834100000,10,324921690,1698834100204
1698834099000,1698834100000,8,16369945858,1698834100204
1698834099000,1698834100000,9,297687476,1698834100204
1698834099000,1698834100000,11,315749320,1698834100204
[m
[36m[10:21:40.222907] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:40.222984] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:40.224710] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834099000,1698834100000,7,26895983451,1698834100223
1698834099000,1698834100000,4,2127381780,1698834100223
1698834099000,1698834100000,5,733967808,1698834100223
1698834099000,1698834100000,6,5843251329,1698834100223
[m
[36m[10:21:40.947142] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:41.185901] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:41.186001] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:41.188318] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834100000,1698834101000,8,16369948151,1698834101186
1698834100000,1698834101000,9,297689833,1698834101186
1698834100000,1698834101000,10,324924222,1698834101186
1698834100000,1698834101000,11,315751704,1698834101186
[m
[36m[10:21:41.220337] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:41.220412] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:41.222156] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834100000,1698834101000,4,2127383929,1698834101220
1698834100000,1698834101000,5,733970026,1698834101220
1698834100000,1698834101000,6,5843253599,1698834101220
1698834100000,1698834101000,7,26895985834,1698834101220
[m
[36m[10:21:41.948497] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:42.076848] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:42.077373] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:42.078335] [D] [thread 128356] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:42.078430] [I] [thread 128356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:42.078449] [I] [thread 128356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:42.078566] [I] [thread 128356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:42.078580] [I] [thread 128356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:42.210340] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:42.210445] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:42.212474] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834101000,1698834102000,4,2127386494,1698834102210
1698834101000,1698834102000,5,733972411,1698834102210
1698834101000,1698834102000,6,5843255966,1698834102210
1698834101000,1698834102000,7,26895988180,1698834102210
[m
[36m[10:21:42.218637] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:42.218719] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:42.220691] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834101000,1698834102000,8,16369950507,1698834102218
1698834101000,1698834102000,9,297692109,1698834102218
1698834101000,1698834102000,10,324926420,1698834102218
1698834101000,1698834102000,11,315753962,1698834102218
[m
[36m[10:21:42.276691] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:42.277254] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:43.185197] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:43.185309] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:43.187756] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834102000,1698834103000,8,16369953014,1698834103185
1698834102000,1698834103000,10,324928985,1698834103185
1698834102000,1698834103000,11,315756604,1698834103185
1698834102000,1698834103000,9,297694734,1698834103185
[m
[36m[10:21:43.194288] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:43.194383] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:43.196369] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834102000,1698834103000,5,733974774,1698834103194
1698834102000,1698834103000,6,5843258423,1698834103194
1698834102000,1698834103000,4,2127388955,1698834103194
1698834102000,1698834103000,7,26895990658,1698834103194
[m
[36m[10:21:43.278484] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.184183] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:44.184261] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:44.185845] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834103000,1698834104000,5,733977163,1698834104184
1698834103000,1698834104000,6,5843260711,1698834104184
1698834103000,1698834104000,4,2127391221,1698834104184
1698834103000,1698834104000,7,26895992963,1698834104184
[m
[36m[10:21:44.214695] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:44.214767] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:44.216021] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834103000,1698834104000,8,16369955205,1698834104214
1698834103000,1698834104000,11,315758831,1698834104214
1698834103000,1698834104000,10,324931136,1698834104214
1698834103000,1698834104000,9,297696890,1698834104214
[m
[36m[10:21:44.279779] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.324256] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.324621] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.325958] [D] [thread 128361] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:44.326052] [I] [thread 128361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:44.326070] [I] [thread 128361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:44.326186] [I] [thread 128361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:44.326234] [I] [thread 128361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:44.490089] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.490591] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:45.179101] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:45.179210] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:45.181700] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834104000,1698834105000,5,733979686,1698834105179
1698834104000,1698834105000,4,2127393772,1698834105179
1698834104000,1698834105000,6,5843263307,1698834105179
1698834104000,1698834105000,7,26895995553,1698834105179
[m
[36m[10:21:45.226046] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:45.226133] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:45.228026] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834104000,1698834105000,8,16369957906,1698834105226
1698834104000,1698834105000,10,324933794,1698834105226
1698834104000,1698834105000,9,297699526,1698834105226
1698834104000,1698834105000,11,315761550,1698834105226
[m
[36m[10:21:45.491889] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.174812] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:46.174902] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:46.177481] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834105000,1698834106000,4,2127395941,1698834106174
1698834105000,1698834106000,5,733981860,1698834106174
1698834105000,1698834106000,6,5843265451,1698834106174
1698834105000,1698834106000,7,26895997730,1698834106174
[m
[36m[10:21:46.215497] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:46.215594] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:46.218051] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834105000,1698834106000,9,297701774,1698834106215
1698834105000,1698834106000,11,315763710,1698834106215
1698834105000,1698834106000,10,324936102,1698834106215
1698834105000,1698834106000,8,16369960190,1698834106215
[m
[36m[10:21:46.493125] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.523961] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.524548] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.525311] [D] [thread 128366] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:46.525428] [I] [thread 128366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:46.525448] [I] [thread 128366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:46.525578] [I] [thread 128366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:46.525593] [I] [thread 128366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:46.739705] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.740027] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:47.197621] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:47.197730] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:47.200348] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834106000,1698834107000,4,2127398646,1698834107197
1698834106000,1698834107000,5,733984509,1698834107197
1698834106000,1698834107000,6,5843268107,1698834107197
1698834106000,1698834107000,7,26896000426,1698834107197
[m
[36m[10:21:47.213451] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:47.213544] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:47.215708] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834106000,1698834107000,11,315766119,1698834107213
1698834106000,1698834107000,9,297704403,1698834107213
1698834106000,1698834107000,10,324938606,1698834107213
1698834106000,1698834107000,8,16369962814,1698834107213
[m
[36m[10:21:47.741194] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:48.175386] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:48.175494] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:48.178066] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834107000,1698834108000,5,733986632,1698834108175
1698834107000,1698834108000,6,5843270224,1698834108175
1698834107000,1698834108000,7,26896002543,1698834108175
1698834107000,1698834108000,4,2127400898,1698834108175
[m
[36m[10:21:48.207229] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:48.207330] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:48.209900] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834107000,1698834108000,11,315768452,1698834108207
1698834107000,1698834108000,9,297706596,1698834108207
1698834107000,1698834108000,10,324940867,1698834108207
1698834107000,1698834108000,8,16369965031,1698834108207
[m
[36m[10:21:48.742539] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:48.802926] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:48.803239] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:48.804428] [D] [thread 128371] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:48.804544] [I] [thread 128371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:48.804563] [I] [thread 128371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:48.804687] [I] [thread 128371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:48.804715] [I] [thread 128371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:48.967549] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:48.967902] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:49.162621] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:49.162726] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:49.165195] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834108000,1698834109000,5,733989197,1698834109162
1698834108000,1698834109000,6,5843272702,1698834109162
1698834108000,1698834109000,7,26896005032,1698834109162
1698834108000,1698834109000,4,2127403450,1698834109162
[m
[36m[10:21:49.190336] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:49.190429] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:49.192681] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834108000,1698834109000,11,315770828,1698834109190
1698834108000,1698834109000,9,297708892,1698834109190
1698834108000,1698834109000,10,324943162,1698834109190
1698834108000,1698834109000,8,16369967535,1698834109190
[m
[36m[10:21:49.969119] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:50.151458] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:50.151565] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:50.154120] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834109000,1698834110000,6,5843275091,1698834110151
1698834109000,1698834110000,5,733991456,1698834110151
1698834109000,1698834110000,7,26896007376,1698834110151
1698834109000,1698834110000,4,2127405652,1698834110151
[m
[36m[10:21:50.217042] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:50.217116] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:50.219663] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834109000,1698834110000,11,315773468,1698834110217
1698834109000,1698834110000,9,297711397,1698834110217
1698834109000,1698834110000,10,324945604,1698834110217
1698834109000,1698834110000,8,16369969825,1698834110217
[m
[36m[10:21:50.970387] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:51.118333] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:51.118677] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:51.120085] [D] [thread 128376] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:51.120191] [I] [thread 128376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:51.120210] [I] [thread 128376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:51.120337] [I] [thread 128376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:51.120352] [I] [thread 128376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:51.193082] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:51.193154] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:51.194458] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834110000,1698834111000,10,324947807,1698834111193
1698834110000,1698834111000,8,16369972154,1698834111193
1698834110000,1698834111000,11,315775742,1698834111193
1698834110000,1698834111000,9,297713768,1698834111193
[m
[36m[10:21:51.223446] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:51.223519] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:51.224777] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834110000,1698834111000,6,5843277459,1698834111223
1698834110000,1698834111000,5,733993899,1698834111223
1698834110000,1698834111000,4,2127408211,1698834111223
1698834110000,1698834111000,7,26896009746,1698834111223
[m
[36m[10:21:51.366116] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:51.366495] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:52.203827] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:52.203933] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:52.206301] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834111000,1698834112000,5,733996313,1698834112204
1698834111000,1698834112000,6,5843279935,1698834112204
1698834111000,1698834112000,7,26896012214,1698834112204
1698834111000,1698834112000,4,2127410651,1698834112204
[m
[36m[10:21:52.222351] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:52.222437] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:52.224369] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834111000,1698834112000,10,324950528,1698834112222
1698834111000,1698834112000,8,16369974675,1698834112222
1698834111000,1698834112000,11,315778362,1698834112222
1698834111000,1698834112000,9,297716350,1698834112222
[m
[36m[10:21:52.367649] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.211018] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:53.211125] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:53.213428] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834112000,1698834113000,8,16369976824,1698834113211
1698834112000,1698834113000,11,315780477,1698834113211
1698834112000,1698834113000,9,297718468,1698834113211
1698834112000,1698834113000,10,324952796,1698834113211
[m
[36m[10:21:53.223970] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:53.224046] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:53.225625] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834112000,1698834113000,5,733998708,1698834113224
1698834112000,1698834113000,6,5843282294,1698834113224
1698834112000,1698834113000,7,26896014422,1698834113224
1698834112000,1698834113000,4,2127412921,1698834113224
[m
[36m[10:21:53.368896] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.388957] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.389263] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.390333] [D] [thread 128381] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:53.390426] [I] [thread 128381] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:53.390444] [I] [thread 128381] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:53.390565] [I] [thread 128381] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:53.390577] [I] [thread 128381] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:53.600133] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.600500] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:54.220405] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:54.220510] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:54.222934] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834113000,1698834114000,7,26896017030,1698834114220
1698834113000,1698834114000,4,2127415432,1698834114220
1698834113000,1698834114000,5,734001396,1698834114220
1698834113000,1698834114000,6,5843284961,1698834114220
[m
[36m[10:21:54.223534] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:54.223620] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:54.225822] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834113000,1698834114000,11,315783106,1698834114223
1698834113000,1698834114000,8,16369979498,1698834114223
1698834113000,1698834114000,9,297721074,1698834114223
1698834113000,1698834114000,10,324955421,1698834114223
[m
[36m[10:21:54.601735] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.190238] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:55.190333] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:55.192604] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834114000,1698834115000,8,16369981619,1698834115190
1698834114000,1698834115000,9,297723150,1698834115190
1698834114000,1698834115000,10,324957643,1698834115190
1698834114000,1698834115000,11,315785555,1698834115190
[m
[36m[10:21:55.210545] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:55.210640] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:55.212639] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834114000,1698834115000,7,26896019164,1698834115210
1698834114000,1698834115000,4,2127417505,1698834115210
1698834114000,1698834115000,5,734003525,1698834115210
1698834114000,1698834115000,6,5843287080,1698834115210
[m
[36m[10:21:55.603001] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.665221] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.665534] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.666591] [D] [thread 128386] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:55.666690] [I] [thread 128386] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:55.666708] [I] [thread 128386] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:55.666826] [I] [thread 128386] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:55.666839] [I] [thread 128386] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:55.860542] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.860890] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:56.169960] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:56.170058] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:56.172128] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834115000,1698834116000,8,16369984162,1698834116170
1698834115000,1698834116000,9,297725551,1698834116170
1698834115000,1698834116000,10,324960045,1698834116170
1698834115000,1698834116000,11,315787915,1698834116170
[m
[36m[10:21:56.218881] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:56.218963] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:56.220892] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834115000,1698834116000,7,26896021891,1698834116218
1698834115000,1698834116000,4,2127420225,1698834116218
1698834115000,1698834116000,6,5843289713,1698834116218
1698834115000,1698834116000,5,734006185,1698834116218
[m
[36m[10:21:56.862115] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:57.171442] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:57.171540] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:57.173547] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834116000,1698834117000,8,16369986493,1698834117171
1698834116000,1698834117000,9,297727878,1698834117171
1698834116000,1698834117000,11,315790315,1698834117171
1698834116000,1698834117000,10,324962378,1698834117171
[m
[36m[10:21:57.211781] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:57.211879] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:57.214151] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834116000,1698834117000,6,5843291918,1698834117211
1698834116000,1698834117000,5,734008367,1698834117211
1698834116000,1698834117000,7,26896024247,1698834117211
1698834116000,1698834117000,4,2127422536,1698834117211
[m
[36m[10:21:57.863557] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:57.931350] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:57.931895] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:57.932687] [D] [thread 128391] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:57.932780] [I] [thread 128391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:57.932799] [I] [thread 128391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:57.932915] [I] [thread 128391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:57.932928] [I] [thread 128391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:58.127240] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:58.127810] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:58.196885] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:58.196956] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:58.198307] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834117000,1698834118000,5,734010930,1698834118196
1698834117000,1698834118000,7,26896026732,1698834118196
1698834117000,1698834118000,6,5843294465,1698834118196
1698834117000,1698834118000,4,2127425096,1698834118196
[m
[36m[10:21:58.218604] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:58.218677] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:58.219916] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834117000,1698834118000,11,315792688,1698834118218
1698834117000,1698834118000,9,297730333,1698834118218
1698834117000,1698834118000,8,16369988852,1698834118218
1698834117000,1698834118000,10,324964681,1698834118218
[m
[36m[10:21:59.129083] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:59.188406] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:59.188495] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:59.190763] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834118000,1698834119000,5,734013232,1698834119188
1698834118000,1698834119000,7,26896029119,1698834119188
1698834118000,1698834119000,4,2127427383,1698834119188
1698834118000,1698834119000,6,5843296787,1698834119188
[m
[36m[10:21:59.191362] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:21:59.191444] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:59.193604] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834118000,1698834119000,8,16369991282,1698834119191
1698834118000,1698834119000,10,324967179,1698834119191
1698834118000,1698834119000,9,297732948,1698834119191
1698834118000,1698834119000,11,315795267,1698834119191
[m
[36m[10:22:00.130428] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:00.151751] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:00.152409] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:00.153194] [D] [thread 128396] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:00.153291] [I] [thread 128396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:00.153308] [I] [thread 128396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:00.153426] [I] [thread 128396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:00.153494] [I] [thread 128396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:00.157020] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:00.157100] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:00.158263] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834119000,1698834120000,8,16369993563,1698834120157
1698834119000,1698834120000,10,324969321,1698834120157
1698834119000,1698834120000,11,315797354,1698834120157
1698834119000,1698834120000,9,297735111,1698834120157
[m
[36m[10:22:00.187307] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:00.187394] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:00.189193] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834119000,1698834120000,5,734015634,1698834120187
1698834119000,1698834120000,4,2127429730,1698834120187
1698834119000,1698834120000,7,26896031472,1698834120187
1698834119000,1698834120000,6,5843299168,1698834120187
[m
[36m[10:22:00.380470] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:00.380808] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:01.179028] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:01.179134] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:01.181488] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834120000,1698834121000,4,2127432198,1698834121179
1698834120000,1698834121000,5,734018049,1698834121179
1698834120000,1698834121000,7,26896033941,1698834121179
1698834120000,1698834121000,6,5843301590,1698834121179
[m
[36m[10:22:01.218597] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:01.218697] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:01.220689] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834120000,1698834121000,10,324972052,1698834121218
1698834120000,1698834121000,8,16369996148,1698834121218
1698834120000,1698834121000,11,315800008,1698834121218
1698834120000,1698834121000,9,297737631,1698834121218
[m
[36m[10:22:01.382048] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.223355] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:02.223454] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:02.225717] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834121000,1698834122000,9,297739743,1698834122223
1698834121000,1698834122000,8,16369998270,1698834122223
1698834121000,1698834122000,11,315802248,1698834122223
1698834121000,1698834122000,10,324974303,1698834122223
[m
[36m[10:22:02.228418] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:02.228510] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:02.230773] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834121000,1698834122000,4,2127434526,1698834122228
1698834121000,1698834122000,5,734020287,1698834122228
1698834121000,1698834122000,7,26896036071,1698834122228
1698834121000,1698834122000,6,5843303767,1698834122228
[m
[36m[10:22:02.383319] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.484076] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.484482] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.485534] [D] [thread 128402] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:02.485628] [I] [thread 128402] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:02.485646] [I] [thread 128402] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:02.485765] [I] [thread 128402] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:02.485778] [I] [thread 128402] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:02.747450] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.747809] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:03.195691] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:03.195801] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:03.198176] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834122000,1698834123000,5,734022875,1698834123195
1698834122000,1698834123000,6,5843306439,1698834123195
1698834122000,1698834123000,7,26896038749,1698834123195
1698834122000,1698834123000,4,2127437109,1698834123195
[m
[36m[10:22:03.213308] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:03.213407] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:03.215319] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834122000,1698834123000,9,297742422,1698834123213
1698834122000,1698834123000,8,16370000895,1698834123213
1698834122000,1698834123000,10,324976857,1698834123213
1698834122000,1698834123000,11,315804923,1698834123213
[m
[36m[10:22:03.749019] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.167781] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:04.167852] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:04.168961] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834123000,1698834124000,5,734025061,1698834124167
1698834123000,1698834124000,6,5843308580,1698834124167
1698834123000,1698834124000,7,26896040913,1698834124167
1698834123000,1698834124000,4,2127439255,1698834124167
[m
[36m[10:22:04.204940] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:04.205012] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:04.206571] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834123000,1698834124000,8,16370003148,1698834124205
1698834123000,1698834124000,10,324979056,1698834124205
1698834123000,1698834124000,11,315807214,1698834124205
1698834123000,1698834124000,9,297744761,1698834124205
[m
[36m[10:22:04.750336] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.803317] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.803653] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.804636] [D] [thread 128408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:04.804730] [I] [thread 128408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:04.804748] [I] [thread 128408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:04.804867] [I] [thread 128408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:04.804880] [I] [thread 128408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:04.971354] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.971666] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:05.163271] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:05.163377] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:05.165674] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834124000,1698834125000,6,5843311081,1698834125163
1698834124000,1698834125000,5,734027589,1698834125163
1698834124000,1698834125000,7,26896043404,1698834125163
1698834124000,1698834125000,4,2127441803,1698834125163
[m
[36m[10:22:05.180677] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:05.180766] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:05.182393] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834124000,1698834125000,8,16370005577,1698834125180
1698834124000,1698834125000,11,315809527,1698834125180
1698834124000,1698834125000,10,324981368,1698834125180
1698834124000,1698834125000,9,297747140,1698834125180
[m
[36m[10:22:05.972883] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:06.147813] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:06.147918] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:06.150165] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834125000,1698834126000,5,734029855,1698834126148
1698834125000,1698834126000,6,5843313394,1698834126148
1698834125000,1698834126000,7,26896045785,1698834126148
1698834125000,1698834126000,4,2127443990,1698834126148
[m
[36m[10:22:06.167959] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:06.168038] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:06.169803] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834125000,1698834126000,8,16370007951,1698834126168
1698834125000,1698834126000,11,315811988,1698834126168
1698834125000,1698834126000,10,324983749,1698834126168
1698834125000,1698834126000,9,297749540,1698834126168
[m
[36m[10:22:06.974272] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.080984] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.081308] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.082311] [D] [thread 128413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:07.082402] [I] [thread 128413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:07.082422] [I] [thread 128413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:07.082539] [I] [thread 128413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:07.082554] [I] [thread 128413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:07.145129] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:07.145238] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:07.147536] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834126000,1698834127000,5,734032236,1698834127145
1698834126000,1698834127000,6,5843315787,1698834127145
1698834126000,1698834127000,7,26896048083,1698834127145
1698834126000,1698834127000,4,2127446452,1698834127145
[m
[36m[10:22:07.148140] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:07.148220] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:07.150430] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834126000,1698834127000,8,16370010267,1698834127148
1698834126000,1698834127000,11,315814160,1698834127148
1698834126000,1698834127000,10,324985974,1698834127148
1698834126000,1698834127000,9,297751767,1698834127148
[m
[36m[10:22:07.331610] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.331953] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:08.215936] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:08.216032] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:08.218067] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834127000,1698834128000,8,16370012770,1698834128216
1698834127000,1698834128000,11,315817000,1698834128216
1698834127000,1698834128000,10,324988696,1698834128216
1698834127000,1698834128000,9,297754248,1698834128216
[m
[36m[10:22:08.218663] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:08.218739] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:08.220625] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834127000,1698834128000,5,734034805,1698834128218
1698834127000,1698834128000,6,5843318226,1698834128218
1698834127000,1698834128000,4,2127448814,1698834128218
1698834127000,1698834128000,7,26896050537,1698834128218
[m
[36m[10:22:08.333233] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.218427] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:09.218533] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:09.220833] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834128000,1698834129000,8,16370015127,1698834129218
1698834128000,1698834129000,9,297756450,1698834129218
1698834128000,1698834129000,10,324991007,1698834129218
1698834128000,1698834129000,11,315819227,1698834129218
[m
[36m[10:22:09.223847] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:09.223938] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:09.226409] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834128000,1698834129000,6,5843320609,1698834129224
1698834128000,1698834129000,4,2127451209,1698834129224
1698834128000,1698834129000,7,26896052761,1698834129224
1698834128000,1698834129000,5,734037235,1698834129224
[m
[36m[10:22:09.334543] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.405922] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.406315] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.407525] [D] [thread 128418] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:09.407621] [I] [thread 128418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:09.407639] [I] [thread 128418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:09.407756] [I] [thread 128418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:09.407769] [I] [thread 128418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:09.620729] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.621075] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:10.218284] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:10.218381] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:10.220662] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834129000,1698834130000,7,26896055404,1698834130218
1698834129000,1698834130000,4,2127453791,1698834130218
1698834129000,1698834130000,5,734039714,1698834130218
1698834129000,1698834130000,6,5843323285,1698834130218
[m
[36m[10:22:10.221271] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:10.221351] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:10.223592] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834129000,1698834130000,10,324993553,1698834130221
1698834129000,1698834130000,9,297759160,1698834130221
1698834129000,1698834130000,11,315821815,1698834130221
1698834129000,1698834130000,8,16370017855,1698834130221
[m
[36m[10:22:10.622357] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.207825] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:11.207894] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:11.209249] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834130000,1698834131000,10,324995760,1698834131207
1698834130000,1698834131000,9,297761274,1698834131207
1698834130000,1698834131000,11,315824068,1698834131207
1698834130000,1698834131000,8,16370019999,1698834131207
[m
[36m[10:22:11.214062] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:11.214132] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:11.215722] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834130000,1698834131000,7,26896057675,1698834131214
1698834130000,1698834131000,4,2127455944,1698834131214
1698834130000,1698834131000,5,734041909,1698834131214
1698834130000,1698834131000,6,5843325450,1698834131214
[m
[36m[10:22:11.623626] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.654826] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.655197] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.656391] [D] [thread 128423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:11.656516] [I] [thread 128423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:11.656535] [I] [thread 128423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:11.656654] [I] [thread 128423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:11.656667] [I] [thread 128423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:11.878314] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.878685] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:12.206136] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:12.206270] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:12.207614] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834131000,1698834132000,4,2127458600,1698834132206
1698834131000,1698834132000,5,734044605,1698834132206
1698834131000,1698834132000,6,5843328117,1698834132206
1698834131000,1698834132000,7,26896060406,1698834132206
[m
[36m[10:22:12.209264] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:12.209334] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:12.210675] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834131000,1698834132000,10,324998150,1698834132209
1698834131000,1698834132000,9,297763718,1698834132209
1698834131000,1698834132000,11,315826470,1698834132209
1698834131000,1698834132000,8,16370022549,1698834132209
[m
[36m[10:22:12.879913] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:13.207789] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:13.207896] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:13.210304] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834132000,1698834133000,4,2127460761,1698834133207
1698834132000,1698834133000,5,734046748,1698834133207
1698834132000,1698834133000,6,5843330316,1698834133207
1698834132000,1698834133000,7,26896062649,1698834133207
[m
[36m[10:22:13.210918] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:13.211000] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:13.213164] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834132000,1698834133000,10,325000480,1698834133211
1698834132000,1698834133000,9,297766126,1698834133211
1698834132000,1698834133000,11,315828886,1698834133211
1698834132000,1698834133000,8,16370024853,1698834133211
[m
[36m[10:22:13.881257] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:13.988240] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:13.988594] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:13.989531] [D] [thread 128430] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:13.989626] [I] [thread 128430] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:13.989645] [I] [thread 128430] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:13.989759] [I] [thread 128430] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:13.989772] [I] [thread 128430] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:14.184697] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:14.184795] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:14.186914] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834133000,1698834134000,5,734049205,1698834134184
1698834133000,1698834134000,6,5843332711,1698834134184
1698834133000,1698834134000,7,26896065043,1698834134184
1698834133000,1698834134000,4,2127463377,1698834134184
[m
[36m[10:22:14.218448] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:14.218564] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:14.220944] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834133000,1698834134000,9,297768492,1698834134218
1698834133000,1698834134000,10,325002842,1698834134218
1698834133000,1698834134000,11,315831060,1698834134218
1698834133000,1698834134000,8,16370027198,1698834134218
[m
[36m[10:22:14.248415] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:14.248755] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:15.185772] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:15.185879] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:15.188032] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834134000,1698834135000,5,734051524,1698834135185
1698834134000,1698834135000,7,26896067444,1698834135185
1698834134000,1698834135000,4,2127465641,1698834135185
1698834134000,1698834135000,6,5843335057,1698834135185
[m
[36m[10:22:15.201932] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:15.202020] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:15.203854] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834134000,1698834135000,11,315833619,1698834135202
1698834134000,1698834135000,8,16370029614,1698834135202
1698834134000,1698834135000,9,297771077,1698834135202
1698834134000,1698834135000,10,325005453,1698834135202
[m
[36m[10:22:15.249998] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.178487] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:16.178593] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:16.180880] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834135000,1698834136000,4,2127467905,1698834136178
1698834135000,1698834136000,5,734053814,1698834136178
1698834135000,1698834136000,7,26896069659,1698834136178
1698834135000,1698834136000,6,5843337307,1698834136178
[m
[36m[10:22:16.219452] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:16.219533] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:16.221254] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834135000,1698834136000,11,315835903,1698834136219
1698834135000,1698834136000,9,297773199,1698834136219
1698834135000,1698834136000,10,325007598,1698834136219
1698834135000,1698834136000,8,16370031816,1698834136219
[m
[36m[10:22:16.251362] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.399098] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.399416] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.400494] [D] [thread 128435] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:16.400592] [I] [thread 128435] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:16.400610] [I] [thread 128435] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:16.400726] [I] [thread 128435] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:16.400786] [I] [thread 128435] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:16.612495] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.612837] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:17.175876] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:17.175987] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:17.178293] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834136000,1698834137000,4,2127470429,1698834137176
1698834136000,1698834137000,5,734056330,1698834137176
1698834136000,1698834137000,7,26896072265,1698834137176
1698834136000,1698834137000,6,5843339884,1698834137176
[m
[36m[10:22:17.203350] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:17.203431] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:17.205236] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834136000,1698834137000,9,297775824,1698834137203
1698834136000,1698834137000,10,325010196,1698834137203
1698834136000,1698834137000,8,16370034430,1698834137203
1698834136000,1698834137000,11,315838589,1698834137203
[m
[36m[10:22:17.614092] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:18.199157] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:18.199244] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:18.200799] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834137000,1698834138000,9,297778023,1698834138199
1698834137000,1698834138000,10,325012384,1698834138199
1698834137000,1698834138000,8,16370036600,1698834138199
1698834137000,1698834138000,11,315840854,1698834138199
[m
[36m[10:22:18.223105] [D] [thread 127684] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:22:18.223179] [D] [thread 127684] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:18.224364] [D] [thread 127684] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698834137000,1698834138000,4,2127472702,1698834138223
1698834137000,1698834138000,7,26896074467,1698834138223
1698834137000,1698834138000,5,734058549,1698834138223
1698834137000,1698834138000,6,5843342099,1698834138223
[m
[36m[10:22:18.614859] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:18.615203] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:18.616180] [D] [thread 128440] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:18.616274] [I] [thread 128440] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:18.616292] [I] [thread 128440] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:18.616409] [I] [thread 128440] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:18.616421] [I] [thread 128440] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:18.884248] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:18.884616] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:19.046898] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:19.047234] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:22:19.048377] [I] [thread 128444] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[10:22:19.048571] [D] [thread 128444] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[10:22:19.048733] [I] [thread 128444] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[10:22:19.048766] [I] [thread 128444] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:22:19.048802] [I] [thread 127674] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:22:19.048845] [I] [thread 127674] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:22:19.048871] [I] [thread 127674] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:22:19.048915] [I] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[10:22:19.048936] [D] [thread 127674] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[10:22:19.048984] [D] [thread 127674] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[10:22:19.049144] [D] [thread 127674] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[10:22:19.049613] [D] [thread 127674] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:22:19.049673] [D] [thread 127674] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:22:19.049753] [D] [thread 127674] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:22:19.049770] [D] [thread 127674] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:22:19.049779] [D] [thread 127674] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[10:22:19.049811] [D] [thread 127674] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[10:22:19.049832] [D] [thread 127674] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:22:19.049873] [D] [thread 127674] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[10:22:19.049887] [D] [thread 127674] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[10:22:19.050020] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.32:40249[m
[36m[10:22:19.050048] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:40249 queryId=1[m
[36m[10:22:19.055550] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.33:45351[m
[36m[10:22:19.055638] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:45351 queryId=1[m
[36m[10:22:19.060110] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.34:37269[m
[36m[10:22:19.060304] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:37269 queryId=1[m
[36m[10:22:19.064770] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.35:42061[m
[36m[10:22:19.064856] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:42061 queryId=1[m
[36m[10:22:19.069211] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.30:40681[m
[36m[10:22:19.069297] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:40681 queryId=1[m
[36m[10:22:19.073700] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.36:36639[m
[36m[10:22:19.073785] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.36:36639 queryId=1[m
[36m[10:22:19.078083] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:46763[m
[36m[10:22:19.078168] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:46763 queryId=1[m
[36m[10:22:19.082535] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:39503[m
[36m[10:22:19.082607] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:39503 queryId=1[m
[36m[10:22:19.086932] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=11 and IP=192.168.2.39:46225[m
[36m[10:22:19.087013] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.39:46225 queryId=1[m
[36m[10:22:19.091374] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.31:41205[m
[36m[10:22:19.091459] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:41205 queryId=1[m
[36m[10:22:19.095900] [D] [thread 127674] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:34709[m
[36m[10:22:19.095985] [D] [thread 127674] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:34709 queryId=1[m
[36m[10:22:19.100466] [D] [thread 127674] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 11 queues[m
[36m[10:22:19.263987] [D] [thread 127683] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39449): EndOfStream received for channel [m
[36m[10:22:19.264125] [D] [thread 127683] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::37::0::0(threadId=0)[m
[32m[10:22:19.264266] [I] [thread 127683] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::37::0::0; newCnt(1)[m
[36m[10:22:19.264310] [D] [thread 127683] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::37::0::0, counter is at 1.[m
[36m[10:22:19.264398] [D] [thread 127683] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[10:22:19.264434] [W] [thread 127683] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[10:22:19.275089] [D] [thread 127683] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39449): EndOfStream received for channel [m
[36m[10:22:19.275209] [D] [thread 127683] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::52::0::0(threadId=0)[m
[32m[10:22:19.275285] [I] [thread 127683] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::52::0::0; newCnt(1)[m
[36m[10:22:19.275312] [D] [thread 127683] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::52::0::0, counter is at 1.[m
[36m[10:22:19.275364] [D] [thread 127683] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[10:22:19.275400] [W] [thread 127683] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:22:19.464970] [D] [thread 127686] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[10:22:19.465108] [D] [thread 127686] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[10:22:19.465217] [D] [thread 127686] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  11  type= HardStop[m
[36m[10:22:19.465269] [D] [thread 127686] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[10:22:19.465344] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:22:19.465643] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:22:19.466314] [D] [thread 127684] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::37::0::0[m
[36m[10:22:19.466309] [D] [thread 127686] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 11 Source 37 is notifying completion: HardStop[m
[36m[10:22:19.466449] [D] [thread 127686] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 11 Source 37 is terminated; tokens left = 3[m
[36m[10:22:19.466501] [D] [thread 127686] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 37 terminationType=HardStop[m
[36m[10:22:19.466514] [D] [thread 127684] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::37::0::0 Thread 0[m
[36m[10:22:19.466563] [D] [thread 127684] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::37::0::0[m
[36m[10:22:19.466592] [D] [thread 127684] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::37::0::0[m
[36m[10:22:19.466626] [D] [thread 127684] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::37::0::0[m
[36m[10:22:19.466629] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[32m[10:22:19.466702] [I] [thread 127684] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::37::0::0; newCnt(0)[m
[36m[10:22:19.466818] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:22:19.467326] [D] [thread 127686] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=37 reconfType=HardEndOfStream queryId=1 querySubPlanId=11 threadPool->getNumberOfThreads()=1[m
[36m[10:22:19.467414] [D] [thread 127686] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:22:19.467521] [D] [thread 127686] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:22:19.467638] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:22:19.467987] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:22:19.468185] [D] [thread 127684] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:22:19.468602] [D] [thread 127686] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 11 Source 52 is notifying completion: HardStop[m
[36m[10:22:19.468670] [D] [thread 127684] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[10:22:19.468743] [D] [thread 127684] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::52::0::0 Thread 0[m
[36m[10:22:19.468742] [D] [thread 127686] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 11 Source 52 is terminated; tokens left = 2[m
[36m[10:22:19.468793] [D] [thread 127684] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[10:22:19.468810] [D] [thread 127686] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 52 terminationType=HardStop[m
[36m[10:22:19.468824] [D] [thread 127684] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::52::0::0[m
[36m[10:22:19.468870] [D] [thread 127684] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::52::0::0[m
[36m[10:22:19.468935] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[32m[10:22:19.468940] [I] [thread 127684] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::52::0::0; newCnt(0)[m
[36m[10:22:19.469244] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:22:19.469802] [D] [thread 127686] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=52 reconfType=HardEndOfStream queryId=1 querySubPlanId=11 threadPool->getNumberOfThreads()=1[m
[36m[10:22:19.469815] [D] [thread 127684] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:22:19.470024] [D] [thread 127686] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:22:19.470168] [D] [thread 127684] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 11 Sink FileSink() is terminated; tokens left = 1[m
[36m[10:22:19.470280] [D] [thread 127684] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:22:19.470439] [D] [thread 127684] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:22:19.470733] [D] [thread 127684] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
2023-11-01 10:22:19.471 postReconfigurationCallback: queryId=1, querySubPlanId=11; queryId=1 subPlanId=11 processedTasks=602 processedTuple=2408 processedBuffers=602 processedWatermarks=0 latencyAVG=1698833988205 queueSizeAVG=0 availableGlobalBufferAVG=894 availableFixedBufferAVG=0
[36m[10:22:19.471190] [D] [thread 127684] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=11[m
[36m[10:22:19.471241] [D] [thread 127684] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=11[m
[36m[10:22:19.471261] [D] [thread 127684] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-11 is marked as stopped now[m
[36m[10:22:19.471575] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Destroy[m
[36m[10:22:19.471809] [D] [thread 127686] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Destroy[m
[36m[10:22:19.472365] [D] [thread 127686] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  11[m
[36m[10:22:19.472518] [D] [thread 127686] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 11 was successful[m
[36m[10:22:19.472546] [D] [thread 127686] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  11  succeeded[m
[36m[10:22:19.472565] [D] [thread 127686] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[10:22:19.475656] [D] [thread 127674] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Stop succeed[m
[36m[10:22:19.475751] [D] [thread 127674] [QueryUndeploymentPhase.cpp:114] [stopQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[36m[10:22:19.476362] [D] [thread 127674] [QueryUndeploymentPhase.cpp:59] [execute] QueryUndeploymentPhase:removeQuery: undeploy query  1[m
[36m[10:22:19.476415] [D] [thread 127674] [QueryUndeploymentPhase.cpp:125] [undeployQuery] QueryUndeploymentPhase::undeployQuery queryId= 1[m
[36m[10:22:19.476592] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=4 and IP=192.168.2.32:40249[m
[36m[10:22:19.476625] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.32:40249 queryId=1[m
[36m[10:22:19.481616] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=5 and IP=192.168.2.33:45351[m
[36m[10:22:19.481823] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.33:45351 queryId=1[m
[36m[10:22:19.486566] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=6 and IP=192.168.2.34:37269[m
[36m[10:22:19.486646] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.34:37269 queryId=1[m
[36m[10:22:19.491099] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=7 and IP=192.168.2.35:42061[m
[36m[10:22:19.491181] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.35:42061 queryId=1[m
[36m[10:22:19.495806] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=2 and IP=192.168.2.30:40681[m
[36m[10:22:19.495884] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.30:40681 queryId=1[m
[36m[10:22:19.500285] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=8 and IP=192.168.2.36:36639[m
[36m[10:22:19.500366] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.36:36639 queryId=1[m
[36m[10:22:19.504692] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=9 and IP=192.168.2.37:46763[m
[36m[10:22:19.504816] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.37:46763 queryId=1[m
[36m[10:22:19.509195] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=10 and IP=192.168.2.38:39503[m
[36m[10:22:19.509277] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.38:39503 queryId=1[m
[36m[10:22:19.513614] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=11 and IP=192.168.2.39:46225[m
[36m[10:22:19.513696] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.39:46225 queryId=1[m
[36m[10:22:19.518107] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=3 and IP=192.168.2.31:41205[m
[36m[10:22:19.518220] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.31:41205 queryId=1[m
[36m[10:22:19.522555] [D] [thread 127674] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=1 and IP=192.168.2.11:34709[m
[36m[10:22:19.522633] [D] [thread 127674] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.11:34709 queryId=1[m
[36m[10:22:19.527333] [D] [thread 127674] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Unregister for 11 queues[m
[36m[10:22:19.602403] [D] [thread 127738] [WorkerRPCServer.cpp:64] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: got request for 1[m
[36m[10:22:19.602505] [D] [thread 127738] [NodeEngine.cpp:206] [unregisterQuery] Runtime: unregisterQuery query= 1[m
[36m[10:22:19.602588] [D] [thread 127738] [NodeEngine.cpp:231] [unregisterQuery] Runtime: unregister of query  11 : current status is stopped= true[m
[36m[10:22:19.602613] [D] [thread 127738] [QueryManagerLifecycle.cpp:222] [deregisterQuery] AbstractQueryManager::deregisterAndUndeployQuery: query 1[m
[36m[10:22:19.602698] [D] [thread 127738] [NodeEngine.cpp:234] [unregisterQuery] Runtime: unregister of query  11  succeeded[m
[36m[10:22:19.602776] [D] [thread 127738] [WorkerRPCServer.cpp:67] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: success[m
[1m[41m[10:22:19.643335] [C] [thread 127674] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[10:22:19.643423] [I] [thread 127674] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[10:22:19.643498] [I] [thread 127674] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[10:22:19.643577] [W] [thread 127674] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[10:22:19.643591] [I] [thread 127674] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[10:22:19.643604] [W] [thread 127674] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[10:22:20.048476] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:22:20.425964] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:20.427046] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:40681 went dead so we remove it[m
[32m[10:22:20.427198] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[32m[10:22:20.427222] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:20.427251] [I] [thread 127690] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:22:20.427259] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:22:20.427270] [I] [thread 127690] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:22:20.427280] [I] [thread 127690] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:22:20.427301] [I] [thread 127690] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:22:20.427311] [I] [thread 127690] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:22:20.427353] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:22:20.432429] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:20.433337] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:41205 went dead so we remove it[m
[32m[10:22:20.433482] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[32m[10:22:20.433506] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:20.433528] [I] [thread 127690] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:22:20.433535] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:22:20.433552] [I] [thread 127690] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:22:20.433599] [I] [thread 127690] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:22:20.433610] [I] [thread 127690] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:22:20.433619] [I] [thread 127690] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:22:20.433643] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:22:20.438745] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:20.439753] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:40249 went dead so we remove it[m
[32m[10:22:20.439896] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[32m[10:22:20.439921] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:20.439932] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:22:20.439956] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:22:21.049789] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:22:21.576130] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:21.577072] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:40681 went dead so we remove it[m
[32m[10:22:21.577214] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[33m[1m[10:22:21.577243] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[10:22:21.582357] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:21.583306] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:41205 went dead so we remove it[m
[32m[10:22:21.583454] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[10:22:21.583484] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[10:22:21.588573] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:21.589511] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:40249 went dead so we remove it[m
[32m[10:22:21.589662] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:22:21.589692] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[10:22:21.594770] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:21.595708] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:45351 went dead so we remove it[m
[32m[10:22:21.595854] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[32m[10:22:21.595879] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:21.595890] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:22:21.595912] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:22:21.601118] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:21.602053] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:37269 went dead so we remove it[m
[32m[10:22:21.602243] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[32m[10:22:21.602270] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:21.602282] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:22:21.602307] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:22:21.607479] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:21.608417] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:42061 went dead so we remove it[m
[32m[10:22:21.608601] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=2][m
[32m[10:22:21.608627] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:21.608638] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:22:21.608660] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:22:21.613767] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:21.614790] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.36:36639 went dead so we remove it[m
[32m[10:22:21.614939] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=2][m
[32m[10:22:21.614963] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:21.614974] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:22:21.614997] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:22:22.051108] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:22:22.711655] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.712574] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:40681 went dead so we remove it[m
[32m[10:22:22.712717] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[33m[1m[10:22:22.712744] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[10:22:22.717670] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.718626] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:41205 went dead so we remove it[m
[32m[10:22:22.718767] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[10:22:22.718797] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[10:22:22.723696] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.724640] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:40249 went dead so we remove it[m
[32m[10:22:22.724786] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:22:22.724815] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[10:22:22.729871] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.730854] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:45351 went dead so we remove it[m
[32m[10:22:22.730999] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:22:22.731029] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 5 doesn't exists in the system.[m
[31m[1m[10:22:22.736147] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.737089] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:37269 went dead so we remove it[m
[32m[10:22:22.737236] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:22:22.737265] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 6 doesn't exists in the system.[m
[31m[1m[10:22:22.742344] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.743294] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:42061 went dead so we remove it[m
[32m[10:22:22.743444] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:22:22.743474] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 7 doesn't exists in the system.[m
[31m[1m[10:22:22.748558] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.749496] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.36:36639 went dead so we remove it[m
[32m[10:22:22.749642] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:22:22.749670] [W] [thread 127690] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 8 doesn't exists in the system.[m
[31m[1m[10:22:22.754735] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.755681] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.37:46763 went dead so we remove it[m
[32m[10:22:22.755829] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=2][m
[32m[10:22:22.755854] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:22.755865] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:22:22.755888] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:22:22.761020] [E] [thread 127690] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:22:22.761955] [W] [thread 127690] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.38:39503 went dead so we remove it[m
[32m[10:22:22.762102] [I] [thread 127690] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=2][m
[32m[10:22:22.762126] [I] [thread 127690] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:22:22.762137] [I] [thread 127690] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:22:22.762160] [D] [thread 127690] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:22:23.052408] [D] [thread 127689] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
