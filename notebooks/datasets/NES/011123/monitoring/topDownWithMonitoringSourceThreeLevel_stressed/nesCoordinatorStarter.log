
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[11:02:39.406679] [I] [thread 130767] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 1
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1000
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[11:02:39.406859] [I] [thread 130767] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[11:02:39.407122] [D] [thread 130767] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[11:02:39.408145] [D] [thread 130767] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[11:02:39.408528] [I] [thread 130767] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[11:02:39.409300] [D] [thread 130767] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[11:02:39.409377] [D] [thread 130767] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[11:02:39.410030] [D] [thread 130767] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[11:02:39.410123] [D] [thread 130767] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[11:02:39.410274] [D] [thread 130767] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[11:02:39.410588] [D] [thread 130767] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[11:02:39.410752] [D] [thread 130767] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[11:02:39.463275] [D] [thread 130767] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[11:02:39.463366] [D] [thread 130767] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:02:39.463803] [D] [thread 130767] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:02:39.464215] [D] [thread 130767] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:02:39.464542] [D] [thread 130767] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:02:39.464828] [D] [thread 130767] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:02:39.465011] [D] [thread 130767] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:02:39.465400] [D] [thread 130767] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[11:02:39.466633] [D] [thread 130767] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[11:02:39.466703] [D] [thread 130767] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[11:02:39.466983] [D] [thread 130767] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[11:02:39.467281] [D] [thread 130767] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[11:02:39.467576] [D] [thread 130767] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[11:02:39.468545] [D] [thread 130767] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[11:02:39.469042] [D] [thread 130767] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= true[m
[36m[11:02:39.469244] [D] [thread 130767] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[11:02:39.469486] [D] [thread 130767] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= true , storage= NewestEntry [m
[32m[11:02:39.470290] [I] [thread 130767] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedCpuMetrics[m
[32m[11:02:39.470809] [I] [thread 130767] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source DiskMetric[m
[32m[11:02:39.471322] [I] [thread 130767] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source MemoryMetric[m
[32m[11:02:39.472129] [I] [thread 130767] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedNetworkMetrics[m
[32m[11:02:39.472253] [I] [thread 130767] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[11:02:39.472270] [D] [thread 130767] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[11:02:39.472646] [D] [thread 130767] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[11:02:39.472663] [I] [thread 130775] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[11:02:39.472707] [D] [thread 130775] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:02:39.473115] [D] [thread 130776] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[11:02:39.479833] [D] [thread 130776] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[11:02:39.479867] [D] [thread 130767] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[11:02:39.479898] [D] [thread 130767] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[11:02:39.480298] [D] [thread 130767] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedCpuMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[36m[11:02:39.480358] [D] [thread 130767] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedCpuMetrics already exist.[m
[36m[11:02:39.480391] [D] [thread 130767] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedCpuMetrics[m
[36m[11:02:39.480554] [D] [thread 130767] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= DiskMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[36m[11:02:39.480575] [D] [thread 130767] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source DiskMetric already exist.[m
[36m[11:02:39.480596] [D] [thread 130767] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source DiskMetric[m
[36m[11:02:39.480778] [D] [thread 130767] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= MemoryMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[36m[11:02:39.480795] [D] [thread 130767] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source MemoryMetric already exist.[m
[36m[11:02:39.480811] [D] [thread 130767] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source MemoryMetric[m
[36m[11:02:39.481024] [D] [thread 130767] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedNetworkMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[11:02:39.481059] [D] [thread 130767] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedNetworkMetrics already exist.[m
[36m[11:02:39.481074] [D] [thread 130767] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedNetworkMetrics[m
[36m[11:02:39.481113] [D] [thread 130767] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[11:02:39.481122] [D] [thread 130767] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[11:02:39.481678] [D] [thread 130767] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[11:02:39.481857] [D] [thread 130767] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[11:02:39.481885] [D] [thread 130767] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[11:02:39.481923] [D] [thread 130767] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=true[m
[36m[11:02:39.482151] [D] [thread 130767] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[11:02:39.482248] [D] [thread 130767] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[11:02:39.482337] [I] [thread 130767] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:02:39.482853] [I] [thread 130767] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[11:02:39.482921] [I] [thread 130767] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:02:39.483147] [I] [thread 130767] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[11:02:39.483194] [I] [thread 130767] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:02:39.483639] [I] [thread 130767] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[11:02:39.483690] [I] [thread 130767] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:02:39.484300] [I] [thread 130767] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[11:02:39.484695] [D] [thread 130767] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[11:02:39.484953] [D] [thread 130767] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=true[m
[32m[11:02:39.485205] [I] [thread 130767] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config DiskMetric _ph with wait time 1000[m
[32m[11:02:39.485457] [I] [thread 130767] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config MemoryMetric _ph with wait time 1000[m
[32m[11:02:39.485544] [I] [thread 130767] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedCpuMetrics _ph with wait time 1000[m
[32m[11:02:39.485594] [I] [thread 130767] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedNetworkMetrics _ph with wait time 1000[m
[36m[11:02:39.497372] [D] [thread 130767] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975446528 available bytes[m
[36m[11:02:39.509494] [D] [thread 130767] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[11:02:39.559564] [D] [thread 130767] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[33m[1m[11:02:39.559968] [W] [thread 130767] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[11:02:39.560076] [D] [thread 130767] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:02:39.560179] [D] [thread 130767] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:02:39.560271] [D] [thread 130767] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:02:39.560328] [D] [thread 130767] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:02:39.560638] [D] [thread 130767] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[11:02:39.560750] [D] [thread 130767] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[11:02:39.561058] [D] [thread 130767] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[11:02:39.561259] [D] [thread 130767] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[11:02:39.561296] [W] [thread 130767] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[11:02:39.561354] [D] [thread 130767] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[11:02:39.563731] [D] [thread 130781] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[11:02:39.565400] [D] [thread 130781] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[11:02:39.565550] [D] [thread 130781] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 43017[m
[36m[11:02:39.566798] [D] [thread 130784] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 43017[m
[32m[11:02:39.566944] [I] [thread 130767] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:43017[m
[36m[11:02:39.567050] [D] [thread 130767] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1698942593  with numThreads= 1[m
[36m[11:02:39.567316] [D] [thread 130767] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[11:02:39.567808] [D] [thread 130767] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[11:02:39.567861] [D] [thread 130767] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[11:02:39.567919] [D] [thread 130785] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[11:02:39.568021] [D] [thread 130767] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[11:02:39.568059] [D] [thread 130767] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[11:02:39.568136] [D] [thread 130785] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[11:02:39.568685] [D] [thread 130786] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[11:02:39.569155] [D] [thread 130786] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[11:02:39.572185] [D] [thread 130786] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 43561[m
[36m[11:02:39.572216] [D] [thread 130767] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:43561: 43561[m
[36m[11:02:39.572251] [D] [thread 130767] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[11:02:39.572282] [D] [thread 130767] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[11:02:39.572389] [D] [thread 130767] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[11:02:39.574550] [D] [thread 130786] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[11:02:39.575000] [D] [thread 130767] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[32m[11:02:39.575949] [I] [thread 130767] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[36m[11:02:39.576011] [D] [thread 130767] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[11:02:39.579397] [D] [thread 130767] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 43561
dataPort: 43017
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1655788001
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:39.592486] [D] [thread 130777] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 43561
dataPort: 43017
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1655788001
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:39.592809] [D] [thread 130777] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 43561
dataPort: 43017
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1655788001
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:39.592955] [D] [thread 130777] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[11:02:39.593008] [W] [thread 130777] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[11:02:39.593024] [D] [thread 130777] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:02:39.593036] [D] [thread 130777] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:02:39.593077] [D] [thread 130777] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[11:02:39.593376] [D] [thread 130777] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[11:02:39.593523] [I] [thread 130777] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[11:02:39.593666] [D] [thread 130777] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:02:39.594029] [D] [thread 130777] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[11:02:39.594134] [I] [thread 130777] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:02:39.594166] [D] [thread 130777] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:02:39.594233] [D] [thread 130777] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:02:39.594264] [D] [thread 130777] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:02:39.594312] [D] [thread 130777] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:02:39.595674] [D] [thread 130777] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[11:02:39.597502] [D] [thread 130767] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[11:02:39.597581] [D] [thread 130767] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[11:02:39.597680] [D] [thread 130767] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[11:02:39.597695] [D] [thread 130767] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[11:02:39.630914] [D] [thread 130767] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[11:02:39.631035] [D] [thread 130767] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[11:02:39.631051] [D] [thread 130767] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[11:02:39.631557] [D] [thread 130767] [NesWorker.cpp:377] [connect] NesWorker: start with register source[m
[36m[11:02:39.631620] [D] [thread 130767] [NesWorker.cpp:458] [waitForConnect] NesWorker::waitForConnect()[m
[36m[11:02:39.631639] [D] [thread 130767] [NesWorker.cpp:462] [waitForConnect] waitForConnect: check connect[m
[36m[11:02:39.631647] [D] [thread 130767] [NesWorker.cpp:467] [waitForConnect] waitForConnect: connected[m
[36m[11:02:39.631679] [D] [thread 130767] [CoordinatorRPCClient.cpp:168] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources: got 4 physical sources to register for worker with id 1[m
[36m[11:02:39.631978] [D] [thread 130767] [CoordinatorRPCClient.cpp:180] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources request=workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[36m[11:02:39.634341] [D] [thread 130777] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:02:39.634436] [I] [thread 130777] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:02:39.634460] [D] [thread 130777] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:02:39.634545] [D] [thread 130777] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:02:39.634796] [D] [thread 130777] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:02:39.634849] [D] [thread 130777] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:02:39.635140] [D] [thread 130777] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:02:39.635266] [D] [thread 130777] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:39.635342] [D] [thread 130777] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[11:02:39.635394] [D] [thread 130777] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:02:39.635596] [D] [thread 130777] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:02:39.635635] [D] [thread 130777] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:02:39.635785] [D] [thread 130777] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:02:39.635849] [D] [thread 130777] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:39.635950] [D] [thread 130777] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[11:02:39.636055] [D] [thread 130777] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:02:39.636277] [D] [thread 130777] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:02:39.636376] [D] [thread 130777] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:02:39.636437] [D] [thread 130777] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:02:39.636453] [D] [thread 130777] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:39.636485] [D] [thread 130777] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[11:02:39.636518] [D] [thread 130777] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:02:39.636618] [D] [thread 130777] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:02:39.636639] [D] [thread 130777] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:02:39.636667] [D] [thread 130777] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:02:39.636679] [D] [thread 130777] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:39.636698] [D] [thread 130777] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[11:02:39.636709] [D] [thread 130777] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:02:39.638153] [D] [thread 130767] [CoordinatorRPCClient.cpp:129] [onSuccess] CoordinatorRPCClient::: status ok return success=true[m
[36m[11:02:39.638272] [D] [thread 130767] [NesWorker.cpp:419] [registerPhysicalSources] NesWorker::registerPhysicalSources success=true[m
[36m[11:02:39.638287] [D] [thread 130767] [NesWorker.cpp:379] [connect] registered= true[m
[36m[11:02:39.638335] [D] [thread 130767] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[11:02:39.638460] [D] [thread 130767] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[11:02:39.639104] [D] [thread 130767] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[11:02:39.639190] [I] [thread 130791] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[11:02:39.654073] [I] [thread 130791] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[11:02:39.654413] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:39.670986] [D] [thread 130767] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[11:02:39.671085] [D] [thread 130767] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[11:02:39.671096] [D] [thread 130767] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[11:02:39.671603] [D] [thread 130767] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[11:02:40.655670] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:41.656982] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:42.445857] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:42.447228] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:42.449200] [D] [thread 130794] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[11:02:42.452013] [D] [thread 130794] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[11:02:42.452127] [D] [thread 130794] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[11:02:42.452249] [D] [thread 130794] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));;}
}
[m
[36m[11:02:42.454575] [D] [thread 130795] [File.cpp:27] [createFile] Create File to file:///tmp/query_01-11-2023_11-02-42_3510699.cpp[m
[36m[11:02:42.455742] [D] [thread 130795] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:02:42.456717] [D] [thread 130795] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -o/tmp/query_01-11-2023_11-02-42_3510699.so -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_01-11-2023_11-02-42_3510699.cpp'[m
[36m[11:02:43.448486] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:02:44.187210] [I] [thread 130795] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1732.814857ms[m
[36m[11:02:44.188882] [D] [thread 130794] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[11:02:44.189087] [D] [thread 130794] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[11:02:44.189118] [D] [thread 130794] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[11:02:44.189169] [D] [thread 130794] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[11:02:44.449774] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:44.486339] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:44.486771] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:02:44.487594] [I] [thread 130800] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:02:44.488830] [I] [thread 130800] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:02:44.921891] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:44.922314] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:02:44.922838] [I] [thread 130801] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:02:44.923259] [I] [thread 130801] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:02:45.073324] [D] [thread 130790] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 44461
dataPort: 40663
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:02:45.073614] [D] [thread 130790] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 44461
dataPort: 40663
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:02:45.073699] [D] [thread 130790] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:02:45.073954] [D] [thread 130790] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:02:45.074017] [D] [thread 130790] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:02:45.074086] [D] [thread 130790] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[11:02:45.074330] [D] [thread 130790] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:02:45.074442] [I] [thread 130790] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:02:45.074650] [I] [thread 130790] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:02:45.074860] [D] [thread 130790] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[11:02:45.075157] [D] [thread 130790] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:02:45.075464] [D] [thread 130790] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[11:02:45.075552] [I] [thread 130790] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:02:45.075591] [D] [thread 130790] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:02:45.075643] [D] [thread 130790] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:02:45.075693] [D] [thread 130790] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:02:45.075725] [D] [thread 130790] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:02:45.076376] [D] [thread 130790] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[11:02:45.923548] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:46.924861] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:47.926156] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:47.946718] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:47.947166] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:02:47.947922] [I] [thread 130802] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:02:47.948871] [I] [thread 130802] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:02:48.095721] [D] [thread 130777] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 41517
dataPort: 37189
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:02:48.095927] [D] [thread 130777] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 41517
dataPort: 37189
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:02:48.095978] [D] [thread 130777] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:02:48.096151] [D] [thread 130777] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:02:48.096164] [D] [thread 130777] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:02:48.096196] [D] [thread 130777] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[11:02:48.096278] [D] [thread 130777] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:02:48.096320] [I] [thread 130777] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:02:48.096390] [I] [thread 130777] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:02:48.096455] [D] [thread 130777] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[11:02:48.099423] [D] [thread 130777] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:02:48.099768] [D] [thread 130777] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[11:02:48.099860] [I] [thread 130777] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:02:48.099887] [D] [thread 130777] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:02:48.099923] [D] [thread 130777] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:02:48.099933] [D] [thread 130777] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:02:48.099950] [D] [thread 130777] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:02:48.100416] [D] [thread 130777] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[11:02:48.948436] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:49.949745] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:50.951032] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:51.308957] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:51.309335] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:02:51.310075] [I] [thread 130804] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:02:51.311028] [I] [thread 130804] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:02:51.460841] [D] [thread 130803] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 40925
dataPort: 35557
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689761859
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:51.461113] [D] [thread 130803] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 40925
dataPort: 35557
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689761859
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:51.461190] [D] [thread 130803] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:02:51.461675] [D] [thread 130803] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:02:51.461771] [D] [thread 130803] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:02:51.461919] [D] [thread 130803] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[11:02:51.462326] [D] [thread 130803] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:02:51.462632] [I] [thread 130803] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:02:51.462900] [I] [thread 130803] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:02:51.463125] [D] [thread 130803] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[11:02:51.463238] [D] [thread 130803] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:02:51.463870] [D] [thread 130803] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[11:02:51.463983] [I] [thread 130803] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:02:51.464025] [D] [thread 130803] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:02:51.464076] [D] [thread 130803] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:02:51.464103] [D] [thread 130803] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:02:51.464148] [D] [thread 130803] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:02:51.465071] [D] [thread 130803] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[11:02:51.502705] [D] [thread 130803] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 4
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream3"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:02:51.502809] [I] [thread 130803] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:02:51.502845] [D] [thread 130803] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:02:51.502921] [D] [thread 130803] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= test_stream3 logical source= debs[m
[36m[11:02:51.503097] [D] [thread 130803] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:02:51.503138] [D] [thread 130803] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream3[m
[36m[11:02:51.503250] [D] [thread 130803] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream3 does not exist, try to add[m
[36m[11:02:51.503283] [D] [thread 130803] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:51.503328] [D] [thread 130803] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[11:02:51.503374] [D] [thread 130803] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:02:51.503643] [D] [thread 130803] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:02:51.503685] [D] [thread 130803] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:02:51.503841] [D] [thread 130803] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[11:02:51.503960] [D] [thread 130803] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:02:51.504057] [D] [thread 130803] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:51.504180] [D] [thread 130803] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[11:02:51.504454] [D] [thread 130803] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:02:51.504816] [D] [thread 130803] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:02:51.505036] [D] [thread 130803] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:02:51.505178] [D] [thread 130803] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[11:02:51.505291] [D] [thread 130803] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:02:51.505332] [D] [thread 130803] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:51.505455] [D] [thread 130803] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[11:02:51.505594] [D] [thread 130803] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:02:51.505926] [D] [thread 130803] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:02:51.506104] [D] [thread 130803] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:02:51.506184] [D] [thread 130803] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[11:02:51.506271] [D] [thread 130803] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:02:51.506308] [D] [thread 130803] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:51.506360] [D] [thread 130803] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[11:02:51.506448] [D] [thread 130803] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:02:51.506783] [D] [thread 130803] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:02:51.506843] [D] [thread 130803] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:02:51.507033] [D] [thread 130803] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:02:51.507078] [D] [thread 130803] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:02:51.507173] [D] [thread 130803] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:51.507277] [D] [thread 130803] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[11:02:51.507308] [D] [thread 130803] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:02:51.511368] [D] [thread 130805] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 2
[m
[36m[11:02:51.511629] [D] [thread 130805] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[11:02:51.511664] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:02:51.511694] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:02:51.511804] [D] [thread 130805] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[11:02:51.511825] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:02:51.511842] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:02:51.511862] [D] [thread 130805] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:02:51.511955] [D] [thread 130805] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:02:51.512101] [I] [thread 130805] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:02:51.512157] [D] [thread 130805] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:02:51.512180] [D] [thread 130805] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:02:51.512213] [D] [thread 130805] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 2[m
[32m[11:02:51.512232] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:02:51.512252] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:02:51.512274] [D] [thread 130805] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[11:02:51.512290] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:02:51.512306] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:02:51.512347] [D] [thread 130805] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:02:51.512457] [I] [thread 130805] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:02:51.512510] [D] [thread 130805] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:02:51.512759] [D] [thread 130805] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:02:51.512788] [D] [thread 130805] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:02:52.310655] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:53.312017] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:54.302673] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:54.303213] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:02:54.304116] [I] [thread 130806] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:02:54.305690] [I] [thread 130806] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:02:54.448795] [D] [thread 130805] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 46215
dataPort: 41671
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689637762
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:54.449076] [D] [thread 130805] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 46215
dataPort: 41671
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689637762
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:54.449159] [D] [thread 130805] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:02:54.449531] [D] [thread 130805] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:02:54.449565] [D] [thread 130805] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:02:54.449660] [D] [thread 130805] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[11:02:54.449834] [D] [thread 130805] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:02:54.449923] [I] [thread 130805] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:02:54.450069] [I] [thread 130805] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:02:54.450153] [D] [thread 130805] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[11:02:54.450331] [D] [thread 130805] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:02:54.450705] [D] [thread 130805] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:02:54.450773] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:02:54.450808] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:02:54.450855] [D] [thread 130805] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:02:54.450880] [D] [thread 130805] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:02:54.450909] [D] [thread 130805] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:02:54.451497] [D] [thread 130805] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[11:02:54.487834] [D] [thread 130805] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:02:54.487922] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:02:54.487951] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:02:54.488013] [D] [thread 130805] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[11:02:54.488165] [D] [thread 130805] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:02:54.488196] [D] [thread 130805] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[11:02:54.488251] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[11:02:54.488277] [D] [thread 130805] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[11:02:54.488297] [D] [thread 130805] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:54.488330] [D] [thread 130805] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:02:54.488359] [D] [thread 130805] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:02:54.488453] [D] [thread 130805] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:02:54.488480] [D] [thread 130805] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:02:54.488512] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[11:02:54.488531] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[11:02:54.488549] [D] [thread 130805] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:02:54.488566] [D] [thread 130805] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:54.488592] [D] [thread 130805] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:02:54.488621] [D] [thread 130805] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:02:54.488688] [D] [thread 130805] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:02:54.488711] [D] [thread 130805] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:02:54.488737] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[11:02:54.488754] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[11:02:54.488788] [D] [thread 130805] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:02:54.488806] [D] [thread 130805] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:54.488830] [D] [thread 130805] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:02:54.488864] [D] [thread 130805] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:02:54.488937] [D] [thread 130805] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:02:54.488962] [D] [thread 130805] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:02:54.488992] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[11:02:54.489009] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[11:02:54.489043] [D] [thread 130805] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:02:54.489063] [D] [thread 130805] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:54.489092] [D] [thread 130805] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:02:54.489127] [D] [thread 130805] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:02:54.489228] [D] [thread 130805] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:02:54.489257] [D] [thread 130805] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:02:54.489294] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:02:54.489312] [D] [thread 130805] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:02:54.489331] [D] [thread 130805] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:02:54.489348] [D] [thread 130805] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:54.489375] [D] [thread 130805] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:02:54.489391] [D] [thread 130805] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:02:54.493430] [D] [thread 130805] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[11:02:54.493539] [D] [thread 130805] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[11:02:54.493567] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:02:54.493593] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:02:54.493616] [D] [thread 130805] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[11:02:54.493628] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:02:54.493641] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:02:54.493656] [D] [thread 130805] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:02:54.493726] [D] [thread 130805] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:02:54.493859] [I] [thread 130805] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:02:54.493890] [D] [thread 130805] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:02:54.493911] [D] [thread 130805] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:02:54.493931] [D] [thread 130805] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[11:02:54.493946] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:02:54.493962] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:02:54.493980] [D] [thread 130805] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[11:02:54.493991] [I] [thread 130805] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:02:54.494004] [D] [thread 130805] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:02:54.494019] [D] [thread 130805] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:02:54.494110] [I] [thread 130805] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:02:54.494162] [D] [thread 130805] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:02:54.494490] [D] [thread 130805] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:02:54.494532] [D] [thread 130805] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:02:55.304497] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:56.305845] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:57.307199] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:57.542376] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:57.542939] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:02:57.544099] [I] [thread 130808] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:02:57.545737] [I] [thread 130808] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:02:57.687710] [D] [thread 130807] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 41467
dataPort: 37905
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689327291
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:57.688005] [D] [thread 130807] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 41467
dataPort: 37905
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2689327291
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:02:57.688087] [D] [thread 130807] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:02:57.688523] [D] [thread 130807] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:02:57.688600] [D] [thread 130807] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:02:57.688691] [D] [thread 130807] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[11:02:57.688874] [D] [thread 130807] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:02:57.688968] [I] [thread 130807] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:02:57.689115] [I] [thread 130807] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:02:57.689201] [D] [thread 130807] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[11:02:57.689306] [D] [thread 130807] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:02:57.689699] [D] [thread 130807] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:02:57.689764] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:02:57.689796] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:02:57.689842] [D] [thread 130807] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:02:57.689866] [D] [thread 130807] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:02:57.689895] [D] [thread 130807] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:02:57.690581] [D] [thread 130807] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[11:02:57.725728] [D] [thread 130807] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:02:57.725844] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:02:57.725885] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:02:57.725966] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[11:02:57.726156] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:02:57.726265] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[11:02:57.726352] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[11:02:57.726384] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:02:57.726418] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[11:02:57.726458] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:57.726511] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:02:57.726566] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:02:57.726739] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:02:57.726785] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:02:57.726833] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[11:02:57.726860] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[11:02:57.726884] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[11:02:57.726911] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:02:57.726935] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:57.726962] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:02:57.727005] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:02:57.727102] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:02:57.727140] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:02:57.727179] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[11:02:57.727207] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[11:02:57.727231] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[11:02:57.727257] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:02:57.727280] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:57.727305] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:02:57.727345] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:02:57.727446] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:02:57.727484] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:02:57.727527] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[11:02:57.727554] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[11:02:57.727578] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[11:02:57.727605] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:02:57.727630] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:57.727656] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:02:57.727696] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:02:57.727804] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:02:57.727841] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:02:57.727886] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:02:57.727913] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:02:57.727937] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:02:57.727964] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:02:57.727991] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:02:57.728017] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:02:57.728038] [D] [thread 130807] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:02:57.733581] [D] [thread 130807] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[11:02:57.733693] [D] [thread 130807] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[11:02:57.733727] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:02:57.733759] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:02:57.733790] [D] [thread 130807] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[11:02:57.733809] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:02:57.733828] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:02:57.733851] [D] [thread 130807] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:02:57.733926] [D] [thread 130807] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:02:57.734074] [I] [thread 130807] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:02:57.734115] [D] [thread 130807] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:02:57.734139] [D] [thread 130807] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:02:57.734165] [D] [thread 130807] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[11:02:57.734259] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:02:57.734289] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:02:57.734315] [D] [thread 130807] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[11:02:57.734334] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:02:57.734353] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:02:57.734375] [D] [thread 130807] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:02:57.734518] [I] [thread 130807] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:02:57.734580] [D] [thread 130807] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:02:57.734940] [D] [thread 130807] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:02:57.734973] [D] [thread 130807] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:02:58.544331] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:02:59.545635] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:00.509337] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:00.509833] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:03:00.510504] [I] [thread 130810] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:03:00.512422] [I] [thread 130810] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:03:00.649983] [D] [thread 130809] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 46859
dataPort: 46767
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689249977
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:00.650264] [D] [thread 130809] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 46859
dataPort: 46767
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689249977
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:00.650333] [D] [thread 130809] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:03:00.650715] [D] [thread 130809] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:03:00.650770] [D] [thread 130809] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:03:00.650840] [D] [thread 130809] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[11:03:00.650984] [D] [thread 130809] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:03:00.651056] [I] [thread 130809] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:03:00.651172] [I] [thread 130809] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:00.651240] [D] [thread 130809] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[11:03:00.651343] [D] [thread 130809] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:03:00.651740] [D] [thread 130809] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:03:00.651830] [I] [thread 130809] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:03:00.651864] [D] [thread 130809] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:03:00.651903] [D] [thread 130809] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:03:00.651922] [D] [thread 130809] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:03:00.651945] [D] [thread 130809] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:03:00.652521] [D] [thread 130809] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[11:03:00.687402] [D] [thread 130809] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:03:00.687531] [I] [thread 130809] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:03:00.687577] [D] [thread 130809] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:03:00.687666] [D] [thread 130809] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[11:03:00.687874] [D] [thread 130809] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:03:00.687927] [D] [thread 130809] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[11:03:00.688007] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[11:03:00.688043] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:03:00.688072] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:03:00.688108] [D] [thread 130809] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[11:03:00.688141] [D] [thread 130809] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:00.688176] [D] [thread 130809] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:03:00.688226] [D] [thread 130809] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:03:00.688340] [D] [thread 130809] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:03:00.688421] [D] [thread 130809] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:03:00.688481] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[11:03:00.688516] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[11:03:00.688544] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[11:03:00.688571] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[11:03:00.688604] [D] [thread 130809] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:03:00.688632] [D] [thread 130809] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:00.688683] [D] [thread 130809] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:03:00.688737] [D] [thread 130809] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:03:00.688875] [D] [thread 130809] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:03:00.688923] [D] [thread 130809] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:03:00.688979] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[11:03:00.689013] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[11:03:00.689042] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[11:03:00.689070] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[11:03:00.689104] [D] [thread 130809] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:03:00.689135] [D] [thread 130809] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:00.689183] [D] [thread 130809] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:03:00.689240] [D] [thread 130809] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:03:00.689384] [D] [thread 130809] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:03:00.689433] [D] [thread 130809] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:03:00.689486] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:00.689519] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:00.689548] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:00.689576] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:00.689609] [D] [thread 130809] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:03:00.689639] [D] [thread 130809] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:00.689686] [D] [thread 130809] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:03:00.689742] [D] [thread 130809] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:03:00.689987] [D] [thread 130809] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:03:00.690049] [D] [thread 130809] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:03:00.690119] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:00.690157] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:00.690186] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:00.690286] [D] [thread 130809] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:00.690327] [D] [thread 130809] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:03:00.690365] [D] [thread 130809] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:00.690426] [D] [thread 130809] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:03:00.690457] [D] [thread 130809] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:03:00.694825] [D] [thread 130811] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 2
[m
[36m[11:03:00.694913] [D] [thread 130811] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[11:03:00.694946] [I] [thread 130811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:03:00.694981] [D] [thread 130811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:03:00.695017] [D] [thread 130811] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[11:03:00.695039] [I] [thread 130811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:03:00.695061] [D] [thread 130811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:03:00.695087] [D] [thread 130811] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:03:00.695170] [D] [thread 130811] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:03:00.695337] [I] [thread 130811] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:00.695384] [D] [thread 130811] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:03:00.695417] [D] [thread 130811] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:03:00.695448] [D] [thread 130811] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 2[m
[32m[11:03:00.695471] [I] [thread 130811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:03:00.695497] [D] [thread 130811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:03:00.695527] [D] [thread 130811] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[11:03:00.695547] [I] [thread 130811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:03:00.695570] [D] [thread 130811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:03:00.695629] [D] [thread 130811] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:03:00.695778] [I] [thread 130811] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:03:00.695846] [D] [thread 130811] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:03:00.696305] [D] [thread 130811] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:03:00.696345] [D] [thread 130811] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:03:01.511125] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:02.512432] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:03.513782] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:03.714067] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:03.714591] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:03:03.715208] [I] [thread 130812] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:03:03.717350] [I] [thread 130812] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:03:03.856887] [D] [thread 130811] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.36"
grpcPort: 36103
dataPort: 43211
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689889139
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:03.857160] [D] [thread 130811] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.36"
grpcPort: 36103
dataPort: 43211
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689889139
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:03.857243] [D] [thread 130811] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:03:03.857762] [D] [thread 130811] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:03:03.857809] [D] [thread 130811] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:03:03.857864] [D] [thread 130811] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[11:03:03.858046] [D] [thread 130811] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:03:03.858131] [I] [thread 130811] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:03:03.858252] [I] [thread 130811] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:03.858314] [D] [thread 130811] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[11:03:03.858385] [D] [thread 130811] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:03:03.858637] [D] [thread 130811] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:03:03.858725] [I] [thread 130811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:03:03.858748] [D] [thread 130811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:03:03.858779] [D] [thread 130811] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:03:03.858791] [D] [thread 130811] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:03:03.858808] [D] [thread 130811] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:03:03.859211] [D] [thread 130811] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[11:03:03.896887] [D] [thread 130811] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:03:03.897050] [I] [thread 130811] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:03:03.897098] [D] [thread 130811] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:03:03.897189] [D] [thread 130811] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[11:03:03.897397] [D] [thread 130811] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:03:03.897448] [D] [thread 130811] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[11:03:03.897529] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[11:03:03.897563] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:03:03.897591] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:03:03.897618] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:03:03.897655] [D] [thread 130811] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[11:03:03.897689] [D] [thread 130811] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:03.897744] [D] [thread 130811] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:03:03.897800] [D] [thread 130811] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:03:03.897930] [D] [thread 130811] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:03:03.897977] [D] [thread 130811] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:03:03.898031] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[11:03:03.898063] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[11:03:03.898091] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[11:03:03.898119] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[11:03:03.898147] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[11:03:03.898182] [D] [thread 130811] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:03:03.898272] [D] [thread 130811] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:03.898315] [D] [thread 130811] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:03:03.898379] [D] [thread 130811] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:03:03.898548] [D] [thread 130811] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:03:03.898600] [D] [thread 130811] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:03:03.898659] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[11:03:03.898725] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[11:03:03.898758] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[11:03:03.898787] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[11:03:03.898815] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[11:03:03.898969] [D] [thread 130811] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:03:03.899013] [D] [thread 130811] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:03.899051] [D] [thread 130811] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:03:03.899115] [D] [thread 130811] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:03:03.899305] [D] [thread 130811] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:03:03.899359] [D] [thread 130811] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:03:03.899425] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:03.899458] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:03.899487] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:03.899516] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:03.899543] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:03.899577] [D] [thread 130811] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:03:03.899609] [D] [thread 130811] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:03.899641] [D] [thread 130811] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:03:03.899695] [D] [thread 130811] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:03:03.899840] [D] [thread 130811] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:03:03.899891] [D] [thread 130811] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:03:03.899945] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:03.900010] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:03.900046] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:03.900074] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:03.900102] [D] [thread 130811] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:03.900156] [D] [thread 130811] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:03:03.900195] [D] [thread 130811] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:03.900230] [D] [thread 130811] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:03:03.900256] [D] [thread 130811] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:03:03.904562] [D] [thread 130807] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[11:03:03.904637] [D] [thread 130807] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[11:03:03.904669] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:03:03.904704] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:03:03.904739] [D] [thread 130807] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[11:03:03.904761] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:03:03.904783] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:03:03.904838] [D] [thread 130807] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:03:03.904926] [D] [thread 130807] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:03:03.905105] [I] [thread 130807] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:03.905153] [D] [thread 130807] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:03:03.905181] [D] [thread 130807] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:03:03.905209] [D] [thread 130807] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[11:03:03.905233] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:03:03.905281] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:03:03.905312] [D] [thread 130807] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[11:03:03.905334] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:03:03.905356] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:03:03.905382] [D] [thread 130807] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:03:03.905534] [I] [thread 130807] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:03:03.905600] [D] [thread 130807] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:03:03.906145] [D] [thread 130807] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:03:03.906246] [D] [thread 130807] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:03:04.715863] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:05.717154] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:06.718479] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:06.991167] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:06.991639] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:03:06.992261] [I] [thread 130814] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:03:06.994751] [I] [thread 130814] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:03:07.140210] [D] [thread 130807] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 34913
dataPort: 36183
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689997953
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:07.140422] [D] [thread 130807] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 34913
dataPort: 36183
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2689997953
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:07.140481] [D] [thread 130807] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:03:07.140888] [D] [thread 130807] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:03:07.140936] [D] [thread 130807] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:03:07.141000] [D] [thread 130807] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[11:03:07.141132] [D] [thread 130807] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:03:07.141195] [I] [thread 130807] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:03:07.141302] [I] [thread 130807] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:07.141367] [D] [thread 130807] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[11:03:07.141448] [D] [thread 130807] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:03:07.141815] [D] [thread 130807] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:03:07.141874] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:03:07.141899] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:03:07.141934] [D] [thread 130807] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:03:07.141950] [D] [thread 130807] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:03:07.141986] [D] [thread 130807] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:03:07.142513] [D] [thread 130807] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[11:03:07.180634] [D] [thread 130807] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:03:07.180729] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:03:07.180762] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:03:07.180827] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[11:03:07.180983] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:03:07.181016] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[11:03:07.181087] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[11:03:07.181110] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:03:07.181127] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:03:07.181143] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:03:07.181159] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:03:07.181183] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[11:03:07.181204] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:07.181236] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:03:07.181270] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:03:07.181360] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:03:07.181388] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:03:07.181419] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[11:03:07.181440] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[11:03:07.181456] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[11:03:07.181473] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[11:03:07.181489] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[11:03:07.181506] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[11:03:07.181525] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:03:07.181542] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:07.181560] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:03:07.181598] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:03:07.181671] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:03:07.181697] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:03:07.181726] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[11:03:07.181745] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[11:03:07.181762] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[11:03:07.181778] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[11:03:07.181794] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[11:03:07.181827] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[11:03:07.181850] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:03:07.181868] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:07.181887] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:03:07.181932] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:03:07.182017] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:03:07.182045] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:03:07.182080] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:07.182100] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:07.182116] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:07.182133] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:07.182149] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:07.182165] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:07.182242] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:03:07.182270] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:07.182291] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:03:07.182326] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:03:07.182439] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:03:07.182470] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:03:07.182507] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:07.182528] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:07.182545] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:07.182561] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:07.182577] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:07.182594] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:07.182613] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:03:07.182632] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:07.182651] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:03:07.182666] [D] [thread 130807] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:03:07.186817] [D] [thread 130807] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 3
[m
[36m[11:03:07.186899] [D] [thread 130807] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[11:03:07.186925] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:03:07.186948] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:03:07.186971] [D] [thread 130807] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[11:03:07.186984] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:03:07.186998] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:03:07.187014] [D] [thread 130807] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:03:07.187072] [D] [thread 130807] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:03:07.187186] [I] [thread 130807] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:07.187216] [D] [thread 130807] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:03:07.187234] [D] [thread 130807] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:03:07.187253] [D] [thread 130807] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 3[m
[32m[11:03:07.187267] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:03:07.187283] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:03:07.187301] [D] [thread 130807] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[11:03:07.187313] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:03:07.187327] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:03:07.187342] [D] [thread 130807] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:03:07.187427] [I] [thread 130807] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:03:07.187486] [D] [thread 130807] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:03:07.187868] [D] [thread 130807] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:03:07.187897] [D] [thread 130807] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:03:07.992947] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:08.994291] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:09.995572] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:10.125510] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:10.125999] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:03:10.126671] [I] [thread 130816] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:03:10.129296] [I] [thread 130816] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:03:10.270695] [D] [thread 130807] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 43573
dataPort: 33265
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2690115845
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:10.270897] [D] [thread 130807] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 43573
dataPort: 33265
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2690115845
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:10.270951] [D] [thread 130807] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:03:10.271283] [D] [thread 130807] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:03:10.271330] [D] [thread 130807] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:03:10.271379] [D] [thread 130807] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[11:03:10.271487] [D] [thread 130807] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:03:10.271535] [I] [thread 130807] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:03:10.271611] [I] [thread 130807] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:10.271669] [D] [thread 130807] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[11:03:10.271741] [D] [thread 130807] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:03:10.272047] [D] [thread 130807] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:03:10.272122] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:03:10.272147] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:03:10.272179] [D] [thread 130807] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:03:10.272189] [D] [thread 130807] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:03:10.272205] [D] [thread 130807] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:03:10.272651] [D] [thread 130807] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[11:03:10.309235] [D] [thread 130807] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:03:10.309319] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:03:10.309345] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:03:10.309406] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[11:03:10.309544] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:03:10.309570] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[11:03:10.309648] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[11:03:10.309667] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:03:10.309678] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:03:10.309689] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:03:10.309700] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:03:10.309711] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[11:03:10.309728] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[11:03:10.309757] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:10.309776] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:03:10.309803] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:03:10.309875] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:03:10.309896] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:03:10.309924] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[11:03:10.309940] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[11:03:10.309951] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[11:03:10.309962] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[11:03:10.309986] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[11:03:10.309998] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[11:03:10.310009] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[11:03:10.310023] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:03:10.310037] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:10.310051] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:03:10.310073] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:03:10.310143] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:03:10.310169] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:03:10.310230] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[11:03:10.310250] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[11:03:10.310263] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[11:03:10.310275] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[11:03:10.310286] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[11:03:10.310297] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[11:03:10.310308] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[11:03:10.310325] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:03:10.310342] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:10.310358] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:03:10.310388] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:03:10.310487] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:03:10.310511] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:03:10.310542] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:10.310558] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:10.310585] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:10.310599] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:10.310610] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:10.310621] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:10.310642] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:10.310659] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:03:10.310675] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:10.310691] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:03:10.310718] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:03:10.310801] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:03:10.310825] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:03:10.310857] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:10.310871] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:10.310882] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:10.310894] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:10.310904] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:10.310915] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:10.310926] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:10.310942] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:03:10.310957] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:10.310972] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:03:10.310983] [D] [thread 130807] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:03:10.314755] [D] [thread 130817] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 3
[m
[36m[11:03:10.314830] [D] [thread 130817] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[11:03:10.314849] [I] [thread 130817] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:03:10.314868] [D] [thread 130817] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:03:10.314885] [D] [thread 130817] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[11:03:10.314894] [I] [thread 130817] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:03:10.314903] [D] [thread 130817] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:03:10.314914] [D] [thread 130817] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:03:10.314964] [D] [thread 130817] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:03:10.315057] [I] [thread 130817] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:10.315079] [D] [thread 130817] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:03:10.315093] [D] [thread 130817] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:03:10.315107] [D] [thread 130817] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 3[m
[32m[11:03:10.315117] [I] [thread 130817] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:03:10.315129] [D] [thread 130817] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:03:10.315141] [D] [thread 130817] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[11:03:10.315150] [I] [thread 130817] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:03:10.315159] [D] [thread 130817] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:03:10.315169] [D] [thread 130817] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:03:10.315231] [I] [thread 130817] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:03:10.315267] [D] [thread 130817] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:03:10.315534] [D] [thread 130817] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:03:10.315552] [D] [thread 130817] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:03:11.127265] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:12.128584] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:13.129896] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:13.322087] [D] [thread 130817] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.39"
grpcPort: 34743
dataPort: 40977
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2690059830
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:13.322419] [D] [thread 130817] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.39"
grpcPort: 34743
dataPort: 40977
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2690059830
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[11:03:13.322505] [D] [thread 130817] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:03:13.323164] [D] [thread 130817] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:03:13.323232] [D] [thread 130817] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:03:13.323304] [D] [thread 130817] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 11 and resources 65535[m
[36m[11:03:13.323478] [D] [thread 130817] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:03:13.323574] [I] [thread 130817] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:03:13.323726] [I] [thread 130817] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:13.323815] [D] [thread 130817] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 11[m
[36m[11:03:13.323922] [D] [thread 130817] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:03:13.324551] [D] [thread 130817] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:03:13.324618] [I] [thread 130817] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[11:03:13.324654] [D] [thread 130817] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[11:03:13.324702] [D] [thread 130817] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:03:13.324760] [D] [thread 130817] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:03:13.324792] [D] [thread 130817] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:03:13.325394] [D] [thread 130817] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=11[m
[36m[11:03:13.361880] [D] [thread 130807] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 11
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream10"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[11:03:13.362046] [I] [thread 130807] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[11:03:13.362094] [D] [thread 130807] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[11:03:13.362186] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= test_stream10 logical source= debs[m
[36m[11:03:13.362452] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:03:13.362507] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream10[m
[36m[11:03:13.362588] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[11:03:13.362621] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:03:13.362647] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:03:13.362674] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:03:13.362701] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:03:13.362727] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[11:03:13.362754] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=test_stream9[m
[36m[11:03:13.362789] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream10 does not exist, try to add[m
[36m[11:03:13.362822] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:13.362857] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[11:03:13.362911] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[11:03:13.363046] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[11:03:13.363091] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[11:03:13.363148] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[11:03:13.363181] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[11:03:13.363211] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[11:03:13.363239] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[11:03:13.363378] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[11:03:13.363415] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[11:03:13.363443] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[11:03:13.363471] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=DiskMetric_ph[m
[36m[11:03:13.363509] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[11:03:13.363544] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:13.363604] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[11:03:13.363667] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[11:03:13.363862] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[11:03:13.363917] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[11:03:13.363976] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[11:03:13.364009] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[11:03:13.364144] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[11:03:13.364182] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[11:03:13.364210] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[11:03:13.364238] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[11:03:13.364266] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[11:03:13.364294] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=MemoryMetric_ph[m
[36m[11:03:13.364332] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[11:03:13.364371] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:13.364429] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[11:03:13.364496] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[11:03:13.364664] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[11:03:13.364715] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[11:03:13.364777] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:13.364810] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:13.364838] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:13.364865] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:13.364892] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:13.364920] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:13.365082] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:13.365120] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedCpuMetrics_ph[m
[36m[11:03:13.365157] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[11:03:13.365195] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:13.365253] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[11:03:13.365315] [D] [thread 130807] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[11:03:13.365483] [D] [thread 130807] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[11:03:13.365531] [D] [thread 130807] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[11:03:13.365589] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:13.365621] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:13.365650] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:13.365677] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:13.365704] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:13.365731] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:13.365759] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:13.365787] [D] [thread 130807] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedNetworkMetrics_ph[m
[36m[11:03:13.365820] [D] [thread 130807] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[11:03:13.365851] [D] [thread 130807] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:03:13.365902] [D] [thread 130807] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[11:03:13.365929] [D] [thread 130807] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:03:13.370010] [D] [thread 130818] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 11
oldParent: 1
newParent: 3
[m
[36m[11:03:13.370093] [D] [thread 130818] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 11  parentId= 1[m
[32m[11:03:13.370126] [I] [thread 130818] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[11:03:13.370162] [D] [thread 130818] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[11:03:13.370258] [D] [thread 130818] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  11  exists[m
[32m[11:03:13.370294] [I] [thread 130818] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:03:13.370318] [D] [thread 130818] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:03:13.370346] [D] [thread 130818] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:03:13.370431] [D] [thread 130818] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:03:13.370604] [I] [thread 130818] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:03:13.370650] [D] [thread 130818] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:03:13.370681] [D] [thread 130818] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:03:13.370710] [D] [thread 130818] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 11  parentId= 3[m
[32m[11:03:13.370734] [I] [thread 130818] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[11:03:13.370760] [D] [thread 130818] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[11:03:13.370788] [D] [thread 130818] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 11 exists[m
[32m[11:03:13.370811] [I] [thread 130818] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:03:13.370834] [D] [thread 130818] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:03:13.370862] [D] [thread 130818] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:03:13.371015] [I] [thread 130818] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:03:13.371074] [D] [thread 130818] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:03:13.371737] [D] [thread 130818] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:03:13.371791] [D] [thread 130818] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:03:13.798488] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:13.798916] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:03:13.799468] [I] [thread 130820] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:03:13.801589] [I] [thread 130820] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:03:14.800258] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:15.461381] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:15.461702] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:15.605881] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:15.606400] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:15.608628] [D] [thread 130825] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownWithMonitoringSourceThreeLevel.out",true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[11:03:15.608762] [I] [thread 130825] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[11:03:15.608793] [I] [thread 130825] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[11:03:15.608846] [D] [thread 130825] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[11:03:15.608948] [D] [thread 130825] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "WrappedNetworkMetrics"[m
[36m[11:03:15.609022] [D] [thread 130825] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownWithMonitoringSourceThreeLevel.out",true));[m
[36m[11:03:15.609174] [D] [thread 130825] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownWithMonitoringSourceThreeLevel.out",true));
}
}
[m
[36m[11:03:15.610823] [D] [thread 130826] [File.cpp:27] [createFile] Create File to file:///tmp/query_01-11-2023_11-03-15_5579324.cpp[m
[36m[11:03:15.611399] [D] [thread 130826] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:03:15.611484] [D] [thread 130826] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[11:03:15.611814] [D] [thread 130826] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -fpic -o/tmp/query_01-11-2023_11-03-15_5579324.so -DFMT_HEADER_ONLY /tmp/query_01-11-2023_11-03-15_5579324.cpp'[m
[36m[11:03:16.607634] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:17.608889] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:03:18.588687] [I] [thread 130826] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2977.942012ms[m
[36m[11:03:18.589027] [D] [thread 130825] [Query.cpp:231] [from] Query: create new Query with source WrappedNetworkMetrics[m
[36m[11:03:18.589076] [D] [thread 130825] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  WrappedNetworkMetrics[m
[32m[11:03:18.589511] [I] [thread 130825] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.590728] [D] [thread 130825] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[11:03:18.591200] [D] [thread 130825] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[11:03:18.591601] [I] [thread 130825] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.591753] [D] [thread 130825] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[11:03:18.591979] [D] [thread 130825] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.592043] [D] [thread 130825] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.592546] [I] [thread 130825] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:03:18.592711] [D] [thread 130825] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Avg;) as new root of the plan.[m
[36m[11:03:18.592925] [D] [thread 130825] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.592956] [D] [thread 130825] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.593236] [D] [thread 130825] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[11:03:18.593397] [I] [thread 130825] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:03:18.593564] [D] [thread 130825] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[11:03:18.593744] [D] [thread 130825] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.593773] [D] [thread 130825] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.594795] [D] [thread 130825] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.594996] [D] [thread 130825] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.595123] [D] [thread 130825] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.595424] [D] [thread 130825] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.595522] [D] [thread 130825] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.595553] [D] [thread 130825] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.595667] [D] [thread 130825] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:03:18.595716] [D] [thread 130825] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.595798] [D] [thread 130825] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.595844] [D] [thread 130825] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.596650] [D] [thread 130825] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source WrappedNetworkMetrics with schema: WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.596703] [D] [thread 130825] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.596811] [D] [thread 130825] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.597891] [D] [thread 130825] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.598791] [D] [thread 130825] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:03:18.599357] [I] [thread 130825] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[11:03:18.600072] [I] [thread 130825] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[11:03:18.600144] [I] [thread 130825] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:03:18.600195] [I] [thread 130775] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:03:18.600307] [I] [thread 130775] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:03:18.600343] [I] [thread 130775] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:03:18.600603] [I] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[11:03:18.600750] [D] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:03:18.600782] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.600847] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.600901] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.600957] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.601003] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.601876] [D] [thread 130775] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.602474] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.602555] [D] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:03:18.602580] [D] [thread 130775] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:03:18.602842] [D] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[11:03:18.602911] [I] [thread 130775] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:03:18.603143] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:03:18.603491] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:03:18.603810] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:03:18.604012] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.604290] [D] [thread 130775] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[11:03:18.604618] [D] [thread 130775] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.604858] [D] [thread 130775] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[11:03:18.605004] [I] [thread 130775] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.605166] [D] [thread 130775] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:03:18.605196] [I] [thread 130775] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:03:18.605292] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:03:18.605453] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:03:18.605687] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:03:18.605901] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.606118] [D] [thread 130775] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[11:03:18.606440] [I] [thread 130775] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.606517] [D] [thread 130775] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:03:18.606532] [I] [thread 130775] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:03:18.606624] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:03:18.606763] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:03:18.606978] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:03:18.607192] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.607410] [D] [thread 130775] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[11:03:18.607561] [I] [thread 130775] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[11:03:18.607710] [I] [thread 130775] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.607852] [D] [thread 130775] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[11:03:18.607971] [D] [thread 130775] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.608084] [D] [thread 130775] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.608213] [D] [thread 130775] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[11:03:18.608344] [D] [thread 130775] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.608451] [D] [thread 130775] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.608551] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.608612] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.608653] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.608710] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.608749] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.609510] [D] [thread 130775] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.609952] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:03:18.610025] [I] [thread 130775] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[36m[11:03:18.610100] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:03:18.610244] [I] [thread 130775] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[11:03:18.610265] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.610311] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.610348] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[11:03:18.610972] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.611063] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.611163] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.611185] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.611219] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.611432] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:03:18.611894] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.611971] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.612047] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.612064] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.612093] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.612263] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:03:18.612529] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.612592] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.612660] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.612677] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.612733] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.612922] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:03:18.613210] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.613275] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.613347] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.613364] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.613408] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.613590] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:03:18.613857] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.613918] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.613979] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.613995] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.614058] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.614269] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:03:18.614584] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.614654] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.614726] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.614776] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.614807] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.614982] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:03:18.615273] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.615335] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.615401] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.615416] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.615443] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.615605] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:03:18.615905] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.615966] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.616033] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.616081] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.616112] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.616281] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:03:18.616555] [I] [thread 130775] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:03:18.616614] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:03:18.616677] [D] [thread 130775] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:03:18.616693] [D] [thread 130775] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:03:18.616719] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:03:18.616870] [D] [thread 130775] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[11:03:18.617491] [D] [thread 130775] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[32m[11:03:18.617602] [I] [thread 130775] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[11:03:18.617885] [D] [thread 130775] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.618217] [D] [thread 130775] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[11:03:18.618560] [D] [thread 130775] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.618624] [D] [thread 130775] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[11:03:18.618895] [D] [thread 130775] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.619250] [D] [thread 130775] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[11:03:18.619326] [D] [thread 130775] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[11:03:18.619371] [D] [thread 130775] [NemoWindowPinningRule.cpp:92] [createCentralWindowOperator] NemoWindowPinningRule::apply: introduce centralized window operator for window WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[11:03:18.619466] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[11:03:18.619647] [D] [thread 130775] [NemoWindowPinningRule.cpp:94] [createCentralWindowOperator] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(23) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[11:03:18.619713] [D] [thread 130775] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:18.619741] [D] [thread 130775] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:18.619805] [I] [thread 130775] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:18.619818] [I] [thread 130775] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:18.619835] [I] [thread 130775] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:18.619899] [D] [thread 130775] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:18.619914] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.619970] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620008] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.620068] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620083] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.620140] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620157] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.620224] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620251] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.620325] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620340] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.620412] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620425] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.620502] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620515] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.620617] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620633] [D] [thread 130775] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:18.620727] [D] [thread 130775] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:18.620744] [D] [thread 130775] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[11:03:18.621044] [D] [thread 130775] [NemoWindowPinningRule.cpp:81] [apply] NemoWindowPinningRule::apply: central op
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.621302] [D] [thread 130775] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.621576] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.621686] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.621759] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 9 source operators.[m
[36m[11:03:18.621819] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.621857] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.624298] [D] [thread 130775] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[11:03:18.624648] [I] [thread 130775] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[11:03:18.624773] [I] [thread 130775] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[11:03:18.624905] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.625683] [D] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:03:18.625731] [D] [thread 130775] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:03:18.626056] [D] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:03:18.626166] [D] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[11:03:18.626210] [D] [thread 130775] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[11:03:18.626275] [I] [thread 130775] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[11:03:18.626319] [I] [thread 130775] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:03:18.626432] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:03:18.626597] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[11:03:18.626868] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[11:03:18.627020] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[11:03:18.627155] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[11:03:18.627314] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[11:03:18.627454] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[11:03:18.627589] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[11:03:18.627721] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[11:03:18.627857] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[11:03:18.627999] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[11:03:18.628154] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[11:03:18.628387] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[11:03:18.628553] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[11:03:18.628706] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[11:03:18.628866] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[11:03:18.629019] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[11:03:18.629175] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[11:03:18.629355] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[11:03:18.629510] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:03:18.630137] [D] [thread 130775] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:03:18.630218] [D] [thread 130775] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:03:18.630303] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630349] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630374] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630396] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630421] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630457] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630482] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630503] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630523] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630554] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630578] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630599] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630616] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.630648] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630662] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.630696] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630708] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.630729] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630741] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.630758] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630769] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.630789] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630801] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.630818] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630829] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.630845] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630857] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.630874] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.630885] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.632153] [D] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:03:18.632189] [D] [thread 130775] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:03:18.632268] [D] [thread 130775] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:03:18.632292] [D] [thread 130775] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:03:18.632301] [D] [thread 130775] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[11:03:18.632311] [D] [thread 130775] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[11:03:18.632336] [I] [thread 130775] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[11:03:18.632909] [D] [thread 130775] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.632986] [D] [thread 130775] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:03:18.633002] [D] [thread 130775] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:03:18.633062] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633103] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633126] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633148] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633181] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633203] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633225] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633246] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633266] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633286] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633307] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633327] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633339] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633369] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633381] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633405] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633417] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633436] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633449] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633465] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633477] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633497] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633509] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633526] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633537] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633554] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633572] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633591] [D] [thread 130775] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:03:18.633603] [D] [thread 130775] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:03:18.633834] [D] [thread 130775] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[11:03:18.633889] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:03:18.633911] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[11:03:18.633988] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:03:18.634001] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[11:03:18.634035] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:03:18.634046] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[11:03:18.634067] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:03:18.634078] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[11:03:18.634114] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:03:18.634127] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[11:03:18.634145] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:03:18.634156] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[11:03:18.634173] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:03:18.634184] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[11:03:18.634254] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:03:18.634268] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[11:03:18.634294] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[11:03:18.634306] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[11:03:18.634337] [I] [thread 130775] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:03:18.634349] [D] [thread 130775] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[11:03:18.634423] [I] [thread 130775] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[11:03:18.634636] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.634795] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.634905] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.634990] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635156] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.635216] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635280] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635348] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635463] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.635516] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635590] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635661] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635774] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.635850] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635910] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.635989] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636093] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.636156] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636217] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636317] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636432] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.636482] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636536] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636600] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636668] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.636723] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636812] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.636862] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.636958] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.637034] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.637138] [D] [thread 130775] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:03:18.637207] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.637271] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.637341] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[11:03:18.637400] [I] [thread 130775] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 9 sub-graphs to create a single sub-graph[m
[36m[11:03:18.637412] [D] [thread 130775] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[11:03:18.637858] [D] [thread 130775] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[11:03:18.637881] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.637957] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.637973] [D] [thread 130775] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:03:18.638004] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:03:18.638075] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.638156] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.638226] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.638284] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.638298] [D] [thread 130775] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:03:18.638339] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:03:18.638446] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.638517] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.638565] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.638577] [D] [thread 130775] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:03:18.638598] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:03:18.638639] [W] [thread 130775] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:03:18.638654] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.638696] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.638708] [D] [thread 130775] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:03:18.638722] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:03:18.638770] [W] [thread 130775] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:03:18.638785] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.638827] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.638839] [D] [thread 130775] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:03:18.638861] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:03:18.638901] [W] [thread 130775] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:03:18.638916] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.638959] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.638971] [D] [thread 130775] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:03:18.638985] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:03:18.639026] [W] [thread 130775] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:03:18.639041] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.639050] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:03:18.639061] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.639150] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.639166] [D] [thread 130775] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:03:18.639185] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:03:18.639234] [W] [thread 130775] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:03:18.639250] [D] [thread 130775] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:03:18.639297] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:03:18.639310] [D] [thread 130775] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:03:18.639325] [D] [thread 130775] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:03:18.639364] [W] [thread 130775] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:03:18.639465] [D] [thread 130775] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:03:18.639491] [D] [thread 130775] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:03:18.639499] [D] [thread 130775] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:03:18.639506] [D] [thread 130775] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[11:03:18.639527] [D] [thread 130775] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:03:18.639535] [D] [thread 130775] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:03:18.639561] [D] [thread 130775] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:03:18.639747] [D] [thread 130775] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[11:03:18.639831] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.639903] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.639938] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.639995] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[11:03:18.640011] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.640082] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.640098] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.640117] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:03:18.640167] [W] [thread 130775] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:03:18.640188] [W] [thread 130775] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:03:18.640223] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.640259] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.640275] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.640310] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[11:03:18.640325] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.640368] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.640383] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.640394] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:03:18.640442] [W] [thread 130775] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:03:18.640470] [W] [thread 130775] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:03:18.640505] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.640553] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.640570] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.640605] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[11:03:18.640619] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.640665] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.640680] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.640692] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:03:18.640746] [W] [thread 130775] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:03:18.640762] [W] [thread 130775] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:03:18.640793] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.640826] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.640841] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.640875] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[11:03:18.640889] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.640930] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.640945] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.640955] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:03:18.641013] [W] [thread 130775] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:03:18.641028] [W] [thread 130775] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:03:18.641072] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.641109] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.641127] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.641163] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[11:03:18.641178] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.641225] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.641240] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.641252] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:03:18.641325] [W] [thread 130775] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:03:18.641341] [W] [thread 130775] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:03:18.641373] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.641406] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.641422] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.641453] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[11:03:18.641468] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.641508] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.641523] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.641534] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:03:18.641606] [W] [thread 130775] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:03:18.641621] [W] [thread 130775] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:03:18.641650] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.641683] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.641698] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.641730] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(18)[m
[36m[11:03:18.641744] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.641783] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.641798] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.641809] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:03:18.641887] [W] [thread 130775] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:03:18.641903] [W] [thread 130775] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:03:18.641933] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.641966] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.641980] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.642012] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[11:03:18.642026] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.642064] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.642091] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.642103] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:03:18.642233] [W] [thread 130775] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:03:18.642258] [W] [thread 130775] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:03:18.642302] [D] [thread 130775] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[11:03:18.642344] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[11:03:18.642363] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.642403] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(22)[m
[36m[11:03:18.642418] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.642469] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[11:03:18.642484] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.642496] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:03:18.642595] [D] [thread 130775] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:03:18.642637] [D] [thread 130775] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:03:18.642742] [D] [thread 130775] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:03:18.642767] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.642780] [D] [thread 130775] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:03:18.642820] [D] [thread 130775] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:03:18.642861] [D] [thread 130775] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:03:18.642875] [D] [thread 130775] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.642886] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.642940] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.642976] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.643221] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 1[m
[36m[11:03:18.643243] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.643275] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.643466] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[11:03:18.643654] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.643673] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.643682] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.643725] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.643740] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.643871] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:03:18.643959] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.643997] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:03:18.644009] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:03:18.644150] [D] [thread 130775] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 1[m
[36m[11:03:18.644341] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.644367] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.644409] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:03:18.644435] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.644495] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.644581] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.644602] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.644662] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.644681] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.644723] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 1[m
[36m[11:03:18.644737] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.644753] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.644786] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.644799] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.644838] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.644850] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.644924] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.644936] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.644966] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.645072] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[11:03:18.645269] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.645292] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.645307] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[11:03:18.645318] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[11:03:18.645464] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.645534] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.645551] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.645592] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:03:18.645611] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.645626] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:03:18.645635] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:03:18.645732] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[11:03:18.645789] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.645807] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.645823] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:03:18.645844] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.645894] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.645962] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:03:18.645983] [W] [thread 130775] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:03:18.645993] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.646007] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.646054] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.646073] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:03:18.646165] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 4[m
[36m[11:03:18.646180] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.646228] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.646338] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[11:03:18.646537] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.646556] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.646565] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.646589] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.646602] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.646654] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:03:18.646685] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.646702] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:03:18.646711] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:03:18.646771] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[11:03:18.646851] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.646869] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.646885] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[11:03:18.646907] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.646959] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.647028] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.647047] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:03:18.647098] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:03:18.647110] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:03:18.647141] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 4[m
[36m[11:03:18.647153] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.647165] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.647188] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.647200] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.647228] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.647240] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.647290] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.647302] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.647320] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.647401] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[11:03:18.647575] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.647596] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.647609] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[11:03:18.647619] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[11:03:18.647746] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.647797] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.647815] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.647852] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:03:18.647871] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.647885] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:03:18.647895] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:03:18.647949] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:03:18.647988] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.648003] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.648019] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[11:03:18.648038] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.648097] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.648174] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:03:18.648197] [W] [thread 130775] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:03:18.648207] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.648221] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.648269] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.648290] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:03:18.648379] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 5[m
[36m[11:03:18.648394] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.648406] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.648504] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[11:03:18.648679] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.648697] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.648705] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.648728] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.648740] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.648792] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:03:18.648823] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.648839] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:03:18.648849] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:03:18.648903] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[11:03:18.648950] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.648967] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.648983] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:03:18.649001] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.649048] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.649123] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.649142] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:03:18.649191] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:03:18.649205] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:03:18.649235] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 5[m
[36m[11:03:18.649247] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.649258] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.649279] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.649292] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.649321] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.649333] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.649380] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.649391] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.649409] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.649516] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[11:03:18.649687] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.649720] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.649737] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[11:03:18.649748] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[11:03:18.649870] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.649920] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.649937] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.649975] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:03:18.649994] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.650008] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:03:18.650017] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:03:18.650070] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:03:18.650109] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.650126] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.650142] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:03:18.650175] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.650263] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.650344] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:03:18.650368] [W] [thread 130775] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:03:18.650378] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.650393] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.650441] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.650461] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:03:18.650555] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 6[m
[36m[11:03:18.650570] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.650582] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.650675] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[11:03:18.650843] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.650860] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.650869] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.650892] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.650917] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.650971] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:03:18.651003] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.651019] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:03:18.651028] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:03:18.651082] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[11:03:18.651129] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.651146] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.651162] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:03:18.651181] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.651229] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.651294] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.651312] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:03:18.651362] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:03:18.651388] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:03:18.651423] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 6[m
[36m[11:03:18.651445] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.651459] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.651482] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.651500] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.651534] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.651546] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.651599] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.651610] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.651698] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.651777] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[11:03:18.651956] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.651977] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.651991] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[11:03:18.652012] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[11:03:18.652139] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.652189] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.652207] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.652246] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:03:18.652265] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.652280] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:03:18.652289] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:03:18.652359] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:03:18.652402] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.652425] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.652443] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:03:18.652464] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.652515] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.652581] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:03:18.652604] [W] [thread 130775] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:03:18.652614] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.652628] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.652675] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.652694] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:03:18.652784] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 7[m
[36m[11:03:18.652798] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.652810] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.652900] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[11:03:18.653085] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.653106] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.653115] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.653154] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.653167] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.653224] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:03:18.653258] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.653275] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:03:18.653284] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:03:18.653341] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[11:03:18.653390] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.653408] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.653423] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:03:18.653444] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.653497] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.653568] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.653588] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:03:18.653638] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:03:18.653650] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:03:18.653681] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[11:03:18.653693] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.653720] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.653745] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.653758] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.653790] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.653802] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.653854] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.653866] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.653884] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.653996] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[11:03:18.654176] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.654239] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.654260] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[11:03:18.654282] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[11:03:18.654418] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.654469] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.654486] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.654526] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:03:18.654546] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.654561] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:03:18.654570] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:03:18.654624] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:03:18.654664] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.654681] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.654697] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:03:18.654717] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.654763] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.654825] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:03:18.654851] [W] [thread 130775] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:03:18.654872] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.654887] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.654936] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.654956] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:03:18.655047] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 8[m
[36m[11:03:18.655062] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.655074] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.655174] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[11:03:18.655341] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.655359] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.655367] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.655390] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.655403] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.655451] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:03:18.655481] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.655498] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:03:18.655507] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:03:18.655562] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[11:03:18.655611] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.655628] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.655644] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:03:18.655663] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.655726] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.655801] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.655820] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:03:18.655873] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:03:18.655886] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:03:18.655917] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 8[m
[36m[11:03:18.655928] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.655940] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.655963] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.655982] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.656013] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.656025] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.656075] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.656096] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.656115] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.656180] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[11:03:18.656339] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.656359] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.656372] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[11:03:18.656382] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[11:03:18.656495] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.656544] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.656567] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.656601] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:03:18.656627] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.656641] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:03:18.656650] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:03:18.656705] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:03:18.656746] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.656763] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.656779] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:03:18.656799] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.656846] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.656908] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:03:18.656932] [W] [thread 130775] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:03:18.656941] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.656967] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.657018] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.657038] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:03:18.657128] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 9[m
[36m[11:03:18.657143] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.657155] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.657243] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[11:03:18.657398] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.657427] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.657436] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.657458] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.657471] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.657565] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:03:18.657600] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.657616] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:03:18.657625] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:03:18.657679] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[11:03:18.657729] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.657747] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.657763] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:03:18.657782] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.657831] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.657901] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.657920] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:03:18.657969] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:03:18.657981] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:03:18.658019] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(18) on execution node with id 9[m
[36m[11:03:18.658033] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.658045] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.658069] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.658081] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.658111] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.658123] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.658175] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.658223] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.658249] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.658369] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[11:03:18.658551] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.658574] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.658587] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:03:18.658597] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[11:03:18.658720] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.658771] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.658787] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.658823] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:03:18.658843] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.658858] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:03:18.658882] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:03:18.658942] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:03:18.658988] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.659005] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.659021] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:03:18.659043] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.659094] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.659174] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:03:18.659204] [W] [thread 130775] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:03:18.659214] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.659238] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.659292] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.659313] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:03:18.659409] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 10[m
[36m[11:03:18.659425] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.659437] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.659524] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[11:03:18.659682] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.659700] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.659708] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.659730] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.659741] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.659792] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:03:18.659835] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.659852] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:03:18.659861] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:03:18.659916] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[11:03:18.659968] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.659986] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.660002] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:03:18.660020] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.660069] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.660143] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.660164] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:03:18.660213] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:03:18.660226] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:03:18.660257] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 10[m
[36m[11:03:18.660269] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.660282] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.660304] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.660316] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.660346] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.660357] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.660407] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.660418] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.660436] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.660498] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[11:03:18.660657] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.660677] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.660690] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[11:03:18.660700] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[11:03:18.660812] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.660860] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.660875] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.660908] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:03:18.660926] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.660940] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:03:18.660949] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:03:18.661000] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[11:03:18.661054] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.661071] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.661086] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:03:18.661106] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.661152] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.661210] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:03:18.661238] [W] [thread 130775] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:03:18.661258] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.661273] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.661321] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.661340] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[11:03:18.661425] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 11[m
[36m[11:03:18.661440] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:03:18.661452] [W] [thread 130775] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:03:18.661576] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:03:18.661739] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[11:03:18.661763] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.661773] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.661796] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.661808] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.661856] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[11:03:18.661886] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.661902] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[11:03:18.661911] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[11:03:18.661960] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 11 to the query Id 1[m
[36m[11:03:18.662009] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.662025] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.662040] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[11:03:18.662059] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.662106] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.662183] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.662287] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[11:03:18.662347] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[11:03:18.662361] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[11:03:18.662394] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(22) on execution node with id 11[m
[36m[11:03:18.662418] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.662434] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.662461] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.662475] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.662508] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.662520] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.662574] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.662586] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.662605] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.662673] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[11:03:18.662841] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.662859] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.662885] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[11:03:18.662896] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[11:03:18.663011] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[11:03:18.663061] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.663077] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.663112] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[11:03:18.663131] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.663153] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[11:03:18.663164] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[11:03:18.663224] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[11:03:18.663266] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.663283] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.663309] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[11:03:18.663332] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.663384] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.663454] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:03:18.663492] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.663546] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.663559] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.663590] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(23) on execution node with id 1[m
[36m[11:03:18.663602] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.663614] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.663635] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.663669] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.663696] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.663708] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.663750] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.663761] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.663785] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.663856] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[11:03:18.664037] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664061] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.664088] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:03:18.664098] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[11:03:18.664193] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[11:03:18.664233] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664251] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.664275] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664289] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.664311] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664325] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.664347] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664360] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.664393] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664408] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.664430] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664443] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.664465] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664479] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.664500] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.664513] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.664541] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.664556] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.664589] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:03:18.664617] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.664633] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:03:18.664642] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:03:18.664695] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[11:03:18.664735] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.664753] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.664769] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:03:18.664800] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.664849] [D] [thread 130775] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:03:18.664922] [D] [thread 130775] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:03:18.664947] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.665003] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.665017] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.665050] [D] [thread 130775] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[11:03:18.665062] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.665074] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.665103] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.665126] [D] [thread 130775] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:03:18.665152] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.665164] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.665203] [D] [thread 130775] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:03:18.665214] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.665232] [D] [thread 130775] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:03:18.665296] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:03:18.665451] [D] [thread 130775] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:03:18.665471] [D] [thread 130775] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:03:18.665484] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.665508] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[11:03:18.665609] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(23) as root operator.[m
[36m[11:03:18.665650] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.665667] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.665700] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:03:18.665716] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.665739] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:03:18.665749] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:03:18.665800] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[11:03:18.665846] [D] [thread 130775] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:03:18.665863] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:03:18.665878] [I] [thread 130775] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:03:18.665898] [D] [thread 130775] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:03:18.665918] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.665934] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.665944] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.665953] [D] [thread 130775] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:03:18.665977] [D] [thread 130775] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[11:03:18.666021] [I] [thread 130775] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[11:03:18.666048] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.666086] [D] [thread 130775] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[11:03:18.666097] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.666108] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.666122] [D] [thread 130775] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[11:03:18.666142] [D] [thread 130775] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:03:18.666180] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:03:18.666270] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.666312] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.666366] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.666400] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:03:18.666412] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:03:18.666461] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.666487] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.666514] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:03:18.666527] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[11:03:18.666546] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.666666] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.666711] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.666747] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.666800] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.666886] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.666903] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.666930] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.666942] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.666949] [D] [thread 130775] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:03:18.667070] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:03:18.667151] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:03:18.667166] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:03:18.667187] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.667204] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.667247] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:03:18.667262] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[11:03:18.667407] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[11:03:18.667640] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[11:03:18.667722] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[11:03:18.667989] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[11:03:18.668094] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.32:35557 1::24::0::0}) as new root of the plan.[m
[36m[11:03:18.668110] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.668119] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.668204] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[11:03:18.668274] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:43017)}) as new root of the plan.[m
[36m[11:03:18.668383] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.668396] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.668419] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.668433] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.668490] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:03:18.668528] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.668544] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:03:18.668553] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:03:18.668613] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[11:03:18.668665] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:03:18.668680] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:03:18.668691] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:03:18.668705] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.668736] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:03:18.668752] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.668820] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.668842] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.668859] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.668870] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:03:18.668969] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[11:03:18.669012] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.669217] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.669237] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:03:18.669250] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:03:18.669260] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.669282] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:03:18.669312] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.669355] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:03:18.669370] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[11:03:18.669396] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.669506] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.669554] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.669595] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[11:03:18.669635] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.669703] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.669718] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.669743] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.669754] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.669762] [D] [thread 130775] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:03:18.669835] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:03:18.669903] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:03:18.669930] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:03:18.669948] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.669963] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.669995] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:03:18.670008] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[11:03:18.670077] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[11:03:18.670267] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[11:03:18.670347] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.670394] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.670408] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:03:18.670543] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[11:03:18.670635] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:41671 1::30::0::0}) as new root of the plan.[m
[36m[11:03:18.670651] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.670659] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.670751] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[11:03:18.670825] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:43017)}) as new root of the plan.[m
[36m[11:03:18.670938] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.670952] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.670993] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.671014] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.671076] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:03:18.671101] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.671117] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:03:18.671125] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:03:18.671186] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:03:18.671215] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:03:18.671228] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:03:18.671239] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:03:18.671249] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.671298] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:03:18.671317] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.671388] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.671407] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.671424] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.671436] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:03:18.671586] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[11:03:18.671638] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.671809] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.671829] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:03:18.671841] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:03:18.671852] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.671867] [D] [thread 130775] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:03:18.671895] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.671937] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:03:18.671951] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[11:03:18.671977] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.672102] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.672159] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.672204] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[11:03:18.672246] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.672315] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.672330] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.672355] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.672366] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.672374] [D] [thread 130775] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:03:18.672450] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:03:18.672536] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:03:18.672552] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:03:18.672571] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.672585] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.672614] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:03:18.672627] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[11:03:18.672698] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[11:03:18.672845] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[11:03:18.672917] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.672961] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.672973] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:03:18.673100] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[11:03:18.673176] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:37905 1::36::0::0}) as new root of the plan.[m
[36m[11:03:18.673191] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.673199] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.673321] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[11:03:18.673393] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:43017)}) as new root of the plan.[m
[36m[11:03:18.673550] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.673566] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.673595] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.673611] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.673658] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:03:18.673688] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.673705] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:03:18.673714] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:03:18.673775] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:03:18.673806] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:03:18.673820] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:03:18.673831] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:03:18.673840] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.673888] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:03:18.673909] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.673961] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.673984] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.674001] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.674013] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:03:18.674118] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[11:03:18.674164] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.674380] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.674405] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:03:18.674428] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:03:18.674442] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.674458] [D] [thread 130775] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:03:18.674486] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.674530] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:03:18.674544] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[11:03:18.674570] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.674682] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.674739] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.674783] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[11:03:18.674822] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.674889] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.674904] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.674930] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.674942] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.674949] [D] [thread 130775] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:03:18.675021] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:03:18.675086] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:03:18.675099] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:03:18.675131] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.675147] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.675177] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:03:18.675190] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[11:03:18.675261] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[11:03:18.675411] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[11:03:18.675479] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.675522] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.675534] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:03:18.675661] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[11:03:18.675735] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:46767 1::42::0::0}) as new root of the plan.[m
[36m[11:03:18.675761] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.675770] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.675845] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[11:03:18.675964] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:43017)}) as new root of the plan.[m
[36m[11:03:18.676078] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.676091] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.676130] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.676147] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.676195] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:03:18.676214] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.676228] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:03:18.676237] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:03:18.676298] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:03:18.676329] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:03:18.676343] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:03:18.676354] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:03:18.676363] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.676394] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:03:18.676410] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.676462] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.676475] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.676489] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.676501] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:03:18.676597] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[11:03:18.676642] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.676794] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:03:18.676812] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:03:18.676824] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:03:18.676834] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.676846] [D] [thread 130775] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:03:18.676872] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.676910] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:03:18.676922] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[11:03:18.676948] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.677070] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.677127] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.677171] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[11:03:18.677210] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.677274] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.677288] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.677313] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.677324] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.677331] [D] [thread 130775] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:03:18.677401] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:03:18.677466] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:03:18.677491] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:03:18.677510] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.677524] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.677555] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:03:18.677568] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[11:03:18.677635] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[11:03:18.677778] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[11:03:18.677845] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[11:03:18.678020] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[11:03:18.678102] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.36:43211 1::48::0::0}) as new root of the plan.[m
[36m[11:03:18.678116] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.678124] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.678274] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[11:03:18.678353] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:43017)}) as new root of the plan.[m
[36m[11:03:18.678461] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.678474] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.678500] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.678514] [D] [thread 130775] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:03:18.678570] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:03:18.678604] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.678620] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:03:18.678629] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:03:18.678687] [D] [thread 130775] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[11:03:18.678738] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:03:18.678751] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:03:18.678762] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:03:18.678782] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.678810] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:03:18.678828] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.678880] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.678892] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.678919] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.678933] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:03:18.679038] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[11:03:18.679083] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.679253] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.679272] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:03:18.679284] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:03:18.679293] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.679323] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:03:18.679353] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.679395] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[11:03:18.679408] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[11:03:18.679434] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.679542] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.679598] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.679642] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[11:03:18.679682] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.679746] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.679761] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.679786] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.679798] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.679805] [D] [thread 130775] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:03:18.679876] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:03:18.679941] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:03:18.679954] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:03:18.679971] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.679986] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.680010] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[11:03:18.680023] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[11:03:18.680089] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[11:03:18.680245] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(18) as root operator.[m
[36m[11:03:18.680318] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.680361] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.680374] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:03:18.680544] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[11:03:18.680630] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.37:36183 1::54::0::0}) as new root of the plan.[m
[36m[11:03:18.680644] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.680653] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.680727] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[11:03:18.680798] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:43017)}) as new root of the plan.[m
[36m[11:03:18.680907] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.680920] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.680943] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.680959] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.681011] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:03:18.681032] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.681048] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:03:18.681057] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:03:18.681119] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:03:18.681149] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:03:18.681163] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:03:18.681175] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[11:03:18.681184] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.681218] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:03:18.681236] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.681286] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.681299] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.681321] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.681336] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:03:18.681432] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[11:03:18.681476] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.681646] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.681665] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:03:18.681677] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:03:18.681687] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.681701] [D] [thread 130775] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:03:18.681727] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.681768] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[11:03:18.681787] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[11:03:18.681816] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.681923] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.681983] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.682029] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 7 source operators.[m
[36m[11:03:18.682071] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.682136] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.682150] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.682175] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.682186] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.682233] [D] [thread 130775] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:03:18.682313] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:03:18.682385] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:03:18.682398] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:03:18.682417] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.682432] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.682460] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[11:03:18.682486] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[11:03:18.682600] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[11:03:18.682758] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[11:03:18.682832] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.682874] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.682886] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:03:18.683016] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[11:03:18.683104] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.38:33265 1::60::0::0}) as new root of the plan.[m
[36m[11:03:18.683120] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.683128] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.683203] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[11:03:18.683275] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:43017)}) as new root of the plan.[m
[36m[11:03:18.683384] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.683403] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.683432] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.683449] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.683495] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:03:18.683513] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.683537] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:03:18.683547] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:03:18.683610] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:03:18.683641] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:03:18.683654] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:03:18.683665] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[11:03:18.683675] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.683709] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:03:18.683726] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.683775] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.683787] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.683801] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.683823] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:03:18.683913] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[36m[11:03:18.683954] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.684124] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.684142] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:03:18.684153] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:03:18.684173] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.684188] [D] [thread 130775] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:03:18.684217] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.684256] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[11:03:18.684270] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[11:03:18.684302] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.684412] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.684473] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.684565] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[11:03:18.684616] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.684687] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.684701] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.684727] [D] [thread 130775] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:03:18.684745] [D] [thread 130775] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:03:18.684753] [D] [thread 130775] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:03:18.684825] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[11:03:18.684892] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[11:03:18.684905] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[11:03:18.684923] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.684939] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.684965] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[11:03:18.684978] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[11:03:18.685045] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[11:03:18.685188] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(22) as root operator.[m
[36m[11:03:18.685256] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.685312] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.685327] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:03:18.685446] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[11:03:18.685523] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.39:40977 1::66::0::0}) as new root of the plan.[m
[36m[11:03:18.685536] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.685544] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:18.685616] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[11:03:18.685682] [D] [thread 130775] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(71: {NetworkSinkDescriptor(partition=1::69::0::0;nodeLocation=tcp://192.168.2.11:43017)}) as new root of the plan.[m
[36m[11:03:18.685787] [D] [thread 130775] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:18.685800] [D] [thread 130775] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:18.685825] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.685841] [D] [thread 130775] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:03:18.685885] [D] [thread 130775] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:03:18.685901] [D] [thread 130775] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:03:18.685916] [W] [thread 130775] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:03:18.685925] [D] [thread 130775] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:03:18.685984] [D] [thread 130775] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:03:18.686015] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[11:03:18.686028] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[11:03:18.686039] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  11[m
[36m[11:03:18.686048] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.686078] [D] [thread 130775] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:03:18.686096] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.686144] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:03:18.686156] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:03:18.686170] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.686181] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:03:18.686320] [I] [thread 130775] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[11:03:18.686372] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[11:03:18.686600] [D] [thread 130775] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:03:18.686622] [D] [thread 130775] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:03:18.686636] [D] [thread 130775] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:03:18.686646] [D] [thread 130775] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:03:18.686661] [D] [thread 130775] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:03:18.686695] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.686737] [D] [thread 130775] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:03:18.686751] [D] [thread 130775] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:03:18.686778] [D] [thread 130775] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:03:18.686846] [D] [thread 130775] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[11:03:18.686870] [D] [thread 130775] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:03:18.686892] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.686908] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.687222] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.687294] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.687346] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 9 source operators.[m
[36m[11:03:18.687397] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.687423] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.688388] [D] [thread 130775] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[11:03:18.688727] [I] [thread 130775] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[11:03:18.688834] [I] [thread 130775] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[11:03:18.688935] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.688987] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.689004] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.689162] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.689203] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.689235] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.689274] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.689296] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.689787] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.689838] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.689854] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.689995] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.690031] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.690060] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.690095] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.690116] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.690669] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.690719] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.690734] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.690872] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.690908] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.690935] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.690969] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.690990] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.691484] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.691530] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.691551] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.691716] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.691755] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.691783] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.691814] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.691835] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.692308] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.692349] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.692363] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.692473] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.692505] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.692529] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.692556] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.692590] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.693056] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.693094] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.693108] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.693247] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.693283] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.693316] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.693350] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.693378] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.693867] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.693920] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.693936] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.694067] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.694105] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.694132] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.694162] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.694183] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.694732] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.694777] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.694793] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.694928] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.694964] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.694991] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.695025] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.695045] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.695529] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.695568] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.695583] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.695698] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.695733] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.695758] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.695787] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.695808] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.696088] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.696207] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.696241] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.696268] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.696294] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.696315] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.696575] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.696677] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.696704] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.696728] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.696751] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.696771] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.697044] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.697141] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.697169] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.697192] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.697215] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.697234] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.697493] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.697533] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.697548] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.697644] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.697684] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.697707] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.697742] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.697764] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.698022] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.698126] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.698153] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.698179] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.698284] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.698315] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.698606] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.698714] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.698745] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.698770] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.698793] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.698812] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.699064] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.699160] [D] [thread 130775] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:03:18.699202] [D] [thread 130775] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:03:18.699229] [D] [thread 130775] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:03:18.699261] [D] [thread 130775] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:03:18.699285] [D] [thread 130775] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:03:18.699551] [D] [thread 130775] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:03:18.699612] [D] [thread 130775] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[11:03:18.701919] [D] [thread 130775] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:1)
|  SINK(4: {FileSinkDescriptor()})
|    CENTRALWINDOW(23)
|      WATERMARKASSIGNER(6)
|        SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::27::0::0})
|      SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::33::0::0})
|      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::39::0::0})
|      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::45::0::0})
|      SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::51::0::0})
|      SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::57::0::0})
|      SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::63::0::0})
|      SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::69::0::0})
|--ExecutionNode(id:2, ip:192.168.2.30, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:43017)})
|  |    SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.32:35557 1::24::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:43017)})
|  |    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:41671 1::30::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:43017)})
|  |    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:37905 1::36::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:43017)})
|  |    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:46767 1::42::0::0})
|  |--ExecutionNode(id:4, ip:192.168.2.32, topologyId:4)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.30:40663)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:5, ip:192.168.2.33, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:40663)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:6, ip:192.168.2.34, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:40663)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:7, ip:192.168.2.35, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:40663)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|--ExecutionNode(id:3, ip:192.168.2.31, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:14)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:43017)})
|  |    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.36:43211 1::48::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:15)
|  |  SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:43017)})
|  |    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.37:36183 1::54::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:16)
|  |  SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:43017)})
|  |    SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.38:33265 1::60::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:17)
|  |  SINK(71: {NetworkSinkDescriptor(partition=1::69::0::0;nodeLocation=tcp://192.168.2.11:43017)})
|  |    SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.39:40977 1::66::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.36, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:37189)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:37189)})
|  |  |    WATERMARKASSIGNER(18)
|  |  |      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:37189)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:11, ip:192.168.2.39, topologyId:11)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  |  SINK(68: {NetworkSinkDescriptor(partition=1::66::0::0;nodeLocation=tcp://192.168.2.31:37189)})
|  |  |    WATERMARKASSIGNER(22)
|  |  |      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.702058] [D] [thread 130775] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[11:03:18.702096] [D] [thread 130775] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:03:18.702408] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.702439] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.702658] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.702679] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.702735] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.702749] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.702786] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.702798] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.702835] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.702847] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.702882] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.702894] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.702929] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.702942] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.702978] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.702990] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.703027] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.703053] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.703098] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.703113] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.703200] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.703213] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.703425] [D] [thread 130775] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[11:03:18.703457] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[11:03:18.703467] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.703478] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.703695] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:43561[m
[36m[11:03:18.703739] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:43561 queryId=1 querySubPlanId = 1[m
[36m[11:03:18.704215] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::27::0::0})
    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::33::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::39::0::0})
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::45::0::0})
    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::51::0::0})
    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::57::0::0})
    SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::63::0::0})
    SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::69::0::0})
[m
[36m[11:03:18.704255] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.704486] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.708191] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[11:03:18.709004] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.709317] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[11:03:18.709464] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.710065] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[11:03:18.711179] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.711479] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[11:03:18.711594] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.711636] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[11:03:18.711695] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.712316] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.712789] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.713003] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[11:03:18.713127] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.713643] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.713731] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.714081] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.714599] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.714943] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.715381] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.716068] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.716432] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.716953] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.717652] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.718165] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.718580] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.719081] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.719746] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::27::0::0}[m
[36m[11:03:18.720021] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.720505] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.721172] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.721643] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.721961] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.722446] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.723130] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::33::0::0}[m
[36m[11:03:18.723378] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.723854] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.724450] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.724937] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.725291] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.725743] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.726433] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::39::0::0}[m
[36m[11:03:18.726693] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.727177] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.727733] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.728211] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.728540] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.728985] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.729587] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::45::0::0}[m
[36m[11:03:18.729843] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.730355] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.730904] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.731376] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.731708] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.732153] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.732760] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::51::0::0}[m
[36m[11:03:18.733014] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.733493] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.734041] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.734553] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.734899] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.735348] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.735940] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::57::0::0}[m
[36m[11:03:18.736194] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.736673] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.737249] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.737727] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.738058] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.738541] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.739135] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::63::0::0}[m
[36m[11:03:18.739390] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.739869] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.740422] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.740898] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.741230] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.741675] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.742310] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::69::0::0}[m
[36m[11:03:18.742561] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.743048] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.743604] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.744077] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.744407] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.744851] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.772397] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[11:03:18.772480] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.772533] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.772666] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:40925[m
[36m[11:03:18.772697] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:40925 queryId=1 querySubPlanId = 2[m
[36m[11:03:18.772906] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.30:40663)})
  WATERMARKASSIGNER(8)
    SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.772945] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.773103] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.773565] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.774067] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.774452] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.774909] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.775448] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.775551] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.775842] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.776312] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.776643] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.777090] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.777541] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.777799] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.778324] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.778992] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.779495] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.779840] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.780300] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.789658] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[11:03:18.789782] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.789804] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.789930] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:46215[m
[36m[11:03:18.789960] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:46215 queryId=1 querySubPlanId = 3[m
[36m[11:03:18.790159] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:40663)})
  WATERMARKASSIGNER(10)
    SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.790247] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.790423] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.790821] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.791318] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.791678] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.792132] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.792682] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.792789] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.793081] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.793555] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.793898] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.794392] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.794871] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.795140] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.795617] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.796109] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.796583] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.796918] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.797379] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.806724] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[11:03:18.806801] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.806833] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.806953] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:41467[m
[36m[11:03:18.806982] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:41467 queryId=1 querySubPlanId = 4[m
[36m[11:03:18.807180] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:40663)})
  WATERMARKASSIGNER(12)
    SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.807214] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.807372] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.807746] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.808244] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.808597] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.809051] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.809588] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.809695] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.809988] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.810534] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.810889] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.811341] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.811814] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.812078] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.812550] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.813035] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.813508] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.813848] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.814350] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.823673] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[11:03:18.823800] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.823822] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.823947] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:46859[m
[36m[11:03:18.823977] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:46859 queryId=1 querySubPlanId = 5[m
[36m[11:03:18.824176] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:40663)})
  WATERMARKASSIGNER(14)
    SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.824215] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.824374] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.824774] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.825270] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.825633] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.826091] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.826699] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.826813] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.827109] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.827587] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.827926] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.828379] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.828847] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.829112] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.829590] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.830088] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.830607] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.830956] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.831415] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.840820] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[11:03:18.840904] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.840969] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.841093] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.36:36103[m
[36m[11:03:18.841124] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.36:36103 queryId=1 querySubPlanId = 6[m
[36m[11:03:18.841324] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:37189)})
  WATERMARKASSIGNER(16)
    SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.841362] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.841518] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.841894] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.842446] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.842813] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.843271] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.843827] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.843933] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.844221] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.844738] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.845085] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.845538] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.846018] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.846341] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.846826] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.847321] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.847787] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.848131] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.848591] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.857899] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[11:03:18.858024] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.858046] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.858172] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:34913[m
[36m[11:03:18.858229] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:34913 queryId=1 querySubPlanId = 7[m
[36m[11:03:18.858439] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:37189)})
  WATERMARKASSIGNER(18)
    SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.858496] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.858658] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.859054] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.859563] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.859985] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.860526] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.861221] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.861360] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.861682] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.862185] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.862587] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.863054] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.863555] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.863822] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.864306] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.864802] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.865270] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.865607] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.866066] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.875396] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[11:03:18.875480] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.875512] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.875633] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:43573[m
[36m[11:03:18.875662] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:43573 queryId=1 querySubPlanId = 8[m
[36m[11:03:18.875858] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:37189)})
  WATERMARKASSIGNER(20)
    SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.875893] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.876047] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.876430] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.876928] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.877284] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.877737] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.878383] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.878494] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.878786] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.879267] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.879618] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.880072] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.880557] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.880821] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.881339] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.881841] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.882359] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.882712] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.883178] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.892620] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=11[m
[36m[11:03:18.892746] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.892768] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.892890] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.39:34743[m
[36m[11:03:18.892920] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.39:34743 queryId=1 querySubPlanId = 9[m
[36m[11:03:18.893114] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(68: {NetworkSinkDescriptor(partition=1::66::0::0;nodeLocation=tcp://192.168.2.31:37189)})
  WATERMARKASSIGNER(22)
    SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[11:03:18.893156] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.893316] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.893721] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.894268] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.894635] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.895094] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.895657] [D] [thread 130775] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:18.895765] [D] [thread 130775] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:18.896055] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.896529] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.896870] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.897319] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.897801] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[11:03:18.898071] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.898601] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.899125] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.899597] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.899939] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.900400] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.909778] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[11:03:18.909863] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.909894] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.910018] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:44461[m
[36m[11:03:18.910055] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:44461 queryId=1 querySubPlanId = 10[m
[36m[11:03:18.910314] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:43017)})
  SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.32:35557 1::24::0::0})
[m
[36m[11:03:18.910403] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.910575] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.910953] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.911452] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.911816] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.912276] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.912810] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:35557 1::24::0::0}[m
[36m[11:03:18.913065] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.913543] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.914120] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.914648] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.915006] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.915475] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.923754] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:44461 queryId=1 querySubPlanId = 11[m
[36m[11:03:18.924055] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:43017)})
  SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:41671 1::30::0::0})
[m
[36m[11:03:18.924115] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.924299] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.924728] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.925279] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.925710] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.926269] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.926859] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:41671 1::30::0::0}[m
[36m[11:03:18.927119] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.927599] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.928141] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.928635] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.928986] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.929441] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.937593] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:44461 queryId=1 querySubPlanId = 12[m
[36m[11:03:18.937873] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:43017)})
  SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:37905 1::36::0::0})
[m
[36m[11:03:18.937920] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.938078] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.938519] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.939024] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.939382] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.939836] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.940390] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:37905 1::36::0::0}[m
[36m[11:03:18.940646] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.941125] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.941653] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.942124] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.942502] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.942965] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.951159] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:44461 queryId=1 querySubPlanId = 13[m
[36m[11:03:18.951448] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:43017)})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:46767 1::42::0::0})
[m
[36m[11:03:18.951506] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.951681] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.952096] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.952604] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.952963] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.953414] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.953955] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:46767 1::42::0::0}[m
[36m[11:03:18.954248] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.954739] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.955283] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.955763] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.956111] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.956565] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.964883] [D] [thread 130775] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[11:03:18.964967] [D] [thread 130775] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:03:18.964998] [D] [thread 130775] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:03:18.965116] [D] [thread 130775] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:41517[m
[36m[11:03:18.965147] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:41517 queryId=1 querySubPlanId = 14[m
[36m[11:03:18.965341] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:43017)})
  SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.36:43211 1::48::0::0})
[m
[36m[11:03:18.965374] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.965523] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.965928] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.966489] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.966855] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.967311] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.967852] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.36:43211 1::48::0::0}[m
[36m[11:03:18.968106] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.968579] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.969107] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.969632] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.970069] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.970660] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.979289] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:41517 queryId=1 querySubPlanId = 15[m
[36m[11:03:18.979566] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:43017)})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.37:36183 1::54::0::0})
[m
[36m[11:03:18.979609] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.979766] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.980159] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.980650] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.981009] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.981465] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.982017] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:36183 1::54::0::0}[m
[36m[11:03:18.982307] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.982801] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.983339] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.983824] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.984175] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.984638] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.992806] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:41517 queryId=1 querySubPlanId = 16[m
[36m[11:03:18.993085] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:43017)})
  SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.38:33265 1::60::0::0})
[m
[36m[11:03:18.993132] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:18.993293] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:18.993685] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.994184] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.994601] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.995063] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.995610] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:33265 1::60::0::0}[m
[36m[11:03:18.995870] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.996355] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.996891] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.997370] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:18.997724] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:18.998218] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:19.006437] [D] [thread 130775] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:41517 queryId=1 querySubPlanId = 17[m
[36m[11:03:19.006703] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(71: {NetworkSinkDescriptor(partition=1::69::0::0;nodeLocation=tcp://192.168.2.11:43017)})
  SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.39:40977 1::66::0::0})
[m
[36m[11:03:19.006751] [D] [thread 130775] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:03:19.006914] [D] [thread 130775] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:03:19.007293] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.007788] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:19.008149] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.008613] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:19.009155] [D] [thread 130775] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.39:40977 1::66::0::0}[m
[36m[11:03:19.009414] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.009896] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:19.010471] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.010956] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:19.011317] [D] [thread 130775] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.011781] [D] [thread 130775] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:03:19.020038] [D] [thread 130775] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 11 queues[m
[32m[11:03:19.049863] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[11:03:19.050016] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.050681] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.050763] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.051187] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.054085] [D] [thread 130787] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:03:19.054362] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.055792] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.056036] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[11:03:19.056108] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.057532] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.057598] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.058943] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.062991] [D] [thread 130787] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:03:19.063179] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.064607] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.064841] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[11:03:19.064912] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.066351] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.066417] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.067731] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.071805] [D] [thread 130787] [OperatorSerializationUtil.cpp:1516] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as LogicalSourceDescriptor[m
[36m[11:03:19.072100] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.073490] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.073611] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[11:03:19.073668] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.075057] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.075153] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.076486] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.080564] [D] [thread 130787] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:03:19.080758] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.082218] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.082404] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[11:03:19.082552] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.083925] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.083987] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.085303] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.089447] [D] [thread 130787] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:03:19.089644] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.091166] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.091347] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[11:03:19.091438] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.092817] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.092881] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.094224] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.097248] [D] [thread 130787] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.097360] [D] [thread 130787] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.097510] [D] [thread 130787] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.097544] [D] [thread 130787] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.097988] [D] [thread 130787] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[11:03:19.098058] [D] [thread 130787] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.098072] [D] [thread 130787] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.098106] [D] [thread 130787] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.098119] [D] [thread 130787] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.098364] [D] [thread 130787] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[11:03:19.098903] [D] [thread 130787] [OperatorSerializationUtil.cpp:783] [deserializeWindowOperator] OperatorSerializationUtil::deserializeWindowOperator: SerializableOperator_WindowDetails_DistributionCharacteristic_Distribution_Complete[m
[36m[11:03:19.098997] [D] [thread 130787] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.099011] [D] [thread 130787] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.099053] [D] [thread 130787] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.099070] [D] [thread 130787] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.099344] [D] [thread 130787] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[32m[11:03:19.099595] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[11:03:19.099817] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.100347] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.100409] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.101748] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.104066] [D] [thread 130787] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.104126] [D] [thread 130787] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.104187] [D] [thread 130787] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.104204] [D] [thread 130787] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:03:19.104387] [D] [thread 130787] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[11:03:19.104416] [D] [thread 130787] [OperatorSerializationUtil.cpp:1885] [deserializeWatermarkStrategyDescriptor] OperatorSerializationUtil:: deserialized field name WrappedNetworkMetrics$timestamp[m
[32m[11:03:19.104635] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[11:03:19.104753] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.106225] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.106291] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.107614] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.111186] [D] [thread 130787] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:03:19.111385] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.112793] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.112974] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[11:03:19.113061] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.114503] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.114565] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.115893] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.120023] [D] [thread 130787] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:03:19.120212] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.121625] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.121808] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 81[m
[36m[11:03:19.121898] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.123348] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.123413] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.124735] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.128819] [D] [thread 130787] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:03:19.129051] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.130513] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.130697] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 82[m
[36m[11:03:19.130784] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.132189] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.132252] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.133571] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.137658] [D] [thread 130787] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:03:19.137849] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.139352] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:03:19.139563] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 83[m
[36m[11:03:19.139652] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.141069] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.141132] [D] [thread 130787] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:03:19.142498] [D] [thread 130787] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:03:19.147200] [D] [thread 130787] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(72: {FileSinkDescriptor()})
  CENTRALWINDOW(78)
    WATERMARKASSIGNER(79)
      SOURCE(75,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    SOURCE(81,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::27::0::0})
    SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::33::0::0})
    SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::39::0::0})
    SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::45::0::0})
    SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::51::0::0})
    SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::57::0::0})
    SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::63::0::0})
    SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::69::0::0})
[m
[32m[11:03:19.147282] [I] [thread 130787] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 1 [m
[32m[11:03:19.147410] [I] [thread 130787] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
[36m[11:03:19.147738] [D] [thread 130787] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 1[m
Dumping queryPlan: [36m[11:03:19.147863] [D] [thread 130787] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-1-2023-11-01 11:03:19 - 1. LogicalQueryPlan[m
SINK(72: {FileSinkDescriptor()})
  CENTRALWINDOW(78)
    WATERMARKASSIGNER(79)
      SOURCE(75,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    SOURCE(81,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::27::0::0})
    SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::33::0::0})
    SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::39::0::0})
    SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::45::0::0})
    SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::51::0::0})
    SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::57::0::0})
    SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::63::0::0})
    SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::69::0::0})

[32m[11:03:19.148714] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 84[m
[36m[11:03:19.148914] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:03:19.148963] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.148974] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[11:03:19.149135] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.149186] [D] [thread 130787] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:19.149315] [D] [thread 130787] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:19.149362] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.149567] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 85[m
[32m[11:03:19.149696] [I] [thread 130787] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:03:19.149718] [I] [thread 130787] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:03:19.149739] [I] [thread 130787] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:03:19.149757] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.149781] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.149838] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.149850] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.149876] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.149923] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.149958] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.149970] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.149979] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.150133] [I] [thread 130787] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[36m[11:03:19.151329] [D] [thread 130787] [DefaultPhysicalOperatorProvider.cpp:853] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan before
PhysicalSinkOperator
  CENTRALWINDOW(78)
    PhysicalMultiplexOperator
      WATERMARKASSIGNER(79)
        SOURCE(75,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
      SOURCE(81,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::27::0::0})
      SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::33::0::0})
      SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::39::0::0})
      SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::45::0::0})
      SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::51::0::0})
      SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::57::0::0})
      SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::63::0::0})
      SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::69::0::0})
[m
[36m[11:03:19.151510] [D] [thread 130787] [DefaultPhysicalOperatorProvider.cpp:784] [lowerThreadLocalWindowOperator] Create Thread local window aggregation[m
[32m[11:03:19.154719] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 86[m
[32m[11:03:19.155001] [I] [thread 130787] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:03:19.155038] [I] [thread 130787] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:03:19.155047] [I] [thread 130787] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:03:19.155065] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.155210] [I] [thread 130787] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.155514] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 87[m
[32m[11:03:19.155652] [I] [thread 130787] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:03:19.155687] [I] [thread 130787] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:03:19.155711] [I] [thread 130787] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:03:19.155725] [I] [thread 130787] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:03:19.155853] [I] [thread 130787] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.156058] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 88[m
[36m[11:03:19.156196] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.156246] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.156293] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.156303] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.156316] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.156423] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.156452] [D] [thread 130787] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:19.156515] [D] [thread 130787] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:19.156583] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[11:03:19.157115] [D] [thread 130787] [DefaultPhysicalOperatorProvider.cpp:937] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan after
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          WATERMARKASSIGNER(79)
            SOURCE(75,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
          SOURCE(81,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::27::0::0})
          SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::33::0::0})
          SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::39::0::0})
          SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.30:40663 1::45::0::0})
          SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::51::0::0})
          SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::57::0::0})
          SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::63::0::0})
          SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:37189 1::69::0::0})
[m
[36m[11:03:19.157179] [D] [thread 130787] [WindowOperatorHandler.hpp:95] [~WindowOperatorHandler] ~WindowOperatorHandler() 0[m
[32m[11:03:19.157374] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 89[m
[36m[11:03:19.157489] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.157540] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.157668] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.157692] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.157718] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.157849] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.157867] [D] [thread 130787] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:03:19.157993] [D] [thread 130787] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:03:19.158055] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.158297] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 90[m
[36m[11:03:19.158512] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.158554] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.158601] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.158610] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.158622] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.158717] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.158735] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.158855] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[11:03:19.158982] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.159002] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.159057] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.159101] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.159118] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.159265] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.159298] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.159392] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[11:03:19.159521] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.159608] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.159664] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.159676] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.159687] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.159833] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.159854] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.159915] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 93[m
[36m[11:03:19.160057] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.160079] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.160180] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.160193] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.160217] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.160360] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.160458] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.160555] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[11:03:19.160648] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.160740] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.160813] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.160825] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.160910] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.161078] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.161123] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.161223] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[11:03:19.161336] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.161407] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.161468] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.161478] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.161550] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.161708] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.161729] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.161836] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 96[m
[36m[11:03:19.161928] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.161974] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.162043] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.162055] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.162066] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.162162] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.162224] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.162329] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[11:03:19.162458] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.162482] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.162591] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.162603] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.162626] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.162940] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.162992] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:03:19.163131] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 98[m
[36m[11:03:19.163274] [D] [thread 130787] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:03:19.163318] [D] [thread 130787] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:03:19.163424] [I] [thread 130787] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:03:19.163449] [I] [thread 130787] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:03:19.163464] [I] [thread 130787] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:03:19.163588] [D] [thread 130787] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:03:19.163606] [D] [thread 130787] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
Dumping queryPlan: [36m[11:03:19.163921] [D] [thread 130787] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-1-2023-11-01 11:03:19 - 2. PhysicalQueryPlan[m
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          PhysicalWatermarkAssignmentOperator
            PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator

[36m[11:03:19.164218] [D] [thread 130787] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 1[m
[32m[11:03:19.164688] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 84[m
[36m[11:03:19.164930] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[11:03:19.164966] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.164978] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.165455] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 99[m
[36m[11:03:19.165556] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedTumblingWindowSink as new root of the plan.[m
[36m[11:03:19.165572] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.165579] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.165698] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 100[m
[36m[11:03:19.165782] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedSliceMergingOperator as new root of the plan.[m
[36m[11:03:19.165919] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.165957] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.166296] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 101[m
[36m[11:03:19.166452] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedThreadLocalPreAggregationOperator as new root of the plan.[m
[36m[11:03:19.166495] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.166505] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.166713] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 89[m
[36m[11:03:19.166844] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalWatermarkAssignmentOperator as new root of the plan.[m
[36m[11:03:19.166913] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.166926] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.167099] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 90[m
[36m[11:03:19.167357] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.167389] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.167400] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.167556] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[11:03:19.167728] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.167770] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.167819] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.167965] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[11:03:19.168141] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.168203] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.168215] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.168323] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 93[m
[36m[11:03:19.168449] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.168507] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.168519] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.168679] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[11:03:19.168869] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.168930] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.168940] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.169053] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[11:03:19.169179] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.169248] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.169259] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.169425] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 96[m
[36m[11:03:19.169590] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.169633] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.169683] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.169822] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[11:03:19.170009] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.170042] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.170053] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:03:19.170251] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 98[m
[36m[11:03:19.170382] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:03:19.170461] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
Dumping pipelineQueryPlan: [36m[11:03:19.170474] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:19.170568] [D] [thread 130787] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-1-2023-11-01 11:03:19 - 3. AfterPipelinedQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 1, no. pipelines: 13
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 6, 7, 8, 9, 10, 11, 12, 13
- Queryplan: PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: OperatorPipelineType, Successors: 3, Predecessors: 5
- Queryplan: PhysicalWatermarkAssignmentOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 4, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 10, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 11, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 12, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 13, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[11:03:19.171402] [D] [thread 130787] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[11:03:19.171451] [D] [thread 130787] [Node.cpp:458] [getAllLeafNodes] Node: Inserting leaf node to the collection[m
[36m[11:03:19.171500] [D] [thread 130787] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[11:03:19.171620] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 102[m
[32m[11:03:19.171974] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 103[m
[36m[11:03:19.172078] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalScanOperator as new root of the plan.[m
[36m[11:03:19.172135] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.172147] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:19.172161] [D] [thread 130787] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[11:03:19.172186] [D] [thread 130787] [Node.cpp:452] [getAllLeafNodes] Node: found no children. Returning itself as leaf.[m
[36m[11:03:19.172208] [D] [thread 130787] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[11:03:19.172277] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 104[m
[36m[11:03:19.172328] [D] [thread 130787] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalScanOperator as new root of the plan.[m
[36m[11:03:19.172447] [D] [thread 130787] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:03:19.172462] [D] [thread 130787] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:03:19.172481] [D] [thread 130787] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[11:03:19.172490] [D] [thread 130787] [Node.cpp:452] [getAllLeafNodes] Node: found no children. Returning itself as leaf.[m
Dumping pipelineQueryPlan: [36m[11:03:19.172519] [D] [thread 130787] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[11:03:19.172650] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 105[m
[36m[11:03:19.172859] [D] [thread 130787] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-1-2023-11-01 11:03:19 - 4. AfterAddScanAndEmitPhase[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 1, no. pipelines: 13
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalEmitOperator

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 6, 7, 8, 9, 10, 11, 12, 13
- Queryplan: PhysicalScanOperator
  PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: OperatorPipelineType, Successors: 3, Predecessors: 5
- Queryplan: PhysicalScanOperator
  PhysicalWatermarkAssignmentOperator
    PhysicalEmitOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 4, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 10, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 11, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 12, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 13, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[11:03:19.173850] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedSliceMergingOperator[m
[32m[11:03:19.173924] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedSliceMergingOperator to NautilusOperator.[m
[32m[11:03:19.174183] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[11:03:19.174589] [I] [thread 130787] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[32m[11:03:19.175819] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedTumblingWindowSink[m
[32m[11:03:19.175912] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedTumblingWindowSink to NautilusOperator.[m
[32m[11:03:19.175953] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalEmitOperator[m
[32m[11:03:19.175969] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalEmitOperator to NautilusOperator.[m
[36m[11:03:19.176845] [D] [thread 130787] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalKeyedSliceMergingOperator as root operator.[m
[32m[11:03:19.177019] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5836716186103210354[m
[32m[11:03:19.177441] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalScanOperator[m
[32m[11:03:19.177500] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalScanOperator to NautilusOperator.[m
[32m[11:03:19.178135] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedThreadLocalPreAggregationOperator[m
[32m[11:03:19.178218] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedThreadLocalPreAggregationOperator to NautilusOperator.[m
[32m[11:03:19.178289] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[11:03:19.178388] [I] [thread 130787] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[32m[11:03:19.178888] [I] [thread 130787] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[11:03:19.179622] [D] [thread 130787] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalScanOperator as root operator.[m
[32m[11:03:19.179777] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 281472914951128[m
[32m[11:03:19.180108] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalScanOperator[m
[32m[11:03:19.180161] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalScanOperator to NautilusOperator.[m
[32m[11:03:19.180702] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalWatermarkAssignmentOperator[m
[32m[11:03:19.180754] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalWatermarkAssignmentOperator to NautilusOperator.[m
[32m[11:03:19.180878] [I] [thread 130787] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[32m[11:03:19.181197] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalEmitOperator[m
[32m[11:03:19.181249] [I] [thread 130787] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalEmitOperator to NautilusOperator.[m
[36m[11:03:19.181789] [D] [thread 130787] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalScanOperator as root operator.[m
[32m[11:03:19.181887] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 281472914951128[m
[36m[11:03:19.182175] [D] [thread 130787] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 1[m
[32m[11:03:19.182776] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 106[m
[32m[11:03:19.183240] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 107[m
[32m[11:03:19.183464] [I] [thread 130787] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 108[m
[36m[11:03:19.183987] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:308] [createSourceDescriptor] PhysicalSourceConfig: create Actual source descriptor with physical source: PhysicalSource Name: WrappedNetworkMetrics_phLogicalSource NameWrappedNetworkMetricsSource TypeMonitoringSource Type => {
waitTimeInMs:1000metricCollectorType:NETWORK_COLLECTOR
} MONITORING_SOURCE [m
[36m[11:03:19.184354] [D] [thread 130787] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  84[m
[32m[11:03:19.184491] [I] [thread 130787] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[11:03:19.185311] [D] [thread 130787] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out[m
[36m[11:03:19.186620] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:291] [processOperatorPipeline] Adding current pipeline: 3 as a predecessor to its child pipeline: 2[m
[36m[11:03:19.187166] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:291] [processOperatorPipeline] Adding current pipeline: 4 as a predecessor to its child pipeline: 3[m
[32m[11:03:19.187344] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:238] [createDataSource] ConvertLogicalToPhysicalSource: Creating monitoring source[m
[32m[11:03:19.187494] [I] [thread 130787] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:03:19.188264] [I] [thread 130787] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.188946] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  90 : Init Data Source with schema  [m
[32m[11:03:19.189368] [I] [thread 130787] [MonitoringSource.cpp:54] [MonitoringSource] MonitoringSources: Created with wait time 1000 and schema:node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)
[m
[36m[11:03:19.189486] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 90 as a predecessor to its child pipeline: 4[m
[32m[11:03:19.189929] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:03:19.190547] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  27 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.191137] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 27 as a predecessor to its child pipeline: 3[m
[32m[11:03:19.191533] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:03:19.191991] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.192533] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 33 as a predecessor to its child pipeline: 3[m
[32m[11:03:19.192822] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:03:19.193307] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  39 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.193832] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 39 as a predecessor to its child pipeline: 3[m
[32m[11:03:19.194020] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:03:19.194552] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  45 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.195090] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 45 as a predecessor to its child pipeline: 3[m
[32m[11:03:19.195360] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:03:19.195891] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.196367] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 51 as a predecessor to its child pipeline: 3[m
[32m[11:03:19.196554] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:03:19.197046] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  57 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.197701] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 57 as a predecessor to its child pipeline: 3[m
[32m[11:03:19.197903] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:03:19.198484] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  63 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.199001] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 63 as a predecessor to its child pipeline: 3[m
[32m[11:03:19.199194] [I] [thread 130787] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:03:19.199692] [D] [thread 130787] [DataSource.cpp:75] [DataSource] DataSource  69 : Init Data Source with schema  WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[11:03:19.200245] [D] [thread 130787] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 69 as a predecessor to its child pipeline: 3[m
[36m[11:03:19.201361] [D] [thread 130787] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 1[m
[36m[11:03:19.201598] [D] [thread 130787] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  1  as a singleton[m
[36m[11:03:19.201633] [D] [thread 130787] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=1[m
[36m[11:03:19.201654] [D] [thread 130787] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 9[m
[36m[11:03:19.201703] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  90  not found. Creating new element with with qep [m
[36m[11:03:19.202078] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  27  not found. Creating new element with with qep [m
[36m[11:03:19.202220] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[11:03:19.202249] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  39  not found. Creating new element with with qep [m
[36m[11:03:19.202271] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  45  not found. Creating new element with with qep [m
[36m[11:03:19.202290] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[11:03:19.202309] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  57  not found. Creating new element with with qep [m
[36m[11:03:19.202329] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  63  not found. Creating new element with with qep [m
[36m[11:03:19.202382] [D] [thread 130787] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  69  not found. Creating new element with with qep [m
[36m[11:03:19.202436] [D] [thread 130787] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 1  pair queryId= 1  subplanId= 1[m
2023-11-01 11:03:19.202 setup: queryId=1, querySubPlanId=1; 
[36m[11:03:19.203024] [D] [thread 130787] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=1[m
[36m[11:03:19.209953] [D] [thread 130787] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:03:19.218299] [D] [thread 130787] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff381de8c0[m
[36m[11:03:19.219525] [D] [thread 130787] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:03:19.229514] [D] [thread 130787] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:03:19.231347] [D] [thread 130787] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:03:19.247442] [D] [thread 130787] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:03:19.249046] [D] [thread 130787] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:03:19.254236] [D] [thread 130787] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:03:19.255648] [D] [thread 130787] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:03:19.258832] [D] [thread 130787] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:03:19.259278] [D] [thread 130787] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff381fcf00[m
[36m[11:03:19.259416] [D] [thread 130787] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff38201030[m
[36m[11:03:19.260435] [D] [thread 130787] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:03:19.261988] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:19.262360] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:19.266565] [D] [thread 130787] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:03:19.266970] [D] [thread 130787] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff38212f00[m
[36m[11:03:19.267092] [D] [thread 130787] [TraceContext.cpp:231] [apply] Iterations: 6[m
[36m[11:03:19.284561] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block5($0_125,$0_124,$0_4,$0_5,$0_19,$0_18,$0_15,$0_9,$0_22,$0_21,$0_20,$0_12,$0_6,)	[m
[36m[11:03:19.286784] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block16($1_116,$1_117,$1_118,$1_119,$1_120,$1_121,$1_122,$1_123,$1_124,$1_125,$1_4,$1_11,$1_0,$1_8,$1_3,$1_5,$1_126,$1_7,$1_127,$1_128,)	[m
[36m[11:03:19.288270] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 3 JMP	$0_0	Block5($3_103,$3_104,$3_105,$3_106,$3_107,$3_108,$3_109,$3_110,$3_1,$3_111,$3_113,$3_114,$3_115,)	[m
[36m[11:03:19.290105] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block25($4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,$4_115,$4_116,$4_117,$4_118,$4_119,$4_120,$4_121,$4_122,$4_123,$4_2,$4_124,$4_6,$4_125,$4_126,$4_127,)	[m
[36m[11:03:19.293693] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 10 JMP	$0_0	Block22($10_127,$10_128,$10_129,$10_130,$10_131,$10_132,$10_133,$10_134,$10_135,$10_136,$10_137,$10_138,$10_139,$10_140,$10_141,$10_142,$10_143,$10_144,$10_145,$10_146,$10_147,$10_148,)	[m
[36m[11:03:19.296001] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 12 JMP	$0_0	Block23($12_111,$12_112,$12_113,$12_114,$12_115,$12_116,$12_117,$12_118,$12_119,$12_120,$12_121,$12_122,$12_123,$12_124,$12_125,$12_126,$12_128,$12_129,$12_130,$12_131,)	[m
[36m[11:03:19.297744] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 14 JMP	$0_0	Block24($14_105,$14_106,$14_107,$14_108,$14_109,$14_110,$14_111,$14_112,$14_113,$14_114,$14_115,$14_116,$14_117,$14_3,$14_119,$14_0,$14_120,$14_5,$14_121,$14_122,)	[m
[36m[11:03:19.298951] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 24 JMP	$0_0	Block16($24_103,$24_104,$24_105,$24_106,$24_107,$24_108,$24_109,$24_110,$24_111,$24_112,$14_8,$24_113,$24_115,$24_116,$24_117,$24_118,$24_119,$24_120,$24_121,$24_122,)	[m
[36m[11:03:19.300530] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 15 JMP	$0_0	Block24($15_101,$15_102,$15_103,$15_104,$15_105,$15_106,$15_107,$15_108,$15_109,$15_110,$15_111,$15_112,$15_113,$15_114,$15_115,$15_116,$15_117,$15_118,$15_119,$15_120,)	[m
[36m[11:03:19.302310] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 13 JMP	$0_0	Block23($13_101,$13_102,$13_103,$13_104,$13_105,$13_106,$13_107,$13_108,$13_109,$13_110,$13_111,$13_112,$13_113,$13_114,$13_115,$13_116,$13_117,$13_118,$13_119,$13_120,)	[m
[36m[11:03:19.304355] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block25($11_104,$11_105,$11_106,$11_107,$11_108,$11_109,$11_110,$11_111,$11_112,$11_113,$11_114,$11_115,$11_116,$11_117,$11_118,$11_119,$11_120,$11_121,$11_2,$11_123,$11_124,$11_125,)	[m
[36m[11:03:19.306074] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 9 JMP	$0_0	Block22($9_101,$9_102,$9_103,$9_104,$9_105,$9_106,$9_107,$9_108,$9_109,$9_110,$9_111,$9_112,$9_113,$9_114,$9_115,$9_116,$9_117,$9_118,$9_119,$9_120,$9_121,$9_122,)	[m
[36m[11:03:19.308981] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 2 JMP	$0_0	Block21($2_118,$2_119,$2_120,$2_123,$2_2,$2_124,$2_121,$2_122,$2_9,$2_16,$2_5,$2_13,$2_8,$2_10,$2_124,$2_126,$2_127,$2_12,)	[m
[36m[11:03:19.313670] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 17 JMP	$0_0	Block26($17_109,$17_110,$17_5,$17_111,$17_112,$17_113,$17_9,$17_114,$17_115,$17_116,$17_117,$17_118,$17_119,$17_120,$17_123,$17_124,$17_7,$17_125,)	[m
[36m[11:03:19.315469] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 19 JMP	$0_0	Block27($19_105,$19_106,$19_107,$19_108,$19_109,$19_110,$19_111,$19_112,$19_113,$19_114,$19_115,$19_3,$19_117,$19_0,$19_118,$19_119,$19_120,$19_5,)	[m
[36m[11:03:19.316617] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 27 JMP	$0_0	Block21($27_103,$27_104,$27_105,$27_106,$27_107,$27_108,$27_109,$27_110,$19_8,$27_111,$27_113,$27_114,$27_115,$27_116,$27_117,$27_118,$27_119,$27_120,)	[m
[36m[11:03:19.318090] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 20 JMP	$0_0	Block27($20_101,$20_102,$20_103,$20_104,$20_105,$20_106,$20_107,$20_108,$20_109,$20_110,$20_111,$20_112,$20_113,$20_114,$20_115,$20_116,$20_117,$20_118,)	[m
[36m[11:03:19.319792] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 18 JMP	$0_0	Block26($18_101,$18_102,$18_103,$18_104,$18_105,$18_106,$18_107,$18_108,$18_109,$18_110,$18_111,$18_112,$18_113,$18_114,$18_115,$18_116,$18_117,$18_118,)	[m
[36m[11:03:19.455278] [D] [thread 130787] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[11:03:19.456565] [I] [thread 130787] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 251.472 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Trace Generation:	77.1365 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_IR Generation:	39.6358 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Compilation:	134.699 ms[m
[36m[11:03:19.542072] [D] [thread 130787] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff38040120[m
[36m[11:03:19.548637] [D] [thread 130787] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:03:19.554045] [D] [thread 130787] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:03:19.554630] [D] [thread 130787] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff38053200[m
[36m[11:03:19.554729] [D] [thread 130787] [TraceContext.cpp:231] [apply] Iterations: 3[m
[36m[11:03:19.561922] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block9($0_116,$0_115,$0_6,$0_8,$0_4,$0_16,$0_14,$0_13,$0_15,)	[m
[36m[11:03:19.565847] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block12($1_165,$1_166,$1_167,$1_168,$1_169,$1_170,$1_171,$1_38,$1_5,$1_61,$1_63,$1_65,$1_172,$1_173,)	[m
[36m[11:03:19.568829] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 5 JMP	$0_0	Block10($5_101,$5_102,$5_103,$5_104,$5_105,$5_106,$5_107,$5_108,$5_109,$5_110,$5_111,$5_112,$5_113,$5_114,)	[m
[36m[11:03:19.571046] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 7 JMP	$0_0	Block11($7_116,$7_117,$7_118,$7_119,$7_120,$7_121,$7_122,$7_123,$7_0,$7_127,$7_128,)	[m
[36m[11:03:19.572844] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block9($11_117,$11_118,$11_119,$11_120,$11_121,$7_34,$11_122,$11_126,$11_127,)	[m
[36m[11:03:19.575032] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 8 JMP	$0_0	Block11($8_101,$8_102,$8_103,$8_104,$8_105,$8_106,$8_107,$8_108,$8_109,$8_110,$8_111,)	[m
[36m[11:03:19.579800] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 6 JMP	$0_0	Block12($6_104,$6_105,$6_106,$6_107,$6_108,$6_109,$6_110,$6_111,$6_112,$6_113,$6_114,$6_2,$6_115,$6_116,)	[m
[36m[11:03:19.584549] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block10($4_101,$4_102,$4_103,$4_104,$4_105,$4_106,$4_107,$4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,)	[m
[36m[11:03:19.637577] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:03:19.637731] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:03:19.637861] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.637963] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:03:19.638257] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:03:19.643164] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[11:03:19.643284] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[33m[1m[11:03:19.643340] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.643380] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[11:03:19.643525] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[36m[11:03:19.650732] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:03:19.650841] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:03:19.650894] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.650929] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:03:19.651072] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:03:19.655426] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[11:03:19.655535] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[33m[1m[11:03:19.655589] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.655625] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[11:03:19.655766] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[36m[11:03:19.661224] [D] [thread 130787] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[11:03:19.662341] [I] [thread 130787] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 149.105 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Trace Generation:	47.8769 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_IR Generation:	30.4836 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Compilation:	70.7447 ms[m
[36m[11:03:19.672823] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:03:19.672957] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:03:19.673015] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.673055] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:03:19.673202] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:03:19.677505] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[11:03:19.677610] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[33m[1m[11:03:19.677660] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.677696] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[11:03:19.677833] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[36m[11:03:19.714893] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:03:19.714988] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:03:19.715036] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.715069] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:03:19.715196] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:03:19.719706] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[11:03:19.719798] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[33m[1m[11:03:19.719847] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.719883] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[11:03:19.719997] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[36m[11:03:19.731800] [D] [thread 130787] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff38267760[m
[36m[11:03:19.738444] [D] [thread 130787] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:03:19.738759] [D] [thread 130787] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff381f6880[m
[36m[11:03:19.738840] [D] [thread 130787] [TraceContext.cpp:231] [apply] Iterations: 2[m
[36m[11:03:19.746069] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block7($0_116,$0_115,$0_10,$0_8,$0_6,$0_11,$0_13,$0_16,$0_14,$0_4,$0_12,$0_15,)	[m
[36m[11:03:19.749897] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 3 JMP	$0_0	Block8($3_101,$3_102,$3_103,$3_104,$3_127,$3_105,$3_106,$3_107,$3_108,$3_109,$3_110,$3_111,$3_112,$3_113,$3_114,$3_115,$3_116,$3_117,$3_118,$3_119,$3_120,$3_121,$3_122,$3_123,$3_124,$3_125,$3_126,$3_127,$3_128,$3_129,$3_130,)	[m
[36m[11:03:19.754589] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 5 JMP	$0_0	Block9($5_109,$5_110,$5_5,$5_111,$5_112,$5_9,$5_113,$5_114,$5_115,$5_117,$5_7,$5_119,)	[m
[36m[11:03:19.755421] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 9 JMP	$0_0	Block7($9_103,$9_104,$9_105,$9_106,$9_107,$9_108,$9_109,$5_12,$9_110,$9_112,$9_113,$9_114,)	[m
[36m[11:03:19.756552] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 6 JMP	$0_0	Block9($6_101,$6_102,$6_103,$6_104,$6_105,$6_106,$6_107,$6_108,$6_109,$6_110,$6_111,$6_112,)	[m
[36m[11:03:19.758586] [D] [thread 130787] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block8($4_101,$4_102,$4_103,$4_104,$4_105,$4_106,$4_107,$4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,$4_115,$4_116,$4_117,$4_118,$4_119,$4_120,$4_121,$4_122,$4_123,$4_124,$4_125,$4_126,$4_127,$4_128,$4_129,$4_130,$4_131,)	[m
[36m[11:03:19.797218] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:03:19.797328] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:03:19.797381] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.797417] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:03:19.797594] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:03:19.801929] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[11:03:19.802033] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[33m[1m[11:03:19.802085] [W] [thread 130784] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:03:19.802122] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[11:03:19.802313] [W] [thread 130784] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[36m[11:03:19.832217] [D] [thread 130787] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[11:03:19.833270] [I] [thread 130787] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 142.537 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-4_Trace Generation:	54.7016 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-4_IR Generation:	15.6296 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-4_Compilation:	72.2059 ms[m
2023-11-01 11:03:19.865 start: queryId=1, querySubPlanId=1; 
[36m[11:03:19.865526] [D] [thread 130787] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=1[m
[36m[11:03:19.865616] [D] [thread 130787] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=1 pipe=2[m
[36m[11:03:19.865776] [D] [thread 130787] [KeyedSliceMergingHandler.cpp:33] [start] start GlobalSliceMergingHandler[m
[36m[11:03:19.865859] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.866380] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.867107] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 1 stage id: 2[m
[36m[11:03:19.867427] [D] [thread 130787] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 2[m
[36m[11:03:19.867769] [D] [thread 130787] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=1 pipe=3[m
[36m[11:03:19.867945] [D] [thread 130787] [AbstractSlicePreAggregationHandler.cpp:110] [start] start AbstractSlicePreAggregationHandler[m
[36m[11:03:19.868017] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.868232] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.868687] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:03:19.869085] [D] [thread 130787] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:03:19.869262] [D] [thread 130787] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=1 pipe=4[m
[36m[11:03:19.869377] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.869587] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.869932] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 4 belonging to query id: 1 stage id: 4[m
[36m[11:03:19.870030] [D] [thread 130787] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 4[m
[36m[11:03:19.870551] [D] [thread 130787] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::27::0::0 from 192.168.2.30[m
[36m[11:03:19.870870] [D] [thread 130787] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::27::0::0=1[m
[36m[11:03:19.870964] [D] [thread 130787] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff381d1450  started successfully[m
[36m[11:03:19.871018] [D] [thread 130787] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.30[m
[36m[11:03:19.871095] [D] [thread 130787] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[11:03:19.871112] [D] [thread 130787] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff381d1f50  started successfully[m
[36m[11:03:19.871170] [D] [thread 130787] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::39::0::0 from 192.168.2.30[m
[36m[11:03:19.871229] [D] [thread 130787] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::39::0::0=1[m
[36m[11:03:19.871299] [D] [thread 130787] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff381d2740  started successfully[m
[36m[11:03:19.871351] [D] [thread 130787] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::45::0::0 from 192.168.2.30[m
[36m[11:03:19.871431] [D] [thread 130787] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::45::0::0=1[m
[36m[11:03:19.871448] [D] [thread 130787] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff381d2f30  started successfully[m
[36m[11:03:19.871533] [D] [thread 130787] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[11:03:19.871587] [D] [thread 130787] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[11:03:19.871604] [D] [thread 130787] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff381d3ba0  started successfully[m
[36m[11:03:19.871672] [D] [thread 130787] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::57::0::0 from 192.168.2.31[m
[36m[11:03:19.871734] [D] [thread 130787] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::57::0::0=1[m
[36m[11:03:19.871782] [D] [thread 130787] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff381d4810  started successfully[m
[36m[11:03:19.871815] [D] [thread 130787] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::63::0::0 from 192.168.2.31[m
[36m[11:03:19.871905] [D] [thread 130787] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::63::0::0=1[m
[36m[11:03:19.871924] [D] [thread 130787] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff381d5bc0  started successfully[m
[36m[11:03:19.871970] [D] [thread 130787] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::69::0::0 from 192.168.2.31[m
[36m[11:03:19.872048] [D] [thread 130787] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::69::0::0=1[m
[36m[11:03:19.872066] [D] [thread 130787] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff381d7490  started successfully[m
[36m[11:03:19.872163] [D] [thread 130787] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.872293] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.872464] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.872898] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:03:19.873028] [D] [thread 130787] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[11:03:19.873180] [D] [thread 130787] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.873217] [D] [thread 130787] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff381d1450  started successfully[m
[36m[11:03:19.873266] [D] [thread 130787] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.873403] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.873591] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.873945] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:03:19.874044] [D] [thread 130787] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[11:03:19.874219] [D] [thread 130787] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.874272] [D] [thread 130787] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff381d1f50  started successfully[m
[36m[11:03:19.874315] [D] [thread 130787] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.874395] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.874572] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.874919] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:03:19.875024] [D] [thread 130787] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[11:03:19.875159] [D] [thread 130787] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.875194] [D] [thread 130787] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff381d2740  started successfully[m
[36m[11:03:19.875241] [D] [thread 130787] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.875303] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.875471] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.875841] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:03:19.875940] [D] [thread 130787] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[11:03:19.876071] [D] [thread 130787] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.876106] [D] [thread 130787] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff381d2f30  started successfully[m
[36m[11:03:19.876156] [D] [thread 130787] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.876287] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.876464] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.876806] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:03:19.876906] [D] [thread 130787] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[11:03:19.877050] [D] [thread 130787] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.877073] [D] [thread 130787] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff381d3ba0  started successfully[m
[36m[11:03:19.877108] [D] [thread 130787] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.877182] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.877360] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.877730] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[11:03:19.877830] [D] [thread 130787] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[11:03:19.877962] [D] [thread 130787] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.877997] [D] [thread 130787] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff381d4810  started successfully[m
[36m[11:03:19.878087] [D] [thread 130787] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.878164] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.878359] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.878710] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[11:03:19.878807] [D] [thread 130787] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[11:03:19.878943] [D] [thread 130787] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.878979] [D] [thread 130787] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff381d5bc0  started successfully[m
[36m[11:03:19.879027] [D] [thread 130787] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.879102] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.879271] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Initialize[m
[36m[11:03:19.879611] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::69::0::0[m
[36m[11:03:19.879705] [D] [thread 130787] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::69::0::0[m
[36m[11:03:19.879838] [D] [thread 130787] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0[m
[36m[11:03:19.879873] [D] [thread 130787] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff381d7490  started successfully[m
[36m[11:03:19.880002] [D] [thread 130787] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[11:03:19.880468] [D] [thread 130787] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  1  succeeded[m
[36m[11:03:19.880670] [D] [thread 130787] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[11:03:19.959891] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:03:19.960058] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[36m[11:03:19.960201] [D] [thread 130784] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=0) REGISTERED[m
[36m[11:03:19.964346] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[11:03:19.964487] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[36m[11:03:19.964598] [D] [thread 130784] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=0) REGISTERED[m
[36m[11:03:19.972008] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[11:03:19.972140] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[36m[11:03:19.972237] [D] [thread 130784] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=0) REGISTERED[m
[36m[11:03:19.977814] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::69::0::0[m
[32m[11:03:19.977962] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::69::0::0(threadId=0) Data[m
[36m[11:03:19.978064] [D] [thread 130784] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::69::0::0(threadId=0) REGISTERED[m
[36m[11:03:19.982272] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[11:03:19.982392] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[36m[11:03:19.982474] [D] [thread 130784] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=0) REGISTERED[m
[36m[11:03:19.985832] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::63::0::0[m
[32m[11:03:19.985940] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=0) Data[m
[36m[11:03:19.986012] [D] [thread 130784] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=0) REGISTERED[m
[36m[11:03:19.990183] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[11:03:19.990495] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[11:03:19.990717] [D] [thread 130784] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[11:03:19.992967] [D] [thread 130784] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[11:03:19.993061] [I] [thread 130784] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[11:03:19.993125] [D] [thread 130784] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[11:03:20.263614] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:20.689030] [D] [thread 130775] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[11:03:20.689190] [D] [thread 130775] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[11:03:20.689947] [D] [thread 130775] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[11:03:20.690147] [D] [thread 130775] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[11:03:20.690178] [D] [thread 130775] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[11:03:20.690535] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[11:03:20.690645] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:43561 queryId=1[m
[36m[11:03:20.695921] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.32[m
[36m[11:03:20.696017] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:40925 queryId=1[m
[36m[11:03:20.700432] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.33[m
[36m[11:03:20.700634] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:46215 queryId=1[m
[36m[11:03:20.705550] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.34[m
[36m[11:03:20.705645] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:41467 queryId=1[m
[36m[11:03:20.710406] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.35[m
[36m[11:03:20.710494] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:46859 queryId=1[m
[36m[11:03:20.715600] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.36[m
[36m[11:03:20.715754] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.36:36103 queryId=1[m
[36m[11:03:20.720423] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[11:03:20.720512] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:34913 queryId=1[m
[36m[11:03:20.725782] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[11:03:20.725872] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:43573 queryId=1[m
[36m[11:03:20.730434] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=11 and IP=192.168.2.39[m
[36m[11:03:20.730526] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.39:34743 queryId=1[m
[36m[11:03:20.736076] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.30[m
[36m[11:03:20.736228] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:44461 queryId=1[m
[36m[11:03:20.740841] [D] [thread 130775] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.31[m
[36m[11:03:20.740976] [D] [thread 130775] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:41517 queryId=1[m
[36m[11:03:20.746240] [D] [thread 130775] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 11 queues[m
[36m[11:03:20.801129] [D] [thread 130831] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[11:03:20.801227] [D] [thread 130831] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[11:03:20.801331] [D] [thread 130831] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  1   1[m
[36m[11:03:20.801627] [D] [thread 130831] [QueryManagerLifecycle.cpp:198] [startQuery] AbstractQueryManager: start source  0xffff381d0b40  str= MonitoringSource(SCHEMA(node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)))[m
[36m[11:03:20.801646] [D] [thread 130831] [DataSource.cpp:129] [start] DataSource  90 : start source[m
[36m[11:03:20.801697] [D] [thread 130831] [DataSource.cpp:139] [start] DataSource 90: Spawn thread[m
[33m[1m[11:03:20.801910] [W] [thread 130854] [DataSource.cpp:157] [operator()] Use default affinity for source[m
[36m[11:03:20.802120] [D] [thread 130831] [QueryManagerLifecycle.cpp:202] [startQuery] AbstractQueryManager: source  0xffff381d0b40  started successfully[m
[36m[11:03:20.802124] [D] [thread 130854] [DataSource.cpp:414] [runningRoutineWithGatheringInterval] DataSource 90: Running Data Source of type=MONITORING_SOURCE interval=0[m
[36m[11:03:20.802177] [D] [thread 130854] [DataSource.cpp:419] [runningRoutineWithGatheringInterval] DataSource: the user specify to produce 18446744073709551615 buffers[m
[36m[11:03:20.802307] [D] [thread 130831] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1698836600802[m
[36m[11:03:20.802332] [D] [thread 130831] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  1  succeeded[m
[36m[11:03:20.802355] [D] [thread 130831] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[11:03:20.822525] [D] [thread 130775] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[11:03:20.822618] [D] [thread 130775] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[11:03:20.823277] [I] [thread 130775] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[11:03:20.823439] [D] [thread 130775] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:03:20.828054] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836600000-1698836601000[m
[36m[11:03:20.829123] [D] [thread 130785] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1698836600829[m
[36m[11:03:21.081305] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:21.081849] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:21.114103] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836601000-1698836602000[m
[36m[11:03:22.083085] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:22.150664] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836602000-1698836603000[m
[36m[11:03:22.284397] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:22.284967] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:22.285963] [D] [thread 130859] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:22.286088] [I] [thread 130859] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:22.286110] [I] [thread 130859] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:22.286355] [I] [thread 130859] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:22.286384] [I] [thread 130859] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:22.504447] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:22.505131] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:22.828685] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836600000-1698836601000 [m
[36m[11:03:22.829865] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836600000-1698836601000-1[m
[36m[11:03:22.830004] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836600000-1698836601000[m
[36m[11:03:22.830167] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836600000-1698836601000[m
[36m[11:03:22.830399] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:22.836028] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836600000,1698836601000,5,735835732,1698836602830
1698836600000,1698836601000,6,5845115195,1698836602830
1698836600000,1698836601000,7,26897842321,1698836602830
1698836600000,1698836601000,4,2129261323,1698836602830
1698836600000,1698836601000,8,16371795020,1698836602830
1698836600000,1698836601000,9,299527622,1698836602830
1698836600000,1698836601000,11,317582145,1698836602830
1698836600000,1698836601000,10,326758578,1698836602830
1698836600000,1698836601000,1,36168066,1698836602830
[m
[36m[11:03:23.125878] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836603000-1698836604000[m
[36m[11:03:23.506372] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:23.845725] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836601000-1698836602000 [m
[36m[11:03:23.846640] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836601000-1698836602000-2[m
[36m[11:03:23.846742] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836601000-1698836602000[m
[36m[11:03:23.846811] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836601000-1698836602000[m
[36m[11:03:23.846925] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:23.846960] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:23.850050] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836601000,1698836602000,10,326759935,1698836603846
1698836601000,1698836602000,5,735837355,1698836603846
1698836601000,1698836602000,6,5845116868,1698836603846
1698836601000,1698836602000,4,2129262960,1698836603846
1698836601000,1698836602000,7,26897843734,1698836603846
1698836601000,1698836602000,8,16371796459,1698836603846
1698836601000,1698836602000,9,299529022,1698836603846
1698836601000,1698836602000,11,317583825,1698836603846
1698836601000,1698836602000,1,36171861,1698836603846
[m
[36m[11:03:24.132125] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836604000-1698836605000[m
[36m[11:03:24.507708] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:24.517839] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:24.518149] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:24.519458] [D] [thread 130864] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:24.519551] [I] [thread 130864] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:24.519570] [I] [thread 130864] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:24.519686] [I] [thread 130864] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:24.519699] [I] [thread 130864] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:24.730782] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:24.731111] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:24.862342] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836602000-1698836603000 [m
[36m[11:03:24.863179] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836602000-1698836603000-3[m
[36m[11:03:24.863253] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836602000-1698836603000[m
[36m[11:03:24.863311] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836602000-1698836603000[m
[36m[11:03:24.863418] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:24.863446] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:24.866810] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836602000,1698836603000,4,2129265411,1698836604863
1698836602000,1698836603000,5,735839905,1698836604863
1698836602000,1698836603000,6,5845119424,1698836604863
1698836602000,1698836603000,8,16371799054,1698836604863
1698836602000,1698836603000,7,26897846352,1698836604863
1698836602000,1698836603000,9,299531735,1698836604863
1698836602000,1698836603000,11,317586447,1698836604863
1698836602000,1698836603000,10,326762784,1698836604863
1698836602000,1698836603000,1,36177416,1698836604863
[m
[36m[11:03:25.126987] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836605000-1698836606000[m
[36m[11:03:25.732320] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:25.879835] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836603000-1698836604000 [m
[36m[11:03:25.880730] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836603000-1698836604000-4[m
[36m[11:03:25.880843] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836603000-1698836604000[m
[36m[11:03:25.880917] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836603000-1698836604000[m
[36m[11:03:25.881046] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:25.881080] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:25.884341] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836603000,1698836604000,4,2129267771,1698836605881
1698836603000,1698836604000,5,735842106,1698836605881
1698836603000,1698836604000,8,16371801244,1698836605881
1698836603000,1698836604000,6,5845121605,1698836605881
1698836603000,1698836604000,11,317588711,1698836605881
1698836603000,1698836604000,7,26897848530,1698836605881
1698836603000,1698836604000,9,299533872,1698836605881
1698836603000,1698836604000,10,326764960,1698836605881
1698836603000,1698836604000,1,36181569,1698836605881
[m
[36m[11:03:26.118082] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836606000-1698836607000[m
[36m[11:03:26.733630] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:26.765769] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:26.766098] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:26.767760] [D] [thread 130870] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:26.767860] [I] [thread 130870] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:26.767878] [I] [thread 130870] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:26.767994] [I] [thread 130870] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:26.768007] [I] [thread 130870] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:26.897943] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836604000-1698836605000 [m
[36m[11:03:26.898853] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836604000-1698836605000-5[m
[36m[11:03:26.898970] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836604000-1698836605000[m
[36m[11:03:26.899044] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836604000-1698836605000[m
[36m[11:03:26.899163] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:26.899196] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:26.902646] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836604000,1698836605000,11,317591393,1698836606899
1698836604000,1698836605000,5,735844819,1698836606899
1698836604000,1698836605000,6,5845124356,1698836606899
1698836604000,1698836605000,7,26897851199,1698836606899
1698836604000,1698836605000,9,299536473,1698836606899
1698836604000,1698836605000,8,16371803909,1698836606899
1698836604000,1698836605000,10,326767512,1698836606899
1698836604000,1698836605000,4,2129270555,1698836606899
1698836604000,1698836605000,1,36187319,1698836606899
[m
[36m[11:03:26.930689] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:26.931003] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:27.133180] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836607000-1698836608000[m
[36m[11:03:27.914731] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836605000-1698836606000 [m
[36m[11:03:27.915596] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836605000-1698836606000-6[m
[36m[11:03:27.915695] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836605000-1698836606000[m
[36m[11:03:27.915764] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836605000-1698836606000[m
[36m[11:03:27.915880] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:27.915915] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:27.919312] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836605000,1698836606000,9,299538865,1698836607915
1698836605000,1698836606000,5,735846970,1698836607915
1698836605000,1698836606000,10,326769862,1698836607915
1698836605000,1698836606000,8,16371806139,1698836607915
1698836605000,1698836606000,7,26897853438,1698836607915
1698836605000,1698836606000,6,5845126509,1698836607915
1698836605000,1698836606000,4,2129272686,1698836607915
1698836605000,1698836606000,11,317593877,1698836607915
1698836605000,1698836606000,1,36191393,1698836607915
[m
[36m[11:03:27.932154] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:28.119575] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836608000-1698836609000[m
[36m[11:03:28.929914] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836606000-1698836607000 [m
[36m[11:03:28.930706] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836606000-1698836607000-7[m
[36m[11:03:28.930797] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836606000-1698836607000[m
[36m[11:03:28.930856] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836606000-1698836607000[m
[36m[11:03:28.930945] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:28.930965] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:28.933277] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836606000,1698836607000,5,735849721,1698836608930
1698836606000,1698836607000,10,326772406,1698836608930
1698836606000,1698836607000,8,16371808647,1698836608930
1698836606000,1698836607000,7,26897855978,1698836608930
1698836606000,1698836607000,6,5845129141,1698836608930
1698836606000,1698836607000,4,2129275336,1698836608930
1698836606000,1698836607000,11,317596241,1698836608930
1698836606000,1698836607000,9,299541426,1698836608930
1698836606000,1698836607000,1,36196657,1698836608930
[m
[36m[11:03:28.933490] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:29.034345] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:29.034688] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:29.035701] [D] [thread 130875] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:29.035796] [I] [thread 130875] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:29.035815] [I] [thread 130875] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:29.035933] [I] [thread 130875] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:29.035948] [I] [thread 130875] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:29.122428] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836609000-1698836610000[m
[36m[11:03:29.225107] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:29.225469] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:29.946962] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836607000-1698836608000 [m
[36m[11:03:29.947897] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836607000-1698836608000-8[m
[36m[11:03:29.948021] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836607000-1698836608000[m
[36m[11:03:29.948104] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836607000-1698836608000[m
[36m[11:03:29.948239] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:29.948277] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:29.952220] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836607000,1698836608000,8,16371810962,1698836609948
1698836607000,1698836608000,4,2129277502,1698836609948
1698836607000,1698836608000,11,317598871,1698836609948
1698836607000,1698836608000,7,26897858304,1698836609948
1698836607000,1698836608000,6,5845131399,1698836609948
1698836607000,1698836608000,9,299543860,1698836609948
1698836607000,1698836608000,10,326775001,1698836609948
1698836607000,1698836608000,5,735852091,1698836609948
1698836607000,1698836608000,1,36201345,1698836609948
[m
[36m[11:03:30.115572] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836610000-1698836611000[m
[36m[11:03:30.226479] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:30.962678] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836608000-1698836609000 [m
[36m[11:03:30.963633] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836608000-1698836609000-9[m
[36m[11:03:30.963745] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836608000-1698836609000[m
[36m[11:03:30.963813] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836608000-1698836609000[m
[36m[11:03:30.963936] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:30.963967] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:30.966994] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836608000,1698836609000,4,2129280222,1698836610963
1698836608000,1698836609000,8,16371813315,1698836610963
1698836608000,1698836609000,7,26897860686,1698836610963
1698836608000,1698836609000,6,5845133870,1698836610963
1698836608000,1698836609000,9,299546147,1698836610963
1698836608000,1698836609000,10,326777308,1698836610963
1698836608000,1698836609000,5,735854631,1698836610963
1698836608000,1698836609000,11,317601267,1698836610963
1698836608000,1698836609000,1,36205021,1698836610963
[m
[36m[11:03:31.114741] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836611000-1698836612000[m
[36m[11:03:31.227723] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:31.248736] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:31.249063] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:31.250521] [D] [thread 130880] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:31.250621] [I] [thread 130880] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:31.250642] [I] [thread 130880] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:31.250773] [I] [thread 130880] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:31.250790] [I] [thread 130880] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:31.470284] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:31.470644] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:31.979386] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836609000-1698836610000 [m
[36m[11:03:31.980121] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836609000-1698836610000-10[m
[36m[11:03:31.980213] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836609000-1698836610000[m
[36m[11:03:31.980271] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836609000-1698836610000[m
[36m[11:03:31.980374] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:31.980402] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:31.983522] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836609000,1698836610000,8,16371815885,1698836611980
1698836609000,1698836610000,7,26897863237,1698836611980
1698836609000,1698836610000,6,5845136422,1698836611980
1698836609000,1698836610000,9,299548759,1698836611980
1698836609000,1698836610000,10,326779900,1698836611980
1698836609000,1698836610000,11,317603862,1698836611980
1698836609000,1698836610000,4,2129282601,1698836611980
1698836609000,1698836610000,5,735856988,1698836611980
1698836609000,1698836610000,1,36209256,1698836611980
[m
[36m[11:03:32.133459] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836612000-1698836613000[m
[36m[11:03:32.471824] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:32.995698] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836610000-1698836611000 [m
[36m[11:03:32.996432] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836610000-1698836611000-11[m
[36m[11:03:32.996523] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836610000-1698836611000[m
[36m[11:03:32.996583] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836610000-1698836611000[m
[36m[11:03:32.996685] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:32.996713] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:32.999685] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836610000,1698836611000,8,16371818169,1698836612996
1698836610000,1698836611000,7,26897865489,1698836612996
1698836610000,1698836611000,9,299551089,1698836612996
1698836610000,1698836611000,10,326782133,1698836612996
1698836610000,1698836611000,11,317606084,1698836612996
1698836610000,1698836611000,4,2129284994,1698836612996
1698836610000,1698836611000,5,735859433,1698836612996
1698836610000,1698836611000,6,5845138953,1698836612996
1698836610000,1698836611000,1,36213256,1698836612996
[m
[36m[11:03:33.122904] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836613000-1698836614000[m
[36m[11:03:33.473068] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:33.529954] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:33.530331] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:33.531831] [D] [thread 130885] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:33.531947] [I] [thread 130885] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:33.531966] [I] [thread 130885] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:33.532095] [I] [thread 130885] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:33.532124] [I] [thread 130885] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:33.716645] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:33.717096] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:34.011466] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836611000-1698836612000 [m
[36m[11:03:34.012225] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836611000-1698836612000-12[m
[36m[11:03:34.012319] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836611000-1698836612000[m
[36m[11:03:34.012379] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836611000-1698836612000[m
[36m[11:03:34.012483] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:34.012514] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:34.015534] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836611000,1698836612000,8,16371820863,1698836614012
1698836611000,1698836612000,7,26897868253,1698836614012
1698836611000,1698836612000,10,326784881,1698836614012
1698836611000,1698836612000,11,317608747,1698836614012
1698836611000,1698836612000,4,2129287442,1698836614012
1698836611000,1698836612000,5,735861890,1698836614012
1698836611000,1698836612000,9,299553831,1698836614012
1698836611000,1698836612000,6,5845141439,1698836614012
1698836611000,1698836612000,1,36219077,1698836614012
[m
[36m[11:03:34.144033] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836614000-1698836615000[m
[36m[11:03:34.718121] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:35.027764] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836612000-1698836613000 [m
[36m[11:03:35.027999] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836613000-1698836614000 [m
[36m[11:03:35.028711] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836612000-1698836613000-13[m
[36m[11:03:35.028783] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836612000-1698836613000[m
[36m[11:03:35.028841] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836612000-1698836613000[m
[36m[11:03:35.028946] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:35.028974] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:35.032384] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836612000,1698836613000,11,317611029,1698836615028
1698836612000,1698836613000,4,2129289673,1698836615028
1698836612000,1698836613000,5,735864130,1698836615028
1698836612000,1698836613000,9,299555969,1698836615028
1698836612000,1698836613000,10,326787245,1698836615028
1698836612000,1698836613000,7,26897870583,1698836615028
1698836612000,1698836613000,6,5845143705,1698836615028
1698836612000,1698836613000,8,16371823221,1698836615028
1698836612000,1698836613000,1,36223150,1698836615028
[m
[36m[11:03:35.033269] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836613000-1698836614000-14[m
[36m[11:03:35.033315] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836613000-1698836614000[m
[36m[11:03:35.033361] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836613000-1698836614000[m
[36m[11:03:35.033462] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:35.033493] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:35.035717] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836613000,1698836614000,4,2129292454,1698836615033
1698836613000,1698836614000,9,299558559,1698836615033
1698836613000,1698836614000,5,735866795,1698836615033
1698836613000,1698836614000,10,326789782,1698836615033
1698836613000,1698836614000,7,26897873274,1698836615033
1698836613000,1698836614000,6,5845146345,1698836615033
1698836613000,1698836614000,8,16371825828,1698836615033
1698836613000,1698836614000,11,317613725,1698836615033
[m
[36m[11:03:35.151114] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836615000-1698836616000[m
[36m[11:03:35.719419] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:35.742888] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:35.743255] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:35.744801] [D] [thread 130890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:35.744897] [I] [thread 130890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:35.744916] [I] [thread 130890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:35.745030] [I] [thread 130890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:35.745043] [I] [thread 130890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:35.957256] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:35.957605] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:36.044410] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836614000-1698836615000 [m
[36m[11:03:36.045215] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836614000-1698836615000-15[m
[36m[11:03:36.045315] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836614000-1698836615000[m
[36m[11:03:36.045379] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836614000-1698836615000[m
[36m[11:03:36.045486] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:36.045517] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:36.048495] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836614000,1698836615000,9,299560964,1698836616045
1698836614000,1698836615000,5,735868905,1698836616045
1698836614000,1698836615000,10,326792102,1698836616045
1698836614000,1698836615000,7,26897875418,1698836616045
1698836614000,1698836615000,6,5845148589,1698836616045
1698836614000,1698836615000,11,317615952,1698836616045
1698836614000,1698836615000,4,2129294621,1698836616045
1698836614000,1698836615000,8,16371828115,1698836616045
1698836614000,1698836615000,1,36229099,1698836616045
[m
[36m[11:03:36.142842] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836616000-1698836617000[m
[36m[11:03:36.958816] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:37.059768] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836615000-1698836616000 [m
[36m[11:03:37.060462] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836615000-1698836616000-16[m
[36m[11:03:37.060540] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836615000-1698836616000[m
[36m[11:03:37.060585] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836615000-1698836616000[m
[36m[11:03:37.060665] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:37.060684] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:37.062975] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836615000,1698836616000,10,326794485,1698836617060
1698836615000,1698836616000,5,735871578,1698836617060
1698836615000,1698836616000,6,5845151125,1698836617060
1698836615000,1698836616000,11,317618364,1698836617060
1698836615000,1698836616000,7,26897878037,1698836617060
1698836615000,1698836616000,4,2129297282,1698836617060
1698836615000,1698836616000,8,16371830581,1698836617060
1698836615000,1698836616000,9,299563566,1698836617060
1698836615000,1698836616000,1,36233280,1698836617060
[m
[36m[11:03:37.131142] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836617000-1698836618000[m
[36m[11:03:37.960097] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:38.027117] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:38.027478] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:38.028445] [D] [thread 130895] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:38.028552] [I] [thread 130895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:38.028571] [I] [thread 130895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:38.028696] [I] [thread 130895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:38.028723] [I] [thread 130895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:38.076990] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836616000-1698836617000 [m
[36m[11:03:38.077923] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836616000-1698836617000-17[m
[36m[11:03:38.078038] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836616000-1698836617000[m
[36m[11:03:38.078113] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836616000-1698836617000[m
[36m[11:03:38.078283] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:38.078323] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:38.081365] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836616000,1698836617000,10,326797009,1698836618078
1698836616000,1698836617000,5,735873813,1698836618078
1698836616000,1698836617000,6,5845153444,1698836618078
1698836616000,1698836617000,4,2129299467,1698836618078
1698836616000,1698836617000,11,317620930,1698836618078
1698836616000,1698836617000,8,16371832986,1698836618078
1698836616000,1698836617000,7,26897880333,1698836618078
1698836616000,1698836617000,9,299565947,1698836618078
1698836616000,1698836617000,1,36239425,1698836618078
[m
[36m[11:03:38.120300] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836618000-1698836619000[m
[36m[11:03:38.251740] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:38.252395] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:39.094567] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836617000-1698836618000 [m
[36m[11:03:39.095230] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836617000-1698836618000-18[m
[36m[11:03:39.095313] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836617000-1698836618000[m
[36m[11:03:39.095361] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836617000-1698836618000[m
[36m[11:03:39.095448] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:39.095472] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:39.097917] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836617000,1698836618000,10,326799192,1698836619095
1698836617000,1698836618000,5,735876246,1698836619095
1698836617000,1698836618000,4,2129301894,1698836619095
1698836617000,1698836618000,6,5845155864,1698836619095
1698836617000,1698836618000,11,317623133,1698836619095
1698836617000,1698836618000,8,16371835332,1698836619095
1698836617000,1698836618000,9,299568291,1698836619095
1698836617000,1698836618000,7,26897882828,1698836619095
1698836617000,1698836618000,1,36241700,1698836619095
[m
[36m[11:03:39.126630] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836619000-1698836620000[m
[36m[11:03:39.253621] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:40.109266] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836618000-1698836619000 [m
[36m[11:03:40.110168] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836618000-1698836619000-19[m
[36m[11:03:40.110313] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836618000-1698836619000[m
[36m[11:03:40.110385] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836618000-1698836619000[m
[36m[11:03:40.110510] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:40.110540] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:40.113892] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836618000,1698836619000,4,2129304368,1698836620110
1698836618000,1698836619000,10,326801979,1698836620110
1698836618000,1698836619000,5,735878672,1698836620110
1698836618000,1698836619000,11,317625816,1698836620110
1698836618000,1698836619000,6,5845158311,1698836620110
1698836618000,1698836619000,9,299570836,1698836620110
1698836618000,1698836619000,8,16371837895,1698836620110
1698836618000,1698836619000,7,26897885271,1698836620110
1698836618000,1698836619000,1,36246092,1698836620110
[m
[36m[11:03:40.136797] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836620000-1698836621000[m
[36m[11:03:40.254854] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:40.264980] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:40.265323] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:40.266434] [D] [thread 130900] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:40.266534] [I] [thread 130900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:40.266552] [I] [thread 130900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:40.266670] [I] [thread 130900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:40.266692] [I] [thread 130900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:40.434641] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:40.434989] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:41.124477] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836621000-1698836622000[m
[36m[11:03:41.125864] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836619000-1698836620000 [m
[36m[11:03:41.126647] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836619000-1698836620000-20[m
[36m[11:03:41.126741] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836619000-1698836620000[m
[36m[11:03:41.126803] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836619000-1698836620000[m
[36m[11:03:41.126905] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:41.126933] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:41.129832] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836619000,1698836620000,5,735881167,1698836621126
1698836619000,1698836620000,11,317628044,1698836621126
1698836619000,1698836620000,6,5845160611,1698836621126
1698836619000,1698836620000,9,299572990,1698836621126
1698836619000,1698836620000,8,16371840094,1698836621126
1698836619000,1698836620000,7,26897887594,1698836621126
1698836619000,1698836620000,4,2129306890,1698836621126
1698836619000,1698836620000,10,326804217,1698836621126
1698836619000,1698836620000,1,36250681,1698836621126
[m
[36m[11:03:41.436186] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:42.140522] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836620000-1698836621000 [m
[36m[11:03:42.141341] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836620000-1698836621000-21[m
[36m[11:03:42.141451] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836620000-1698836621000[m
[36m[11:03:42.141521] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836620000-1698836621000[m
[36m[11:03:42.141642] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:42.141674] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:42.145062] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836620000,1698836621000,6,5845163160,1698836622141
1698836620000,1698836621000,9,299575661,1698836622141
1698836620000,1698836621000,8,16371842707,1698836622141
1698836620000,1698836621000,7,26897890125,1698836622141
1698836620000,1698836621000,4,2129309245,1698836622141
1698836620000,1698836621000,10,326806898,1698836622141
1698836620000,1698836621000,11,317630844,1698836622141
1698836620000,1698836621000,5,735883731,1698836622141
1698836620000,1698836621000,1,36254772,1698836622141
[m
[36m[11:03:42.145939] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836622000-1698836623000[m
[36m[11:03:42.437485] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:42.494115] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:42.494479] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:42.495527] [D] [thread 130906] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:42.495625] [I] [thread 130906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:42.495643] [I] [thread 130906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:42.495758] [I] [thread 130906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:42.495777] [I] [thread 130906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:42.683470] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:42.683958] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:43.139215] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836623000-1698836624000[m
[36m[11:03:43.156974] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836621000-1698836622000 [m
[36m[11:03:43.157690] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836621000-1698836622000-22[m
[36m[11:03:43.157778] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836621000-1698836622000[m
[36m[11:03:43.157834] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836621000-1698836622000[m
[36m[11:03:43.157934] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:43.157960] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:43.160694] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836621000,1698836622000,9,299577961,1698836623157
1698836621000,1698836622000,6,5845165514,1698836623157
1698836621000,1698836622000,4,2129311613,1698836623157
1698836621000,1698836622000,8,16371844885,1698836623157
1698836621000,1698836622000,7,26897892326,1698836623157
1698836621000,1698836622000,10,326809010,1698836623157
1698836621000,1698836622000,11,317632970,1698836623157
1698836621000,1698836622000,5,735886027,1698836623157
1698836621000,1698836622000,1,36260561,1698836623157
[m
[36m[11:03:43.685247] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:44.134513] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836624000-1698836625000[m
[36m[11:03:44.171760] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836622000-1698836623000 [m
[36m[11:03:44.172380] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836622000-1698836623000-23[m
[36m[11:03:44.172455] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836622000-1698836623000[m
[36m[11:03:44.172498] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836622000-1698836623000[m
[36m[11:03:44.172572] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:44.172590] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:44.174745] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836622000,1698836623000,8,16371847501,1698836624172
1698836622000,1698836623000,7,26897895013,1698836624172
1698836622000,1698836623000,10,326811575,1698836624172
1698836622000,1698836623000,11,317635456,1698836624172
1698836622000,1698836623000,5,735888641,1698836624172
1698836622000,1698836623000,4,2129314297,1698836624172
1698836622000,1698836623000,9,299580692,1698836624172
1698836622000,1698836623000,6,5845168256,1698836624172
1698836622000,1698836623000,1,36264647,1698836624172
[m
[36m[11:03:44.683334] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:44.683912] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:44.684634] [D] [thread 130911] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:44.684726] [I] [thread 130911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:44.684744] [I] [thread 130911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:44.684860] [I] [thread 130911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:44.684874] [I] [thread 130911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:44.850044] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:44.850671] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:45.125529] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836625000-1698836626000[m
[36m[11:03:45.187850] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836623000-1698836624000 [m
[36m[11:03:45.188694] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836623000-1698836624000-24[m
[36m[11:03:45.188804] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836623000-1698836624000[m
[36m[11:03:45.188872] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836623000-1698836624000[m
[36m[11:03:45.188994] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:45.189026] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:45.192092] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836623000,1698836624000,8,16371849792,1698836625189
1698836623000,1698836624000,11,317637895,1698836625189
1698836623000,1698836624000,10,326813897,1698836625189
1698836623000,1698836624000,7,26897897188,1698836625189
1698836623000,1698836624000,5,735890805,1698836625189
1698836623000,1698836624000,9,299582981,1698836625189
1698836623000,1698836624000,4,2129316448,1698836625189
1698836623000,1698836624000,6,5845170449,1698836625189
1698836623000,1698836624000,1,36270522,1698836625189
[m
[36m[11:03:45.851934] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:46.119984] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836626000-1698836627000[m
[36m[11:03:46.203572] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836624000-1698836625000 [m
[36m[11:03:46.204215] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836624000-1698836625000-25[m
[36m[11:03:46.204295] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836624000-1698836625000[m
[36m[11:03:46.204341] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836624000-1698836625000[m
[36m[11:03:46.204421] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:46.204442] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:46.206678] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836624000,1698836625000,8,16371852316,1698836626204
1698836624000,1698836625000,7,26897899757,1698836626204
1698836624000,1698836625000,10,326816258,1698836626204
1698836624000,1698836625000,9,299585467,1698836626204
1698836624000,1698836625000,5,735893481,1698836626204
1698836624000,1698836625000,4,2129319145,1698836626204
1698836624000,1698836625000,6,5845173085,1698836626204
1698836624000,1698836625000,11,317640414,1698836626204
1698836624000,1698836625000,1,36274333,1698836626204
[m
[36m[11:03:46.853213] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:46.877714] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:46.878402] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:46.879181] [D] [thread 130916] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:46.879271] [I] [thread 130916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:46.879289] [I] [thread 130916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:46.879405] [I] [thread 130916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:46.879418] [I] [thread 130916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:47.083048] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:47.083569] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:47.113254] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836627000-1698836628000[m
[36m[11:03:47.216717] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836625000-1698836626000 [m
[36m[11:03:47.217634] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836625000-1698836626000-26[m
[36m[11:03:47.217741] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836625000-1698836626000[m
[36m[11:03:47.217814] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836625000-1698836626000[m
[36m[11:03:47.217923] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:47.217948] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:47.220745] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836625000,1698836626000,8,16371854669,1698836627217
1698836625000,1698836626000,10,326818717,1698836627217
1698836625000,1698836626000,7,26897902061,1698836627217
1698836625000,1698836626000,9,299587854,1698836627217
1698836625000,1698836626000,4,2129321279,1698836627217
1698836625000,1698836626000,5,735895703,1698836627217
1698836625000,1698836626000,11,317642840,1698836627217
1698836625000,1698836626000,6,5845175379,1698836627217
1698836625000,1698836626000,1,36278348,1698836627217
[m
[36m[11:03:48.084809] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:48.124559] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836628000-1698836629000[m
[36m[11:03:48.233365] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836626000-1698836627000 [m
[36m[11:03:48.234112] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836626000-1698836627000-27[m
[36m[11:03:48.234263] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836626000-1698836627000[m
[36m[11:03:48.234333] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836626000-1698836627000[m
[36m[11:03:48.234448] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:48.234478] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:48.237851] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836626000,1698836627000,8,16371857072,1698836628234
1698836626000,1698836627000,10,326821159,1698836628234
1698836626000,1698836627000,7,26897904493,1698836628234
1698836626000,1698836627000,9,299590311,1698836628234
1698836626000,1698836627000,11,317645112,1698836628234
1698836626000,1698836627000,4,2129323817,1698836628234
1698836626000,1698836627000,5,735898260,1698836628234
1698836626000,1698836627000,6,5845177864,1698836628234
1698836626000,1698836627000,1,36282447,1698836628234
[m
[36m[11:03:49.086256] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:49.116096] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836629000-1698836630000[m
[36m[11:03:49.237995] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:49.238375] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:49.239480] [D] [thread 130921] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:49.239587] [I] [thread 130921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:49.239607] [I] [thread 130921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:49.239737] [I] [thread 130921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:49.239821] [I] [thread 130921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:49.249572] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836627000-1698836628000 [m
[36m[11:03:49.250137] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836627000-1698836628000-28[m
[36m[11:03:49.250237] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836627000-1698836628000[m
[36m[11:03:49.250276] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836627000-1698836628000[m
[36m[11:03:49.250358] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:49.250381] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:49.252768] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836627000,1698836628000,8,16371859688,1698836629250
1698836627000,1698836628000,7,26897906938,1698836629250
1698836627000,1698836628000,11,317647634,1698836629250
1698836627000,1698836628000,4,2129326104,1698836629250
1698836627000,1698836628000,5,735900588,1698836629250
1698836627000,1698836628000,6,5845180215,1698836629250
1698836627000,1698836628000,10,326823808,1698836629250
1698836627000,1698836628000,9,299592933,1698836629250
1698836627000,1698836628000,1,36288253,1698836629250
[m
[36m[11:03:49.394937] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:49.395289] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:50.120670] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836630000-1698836631000[m
[36m[11:03:50.264215] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836628000-1698836629000 [m
[36m[11:03:50.264967] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836628000-1698836629000-29[m
[36m[11:03:50.265069] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836628000-1698836629000[m
[36m[11:03:50.265135] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836628000-1698836629000[m
[36m[11:03:50.265245] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:50.265276] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:50.268296] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836628000,1698836629000,11,317649946,1698836630265
1698836628000,1698836629000,7,26897909221,1698836630265
1698836628000,1698836629000,4,2129328480,1698836630265
1698836628000,1698836629000,5,735902957,1698836630265
1698836628000,1698836629000,6,5845182600,1698836630265
1698836628000,1698836629000,10,326825941,1698836630265
1698836628000,1698836629000,9,299595071,1698836630265
1698836628000,1698836629000,8,16371862076,1698836630265
1698836628000,1698836629000,1,36292108,1698836630265
[m
[36m[11:03:50.396597] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:51.125525] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836631000-1698836632000[m
[36m[11:03:51.280380] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836629000-1698836630000 [m
[36m[11:03:51.281216] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836629000-1698836630000-30[m
[36m[11:03:51.281328] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836629000-1698836630000[m
[36m[11:03:51.281403] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836629000-1698836630000[m
[36m[11:03:51.281519] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:51.281554] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:51.284935] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836629000,1698836630000,7,26897911882,1698836631281
1698836629000,1698836630000,4,2129331041,1698836631281
1698836629000,1698836630000,5,735905429,1698836631281
1698836629000,1698836630000,6,5845185037,1698836631281
1698836629000,1698836630000,9,299597664,1698836631281
1698836629000,1698836630000,10,326828598,1698836631281
1698836629000,1698836630000,8,16371864609,1698836631281
1698836629000,1698836630000,11,317652742,1698836631281
1698836629000,1698836630000,1,36297028,1698836631281
[m
[36m[11:03:51.397878] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:51.450137] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:51.450484] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:51.451552] [D] [thread 130926] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:51.451652] [I] [thread 130926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:51.451671] [I] [thread 130926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:51.451789] [I] [thread 130926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:51.451802] [I] [thread 130926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:51.642815] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:51.643143] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:52.121746] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836632000-1698836633000[m
[36m[11:03:52.295670] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836630000-1698836631000 [m
[36m[11:03:52.296322] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836630000-1698836631000-31[m
[36m[11:03:52.296396] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836630000-1698836631000[m
[36m[11:03:52.296438] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836630000-1698836631000[m
[36m[11:03:52.296515] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:52.296536] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:52.298675] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836630000,1698836631000,5,735907888,1698836632296
1698836630000,1698836631000,6,5845187310,1698836632296
1698836630000,1698836631000,9,299599829,1698836632296
1698836630000,1698836631000,10,326830757,1698836632296
1698836630000,1698836631000,8,16371866821,1698836632296
1698836630000,1698836631000,11,317654905,1698836632296
1698836630000,1698836631000,7,26897914258,1698836632296
1698836630000,1698836631000,4,2129333482,1698836632296
1698836630000,1698836631000,1,36301676,1698836632296
[m
[36m[11:03:52.644448] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:53.114563] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836633000-1698836634000[m
[36m[11:03:53.310628] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836631000-1698836632000 [m
[36m[11:03:53.311420] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836631000-1698836632000-32[m
[36m[11:03:53.311523] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836631000-1698836632000[m
[36m[11:03:53.311589] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836631000-1698836632000[m
[36m[11:03:53.311701] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:53.311731] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:53.315098] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836631000,1698836632000,10,326833485,1698836633311
1698836631000,1698836632000,6,5845189950,1698836633311
1698836631000,1698836632000,9,299602425,1698836633311
1698836631000,1698836632000,11,317657449,1698836633311
1698836631000,1698836632000,8,16371869528,1698836633311
1698836631000,1698836632000,4,2129336011,1698836633311
1698836631000,1698836632000,7,26897916973,1698836633311
1698836631000,1698836632000,5,735910602,1698836633311
1698836631000,1698836632000,1,36305741,1698836633311
[m
[36m[11:03:53.645734] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:53.745966] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:53.746318] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:53.747324] [D] [thread 130931] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:53.747420] [I] [thread 130931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:53.747438] [I] [thread 130931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:53.747554] [I] [thread 130931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:53.747567] [I] [thread 130931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:54.010805] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:54.011163] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:54.127156] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836634000-1698836635000[m
[36m[11:03:54.327716] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836632000-1698836633000 [m
[36m[11:03:54.328467] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836632000-1698836633000-33[m
[36m[11:03:54.328569] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836632000-1698836633000[m
[36m[11:03:54.328634] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836632000-1698836633000[m
[36m[11:03:54.328746] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:54.328775] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:54.331748] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836632000,1698836633000,6,5845192113,1698836634328
1698836632000,1698836633000,9,299604691,1698836634328
1698836632000,1698836633000,11,317659671,1698836634328
1698836632000,1698836633000,8,16371871699,1698836634328
1698836632000,1698836633000,4,2129338090,1698836634328
1698836632000,1698836633000,7,26897919089,1698836634328
1698836632000,1698836633000,10,326835900,1698836634328
1698836632000,1698836633000,5,735912787,1698836634328
1698836632000,1698836633000,1,36309744,1698836634328
[m
[36m[11:03:55.012373] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:55.131885] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836635000-1698836636000[m
[36m[11:03:55.345870] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836633000-1698836634000 [m
[36m[11:03:55.347033] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836633000-1698836634000-34[m
[36m[11:03:55.347119] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836633000-1698836634000[m
[36m[11:03:55.347188] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836633000-1698836634000[m
[36m[11:03:55.347313] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:55.347350] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:55.352260] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836633000,1698836634000,6,5845194827,1698836635347
1698836633000,1698836634000,9,299607231,1698836635347
1698836633000,1698836634000,11,317662190,1698836635347
1698836633000,1698836634000,4,2129340725,1698836635347
1698836633000,1698836634000,8,16371874164,1698836635347
1698836633000,1698836634000,10,326838223,1698836635347
1698836633000,1698836634000,7,26897921723,1698836635347
1698836633000,1698836634000,5,735915419,1698836635347
1698836633000,1698836634000,1,36313537,1698836635347
[m
[36m[11:03:56.013709] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:56.111872] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:56.112202] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:56.113194] [D] [thread 130937] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:56.113289] [I] [thread 130937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:56.113307] [I] [thread 130937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:56.113423] [I] [thread 130937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:56.113436] [I] [thread 130937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:56.153695] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836636000-1698836637000[m
[36m[11:03:56.361679] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836634000-1698836635000 [m
[36m[11:03:56.362695] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836634000-1698836635000-35[m
[36m[11:03:56.362799] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836634000-1698836635000[m
[36m[11:03:56.362857] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836634000-1698836635000[m
[36m[11:03:56.362961] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:56.362986] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:56.365444] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836634000,1698836635000,4,2129343059,1698836636362
1698836634000,1698836635000,10,326840672,1698836636362
1698836634000,1698836635000,8,16371876558,1698836636362
1698836634000,1698836635000,7,26897923980,1698836636362
1698836634000,1698836635000,5,735917601,1698836636362
1698836634000,1698836635000,6,5845197186,1698836636362
1698836634000,1698836635000,11,317664803,1698836636362
1698836634000,1698836635000,9,299609757,1698836636362
1698836634000,1698836635000,1,36319128,1698836636362
[m
[36m[11:03:56.389159] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:56.389725] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:57.145080] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836637000-1698836638000[m
[36m[11:03:57.376731] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836635000-1698836636000 [m
[36m[11:03:57.377467] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836635000-1698836636000-36[m
[36m[11:03:57.377563] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836635000-1698836636000[m
[36m[11:03:57.377623] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836635000-1698836636000[m
[36m[11:03:57.377725] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:57.377755] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:57.380767] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836635000,1698836636000,10,326843020,1698836637377
1698836635000,1698836636000,8,16371878842,1698836637377
1698836635000,1698836636000,7,26897926316,1698836637377
1698836635000,1698836636000,5,735920105,1698836637377
1698836635000,1698836636000,6,5845199600,1698836637377
1698836635000,1698836636000,11,317666893,1698836637377
1698836635000,1698836636000,4,2129345562,1698836637377
1698836635000,1698836636000,9,299612028,1698836637377
1698836635000,1698836636000,1,36323031,1698836637377
[m
[36m[11:03:57.390948] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:58.129488] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836638000-1698836639000[m
[36m[11:03:58.392050] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836636000-1698836637000 [m
[36m[11:03:58.392097] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:58.393018] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836636000-1698836637000-37[m
[36m[11:03:58.393114] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836636000-1698836637000[m
[36m[11:03:58.393170] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836636000-1698836637000[m
[36m[11:03:58.393248] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:58.393265] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:58.395172] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836636000,1698836637000,8,16371881404,1698836638393
1698836636000,1698836637000,7,26897928846,1698836638393
1698836636000,1698836637000,11,317669525,1698836638393
1698836636000,1698836637000,5,735922489,1698836638393
1698836636000,1698836637000,4,2129347946,1698836638393
1698836636000,1698836637000,6,5845202100,1698836638393
1698836636000,1698836637000,9,299614579,1698836638393
1698836636000,1698836637000,10,326845660,1698836638393
1698836636000,1698836637000,1,36327812,1698836638393
[m
[36m[11:03:58.413949] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:58.414358] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:58.416088] [D] [thread 130942] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:03:58.416185] [I] [thread 130942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:58.416203] [I] [thread 130942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:03:58.416321] [I] [thread 130942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:03:58.416334] [I] [thread 130942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:03:58.636925] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:58.637285] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:03:59.114843] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836639000-1698836640000[m
[36m[11:03:59.403110] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836637000-1698836638000 [m
[36m[11:03:59.403949] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836637000-1698836638000-38[m
[36m[11:03:59.404031] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836637000-1698836638000[m
[36m[11:03:59.404075] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836637000-1698836638000[m
[36m[11:03:59.404158] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:03:59.404180] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:03:59.406835] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836637000,1698836638000,8,16371883600,1698836639404
1698836637000,1698836638000,7,26897931078,1698836639404
1698836637000,1698836638000,11,317671631,1698836639404
1698836637000,1698836638000,4,2129350206,1698836639404
1698836637000,1698836638000,5,735924798,1698836639404
1698836637000,1698836638000,9,299616823,1698836639404
1698836637000,1698836638000,10,326847889,1698836639404
1698836637000,1698836638000,6,5845204344,1698836639404
1698836637000,1698836638000,1,36332362,1698836639404
[m
[36m[11:03:59.638521] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:00.123071] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836640000-1698836641000[m
[36m[11:04:00.415978] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836638000-1698836639000 [m
[36m[11:04:00.416935] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836638000-1698836639000-39[m
[36m[11:04:00.417041] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836638000-1698836639000[m
[36m[11:04:00.417105] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836638000-1698836639000[m
[36m[11:04:00.417224] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:00.417258] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:00.420784] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836638000,1698836639000,11,317674151,1698836640417
1698836638000,1698836639000,8,16371886218,1698836640417
1698836638000,1698836639000,4,2129352811,1698836640417
1698836638000,1698836639000,7,26897933698,1698836640417
1698836638000,1698836639000,5,735927383,1698836640417
1698836638000,1698836639000,9,299619404,1698836640417
1698836638000,1698836639000,10,326850451,1698836640417
1698836638000,1698836639000,6,5845206942,1698836640417
1698836638000,1698836639000,1,36336449,1698836640417
[m
[36m[11:04:00.639787] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:00.656324] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:00.656712] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:00.657841] [D] [thread 130948] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:00.657936] [I] [thread 130948] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:00.657954] [I] [thread 130948] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:00.658072] [I] [thread 130948] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:00.658086] [I] [thread 130948] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:00.859896] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:00.860293] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:01.124054] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836641000-1698836642000[m
[36m[11:04:01.434741] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836639000-1698836640000 [m
[36m[11:04:01.435726] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836639000-1698836640000-40[m
[36m[11:04:01.435831] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836639000-1698836640000[m
[36m[11:04:01.435897] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836639000-1698836640000[m
[36m[11:04:01.436012] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:01.436046] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:01.439869] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836639000,1698836640000,11,317676669,1698836641436
1698836639000,1698836640000,8,16371888433,1698836641436
1698836639000,1698836640000,7,26897935861,1698836641436
1698836639000,1698836640000,5,735929571,1698836641436
1698836639000,1698836640000,9,299621596,1698836641436
1698836639000,1698836640000,10,326852660,1698836641436
1698836639000,1698836640000,6,5845209160,1698836641436
1698836639000,1698836640000,4,2129355159,1698836641436
1698836639000,1698836640000,1,36341937,1698836641436
[m
[36m[11:04:01.861508] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:02.120252] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836642000-1698836643000[m
[36m[11:04:02.450699] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836640000-1698836641000 [m
[36m[11:04:02.451552] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836640000-1698836641000-41[m
[36m[11:04:02.451676] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836640000-1698836641000[m
[36m[11:04:02.451754] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836640000-1698836641000[m
[36m[11:04:02.451892] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:02.451930] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:02.455776] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836640000,1698836641000,7,26897938471,1698836642451
1698836640000,1698836641000,8,16371890975,1698836642451
1698836640000,1698836641000,9,299624252,1698836642451
1698836640000,1698836641000,5,735932176,1698836642451
1698836640000,1698836641000,10,326855100,1698836642451
1698836640000,1698836641000,6,5845211752,1698836642451
1698836640000,1698836641000,4,2129357827,1698836642451
1698836640000,1698836641000,11,317679171,1698836642451
1698836640000,1698836641000,1,36344187,1698836642451
[m
[36m[11:04:02.862346] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:02.958102] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:02.958702] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:02.959687] [D] [thread 130954] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:02.959783] [I] [thread 130954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:02.959801] [I] [thread 130954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:02.959920] [I] [thread 130954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:02.959935] [I] [thread 130954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:03.114865] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836643000-1698836644000[m
[36m[11:04:03.153223] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:03.153591] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:03.468373] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836641000-1698836642000 [m
[36m[11:04:03.469165] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836641000-1698836642000-42[m
[36m[11:04:03.469268] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836641000-1698836642000[m
[36m[11:04:03.469332] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836641000-1698836642000[m
[36m[11:04:03.469442] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:03.469472] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:03.472880] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836641000,1698836642000,7,26897940707,1698836643469
1698836641000,1698836642000,8,16371893275,1698836643469
1698836641000,1698836642000,10,326857626,1698836643469
1698836641000,1698836642000,5,735934448,1698836643469
1698836641000,1698836642000,6,5845213970,1698836643469
1698836641000,1698836642000,4,2129359919,1698836643469
1698836641000,1698836642000,11,317681581,1698836643469
1698836641000,1698836642000,9,299626663,1698836643469
1698836641000,1698836642000,1,36349710,1698836643469
[m
[36m[11:04:04.124482] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836644000-1698836645000[m
[36m[11:04:04.154824] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:04.483183] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836642000-1698836643000 [m
[36m[11:04:04.484045] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836642000-1698836643000-43[m
[36m[11:04:04.484159] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836642000-1698836643000[m
[36m[11:04:04.484237] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836642000-1698836643000[m
[36m[11:04:04.484370] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:04.484407] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:04.488340] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836642000,1698836643000,7,26897943128,1698836644484
1698836642000,1698836643000,8,16371895696,1698836644484
1698836642000,1698836643000,5,735936966,1698836644484
1698836642000,1698836643000,6,5845216464,1698836644484
1698836642000,1698836643000,4,2129362416,1698836644484
1698836642000,1698836643000,11,317683882,1698836644484
1698836642000,1698836643000,9,299628957,1698836644484
1698836642000,1698836643000,10,326860002,1698836644484
1698836642000,1698836643000,1,36353821,1698836644484
[m
[36m[11:04:05.127067] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836645000-1698836646000[m
[36m[11:04:05.156036] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:05.274927] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:05.275239] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:05.276314] [D] [thread 130960] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:05.276435] [I] [thread 130960] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:05.276455] [I] [thread 130960] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:05.276594] [I] [thread 130960] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:05.276617] [I] [thread 130960] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:05.479050] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:05.479385] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:05.500408] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836643000-1698836644000 [m
[36m[11:04:05.501210] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836643000-1698836644000-44[m
[36m[11:04:05.501296] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836643000-1698836644000[m
[36m[11:04:05.501344] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836643000-1698836644000[m
[36m[11:04:05.501427] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:05.501449] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:05.504690] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836643000,1698836644000,8,16371898291,1698836645501
1698836643000,1698836644000,5,735939432,1698836645501
1698836643000,1698836644000,7,26897945733,1698836645501
1698836643000,1698836644000,6,5845218878,1698836645501
1698836643000,1698836644000,4,2129364727,1698836645501
1698836643000,1698836644000,11,317686501,1698836645501
1698836643000,1698836644000,10,326862490,1698836645501
1698836643000,1698836644000,9,299631508,1698836645501
1698836643000,1698836644000,1,36359699,1698836645501
[m
[36m[11:04:06.111927] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836646000-1698836647000[m
[36m[11:04:06.480657] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:06.515935] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836644000-1698836645000 [m
[36m[11:04:06.516644] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836644000-1698836645000-45[m
[36m[11:04:06.516730] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836644000-1698836645000[m
[36m[11:04:06.516785] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836644000-1698836645000[m
[36m[11:04:06.516878] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:06.516905] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:06.519557] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836644000,1698836645000,6,5845221157,1698836646516
1698836644000,1698836645000,4,2129367231,1698836646516
1698836644000,1698836645000,11,317688676,1698836646516
1698836644000,1698836645000,10,326864651,1698836646516
1698836644000,1698836645000,9,299633675,1698836646516
1698836644000,1698836645000,5,735941944,1698836646516
1698836644000,1698836645000,8,16371900661,1698836646516
1698836644000,1698836645000,7,26897948155,1698836646516
1698836644000,1698836645000,1,36363675,1698836646516
[m
[36m[11:04:07.145538] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836647000-1698836648000[m
[36m[11:04:07.481883] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:07.517338] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:07.517897] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:07.518946] [D] [thread 130965] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:07.519068] [I] [thread 130965] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:07.519091] [I] [thread 130965] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:07.519223] [I] [thread 130965] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:07.519239] [I] [thread 130965] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:07.530254] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836645000-1698836646000 [m
[36m[11:04:07.530962] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836645000-1698836646000-46[m
[36m[11:04:07.531067] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836645000-1698836646000[m
[36m[11:04:07.531122] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836645000-1698836646000[m
[36m[11:04:07.531218] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:07.531244] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:07.534610] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836645000,1698836646000,6,5845223799,1698836647531
1698836645000,1698836646000,11,317691226,1698836647531
1698836645000,1698836646000,10,326867304,1698836647531
1698836645000,1698836646000,9,299636324,1698836647531
1698836645000,1698836646000,5,735944478,1698836647531
1698836645000,1698836646000,4,2129369885,1698836647531
1698836645000,1698836646000,8,16371903301,1698836647531
1698836645000,1698836646000,7,26897950749,1698836647531
1698836645000,1698836646000,1,36369700,1698836647531
[m
[36m[11:04:07.655823] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:07.656338] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:08.128714] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836648000-1698836649000[m
[36m[11:04:08.543316] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836646000-1698836647000 [m
[36m[11:04:08.544190] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836646000-1698836647000-47[m
[36m[11:04:08.544304] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836646000-1698836647000[m
[36m[11:04:08.544384] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836646000-1698836647000[m
[36m[11:04:08.544512] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:08.544548] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:08.548446] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836646000,1698836647000,6,5845226092,1698836648544
1698836646000,1698836647000,11,317693518,1698836648544
1698836646000,1698836647000,10,326869575,1698836648544
1698836646000,1698836647000,9,299638481,1698836648544
1698836646000,1698836647000,4,2129371994,1698836648544
1698836646000,1698836647000,5,735946655,1698836648544
1698836646000,1698836647000,8,16371905493,1698836648544
1698836646000,1698836647000,7,26897952931,1698836648544
1698836646000,1698836647000,1,36373408,1698836648544
[m
[36m[11:04:08.657530] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:09.155834] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836649000-1698836650000[m
[36m[11:04:09.559099] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836647000-1698836648000 [m
[36m[11:04:09.559958] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836647000-1698836648000-48[m
[36m[11:04:09.560073] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836647000-1698836648000[m
[36m[11:04:09.560146] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836647000-1698836648000[m
[36m[11:04:09.560271] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:09.560304] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:09.564183] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836647000,1698836648000,9,299641025,1698836649560
1698836647000,1698836648000,5,735949283,1698836649560
1698836647000,1698836648000,4,2129374559,1698836649560
1698836647000,1698836648000,8,16371908084,1698836649560
1698836647000,1698836648000,7,26897955548,1698836649560
1698836647000,1698836648000,11,317696142,1698836649560
1698836647000,1698836648000,6,5845228818,1698836649560
1698836647000,1698836648000,10,326872241,1698836649560
1698836647000,1698836648000,1,36377119,1698836649560
[m
[36m[11:04:09.658877] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:09.692177] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:09.692750] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:09.693513] [D] [thread 130971] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:09.693607] [I] [thread 130971] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:09.693625] [I] [thread 130971] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:09.693743] [I] [thread 130971] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:09.693755] [I] [thread 130971] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:09.915130] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:09.915677] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:10.128079] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836650000-1698836651000[m
[36m[11:04:10.576535] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836648000-1698836649000 [m
[36m[11:04:10.577502] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836648000-1698836649000-49[m
[36m[11:04:10.577610] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836648000-1698836649000[m
[36m[11:04:10.577677] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836648000-1698836649000[m
[36m[11:04:10.577787] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:10.577821] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:10.581011] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836648000,1698836649000,9,299643421,1698836650577
1698836648000,1698836649000,4,2129376749,1698836650577
1698836648000,1698836649000,7,26897957750,1698836650577
1698836648000,1698836649000,5,735951494,1698836650577
1698836648000,1698836649000,10,326874454,1698836650577
1698836648000,1698836649000,8,16371910339,1698836650577
1698836648000,1698836649000,11,317698471,1698836650577
1698836648000,1698836649000,6,5845231008,1698836650577
1698836648000,1698836649000,1,36381010,1698836650577
[m
[36m[11:04:10.916977] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:11.143666] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836651000-1698836652000[m
[36m[11:04:11.593676] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836649000-1698836650000 [m
[36m[11:04:11.594626] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836649000-1698836650000-50[m
[36m[11:04:11.594738] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836649000-1698836650000[m
[36m[11:04:11.594812] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836649000-1698836650000[m
[36m[11:04:11.594941] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:11.594979] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:11.598864] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836649000,1698836650000,10,326876860,1698836651594
1698836649000,1698836650000,4,2129379418,1698836651594
1698836649000,1698836650000,5,735954080,1698836651594
1698836649000,1698836650000,11,317700824,1698836651594
1698836649000,1698836650000,7,26897960348,1698836651594
1698836649000,1698836650000,8,16371912908,1698836651594
1698836649000,1698836650000,6,5845233624,1698836651594
1698836649000,1698836650000,9,299646047,1698836651594
1698836649000,1698836650000,1,36385131,1698836651594
[m
[36m[11:04:11.918275] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:11.944391] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:11.944901] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:11.945767] [D] [thread 130976] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:11.945869] [I] [thread 130976] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:11.945888] [I] [thread 130976] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:11.946017] [I] [thread 130976] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:11.946047] [I] [thread 130976] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:12.134446] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836652000-1698836653000[m
[36m[11:04:12.169338] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:12.169985] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:12.608854] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836650000-1698836651000 [m
[36m[11:04:12.609896] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836650000-1698836651000-51[m
[36m[11:04:12.610015] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836650000-1698836651000[m
[36m[11:04:12.610086] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836650000-1698836651000[m
[36m[11:04:12.610254] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:12.610294] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:12.613079] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836650000,1698836651000,10,326879430,1698836652610
1698836650000,1698836651000,4,2129381660,1698836652610
1698836650000,1698836651000,11,317703436,1698836652610
1698836650000,1698836651000,5,735956346,1698836652610
1698836650000,1698836651000,7,26897962617,1698836652610
1698836650000,1698836651000,8,16371915215,1698836652610
1698836650000,1698836651000,6,5845235851,1698836652610
1698836650000,1698836651000,9,299648370,1698836652610
1698836650000,1698836651000,1,36390966,1698836652610
[m
[36m[11:04:13.124304] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836653000-1698836654000[m
[36m[11:04:13.170360] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:13.624990] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836651000-1698836652000 [m
[36m[11:04:13.625829] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836651000-1698836652000-52[m
[36m[11:04:13.625945] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836651000-1698836652000[m
[36m[11:04:13.626022] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836651000-1698836652000[m
[36m[11:04:13.626152] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:13.626300] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:13.630137] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836651000,1698836652000,5,735958886,1698836653626
1698836651000,1698836652000,7,26897965090,1698836653626
1698836651000,1698836652000,6,5845238421,1698836653626
1698836651000,1698836652000,8,16371917655,1698836653626
1698836651000,1698836652000,9,299650711,1698836653626
1698836651000,1698836652000,10,326881903,1698836653626
1698836651000,1698836652000,11,317705812,1698836653626
1698836651000,1698836652000,4,2129384360,1698836653626
1698836651000,1698836652000,1,36395046,1698836653626
[m
[36m[11:04:14.123240] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836654000-1698836655000[m
[36m[11:04:14.171630] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:14.320485] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:14.321087] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:14.321842] [D] [thread 130981] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:14.321934] [I] [thread 130981] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:14.321953] [I] [thread 130981] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:14.322070] [I] [thread 130981] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:14.322083] [I] [thread 130981] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:14.497613] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:14.498964] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:14.641145] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836652000-1698836653000 [m
[36m[11:04:14.641818] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836652000-1698836653000-53[m
[36m[11:04:14.641897] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836652000-1698836653000[m
[36m[11:04:14.641939] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836652000-1698836653000[m
[36m[11:04:14.642014] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:14.642030] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:14.643847] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836652000,1698836653000,5,735961184,1698836654642
1698836652000,1698836653000,7,26897967522,1698836654642
1698836652000,1698836653000,9,299653281,1698836654642
1698836652000,1698836653000,6,5845240758,1698836654642
1698836652000,1698836653000,8,16371920084,1698836654642
1698836652000,1698836653000,10,326884340,1698836654642
1698836652000,1698836653000,11,317708403,1698836654642
1698836652000,1698836653000,4,2129386625,1698836654642
1698836652000,1698836653000,1,36400866,1698836654642
[m
[36m[11:04:15.118115] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836655000-1698836656000[m
[36m[11:04:15.500269] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:15.651992] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836653000-1698836654000 [m
[36m[11:04:15.653020] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836653000-1698836654000-54[m
[36m[11:04:15.653151] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836653000-1698836654000[m
[36m[11:04:15.653224] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836653000-1698836654000[m
[36m[11:04:15.653348] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:15.653378] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:15.656286] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836653000,1698836654000,5,735963484,1698836655653
1698836653000,1698836654000,7,26897969766,1698836655653
1698836653000,1698836654000,10,326886528,1698836655653
1698836653000,1698836654000,9,299655399,1698836655653
1698836653000,1698836654000,6,5845243012,1698836655653
1698836653000,1698836654000,8,16371922275,1698836655653
1698836653000,1698836654000,11,317710533,1698836655653
1698836653000,1698836654000,4,2129388991,1698836655653
1698836653000,1698836654000,1,36404877,1698836655653
[m
[36m[11:04:16.114069] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836656000-1698836657000[m
[36m[11:04:16.501693] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:16.528385] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:16.528955] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:16.529769] [D] [thread 130986] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:16.529860] [I] [thread 130986] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:16.529878] [I] [thread 130986] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:16.529997] [I] [thread 130986] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:16.530010] [I] [thread 130986] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:16.666090] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836654000-1698836655000 [m
[36m[11:04:16.667146] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836654000-1698836655000-55[m
[36m[11:04:16.667253] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836654000-1698836655000[m
[36m[11:04:16.667322] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836654000-1698836655000[m
[36m[11:04:16.667444] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:16.667477] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:16.671170] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836654000,1698836655000,10,326889275,1698836656667
1698836654000,1698836655000,5,735966130,1698836656667
1698836654000,1698836655000,9,299658209,1698836656667
1698836654000,1698836655000,7,26897972374,1698836656667
1698836654000,1698836655000,11,317713180,1698836656667
1698836654000,1698836655000,6,5845245601,1698836656667
1698836654000,1698836655000,4,2129391465,1698836656667
1698836654000,1698836655000,8,16371924900,1698836656667
1698836654000,1698836655000,1,36410700,1698836656667
[m
[36m[11:04:16.772279] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:16.772860] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:17.123544] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836657000-1698836658000[m
[36m[11:04:17.683221] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836655000-1698836656000 [m
[36m[11:04:17.684017] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836655000-1698836656000-56[m
[36m[11:04:17.684121] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836655000-1698836656000[m
[36m[11:04:17.684186] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836655000-1698836656000[m
[36m[11:04:17.684295] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:17.684323] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:17.687514] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836655000,1698836656000,7,26897974532,1698836657684
1698836655000,1698836656000,4,2129393785,1698836657684
1698836655000,1698836656000,11,317715490,1698836657684
1698836655000,1698836656000,6,5845247758,1698836657684
1698836655000,1698836656000,8,16371927043,1698836657684
1698836655000,1698836656000,10,326891496,1698836657684
1698836655000,1698836656000,9,299660524,1698836657684
1698836655000,1698836656000,5,735968483,1698836657684
1698836655000,1698836656000,1,36412552,1698836657684
[m
[36m[11:04:17.774130] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:18.114964] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836658000-1698836659000[m
[36m[11:04:18.699335] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836656000-1698836657000 [m
[36m[11:04:18.700149] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836656000-1698836657000-57[m
[36m[11:04:18.700253] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836656000-1698836657000[m
[36m[11:04:18.700317] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836656000-1698836657000[m
[36m[11:04:18.700427] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:18.700461] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:18.703569] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836656000,1698836657000,7,26897977263,1698836658700
1698836656000,1698836657000,6,5845250426,1698836658700
1698836656000,1698836657000,8,16371929586,1698836658700
1698836656000,1698836657000,10,326894068,1698836658700
1698836656000,1698836657000,9,299663051,1698836658700
1698836656000,1698836657000,4,2129396484,1698836658700
1698836656000,1698836657000,11,317718146,1698836658700
1698836656000,1698836657000,5,735971114,1698836658700
1698836656000,1698836657000,1,36417339,1698836658700
[m
[36m[11:04:18.775459] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:18.805257] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:18.805859] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:18.806596] [D] [thread 130991] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:18.806694] [I] [thread 130991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:18.806712] [I] [thread 130991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:18.806828] [I] [thread 130991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:18.806841] [I] [thread 130991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:18.975967] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:18.976501] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:19.115937] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836659000-1698836660000[m
[36m[11:04:19.715338] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836657000-1698836658000 [m
[36m[11:04:19.716357] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836657000-1698836658000-58[m
[36m[11:04:19.716470] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836657000-1698836658000[m
[36m[11:04:19.716545] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836657000-1698836658000[m
[36m[11:04:19.716672] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:19.716711] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:19.721275] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836657000,1698836658000,6,5845252716,1698836659716
1698836657000,1698836658000,8,16371931921,1698836659716
1698836657000,1698836658000,10,326896380,1698836659716
1698836657000,1698836658000,11,317720504,1698836659716
1698836657000,1698836658000,9,299665302,1698836659716
1698836657000,1698836658000,4,2129398628,1698836659716
1698836657000,1698836658000,7,26897979602,1698836659716
1698836657000,1698836658000,5,735973245,1698836659716
1698836657000,1698836658000,1,36421978,1698836659716
[m
[36m[11:04:19.977788] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:20.120419] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836660000-1698836661000[m
[36m[11:04:20.732684] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836658000-1698836659000 [m
[36m[11:04:20.733556] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836658000-1698836659000-59[m
[36m[11:04:20.733634] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836658000-1698836659000[m
[36m[11:04:20.733707] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836658000-1698836659000[m
[36m[11:04:20.733841] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:20.734148] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:20.738026] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836658000,1698836659000,8,16371934373,1698836660734
1698836658000,1698836659000,10,326898856,1698836660734
1698836658000,1698836659000,4,2129401290,1698836660734
1698836658000,1698836659000,11,317722774,1698836660734
1698836658000,1698836659000,9,299667832,1698836660734
1698836658000,1698836659000,7,26897982225,1698836660734
1698836658000,1698836659000,6,5845255461,1698836660734
1698836658000,1698836659000,5,735975955,1698836660734
1698836658000,1698836659000,1,36426009,1698836660734
[m
[36m[11:04:20.979122] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:21.123432] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:21.123754] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:21.124793] [D] [thread 130996] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:21.124890] [I] [thread 130996] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:21.124909] [I] [thread 130996] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:21.125025] [I] [thread 130996] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:21.125049] [I] [thread 130996] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:21.145016] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836661000-1698836662000[m
[36m[11:04:21.280795] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:21.281147] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:21.749386] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836659000-1698836660000 [m
[36m[11:04:21.750142] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836659000-1698836660000-60[m
[36m[11:04:21.750289] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836659000-1698836660000[m
[36m[11:04:21.750358] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836659000-1698836660000[m
[36m[11:04:21.750474] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:21.750503] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:21.753794] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836659000,1698836660000,8,16371936860,1698836661750
1698836659000,1698836660000,4,2129403446,1698836661750
1698836659000,1698836660000,11,317725295,1698836661750
1698836659000,1698836660000,9,299670225,1698836661750
1698836659000,1698836660000,7,26897984542,1698836661750
1698836659000,1698836660000,6,5845257724,1698836661750
1698836659000,1698836660000,10,326901529,1698836661750
1698836659000,1698836660000,5,735978177,1698836661750
1698836659000,1698836660000,1,36431825,1698836661750
[m
[36m[11:04:22.124881] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836662000-1698836663000[m
[36m[11:04:22.282335] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:22.766685] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836660000-1698836661000 [m
[36m[11:04:22.767401] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836660000-1698836661000-61[m
[36m[11:04:22.767495] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836660000-1698836661000[m
[36m[11:04:22.767546] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836660000-1698836661000[m
[36m[11:04:22.767638] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:22.767661] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:22.769691] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836660000,1698836661000,4,2129405963,1698836662767
1698836660000,1698836661000,11,317727465,1698836662767
1698836660000,1698836661000,9,299672377,1698836662767
1698836660000,1698836661000,7,26897986827,1698836662767
1698836660000,1698836661000,10,326903707,1698836662767
1698836660000,1698836661000,6,5845260121,1698836662767
1698836660000,1698836661000,5,735980614,1698836662767
1698836660000,1698836661000,8,16371939334,1698836662767
1698836660000,1698836661000,1,36435786,1698836662767
[m
[36m[11:04:23.148728] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836663000-1698836664000[m
[36m[11:04:23.283624] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:23.383333] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:23.383646] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:23.384727] [D] [thread 131001] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:23.384827] [I] [thread 131001] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:23.384844] [I] [thread 131001] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:23.384961] [I] [thread 131001] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:23.385024] [I] [thread 131001] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:23.679722] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:23.680066] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:23.778528] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836661000-1698836662000 [m
[36m[11:04:23.779476] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836661000-1698836662000-62[m
[36m[11:04:23.779577] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836661000-1698836662000[m
[36m[11:04:23.779642] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836661000-1698836662000[m
[36m[11:04:23.779756] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:23.779785] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:23.783590] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836661000,1698836662000,9,299675074,1698836663779
1698836661000,1698836662000,11,317730107,1698836663779
1698836661000,1698836662000,7,26897989330,1698836663779
1698836661000,1698836662000,6,5845262543,1698836663779
1698836661000,1698836662000,10,326906245,1698836663779
1698836661000,1698836662000,5,735982972,1698836663779
1698836661000,1698836662000,8,16371941832,1698836663779
1698836661000,1698836662000,4,2129408481,1698836663779
1698836661000,1698836662000,1,36441390,1698836663779
[m
[36m[11:04:24.111233] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836664000-1698836665000[m
[36m[11:04:24.681246] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:24.794064] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836662000-1698836663000 [m
[36m[11:04:24.795155] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836662000-1698836663000-63[m
[36m[11:04:24.795261] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836662000-1698836663000[m
[36m[11:04:24.795328] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836662000-1698836663000[m
[36m[11:04:24.795439] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:24.795470] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:24.799326] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836662000,1698836663000,9,299677314,1698836664795
1698836662000,1698836663000,11,317732350,1698836664795
1698836662000,1698836663000,7,26897991551,1698836664795
1698836662000,1698836663000,6,5845264799,1698836664795
1698836662000,1698836663000,4,2129410764,1698836664795
1698836662000,1698836663000,5,735985273,1698836664795
1698836662000,1698836663000,10,326908467,1698836664795
1698836662000,1698836663000,8,16371943955,1698836664795
1698836662000,1698836663000,1,36444678,1698836664795
[m
[36m[11:04:25.137688] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836665000-1698836666000[m
[36m[11:04:25.682542] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:25.791544] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:25.791886] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:25.792974] [D] [thread 131006] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:25.793052] [I] [thread 131006] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:25.793069] [I] [thread 131006] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:25.793178] [I] [thread 131006] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:25.793190] [I] [thread 131006] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:25.810267] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836663000-1698836664000 [m
[36m[11:04:25.810992] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836663000-1698836664000-64[m
[36m[11:04:25.811082] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836663000-1698836664000[m
[36m[11:04:25.811139] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836663000-1698836664000[m
[36m[11:04:25.811238] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:25.811265] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:25.813886] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836663000,1698836664000,4,2129413295,1698836665811
1698836663000,1698836664000,7,26897994174,1698836665811
1698836663000,1698836664000,6,5845267396,1698836665811
1698836663000,1698836664000,10,326911038,1698836665811
1698836663000,1698836664000,5,735987845,1698836665811
1698836663000,1698836664000,8,16371946639,1698836665811
1698836663000,1698836664000,11,317735043,1698836665811
1698836663000,1698836664000,9,299680106,1698836665811
1698836663000,1698836664000,1,36449060,1698836665811
[m
[36m[11:04:25.956048] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:25.956430] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:26.127141] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836666000-1698836667000[m
[36m[11:04:26.824050] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836664000-1698836665000 [m
[36m[11:04:26.824866] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836664000-1698836665000-65[m
[36m[11:04:26.824980] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836664000-1698836665000[m
[36m[11:04:26.825048] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836664000-1698836665000[m
[36m[11:04:26.825162] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:26.825193] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:26.828590] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836664000,1698836665000,4,2129415587,1698836666825
1698836664000,1698836665000,7,26897996348,1698836666825
1698836664000,1698836665000,10,326913231,1698836666825
1698836664000,1698836665000,6,5845269570,1698836666825
1698836664000,1698836665000,8,16371948852,1698836666825
1698836664000,1698836665000,5,735990009,1698836666825
1698836664000,1698836665000,11,317737281,1698836666825
1698836664000,1698836665000,9,299682274,1698836666825
1698836664000,1698836665000,1,36452858,1698836666825
[m
[36m[11:04:26.957650] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:27.124470] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836667000-1698836668000[m
[36m[11:04:27.839433] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836665000-1698836666000 [m
[36m[11:04:27.840351] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836665000-1698836666000-66[m
[36m[11:04:27.840452] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836665000-1698836666000[m
[36m[11:04:27.840515] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836665000-1698836666000[m
[36m[11:04:27.840630] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:27.840684] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:27.844314] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836665000,1698836666000,7,26897998869,1698836667840
1698836665000,1698836666000,10,326915591,1698836667840
1698836665000,1698836666000,6,5845272128,1698836667840
1698836665000,1698836666000,8,16371951350,1698836667840
1698836665000,1698836666000,5,735992608,1698836667840
1698836665000,1698836666000,11,317739683,1698836667840
1698836665000,1698836666000,9,299684788,1698836667840
1698836665000,1698836666000,4,2129418375,1698836667840
1698836665000,1698836666000,1,36457876,1698836667840
[m
[36m[11:04:27.958940] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:28.029084] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:28.029434] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:28.030604] [D] [thread 131011] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:28.030709] [I] [thread 131011] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:28.030728] [I] [thread 131011] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:28.030852] [I] [thread 131011] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:28.030876] [I] [thread 131011] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:28.121000] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836668000-1698836669000[m
[36m[11:04:28.237866] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:28.238383] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:28.857105] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836666000-1698836667000 [m
[36m[11:04:28.857923] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836666000-1698836667000-67[m
[36m[11:04:28.858027] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836666000-1698836667000[m
[36m[11:04:28.858094] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836666000-1698836667000[m
[36m[11:04:28.858248] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:28.858280] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:28.861584] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836666000,1698836667000,7,26898001222,1698836668858
1698836666000,1698836667000,10,326918127,1698836668858
1698836666000,1698836667000,6,5845274421,1698836668858
1698836666000,1698836667000,8,16371953641,1698836668858
1698836666000,1698836667000,5,735994883,1698836668858
1698836666000,1698836667000,9,299687048,1698836668858
1698836666000,1698836667000,11,317742192,1698836668858
1698836666000,1698836667000,4,2129420500,1698836668858
1698836666000,1698836667000,1,36462468,1698836668858
[m
[36m[11:04:29.119029] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836669000-1698836670000[m
[36m[11:04:29.239662] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:29.872556] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836667000-1698836668000 [m
[36m[11:04:29.873174] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836667000-1698836668000-68[m
[36m[11:04:29.873263] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836667000-1698836668000[m
[36m[11:04:29.873319] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836667000-1698836668000[m
[36m[11:04:29.873416] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:29.873443] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:29.876159] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836667000,1698836668000,7,26898003791,1698836669873
1698836667000,1698836668000,6,5845276875,1698836669873
1698836667000,1698836668000,9,299689326,1698836669873
1698836667000,1698836668000,5,735997346,1698836669873
1698836667000,1698836668000,8,16371956049,1698836669873
1698836667000,1698836668000,11,317744365,1698836669873
1698836667000,1698836668000,4,2129422988,1698836669873
1698836667000,1698836668000,10,326920462,1698836669873
1698836667000,1698836668000,1,36466445,1698836669873
[m
[36m[11:04:30.125494] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836670000-1698836671000[m
[36m[11:04:30.240942] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:30.340398] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:30.340982] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:30.341753] [D] [thread 131017] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:30.341848] [I] [thread 131017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:30.341865] [I] [thread 131017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:30.341982] [I] [thread 131017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:30.341994] [I] [thread 131017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:30.551360] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:30.551882] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:30.886537] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836668000-1698836669000 [m
[36m[11:04:30.887149] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836668000-1698836669000-69[m
[36m[11:04:30.887210] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836668000-1698836669000[m
[36m[11:04:30.887251] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836668000-1698836669000[m
[36m[11:04:30.887326] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:30.887345] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:30.889029] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836668000,1698836669000,6,5845279402,1698836670887
1698836668000,1698836669000,9,299691990,1698836670887
1698836668000,1698836669000,5,735999810,1698836670887
1698836668000,1698836669000,4,2129425240,1698836670887
1698836668000,1698836669000,8,16371958488,1698836670887
1698836668000,1698836669000,11,317746988,1698836670887
1698836668000,1698836669000,10,326923019,1698836670887
1698836668000,1698836669000,7,26898006309,1698836670887
1698836668000,1698836669000,1,36472361,1698836670887
[m
[36m[11:04:31.134617] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836671000-1698836672000[m
[36m[11:04:31.553200] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:31.897159] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836669000-1698836670000 [m
[36m[11:04:31.898082] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836669000-1698836670000-70[m
[36m[11:04:31.898345] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836669000-1698836670000[m
[36m[11:04:31.898440] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836669000-1698836670000[m
[36m[11:04:31.898587] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:31.898660] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:31.903039] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836669000,1698836670000,4,2129427672,1698836671898
1698836669000,1698836670000,11,317749262,1698836671898
1698836669000,1698836670000,8,16371960678,1698836671898
1698836669000,1698836670000,10,326925164,1698836671898
1698836669000,1698836670000,7,26898008551,1698836671898
1698836669000,1698836670000,5,736002260,1698836671898
1698836669000,1698836670000,6,5845281836,1698836671898
1698836669000,1698836670000,9,299694228,1698836671898
1698836669000,1698836670000,1,36476362,1698836671898
[m
[36m[11:04:32.132135] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836672000-1698836673000[m
[36m[11:04:32.554565] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:32.652867] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:32.653451] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:32.654304] [D] [thread 131022] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:32.654396] [I] [thread 131022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:32.654417] [I] [thread 131022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:32.654535] [I] [thread 131022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:32.654548] [I] [thread 131022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:32.916048] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836670000-1698836671000 [m
[36m[11:04:32.916603] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836670000-1698836671000-71[m
[36m[11:04:32.916923] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836670000-1698836671000[m
[36m[11:04:32.916997] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836670000-1698836671000[m
[36m[11:04:32.917088] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:32.917106] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:32.918859] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836670000,1698836671000,10,326927893,1698836672917
1698836670000,1698836671000,8,16371963278,1698836672917
1698836670000,1698836671000,4,2129430229,1698836672917
1698836670000,1698836671000,7,26898011150,1698836672917
1698836670000,1698836671000,11,317751999,1698836672917
1698836670000,1698836671000,9,299696884,1698836672917
1698836670000,1698836671000,5,736004779,1698836672917
1698836670000,1698836671000,6,5845284402,1698836672917
1698836670000,1698836671000,1,36480002,1698836672917
[m
[36m[11:04:32.919916] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:32.920225] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:33.127771] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836673000-1698836674000[m
[36m[11:04:33.921479] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:33.937261] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836671000-1698836672000 [m
[36m[11:04:33.938366] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836671000-1698836672000-72[m
[36m[11:04:33.938447] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836671000-1698836672000[m
[36m[11:04:33.938487] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836671000-1698836672000[m
[36m[11:04:33.938564] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:33.938583] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:33.940365] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836671000,1698836672000,8,16371965513,1698836673938
1698836671000,1698836672000,4,2129432373,1698836673938
1698836671000,1698836672000,11,317754242,1698836673938
1698836671000,1698836672000,9,299698990,1698836673938
1698836671000,1698836672000,6,5845286540,1698836673938
1698836671000,1698836672000,5,736006957,1698836673938
1698836671000,1698836672000,7,26898013322,1698836673938
1698836671000,1698836672000,10,326930171,1698836673938
1698836671000,1698836672000,1,36483815,1698836673938
[m
[36m[11:04:34.115854] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836674000-1698836675000[m
[36m[11:04:34.922892] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:34.939286] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836672000-1698836673000 [m
[36m[11:04:34.940194] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836672000-1698836673000-73[m
[36m[11:04:34.940311] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836672000-1698836673000[m
[36m[11:04:34.940384] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836672000-1698836673000[m
[36m[11:04:34.940511] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:34.940541] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:34.943989] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836672000,1698836673000,8,16371968057,1698836674940
1698836672000,1698836673000,4,2129435023,1698836674940
1698836672000,1698836673000,9,299701543,1698836674940
1698836672000,1698836673000,11,317756643,1698836674940
1698836672000,1698836673000,10,326932704,1698836674940
1698836672000,1698836673000,6,5845289226,1698836674940
1698836672000,1698836673000,7,26898015953,1698836674940
1698836672000,1698836673000,5,736009656,1698836674940
1698836672000,1698836673000,1,36488771,1698836674940
[m
[36m[11:04:34.966941] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:34.967289] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:34.968258] [D] [thread 131027] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:34.968353] [I] [thread 131027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:34.968370] [I] [thread 131027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:34.968486] [I] [thread 131027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:34.968500] [I] [thread 131027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:35.110705] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836675000-1698836676000[m
[36m[11:04:35.143947] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:35.144373] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:35.954679] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836673000-1698836674000 [m
[36m[11:04:35.955500] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836673000-1698836674000-74[m
[36m[11:04:35.955570] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836673000-1698836674000[m
[36m[11:04:35.955630] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836673000-1698836674000[m
[36m[11:04:35.955737] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:35.955764] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:35.959129] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836673000,1698836674000,4,2129437281,1698836675955
1698836673000,1698836674000,8,16371970374,1698836675955
1698836673000,1698836674000,11,317759075,1698836675955
1698836673000,1698836674000,10,326935086,1698836675955
1698836673000,1698836674000,9,299703871,1698836675955
1698836673000,1698836674000,6,5845291458,1698836675955
1698836673000,1698836674000,5,736011832,1698836675955
1698836673000,1698836674000,7,26898018221,1698836675955
1698836673000,1698836674000,1,36493289,1698836675955
[m
[36m[11:04:36.143959] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836676000-1698836677000[m
[36m[11:04:36.145571] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:36.971315] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836674000-1698836675000 [m
[36m[11:04:36.972189] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836674000-1698836675000-75[m
[36m[11:04:36.972304] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836674000-1698836675000[m
[36m[11:04:36.972376] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836674000-1698836675000[m
[36m[11:04:36.972502] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:36.972538] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:36.976506] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836674000,1698836675000,8,16371972819,1698836676972
1698836674000,1698836675000,11,317761250,1698836676972
1698836674000,1698836675000,10,326937401,1698836676972
1698836674000,1698836675000,9,299706137,1698836676972
1698836674000,1698836675000,6,5845293889,1698836676972
1698836674000,1698836675000,5,736014337,1698836676972
1698836674000,1698836675000,7,26898020665,1698836676972
1698836674000,1698836675000,4,2129439948,1698836676972
1698836674000,1698836675000,1,36497304,1698836676972
[m
[36m[11:04:37.134162] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836677000-1698836678000[m
[36m[11:04:37.146793] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:37.182520] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:37.182838] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:37.183831] [D] [thread 131032] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:37.183926] [I] [thread 131032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:37.183945] [I] [thread 131032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:37.184061] [I] [thread 131032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:37.184074] [I] [thread 131032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:37.382532] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:37.382874] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:37.987629] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836675000-1698836676000 [m
[36m[11:04:37.988297] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836675000-1698836676000-76[m
[36m[11:04:37.988372] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836675000-1698836676000[m
[36m[11:04:37.988413] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836675000-1698836676000[m
[36m[11:04:37.988486] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:37.988506] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:37.990527] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836675000,1698836676000,11,317763987,1698836677988
1698836675000,1698836676000,10,326940025,1698836677988
1698836675000,1698836676000,9,299708713,1698836677988
1698836675000,1698836676000,6,5845296233,1698836677988
1698836675000,1698836676000,5,736016713,1698836677988
1698836675000,1698836676000,7,26898023018,1698836677988
1698836675000,1698836676000,4,2129442228,1698836677988
1698836675000,1698836676000,8,16371975428,1698836677988
1698836675000,1698836676000,1,36502674,1698836677988
[m
[36m[11:04:38.129883] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836678000-1698836679000[m
[36m[11:04:38.384061] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:39.001555] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836676000-1698836677000 [m
[36m[11:04:39.002497] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836676000-1698836677000-77[m
[36m[11:04:39.002608] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836676000-1698836677000[m
[36m[11:04:39.002680] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836676000-1698836677000[m
[36m[11:04:39.002819] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:39.002857] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:39.006963] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836676000,1698836677000,6,5845298597,1698836679002
1698836676000,1698836677000,5,736019059,1698836679002
1698836676000,1698836677000,7,26898025355,1698836679002
1698836676000,1698836677000,11,317766237,1698836679002
1698836676000,1698836677000,9,299711004,1698836679002
1698836676000,1698836677000,10,326942349,1698836679002
1698836676000,1698836677000,8,16371977721,1698836679002
1698836676000,1698836677000,4,2129444608,1698836679002
1698836676000,1698836677000,1,36506561,1698836679002
[m
[36m[11:04:39.118360] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836679000-1698836680000[m
[36m[11:04:39.385319] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:39.416598] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:39.416962] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:39.417949] [D] [thread 131037] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:39.418044] [I] [thread 131037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:39.418063] [I] [thread 131037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:39.418180] [I] [thread 131037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:39.418236] [I] [thread 131037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:39.607306] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:39.607651] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:40.018619] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836677000-1698836678000 [m
[36m[11:04:40.018853] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836678000-1698836679000 [m
[36m[11:04:40.019531] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836677000-1698836678000-78[m
[36m[11:04:40.019630] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836677000-1698836678000[m
[36m[11:04:40.019697] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836677000-1698836678000[m
[36m[11:04:40.019809] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:40.019839] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:40.023238] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836677000,1698836678000,6,5845301093,1698836680019
1698836677000,1698836678000,5,736021485,1698836680019
1698836677000,1698836678000,11,317768924,1698836680019
1698836677000,1698836678000,7,26898027874,1698836680019
1698836677000,1698836678000,4,2129447008,1698836680019
1698836677000,1698836678000,10,326944917,1698836680019
1698836677000,1698836678000,9,299713636,1698836680019
1698836677000,1698836678000,8,16371980236,1698836680019
1698836677000,1698836678000,1,36511486,1698836680019
[m
[36m[11:04:40.024066] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836678000-1698836679000-79[m
[36m[11:04:40.024172] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836678000-1698836679000[m
[36m[11:04:40.024240] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836678000-1698836679000[m
[36m[11:04:40.024359] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:40.024392] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:40.027584] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836678000,1698836679000,6,5845303388,1698836680024
1698836678000,1698836679000,5,736023763,1698836680024
1698836678000,1698836679000,7,26898030134,1698836680024
1698836678000,1698836679000,10,326947111,1698836680024
1698836678000,1698836679000,4,2129449309,1698836680024
1698836678000,1698836679000,9,299715794,1698836680024
1698836678000,1698836679000,8,16371982435,1698836680024
1698836678000,1698836679000,11,317771290,1698836680024
[m
[36m[11:04:40.111248] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836680000-1698836681000[m
[36m[11:04:40.608923] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:41.034490] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836679000-1698836680000 [m
[36m[11:04:41.035385] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836679000-1698836680000-80[m
[36m[11:04:41.035466] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836679000-1698836680000[m
[36m[11:04:41.035532] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836679000-1698836680000[m
[36m[11:04:41.035653] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:41.035687] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:41.039613] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836679000,1698836680000,6,5845305955,1698836681035
1698836679000,1698836680000,10,326949793,1698836681035
1698836679000,1698836680000,5,736026502,1698836681035
1698836679000,1698836680000,4,2129451830,1698836681035
1698836679000,1698836680000,9,299718373,1698836681035
1698836679000,1698836680000,7,26898032771,1698836681035
1698836679000,1698836680000,11,317773839,1698836681035
1698836679000,1698836680000,8,16371985099,1698836681035
1698836679000,1698836680000,1,36514160,1698836681035
[m
[36m[11:04:41.136609] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836681000-1698836682000[m
[36m[11:04:41.610264] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:41.643545] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:41.643869] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:41.645047] [D] [thread 131042] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:41.645142] [I] [thread 131042] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:41.645160] [I] [thread 131042] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:41.645279] [I] [thread 131042] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:41.645292] [I] [thread 131042] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:41.839235] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:41.839724] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:42.050698] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836680000-1698836681000 [m
[36m[11:04:42.051581] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836680000-1698836681000-81[m
[36m[11:04:42.051690] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836680000-1698836681000[m
[36m[11:04:42.051766] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836680000-1698836681000[m
[36m[11:04:42.051898] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:42.051937] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:42.055878] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836680000,1698836681000,6,5845308263,1698836682051
1698836680000,1698836681000,4,2129454080,1698836682051
1698836680000,1698836681000,9,299720678,1698836682051
1698836680000,1698836681000,7,26898034925,1698836682051
1698836680000,1698836681000,11,317776111,1698836682051
1698836680000,1698836681000,8,16371987306,1698836682051
1698836680000,1698836681000,10,326952172,1698836682051
1698836680000,1698836681000,5,736028778,1698836682051
1698836680000,1698836681000,1,36519796,1698836682051
[m
[36m[11:04:42.121320] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836682000-1698836683000[m
[36m[11:04:42.841009] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:43.066807] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836681000-1698836682000 [m
[36m[11:04:43.067666] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836681000-1698836682000-82[m
[36m[11:04:43.067775] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836681000-1698836682000[m
[36m[11:04:43.067848] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836681000-1698836682000[m
[36m[11:04:43.067971] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:43.068006] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:43.071854] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836681000,1698836682000,11,317778431,1698836683068
1698836681000,1698836682000,7,26898037518,1698836683068
1698836681000,1698836682000,8,16371989849,1698836683068
1698836681000,1698836682000,10,326954620,1698836683068
1698836681000,1698836682000,5,736031451,1698836683068
1698836681000,1698836682000,6,5845311012,1698836683068
1698836681000,1698836682000,9,299723296,1698836683068
1698836681000,1698836682000,4,2129456837,1698836683068
1698836681000,1698836682000,1,36524174,1698836683068
[m
[36m[11:04:43.119921] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836683000-1698836684000[m
[36m[11:04:43.837136] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:43.837871] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:43.839041] [D] [thread 131048] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:43.839151] [I] [thread 131048] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:43.839171] [I] [thread 131048] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:43.839298] [I] [thread 131048] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:43.839313] [I] [thread 131048] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:44.036748] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:44.037231] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:44.082641] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836682000-1698836683000 [m
[36m[11:04:44.083523] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836682000-1698836683000-83[m
[36m[11:04:44.083631] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836682000-1698836683000[m
[36m[11:04:44.083704] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836682000-1698836683000[m
[36m[11:04:44.083831] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:44.083865] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:44.087819] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836682000,1698836683000,11,317780968,1698836684083
1698836682000,1698836683000,7,26898039867,1698836684083
1698836682000,1698836683000,8,16371992082,1698836684083
1698836682000,1698836683000,10,326956960,1698836684083
1698836682000,1698836683000,9,299725549,1698836684083
1698836682000,1698836683000,5,736033620,1698836684083
1698836682000,1698836683000,4,2129458907,1698836684083
1698836682000,1698836683000,6,5845313247,1698836684083
1698836682000,1698836683000,1,36529636,1698836684083
[m
[36m[11:04:44.131036] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836684000-1698836685000[m
[36m[11:04:45.038344] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:45.098539] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836683000-1698836684000 [m
[36m[11:04:45.099201] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836683000-1698836684000-84[m
[36m[11:04:45.099282] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836683000-1698836684000[m
[36m[11:04:45.099335] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836683000-1698836684000[m
[36m[11:04:45.099411] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:45.099430] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:45.101149] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836683000,1698836684000,7,26898042447,1698836685099
1698836683000,1698836684000,8,16371994485,1698836685099
1698836683000,1698836684000,10,326959298,1698836685099
1698836683000,1698836684000,9,299727855,1698836685099
1698836683000,1698836684000,5,736036237,1698836685099
1698836683000,1698836684000,6,5845315741,1698836685099
1698836683000,1698836684000,4,2129461439,1698836685099
1698836683000,1698836684000,11,317783343,1698836685099
1698836683000,1698836684000,1,36533520,1698836685099
[m
[36m[11:04:45.136158] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836685000-1698836686000[m
[36m[11:04:46.039587] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:46.109384] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836684000-1698836685000 [m
[36m[11:04:46.110555] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836684000-1698836685000-85[m
[36m[11:04:46.110685] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836684000-1698836685000[m
[36m[11:04:46.110768] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836684000-1698836685000[m
[36m[11:04:46.110913] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:46.110953] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:46.115004] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836684000,1698836685000,10,326961873,1698836686110
1698836684000,1698836685000,8,16371996948,1698836686110
1698836684000,1698836685000,9,299730268,1698836686110
1698836684000,1698836685000,5,736038490,1698836686110
1698836684000,1698836685000,4,2129463645,1698836686110
1698836684000,1698836685000,6,5845318060,1698836686110
1698836684000,1698836685000,11,317785890,1698836686110
1698836684000,1698836685000,7,26898044887,1698836686110
1698836684000,1698836685000,1,36539312,1698836686110
[m
[36m[11:04:46.122990] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836686000-1698836687000[m
[36m[11:04:46.145945] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:46.146589] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:46.147576] [D] [thread 131053] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:46.147683] [I] [thread 131053] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:46.147703] [I] [thread 131053] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:46.147832] [I] [thread 131053] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:46.147851] [I] [thread 131053] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:46.316483] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:46.316843] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:47.124928] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836685000-1698836686000 [m
[36m[11:04:47.125802] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836685000-1698836686000-86[m
[36m[11:04:47.125924] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836685000-1698836686000[m
[36m[11:04:47.126005] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836685000-1698836686000[m
[36m[11:04:47.126135] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:47.126167] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:47.130046] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836685000,1698836686000,8,16371999234,1698836687126
1698836685000,1698836686000,9,299732541,1698836687126
1698836685000,1698836686000,4,2129466128,1698836687126
1698836685000,1698836686000,5,736040919,1698836687126
1698836685000,1698836686000,6,5845320470,1698836687126
1698836685000,1698836686000,11,317788023,1698836687126
1698836685000,1698836686000,7,26898047298,1698836687126
1698836685000,1698836686000,10,326964219,1698836687126
1698836685000,1698836686000,1,36543178,1698836687126
[m
[36m[11:04:47.130860] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836687000-1698836688000[m
[36m[11:04:47.318046] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:48.119156] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836688000-1698836689000[m
[36m[11:04:48.141300] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836686000-1698836687000 [m
[36m[11:04:48.142088] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836686000-1698836687000-87[m
[36m[11:04:48.142239] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836686000-1698836687000[m
[36m[11:04:48.142308] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836686000-1698836687000[m
[36m[11:04:48.142421] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:48.142453] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:48.145816] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836686000,1698836687000,4,2129468615,1698836688142
1698836686000,1698836687000,9,299735249,1698836688142
1698836686000,1698836687000,8,16372001809,1698836688142
1698836686000,1698836687000,5,736043391,1698836688142
1698836686000,1698836687000,6,5845322995,1698836688142
1698836686000,1698836687000,11,317790650,1698836688142
1698836686000,1698836687000,10,326966845,1698836688142
1698836686000,1698836687000,7,26898049870,1698836688142
1698836686000,1698836687000,1,36545026,1698836688142
[m
[36m[11:04:48.319295] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:48.383765] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:48.384072] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:48.385087] [D] [thread 131058] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:48.385180] [I] [thread 131058] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:48.385199] [I] [thread 131058] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:48.385313] [I] [thread 131058] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:48.385326] [I] [thread 131058] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:48.578368] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:48.578731] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:49.113149] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836689000-1698836690000[m
[36m[11:04:49.157123] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836687000-1698836688000 [m
[36m[11:04:49.157946] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836687000-1698836688000-88[m
[36m[11:04:49.158048] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836687000-1698836688000[m
[36m[11:04:49.158113] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836687000-1698836688000[m
[36m[11:04:49.158269] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:49.158303] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:49.161585] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836687000,1698836688000,8,16372004101,1698836689158
1698836687000,1698836688000,5,736045730,1698836689158
1698836687000,1698836688000,11,317792785,1698836689158
1698836687000,1698836688000,6,5845325229,1698836689158
1698836687000,1698836688000,10,326969023,1698836689158
1698836687000,1698836688000,7,26898052051,1698836689158
1698836687000,1698836688000,4,2129470935,1698836689158
1698836687000,1698836688000,9,299737475,1698836689158
1698836687000,1698836688000,1,36550770,1698836689158
[m
[36m[11:04:49.579948] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:50.116163] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836690000-1698836691000[m
[36m[11:04:50.173080] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836688000-1698836689000 [m
[36m[11:04:50.174452] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836688000-1698836689000-89[m
[36m[11:04:50.174571] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836688000-1698836689000[m
[36m[11:04:50.174650] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836688000-1698836689000[m
[36m[11:04:50.174780] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:50.174818] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:50.178660] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836688000,1698836689000,5,736048381,1698836690174
1698836688000,1698836689000,11,317795239,1698836690174
1698836688000,1698836689000,6,5845327844,1698836690174
1698836688000,1698836689000,4,2129473451,1698836690174
1698836688000,1698836689000,10,326971531,1698836690174
1698836688000,1698836689000,7,26898054651,1698836690174
1698836688000,1698836689000,9,299740066,1698836690174
1698836688000,1698836689000,8,16372006869,1698836690174
1698836688000,1698836689000,1,36554727,1698836690174
[m
[36m[11:04:50.581194] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:50.587614] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:50.587953] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:50.589120] [D] [thread 131063] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:50.589231] [I] [thread 131063] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:50.589249] [I] [thread 131063] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:50.589336] [I] [thread 131063] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:50.589349] [I] [thread 131063] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:50.808997] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:50.809353] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:51.114826] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836691000-1698836692000[m
[36m[11:04:51.189963] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836689000-1698836690000 [m
[36m[11:04:51.190817] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836689000-1698836690000-90[m
[36m[11:04:51.190924] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836689000-1698836690000[m
[36m[11:04:51.190992] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836689000-1698836690000[m
[36m[11:04:51.191106] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:51.191135] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:51.194506] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836689000,1698836690000,11,317797621,1698836691191
1698836689000,1698836690000,6,5845329994,1698836691191
1698836689000,1698836690000,4,2129475608,1698836691191
1698836689000,1698836690000,10,326973714,1698836691191
1698836689000,1698836690000,9,299742253,1698836691191
1698836689000,1698836690000,7,26898056842,1698836691191
1698836689000,1698836690000,8,16372009021,1698836691191
1698836689000,1698836690000,5,736050667,1698836691191
1698836689000,1698836690000,1,36560381,1698836691191
[m
[36m[11:04:51.810545] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:52.168683] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836692000-1698836693000[m
[36m[11:04:52.205205] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836690000-1698836691000 [m
[36m[11:04:52.205988] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836690000-1698836691000-91[m
[36m[11:04:52.206090] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836690000-1698836691000[m
[36m[11:04:52.206159] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836690000-1698836691000[m
[36m[11:04:52.206367] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:52.206423] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:52.209701] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836690000,1698836691000,6,5845332679,1698836692206
1698836690000,1698836691000,4,2129478350,1698836692206
1698836690000,1698836691000,10,326976309,1698836692206
1698836690000,1698836691000,9,299744783,1698836692206
1698836690000,1698836691000,7,26898059482,1698836692206
1698836690000,1698836691000,8,16372011615,1698836692206
1698836690000,1698836691000,11,317800209,1698836692206
1698836690000,1698836691000,5,736053323,1698836692206
1698836690000,1698836691000,1,36564376,1698836692206
[m
[36m[11:04:52.811942] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:52.911390] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:52.911743] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:52.912775] [D] [thread 131068] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:52.912874] [I] [thread 131068] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:52.912892] [I] [thread 131068] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:52.913009] [I] [thread 131068] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:52.913033] [I] [thread 131068] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:53.143982] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836693000-1698836694000[m
[36m[11:04:53.221271] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836691000-1698836692000 [m
[36m[11:04:53.222094] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836691000-1698836692000-92[m
[36m[11:04:53.222223] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836691000-1698836692000[m
[36m[11:04:53.222284] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836691000-1698836692000[m
[36m[11:04:53.222372] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:53.222395] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:53.224844] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836691000,1698836692000,6,5845335005,1698836693222
1698836691000,1698836692000,9,299747139,1698836693222
1698836691000,1698836692000,7,26898061706,1698836693222
1698836691000,1698836692000,11,317802611,1698836693222
1698836691000,1698836692000,8,16372013846,1698836693222
1698836691000,1698836692000,4,2129480575,1698836693222
1698836691000,1698836692000,5,736055512,1698836693222
1698836691000,1698836692000,10,326978800,1698836693222
1698836691000,1698836692000,1,36569939,1698836693222
[m
[36m[11:04:53.347076] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:53.347641] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:54.136211] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836694000-1698836695000[m
[36m[11:04:54.233978] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836692000-1698836693000 [m
[36m[11:04:54.234854] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836692000-1698836693000-93[m
[36m[11:04:54.234961] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836692000-1698836693000[m
[36m[11:04:54.235025] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836692000-1698836693000[m
[36m[11:04:54.235143] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:54.235175] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:54.238518] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836692000,1698836693000,11,317804909,1698836694235
1698836692000,1698836693000,4,2129483157,1698836694235
1698836692000,1698836693000,7,26898064133,1698836694235
1698836692000,1698836693000,8,16372016359,1698836694235
1698836692000,1698836693000,10,326981128,1698836694235
1698836692000,1698836693000,5,736058103,1698836694235
1698836692000,1698836693000,6,5845337667,1698836694235
1698836692000,1698836693000,9,299749634,1698836694235
1698836692000,1698836693000,1,36573892,1698836694235
[m
[36m[11:04:54.348953] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:55.115409] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836695000-1698836696000[m
[36m[11:04:55.249909] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836693000-1698836694000 [m
[36m[11:04:55.251051] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836693000-1698836694000-94[m
[36m[11:04:55.251166] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836693000-1698836694000[m
[36m[11:04:55.251240] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836693000-1698836694000[m
[36m[11:04:55.251362] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:55.251396] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:55.255186] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836693000,1698836694000,11,317807420,1698836695251
1698836693000,1698836694000,4,2129485384,1698836695251
1698836693000,1698836694000,7,26898066526,1698836695251
1698836693000,1698836694000,10,326983620,1698836695251
1698836693000,1698836694000,5,736060351,1698836695251
1698836693000,1698836694000,8,16372018716,1698836695251
1698836693000,1698836694000,9,299752115,1698836695251
1698836693000,1698836694000,6,5845339995,1698836695251
1698836693000,1698836694000,1,36577535,1698836695251
[m
[36m[11:04:55.350157] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:55.351449] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:55.351948] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:55.352771] [D] [thread 131073] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:55.352863] [I] [thread 131073] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:55.352881] [I] [thread 131073] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:55.353000] [I] [thread 131073] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:55.353013] [I] [thread 131073] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:55.556092] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:55.556643] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:56.135394] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836696000-1698836697000[m
[36m[11:04:56.266067] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836694000-1698836695000 [m
[36m[11:04:56.267000] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836694000-1698836695000-95[m
[36m[11:04:56.267115] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836694000-1698836695000[m
[36m[11:04:56.267188] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836694000-1698836695000[m
[36m[11:04:56.267312] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:56.267347] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:56.271278] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836694000,1698836695000,4,2129487642,1698836696267
1698836694000,1698836695000,11,317809535,1698836696267
1698836694000,1698836695000,10,326985907,1698836696267
1698836694000,1698836695000,7,26898068754,1698836696267
1698836694000,1698836695000,8,16372020878,1698836696267
1698836694000,1698836695000,5,736062655,1698836696267
1698836694000,1698836695000,9,299754207,1698836696267
1698836694000,1698836695000,6,5845342297,1698836696267
1698836694000,1698836695000,1,36581377,1698836696267
[m
[36m[11:04:56.557964] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:57.128116] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836697000-1698836698000[m
[36m[11:04:57.281388] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836695000-1698836696000 [m
[36m[11:04:57.282244] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836695000-1698836696000-96[m
[36m[11:04:57.282343] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836695000-1698836696000[m
[36m[11:04:57.282409] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836695000-1698836696000[m
[36m[11:04:57.282524] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:57.282555] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:57.285885] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836695000,1698836696000,4,2129490245,1698836697282
1698836695000,1698836696000,11,317812265,1698836697282
1698836695000,1698836696000,7,26898071358,1698836697282
1698836695000,1698836696000,5,736065223,1698836697282
1698836695000,1698836696000,8,16372023503,1698836697282
1698836695000,1698836696000,9,299756870,1698836697282
1698836695000,1698836696000,6,5845344833,1698836697282
1698836695000,1698836696000,10,326988688,1698836697282
1698836695000,1698836696000,1,36585417,1698836697282
[m
[36m[11:04:57.558420] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:57.657172] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:57.657775] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:57.658570] [D] [thread 131078] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:57.658666] [I] [thread 131078] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:57.658684] [I] [thread 131078] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:57.658803] [I] [thread 131078] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:57.658816] [I] [thread 131078] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:04:57.876411] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:57.877046] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:58.108816] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836698000-1698836699000[m
[36m[11:04:58.296581] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836696000-1698836697000 [m
[36m[11:04:58.297443] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836696000-1698836697000-97[m
[36m[11:04:58.297555] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836696000-1698836697000[m
[36m[11:04:58.297630] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836696000-1698836697000[m
[36m[11:04:58.297756] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:58.297791] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:58.301718] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836696000,1698836697000,7,26898073521,1698836698297
1698836696000,1698836697000,5,736067358,1698836698297
1698836696000,1698836697000,8,16372025696,1698836698297
1698836696000,1698836697000,10,326990850,1698836698297
1698836696000,1698836697000,6,5845346956,1698836698297
1698836696000,1698836697000,9,299758948,1698836698297
1698836696000,1698836697000,11,317814628,1698836698297
1698836696000,1698836697000,4,2129492573,1698836698297
1698836696000,1698836697000,1,36591168,1698836698297
[m
[36m[11:04:58.877760] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:59.137477] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836699000-1698836700000[m
[36m[11:04:59.312248] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836697000-1698836698000 [m
[36m[11:04:59.313126] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836697000-1698836698000-98[m
[36m[11:04:59.313240] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836697000-1698836698000[m
[36m[11:04:59.313314] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836697000-1698836698000[m
[36m[11:04:59.313434] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:04:59.313467] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:04:59.317363] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836697000,1698836698000,7,26898076065,1698836699313
1698836697000,1698836698000,10,326993285,1698836699313
1698836697000,1698836698000,5,736070013,1698836699313
1698836697000,1698836698000,8,16372028209,1698836699313
1698836697000,1698836698000,6,5845349610,1698836699313
1698836697000,1698836698000,11,317816996,1698836699313
1698836697000,1698836698000,4,2129495108,1698836699313
1698836697000,1698836698000,9,299761479,1698836699313
1698836697000,1698836698000,1,36595122,1698836699313
[m
[36m[11:04:59.874120] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:59.874495] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:04:59.875581] [D] [thread 131083] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:04:59.875700] [I] [thread 131083] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:59.875718] [I] [thread 131083] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:04:59.875844] [I] [thread 131083] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:04:59.875862] [I] [thread 131083] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:00.090865] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:00.091233] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:00.113409] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836700000-1698836701000[m
[36m[11:05:00.329152] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836698000-1698836699000 [m
[36m[11:05:00.329872] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836698000-1698836699000-99[m
[36m[11:05:00.329949] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836698000-1698836699000[m
[36m[11:05:00.330001] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836698000-1698836699000[m
[36m[11:05:00.330079] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:00.330097] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:00.331992] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836698000,1698836699000,10,326995845,1698836700330
1698836698000,1698836699000,7,26898078531,1698836700330
1698836698000,1698836699000,8,16372030529,1698836700330
1698836698000,1698836699000,5,736072211,1698836700330
1698836698000,1698836699000,11,317819475,1698836700330
1698836698000,1698836699000,4,2129497299,1698836700330
1698836698000,1698836699000,6,5845351829,1698836700330
1698836698000,1698836699000,9,299763821,1698836700330
1698836698000,1698836699000,1,36600968,1698836700330
[m
[36m[11:05:01.092465] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:01.120102] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836701000-1698836702000[m
[36m[11:05:01.339653] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836699000-1698836700000 [m
[36m[11:05:01.340650] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836699000-1698836700000-100[m
[36m[11:05:01.340740] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836699000-1698836700000[m
[36m[11:05:01.341072] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836699000-1698836700000[m
[36m[11:05:01.341240] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:01.341273] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:01.344402] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836699000,1698836700000,8,16372032935,1698836701341
1698836699000,1698836700000,11,317821684,1698836701341
1698836699000,1698836700000,5,736074785,1698836701341
1698836699000,1698836700000,4,2129499863,1698836701341
1698836699000,1698836700000,6,5845354362,1698836701341
1698836699000,1698836700000,9,299766191,1698836701341
1698836699000,1698836700000,10,326998303,1698836701341
1698836699000,1698836700000,7,26898081070,1698836701341
1698836699000,1698836700000,1,36604978,1698836701341
[m
[36m[11:05:02.093767] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:02.118139] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836702000-1698836703000[m
[36m[11:05:02.277059] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:02.277420] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:02.278614] [D] [thread 131088] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:02.278711] [I] [thread 131088] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:02.278729] [I] [thread 131088] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:02.278857] [I] [thread 131088] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:02.278871] [I] [thread 131088] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:02.353593] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836700000-1698836701000 [m
[36m[11:05:02.354469] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836700000-1698836701000-101[m
[36m[11:05:02.354574] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836700000-1698836701000[m
[36m[11:05:02.354646] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836700000-1698836701000[m
[36m[11:05:02.354764] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:02.354796] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:02.358087] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836700000,1698836701000,7,26898083382,1698836702354
1698836700000,1698836701000,4,2129502257,1698836702354
1698836700000,1698836701000,11,317824414,1698836702354
1698836700000,1698836701000,8,16372035410,1698836702354
1698836700000,1698836701000,5,736077139,1698836702354
1698836700000,1698836701000,10,327000918,1698836702354
1698836700000,1698836701000,9,299768613,1698836702354
1698836700000,1698836701000,6,5845356715,1698836702354
1698836700000,1698836701000,1,36610662,1698836702354
[m
[36m[11:05:02.484706] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:02.485035] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:03.120562] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836703000-1698836704000[m
[36m[11:05:03.369794] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836701000-1698836702000 [m
[36m[11:05:03.370662] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836701000-1698836702000-102[m
[36m[11:05:03.370770] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836701000-1698836702000[m
[36m[11:05:03.370837] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836701000-1698836702000[m
[36m[11:05:03.370946] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:03.370975] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:03.374390] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836701000,1698836702000,8,16372037800,1698836703370
1698836701000,1698836702000,5,736079414,1698836703370
1698836701000,1698836702000,9,299770789,1698836703370
1698836701000,1698836702000,6,5845359044,1698836703370
1698836701000,1698836702000,4,2129504729,1698836703370
1698836701000,1698836702000,10,327003168,1698836703370
1698836701000,1698836702000,7,26898085801,1698836703370
1698836701000,1698836702000,11,317826622,1698836703370
1698836701000,1698836702000,1,36612475,1698836703370
[m
[36m[11:05:03.486390] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:04.131351] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836704000-1698836705000[m
[36m[11:05:04.385844] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836702000-1698836703000 [m
[36m[11:05:04.386964] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836702000-1698836703000-103[m
[36m[11:05:04.387083] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836702000-1698836703000[m
[36m[11:05:04.387160] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836702000-1698836703000[m
[36m[11:05:04.387295] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:04.387334] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:04.390101] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836702000,1698836703000,5,736082038,1698836704387
1698836702000,1698836703000,9,299773420,1698836704387
1698836702000,1698836703000,6,5845361571,1698836704387
1698836702000,1698836703000,10,327005838,1698836704387
1698836702000,1698836703000,4,2129507179,1698836704387
1698836702000,1698836703000,11,317829221,1698836704387
1698836702000,1698836703000,7,26898088358,1698836704387
1698836702000,1698836703000,8,16372040449,1698836704387
1698836702000,1698836703000,1,36617108,1698836704387
[m
[36m[11:05:04.487678] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:04.560454] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:04.560779] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:04.561829] [D] [thread 131095] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:04.561930] [I] [thread 131095] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:04.561949] [I] [thread 131095] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:04.562066] [I] [thread 131095] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:04.562129] [I] [thread 131095] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:04.826645] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:04.827009] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:05.124366] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836705000-1698836706000[m
[36m[11:05:05.401407] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836703000-1698836704000 [m
[36m[11:05:05.402171] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836703000-1698836704000-104[m
[36m[11:05:05.402304] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836703000-1698836704000[m
[36m[11:05:05.402367] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836703000-1698836704000[m
[36m[11:05:05.402472] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:05.402501] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:05.405494] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836703000,1698836704000,9,299775624,1698836705402
1698836703000,1698836704000,10,327008109,1698836705402
1698836703000,1698836704000,6,5845363718,1698836705402
1698836703000,1698836704000,4,2129509514,1698836705402
1698836703000,1698836704000,11,317831393,1698836705402
1698836703000,1698836704000,7,26898090491,1698836705402
1698836703000,1698836704000,8,16372042580,1698836705402
1698836703000,1698836704000,5,736084509,1698836705402
1698836703000,1698836704000,1,36621675,1698836705402
[m
[36m[11:05:05.828223] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:06.115721] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836706000-1698836707000[m
[36m[11:05:06.416083] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836704000-1698836705000 [m
[36m[11:05:06.416799] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836704000-1698836705000-105[m
[36m[11:05:06.416869] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836704000-1698836705000[m
[36m[11:05:06.416921] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836704000-1698836705000[m
[36m[11:05:06.417023] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:06.417050] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:06.419770] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836704000,1698836705000,6,5845366361,1698836706417
1698836704000,1698836705000,11,317833848,1698836706417
1698836704000,1698836705000,7,26898093178,1698836706417
1698836704000,1698836705000,10,327010776,1698836706417
1698836704000,1698836705000,8,16372045253,1698836706417
1698836704000,1698836705000,9,299778272,1698836706417
1698836704000,1698836705000,4,2129512174,1698836706417
1698836704000,1698836705000,5,736087101,1698836706417
1698836704000,1698836705000,1,36625707,1698836706417
[m
[36m[11:05:06.829576] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:06.877494] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:06.878100] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:06.878947] [D] [thread 131100] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:06.879029] [I] [thread 131100] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:06.879046] [I] [thread 131100] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:06.879160] [I] [thread 131100] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:06.879173] [I] [thread 131100] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:07.053542] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:07.054150] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:07.131587] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836707000-1698836708000[m
[36m[11:05:07.430182] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836705000-1698836706000 [m
[36m[11:05:07.431145] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836705000-1698836706000-106[m
[36m[11:05:07.431245] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836705000-1698836706000[m
[36m[11:05:07.431303] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836705000-1698836706000[m
[36m[11:05:07.431403] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:07.431430] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:07.434232] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836705000,1698836706000,6,5845368668,1698836707431
1698836705000,1698836706000,11,317836271,1698836707431
1698836705000,1698836706000,10,327013080,1698836707431
1698836705000,1698836706000,4,2129514357,1698836707431
1698836705000,1698836706000,7,26898095367,1698836707431
1698836705000,1698836706000,8,16372047505,1698836707431
1698836705000,1698836706000,9,299780620,1698836707431
1698836705000,1698836706000,5,736089264,1698836707431
1698836705000,1698836706000,1,36631741,1698836707431
[m
[36m[11:05:08.055593] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:08.119685] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836708000-1698836709000[m
[36m[11:05:08.445483] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836706000-1698836707000 [m
[36m[11:05:08.446370] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836706000-1698836707000-107[m
[36m[11:05:08.446458] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836706000-1698836707000[m
[36m[11:05:08.446508] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836706000-1698836707000[m
[36m[11:05:08.446599] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:08.446622] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:08.449267] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836706000,1698836707000,6,5845371328,1698836708446
1698836706000,1698836707000,10,327015474,1698836708446
1698836706000,1698836707000,4,2129516893,1698836708446
1698836706000,1698836707000,7,26898097867,1698836708446
1698836706000,1698836707000,8,16372049937,1698836708446
1698836706000,1698836707000,9,299782997,1698836708446
1698836706000,1698836707000,5,736091855,1698836708446
1698836706000,1698836707000,11,317838673,1698836708446
1698836706000,1698836707000,1,36635710,1698836708446
[m
[36m[11:05:09.057009] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:09.149590] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836709000-1698836710000[m
[36m[11:05:09.156932] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:09.157253] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:09.158343] [D] [thread 131105] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:09.158433] [I] [thread 131105] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:09.158452] [I] [thread 131105] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:09.158565] [I] [thread 131105] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:09.158578] [I] [thread 131105] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:09.422930] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:09.423259] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:09.458661] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836707000-1698836708000 [m
[36m[11:05:09.459530] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836707000-1698836708000-108[m
[36m[11:05:09.459631] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836707000-1698836708000[m
[36m[11:05:09.459697] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836707000-1698836708000[m
[36m[11:05:09.459808] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:09.459841] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:09.463349] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836707000,1698836708000,4,2129519111,1698836709459
1698836707000,1698836708000,7,26898100239,1698836709459
1698836707000,1698836708000,10,327018072,1698836709459
1698836707000,1698836708000,8,16372052295,1698836709459
1698836707000,1698836708000,11,317841170,1698836709459
1698836707000,1698836708000,9,299785394,1698836709459
1698836707000,1698836708000,5,736094143,1698836709459
1698836707000,1698836708000,6,5845373809,1698836709459
1698836707000,1698836708000,1,36641348,1698836709459
[m
[36m[11:05:10.125045] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836710000-1698836711000[m
[36m[11:05:10.424522] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:10.474256] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836708000-1698836709000 [m
[36m[11:05:10.475003] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836708000-1698836709000-109[m
[36m[11:05:10.475099] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836708000-1698836709000[m
[36m[11:05:10.475155] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836708000-1698836709000[m
[36m[11:05:10.475254] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:10.475282] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:10.478318] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836708000,1698836709000,4,2129521604,1698836710475
1698836708000,1698836709000,10,327020400,1698836710475
1698836708000,1698836709000,7,26898102581,1698836710475
1698836708000,1698836709000,11,317843290,1698836710475
1698836708000,1698836709000,8,16372054560,1698836710475
1698836708000,1698836709000,5,736096529,1698836710475
1698836708000,1698836709000,9,299787560,1698836710475
1698836708000,1698836709000,6,5845376160,1698836710475
1698836708000,1698836709000,1,36644411,1698836710475
[m
[36m[11:05:11.122963] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836711000-1698836712000[m
[36m[11:05:11.425942] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:11.482612] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:11.483239] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:11.484015] [D] [thread 131111] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:11.484118] [I] [thread 131111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:11.484137] [I] [thread 131111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:11.484260] [I] [thread 131111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:11.484278] [I] [thread 131111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:11.489489] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836709000-1698836710000 [m
[36m[11:05:11.490054] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836709000-1698836710000-110[m
[36m[11:05:11.490125] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836709000-1698836710000[m
[36m[11:05:11.490165] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836709000-1698836710000[m
[36m[11:05:11.490271] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:11.490294] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:11.492069] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836709000,1698836710000,7,26898105090,1698836711490
1698836709000,1698836710000,11,317845946,1698836711490
1698836709000,1698836710000,8,16372057146,1698836711490
1698836709000,1698836710000,5,736098954,1698836711490
1698836709000,1698836710000,9,299790185,1698836711490
1698836709000,1698836710000,4,2129524101,1698836711490
1698836709000,1698836710000,10,327023117,1698836711490
1698836709000,1698836710000,6,5845378636,1698836711490
1698836709000,1698836710000,1,36648731,1698836711490
[m
[36m[11:05:11.658581] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:11.659086] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:12.116906] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836712000-1698836713000[m
[36m[11:05:12.500101] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836710000-1698836711000 [m
[36m[11:05:12.500892] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836710000-1698836711000-111[m
[36m[11:05:12.500996] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836710000-1698836711000[m
[36m[11:05:12.501062] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836710000-1698836711000[m
[36m[11:05:12.501172] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:12.501200] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:12.504428] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836710000,1698836711000,11,317848194,1698836712501
1698836710000,1698836711000,7,26898107292,1698836712501
1698836710000,1698836711000,9,299792347,1698836712501
1698836710000,1698836711000,5,736101129,1698836712501
1698836710000,1698836711000,10,327025271,1698836712501
1698836710000,1698836711000,8,16372059317,1698836712501
1698836710000,1698836711000,4,2129526323,1698836712501
1698836710000,1698836711000,6,5845380834,1698836712501
1698836710000,1698836711000,1,36652557,1698836712501
[m
[36m[11:05:12.660129] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:13.148256] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836713000-1698836714000[m
[36m[11:05:13.517516] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836711000-1698836712000 [m
[36m[11:05:13.518435] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836711000-1698836712000-112[m
[36m[11:05:13.518543] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836711000-1698836712000[m
[36m[11:05:13.518617] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836711000-1698836712000[m
[36m[11:05:13.518747] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:13.518780] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:13.522711] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836711000,1698836712000,7,26898109938,1698836713518
1698836711000,1698836712000,10,327027914,1698836713518
1698836711000,1698836712000,9,299794857,1698836713518
1698836711000,1698836712000,4,2129529024,1698836713518
1698836711000,1698836712000,5,736103730,1698836713518
1698836711000,1698836712000,8,16372061874,1698836713518
1698836711000,1698836712000,6,5845383469,1698836713518
1698836711000,1698836712000,11,317850808,1698836713518
1698836711000,1698836712000,1,36657530,1698836713518
[m
[36m[11:05:13.661374] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:13.678705] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:13.679067] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:13.680207] [D] [thread 131116] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:13.680301] [I] [thread 131116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:13.680319] [I] [thread 131116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:13.680436] [I] [thread 131116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:13.680450] [I] [thread 131116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:13.890470] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:13.890814] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:14.136948] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836714000-1698836715000[m
[36m[11:05:14.533701] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836712000-1698836713000 [m
[36m[11:05:14.534675] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836712000-1698836713000-113[m
[36m[11:05:14.534783] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836712000-1698836713000[m
[36m[11:05:14.534849] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836712000-1698836713000[m
[36m[11:05:14.534965] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:14.534999] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:14.538842] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836712000,1698836713000,7,26898112232,1698836714535
1698836712000,1698836713000,9,299797197,1698836714535
1698836712000,1698836713000,5,736105985,1698836714535
1698836712000,1698836713000,8,16372064145,1698836714535
1698836712000,1698836713000,11,317853103,1698836714535
1698836712000,1698836713000,6,5845385615,1698836714535
1698836712000,1698836713000,10,327030366,1698836714535
1698836712000,1698836713000,4,2129531278,1698836714535
1698836712000,1698836713000,1,36662194,1698836714535
[m
[36m[11:05:14.892023] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:15.118413] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836715000-1698836716000[m
[36m[11:05:15.550934] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836713000-1698836714000 [m
[36m[11:05:15.551591] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836713000-1698836714000-114[m
[36m[11:05:15.551667] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836713000-1698836714000[m
[36m[11:05:15.551717] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836713000-1698836714000[m
[36m[11:05:15.551792] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:15.551810] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:15.553528] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836713000,1698836714000,5,736108639,1698836715551
1698836713000,1698836714000,8,16372066693,1698836715551
1698836713000,1698836714000,11,317855479,1698836715551
1698836713000,1698836714000,4,2129533953,1698836715551
1698836713000,1698836714000,10,327032781,1698836715551
1698836713000,1698836714000,6,5845388263,1698836715551
1698836713000,1698836714000,9,299799835,1698836715551
1698836713000,1698836714000,7,26898114907,1698836715551
1698836713000,1698836714000,1,36666236,1698836715551
[m
[36m[11:05:15.893356] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:15.923661] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:15.923988] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:15.925053] [D] [thread 131121] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:15.925153] [I] [thread 131121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:15.925171] [I] [thread 131121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:15.925289] [I] [thread 131121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:15.925313] [I] [thread 131121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:16.122543] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836716000-1698836717000[m
[36m[11:05:16.139209] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:16.139558] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:16.561753] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836714000-1698836715000 [m
[36m[11:05:16.563201] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836714000-1698836715000-115[m
[36m[11:05:16.563288] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836714000-1698836715000[m
[36m[11:05:16.563357] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836714000-1698836715000[m
[36m[11:05:16.563478] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:16.563514] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:16.567551] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836714000,1698836715000,11,317858012,1698836716563
1698836714000,1698836715000,5,736110809,1698836716563
1698836714000,1698836715000,8,16372068998,1698836716563
1698836714000,1698836715000,4,2129536074,1698836716563
1698836714000,1698836715000,10,327035144,1698836716563
1698836714000,1698836715000,6,5845390529,1698836716563
1698836714000,1698836715000,9,299802199,1698836716563
1698836714000,1698836715000,7,26898117217,1698836716563
1698836714000,1698836715000,1,36671893,1698836716563
[m
[36m[11:05:17.120203] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836717000-1698836718000[m
[36m[11:05:17.140793] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:17.579384] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836715000-1698836716000 [m
[36m[11:05:17.580212] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836715000-1698836716000-116[m
[36m[11:05:17.580325] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836715000-1698836716000[m
[36m[11:05:17.580403] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836715000-1698836716000[m
[36m[11:05:17.580540] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:17.580580] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:17.584484] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836715000,1698836716000,4,2129538772,1698836717580
1698836715000,1698836716000,5,736113309,1698836717580
1698836715000,1698836716000,8,16372071355,1698836717580
1698836715000,1698836716000,10,327037371,1698836717580
1698836715000,1698836716000,6,5845393036,1698836717580
1698836715000,1698836716000,9,299804534,1698836717580
1698836715000,1698836716000,7,26898119666,1698836717580
1698836715000,1698836716000,11,317860434,1698836717580
1698836715000,1698836716000,1,36675888,1698836717580
[m
[36m[11:05:18.115463] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836718000-1698836719000[m
[36m[11:05:18.142022] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:18.156244] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:18.156575] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:18.157705] [D] [thread 131126] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:18.157801] [I] [thread 131126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:18.157820] [I] [thread 131126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:18.157937] [I] [thread 131126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:18.157951] [I] [thread 131126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:18.324487] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:18.324830] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:18.596785] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836716000-1698836717000 [m
[36m[11:05:18.597661] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836716000-1698836717000-117[m
[36m[11:05:18.597767] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836716000-1698836717000[m
[36m[11:05:18.597842] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836716000-1698836717000[m
[36m[11:05:18.597963] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:18.597999] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:18.602044] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836716000,1698836717000,5,736115763,1698836718598
1698836716000,1698836717000,8,16372073792,1698836718598
1698836716000,1698836717000,10,327039908,1698836718598
1698836716000,1698836717000,9,299806941,1698836718598
1698836716000,1698836717000,6,5845395333,1698836718598
1698836716000,1698836717000,11,317862923,1698836718598
1698836716000,1698836717000,4,2129541197,1698836718598
1698836716000,1698836717000,7,26898122007,1698836718598
1698836716000,1698836717000,1,36679416,1698836718598
[m
[36m[11:05:19.131188] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836719000-1698836720000[m
[36m[11:05:19.326268] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:19.613123] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836717000-1698836718000 [m
[36m[11:05:19.614024] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836717000-1698836718000-118[m
[36m[11:05:19.614123] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836717000-1698836718000[m
[36m[11:05:19.614235] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836717000-1698836718000[m
[36m[11:05:19.614364] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:19.614394] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:19.617830] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836717000,1698836718000,10,327042182,1698836719614
1698836717000,1698836718000,8,16372076067,1698836719614
1698836717000,1698836718000,9,299809066,1698836719614
1698836717000,1698836718000,6,5845397661,1698836719614
1698836717000,1698836718000,4,2129543520,1698836719614
1698836717000,1698836718000,11,317865072,1698836719614
1698836717000,1698836718000,7,26898124337,1698836719614
1698836717000,1698836718000,5,736118264,1698836719614
1698836717000,1698836718000,1,36683319,1698836719614
[m
[36m[11:05:20.121282] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836720000-1698836721000[m
[36m[11:05:20.321206] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:20.321744] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:20.322611] [D] [thread 131131] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:20.322704] [I] [thread 131131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:20.322722] [I] [thread 131131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:20.322838] [I] [thread 131131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:20.322862] [I] [thread 131131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:20.537262] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:20.537807] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:20.628907] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836718000-1698836719000 [m
[36m[11:05:20.629808] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836718000-1698836719000-119[m
[36m[11:05:20.629920] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836718000-1698836719000[m
[36m[11:05:20.629999] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836718000-1698836719000[m
[36m[11:05:20.630128] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:20.630166] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:20.634582] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836718000,1698836719000,8,16372078726,1698836720630
1698836718000,1698836719000,9,299811900,1698836720630
1698836718000,1698836719000,4,2129546092,1698836720630
1698836718000,1698836719000,6,5845400122,1698836720630
1698836718000,1698836719000,11,317867697,1698836720630
1698836718000,1698836719000,7,26898126810,1698836720630
1698836718000,1698836719000,10,327044920,1698836720630
1698836718000,1698836719000,5,736120732,1698836720630
1698836718000,1698836719000,1,36688762,1698836720630
[m
[36m[11:05:21.160690] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836721000-1698836722000[m
[36m[11:05:21.539205] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:21.644683] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836719000-1698836720000 [m
[36m[11:05:21.645474] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836719000-1698836720000-120[m
[36m[11:05:21.645549] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836719000-1698836720000[m
[36m[11:05:21.645610] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836719000-1698836720000[m
[36m[11:05:21.645718] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:21.645746] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:21.649125] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836719000,1698836720000,6,5845402463,1698836721645
1698836719000,1698836720000,11,317869830,1698836721645
1698836719000,1698836720000,10,327047044,1698836721645
1698836719000,1698836720000,7,26898129129,1698836721645
1698836719000,1698836720000,5,736123057,1698836721645
1698836719000,1698836720000,4,2129548517,1698836721645
1698836719000,1698836720000,9,299814186,1698836721645
1698836719000,1698836720000,8,16372081103,1698836721645
1698836719000,1698836720000,1,36692747,1698836721645
[m
[36m[11:05:22.146867] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836722000-1698836723000[m
[36m[11:05:22.539799] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:22.579977] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:22.580579] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:22.581547] [D] [thread 131136] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:22.581666] [I] [thread 131136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:22.581685] [I] [thread 131136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:22.581810] [I] [thread 131136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:22.581824] [I] [thread 131136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:22.660146] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836720000-1698836721000 [m
[36m[11:05:22.661073] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836720000-1698836721000-121[m
[36m[11:05:22.661189] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836720000-1698836721000[m
[36m[11:05:22.661262] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836720000-1698836721000[m
[36m[11:05:22.661389] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:22.661424] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:22.665393] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836720000,1698836721000,6,5845405148,1698836722661
1698836720000,1698836721000,10,327049758,1698836722661
1698836720000,1698836721000,11,317872481,1698836722661
1698836720000,1698836721000,7,26898131724,1698836722661
1698836720000,1698836721000,4,2129551054,1698836722661
1698836720000,1698836721000,5,736125577,1698836722661
1698836720000,1698836721000,8,16372083730,1698836722661
1698836720000,1698836721000,9,299816831,1698836722661
1698836720000,1698836721000,1,36698376,1698836722661
[m
[36m[11:05:22.836617] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:22.836946] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:23.129694] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836723000-1698836724000[m
[36m[11:05:23.675696] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836721000-1698836722000 [m
[36m[11:05:23.676541] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836721000-1698836722000-122[m
[36m[11:05:23.676625] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836721000-1698836722000[m
[36m[11:05:23.676670] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836721000-1698836722000[m
[36m[11:05:23.676748] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:23.676769] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:23.679372] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836721000,1698836722000,7,26898133856,1698836723676
1698836721000,1698836722000,4,2129553186,1698836723676
1698836721000,1698836722000,5,736127751,1698836723676
1698836721000,1698836722000,8,16372085888,1698836723676
1698836721000,1698836722000,9,299818941,1698836723676
1698836721000,1698836722000,10,327052072,1698836723676
1698836721000,1698836722000,11,317874854,1698836723676
1698836721000,1698836722000,6,5845407441,1698836723676
1698836721000,1698836722000,1,36702060,1698836723676
[m
[36m[11:05:23.838151] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:24.130434] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836724000-1698836725000[m
[36m[11:05:24.688656] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836722000-1698836723000 [m
[36m[11:05:24.689532] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836722000-1698836723000-123[m
[36m[11:05:24.689646] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836722000-1698836723000[m
[36m[11:05:24.689720] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836722000-1698836723000[m
[36m[11:05:24.689845] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:24.689877] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:24.693482] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836722000,1698836723000,7,26898136430,1698836724689
1698836722000,1698836723000,4,2129555775,1698836724689
1698836722000,1698836723000,10,327054574,1698836724689
1698836722000,1698836723000,8,16372088418,1698836724689
1698836722000,1698836723000,5,736130450,1698836724689
1698836722000,1698836723000,9,299821488,1698836724689
1698836722000,1698836723000,11,317877211,1698836724689
1698836722000,1698836723000,6,5845410080,1698836724689
1698836722000,1698836723000,1,36706792,1698836724689
[m
[36m[11:05:24.839470] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:24.879527] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:24.880124] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:24.881154] [D] [thread 131141] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:24.881267] [I] [thread 131141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:24.881285] [I] [thread 131141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:24.881401] [I] [thread 131141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:24.881416] [I] [thread 131141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:25.049832] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:25.050401] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:25.115107] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836725000-1698836726000[m
[36m[11:05:25.705215] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836723000-1698836724000 [m
[36m[11:05:25.706080] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836723000-1698836724000-124[m
[36m[11:05:25.706244] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836723000-1698836724000[m
[36m[11:05:25.706329] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836723000-1698836724000[m
[36m[11:05:25.706456] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:25.706504] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:25.710393] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836723000,1698836724000,10,327057001,1698836725706
1698836723000,1698836724000,4,2129557992,1698836725706
1698836723000,1698836724000,7,26898138689,1698836725706
1698836723000,1698836724000,9,299823755,1698836725706
1698836723000,1698836724000,11,317879556,1698836725706
1698836723000,1698836724000,5,736132604,1698836725706
1698836723000,1698836724000,8,16372090689,1698836725706
1698836723000,1698836724000,6,5845412204,1698836725706
1698836723000,1698836724000,1,36710421,1698836725706
[m
[36m[11:05:26.051591] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:26.146699] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836726000-1698836727000[m
[36m[11:05:26.720564] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836724000-1698836725000 [m
[36m[11:05:26.721602] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836724000-1698836725000-125[m
[36m[11:05:26.721686] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836724000-1698836725000[m
[36m[11:05:26.721753] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836724000-1698836725000[m
[36m[11:05:26.721876] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:26.721911] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:26.726618] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836724000,1698836725000,7,26898141107,1698836726721
1698836724000,1698836725000,9,299826050,1698836726721
1698836724000,1698836725000,11,317881853,1698836726721
1698836724000,1698836725000,5,736135124,1698836726721
1698836724000,1698836725000,8,16372093079,1698836726721
1698836724000,1698836725000,6,5845414765,1698836726721
1698836724000,1698836725000,10,327059424,1698836726721
1698836724000,1698836725000,4,2129560644,1698836726721
1698836724000,1698836725000,1,36713282,1698836726721
[m
[36m[11:05:27.052796] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:27.119809] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836727000-1698836728000[m
[36m[11:05:27.736056] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836725000-1698836726000 [m
[36m[11:05:27.736928] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836725000-1698836726000-126[m
[36m[11:05:27.737042] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836725000-1698836726000[m
[36m[11:05:27.737115] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836725000-1698836726000[m
[36m[11:05:27.737241] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:27.737278] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:27.740425] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836725000,1698836726000,7,26898143699,1698836727737
1698836725000,1698836726000,9,299828567,1698836727737
1698836725000,1698836726000,11,317884499,1698836727737
1698836725000,1698836726000,5,736137381,1698836727737
1698836725000,1698836726000,10,327061911,1698836727737
1698836725000,1698836726000,8,16372095543,1698836727737
1698836725000,1698836726000,4,2129562929,1698836727737
1698836725000,1698836726000,6,5845417092,1698836727737
1698836725000,1698836726000,1,36719055,1698836727737
[m
[36m[11:05:28.054027] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:28.124241] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836728000-1698836729000[m
[36m[11:05:28.753290] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836726000-1698836727000 [m
[36m[11:05:28.754079] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836726000-1698836727000-127[m
[36m[11:05:28.754179] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836726000-1698836727000[m
[36m[11:05:28.754292] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836726000-1698836727000[m
[36m[11:05:28.754411] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:28.754440] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:28.757774] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836726000,1698836727000,5,736139607,1698836728754
1698836726000,1698836727000,10,327064063,1698836728754
1698836726000,1698836727000,4,2129565026,1698836728754
1698836726000,1698836727000,8,16372097756,1698836728754
1698836726000,1698836727000,6,5845419269,1698836728754
1698836726000,1698836727000,7,26898146010,1698836728754
1698836726000,1698836727000,9,299830900,1698836728754
1698836726000,1698836727000,11,317886749,1698836728754
1698836726000,1698836727000,1,36722967,1698836728754
[m
[36m[11:05:29.054406] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:29.121011] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836729000-1698836730000[m
[36m[11:05:29.768301] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836727000-1698836728000 [m
[36m[11:05:29.769766] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836727000-1698836728000-128[m
[36m[11:05:29.769881] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836727000-1698836728000[m
[36m[11:05:29.769945] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836727000-1698836728000[m
[36m[11:05:29.770039] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:29.770175] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:29.773558] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836727000,1698836728000,10,327066315,1698836729770
1698836727000,1698836728000,5,736141764,1698836729770
1698836727000,1698836728000,4,2129567112,1698836729770
1698836727000,1698836728000,6,5845421397,1698836729770
1698836727000,1698836728000,8,16372099867,1698836729770
1698836727000,1698836728000,11,317888858,1698836729770
1698836727000,1698836728000,9,299832972,1698836729770
1698836727000,1698836728000,7,26898148154,1698836729770
1698836727000,1698836728000,1,36726596,1698836729770
[m
[36m[11:05:30.055687] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:30.138538] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836730000-1698836731000[m
[36m[11:05:30.785204] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836728000-1698836729000 [m
[36m[11:05:30.785870] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836728000-1698836729000-129[m
[36m[11:05:30.785955] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836728000-1698836729000[m
[36m[11:05:30.785998] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836728000-1698836729000[m
[36m[11:05:30.786075] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:30.786094] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:30.787873] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836728000,1698836729000,5,736143892,1698836730786
1698836728000,1698836729000,4,2129569324,1698836730786
1698836728000,1698836729000,6,5845423546,1698836730786
1698836728000,1698836729000,8,16372102011,1698836730786
1698836728000,1698836729000,11,317890996,1698836730786
1698836728000,1698836729000,9,299835024,1698836730786
1698836728000,1698836729000,7,26898150315,1698836730786
1698836728000,1698836729000,10,327068607,1698836730786
1698836728000,1698836729000,1,36730281,1698836730786
[m
[36m[11:05:31.057036] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:31.130600] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836731000-1698836732000[m
[36m[11:05:31.795660] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836729000-1698836730000 [m
[36m[11:05:31.796457] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836729000-1698836730000-130[m
[36m[11:05:31.796564] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836729000-1698836730000[m
[36m[11:05:31.796723] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836729000-1698836730000[m
[36m[11:05:31.796846] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:31.796875] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:31.800312] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836729000,1698836730000,5,736146171,1698836731796
1698836729000,1698836730000,11,317893248,1698836731796
1698836729000,1698836730000,6,5845425729,1698836731796
1698836729000,1698836730000,9,299837147,1698836731796
1698836729000,1698836730000,8,16372104135,1698836731796
1698836729000,1698836730000,10,327070658,1698836731796
1698836729000,1698836730000,7,26898152471,1698836731796
1698836729000,1698836730000,4,2129571533,1698836731796
1698836729000,1698836730000,1,36733965,1698836731796
[m
[36m[11:05:32.058325] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:32.117990] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836732000-1698836733000[m
[36m[11:05:32.812857] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836730000-1698836731000 [m
[36m[11:05:32.813605] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836730000-1698836731000-131[m
[36m[11:05:32.813709] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836730000-1698836731000[m
[36m[11:05:32.813774] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836730000-1698836731000[m
[36m[11:05:32.813892] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:32.813924] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:32.817318] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836730000,1698836731000,6,5845427909,1698836732813
1698836730000,1698836731000,8,16372106324,1698836732813
1698836730000,1698836731000,9,299839254,1698836732813
1698836730000,1698836731000,10,327072733,1698836732813
1698836730000,1698836731000,7,26898154656,1698836732813
1698836730000,1698836731000,4,2129573693,1698836732813
1698836730000,1698836731000,11,317895445,1698836732813
1698836730000,1698836731000,5,736148411,1698836732813
1698836730000,1698836731000,1,36737723,1698836732813
[m
[36m[11:05:33.059555] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:33.129104] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836733000-1698836734000[m
[36m[11:05:33.828517] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836731000-1698836732000 [m
[36m[11:05:33.829328] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836731000-1698836732000-132[m
[36m[11:05:33.829427] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836731000-1698836732000[m
[36m[11:05:33.829491] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836731000-1698836732000[m
[36m[11:05:33.829600] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:33.829634] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:33.833055] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836731000,1698836732000,6,5845430064,1698836733829
1698836731000,1698836732000,10,327074994,1698836733829
1698836731000,1698836732000,8,16372108500,1698836733829
1698836731000,1698836732000,9,299841443,1698836733829
1698836731000,1698836732000,4,2129575802,1698836733829
1698836731000,1698836732000,7,26898156770,1698836733829
1698836731000,1698836732000,11,317897552,1698836733829
1698836731000,1698836732000,5,736150620,1698836733829
1698836731000,1698836732000,1,36739272,1698836733829
[m
[36m[11:05:34.060948] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:34.116399] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836734000-1698836735000[m
[36m[11:05:34.844413] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836732000-1698836733000 [m
[36m[11:05:34.845442] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836732000-1698836733000-133[m
[36m[11:05:34.845557] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836732000-1698836733000[m
[36m[11:05:34.845634] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836732000-1698836733000[m
[36m[11:05:34.845759] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:34.845797] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:34.850170] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836732000,1698836733000,6,5845432328,1698836734845
1698836732000,1698836733000,9,299843697,1698836734845
1698836732000,1698836733000,8,16372110634,1698836734845
1698836732000,1698836733000,4,2129577903,1698836734845
1698836732000,1698836733000,7,26898158925,1698836734845
1698836732000,1698836733000,11,317899703,1698836734845
1698836732000,1698836733000,5,736152754,1698836734845
1698836732000,1698836733000,10,327077320,1698836734845
1698836732000,1698836733000,1,36742967,1698836734845
[m
[36m[11:05:35.062313] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:35.121777] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836735000-1698836736000[m
[36m[11:05:35.859927] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836733000-1698836734000 [m
[36m[11:05:35.860668] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836733000-1698836734000-134[m
[36m[11:05:35.860754] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836733000-1698836734000[m
[36m[11:05:35.860809] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836733000-1698836734000[m
[36m[11:05:35.860907] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:35.860935] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:35.863635] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836733000,1698836734000,8,16372112798,1698836735860
1698836733000,1698836734000,4,2129580031,1698836735860
1698836733000,1698836734000,11,317901907,1698836735860
1698836733000,1698836734000,7,26898161107,1698836735860
1698836733000,1698836734000,10,327079487,1698836735860
1698836733000,1698836734000,5,736154980,1698836735860
1698836733000,1698836734000,6,5845434614,1698836735860
1698836733000,1698836734000,9,299845996,1698836735860
1698836733000,1698836734000,1,36746689,1698836735860
[m
[36m[11:05:36.063609] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:36.122603] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836736000-1698836737000[m
[36m[11:05:36.874102] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836734000-1698836735000 [m
[36m[11:05:36.874927] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836734000-1698836735000-135[m
[36m[11:05:36.874995] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836734000-1698836735000[m
[36m[11:05:36.875048] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836734000-1698836735000[m
[36m[11:05:36.875145] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:36.875170] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:36.878032] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836734000,1698836735000,4,2129582232,1698836736875
1698836734000,1698836735000,8,16372115048,1698836736875
1698836734000,1698836735000,11,317904119,1698836736875
1698836734000,1698836735000,10,327081557,1698836736875
1698836734000,1698836735000,7,26898163277,1698836736875
1698836734000,1698836735000,5,736157108,1698836736875
1698836734000,1698836735000,6,5845436793,1698836736875
1698836734000,1698836735000,9,299848048,1698836736875
1698836734000,1698836735000,1,36750420,1698836736875
[m
[36m[11:05:37.064881] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:37.150375] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836737000-1698836738000[m
[36m[11:05:37.888380] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836735000-1698836736000 [m
[36m[11:05:37.889327] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836735000-1698836736000-136[m
[36m[11:05:37.889440] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836735000-1698836736000[m
[36m[11:05:37.889518] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836735000-1698836736000[m
[36m[11:05:37.889645] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:37.889682] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:37.894079] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836735000,1698836736000,10,327083808,1698836737889
1698836735000,1698836736000,7,26898165424,1698836737889
1698836735000,1698836736000,5,736159248,1698836737889
1698836735000,1698836736000,6,5845438990,1698836737889
1698836735000,1698836736000,9,299850175,1698836737889
1698836735000,1698836736000,4,2129584490,1698836737889
1698836735000,1698836736000,8,16372117424,1698836737889
1698836735000,1698836736000,11,317906326,1698836737889
1698836735000,1698836736000,1,36754115,1698836737889
[m
[36m[11:05:38.066302] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:38.123133] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836738000-1698836739000[m
[36m[11:05:38.904879] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836736000-1698836737000 [m
[36m[11:05:38.905802] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836736000-1698836737000-137[m
[36m[11:05:38.905908] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836736000-1698836737000[m
[36m[11:05:38.905965] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836736000-1698836737000[m
[36m[11:05:38.906049] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:38.906067] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:38.908026] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836736000,1698836737000,7,26898167672,1698836738906
1698836736000,1698836737000,9,299852313,1698836738906
1698836736000,1698836737000,5,736161408,1698836738906
1698836736000,1698836737000,6,5845441102,1698836738906
1698836736000,1698836737000,4,2129586614,1698836738906
1698836736000,1698836737000,10,327086043,1698836738906
1698836736000,1698836737000,11,317908447,1698836738906
1698836736000,1698836737000,8,16372119576,1698836738906
1698836736000,1698836737000,1,36757787,1698836738906
[m
[36m[11:05:39.067581] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:39.121066] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836739000-1698836740000[m
[36m[11:05:39.918615] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836737000-1698836738000 [m
[36m[11:05:39.919315] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836737000-1698836738000-138[m
[36m[11:05:39.919392] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836737000-1698836738000[m
[36m[11:05:39.919439] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836737000-1698836738000[m
[36m[11:05:39.919520] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:39.919543] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:39.921550] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836737000,1698836738000,9,299854456,1698836739919
1698836737000,1698836738000,10,327088163,1698836739919
1698836737000,1698836738000,5,736163595,1698836739919
1698836737000,1698836738000,4,2129588705,1698836739919
1698836737000,1698836738000,6,5845443231,1698836739919
1698836737000,1698836738000,11,317910539,1698836739919
1698836737000,1698836738000,8,16372121740,1698836739919
1698836737000,1698836738000,7,26898169934,1698836739919
1698836737000,1698836738000,1,36761458,1698836739919
[m
[36m[11:05:40.068820] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:40.126072] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836740000-1698836741000[m
[36m[11:05:40.931158] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836738000-1698836739000 [m
[36m[11:05:40.931949] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836738000-1698836739000-139[m
[36m[11:05:40.932050] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836738000-1698836739000[m
[36m[11:05:40.932118] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836738000-1698836739000[m
[36m[11:05:40.932227] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:40.932257] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:40.935670] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836738000,1698836739000,10,327090402,1698836740932
1698836738000,1698836739000,4,2129590979,1698836740932
1698836738000,1698836739000,11,317912653,1698836740932
1698836738000,1698836739000,9,299856571,1698836740932
1698836738000,1698836739000,5,736165736,1698836740932
1698836738000,1698836739000,6,5845445394,1698836740932
1698836738000,1698836739000,8,16372123857,1698836740932
1698836738000,1698836739000,7,26898172084,1698836740932
1698836738000,1698836739000,1,36764413,1698836740932
[m
[36m[11:05:41.070073] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:41.127728] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836741000-1698836742000[m
[36m[11:05:41.947287] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836739000-1698836740000 [m
[36m[11:05:41.948093] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836739000-1698836740000-140[m
[36m[11:05:41.948166] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836739000-1698836740000[m
[36m[11:05:41.948225] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836739000-1698836740000[m
[36m[11:05:41.948338] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:41.948369] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:41.951428] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836739000,1698836740000,11,317914954,1698836741948
1698836739000,1698836740000,9,299858722,1698836741948
1698836739000,1698836740000,5,736167880,1698836741948
1698836739000,1698836740000,6,5845447593,1698836741948
1698836739000,1698836740000,8,16372126011,1698836741948
1698836739000,1698836740000,10,327092667,1698836741948
1698836739000,1698836740000,7,26898174256,1698836741948
1698836739000,1698836740000,4,2129593213,1698836741948
1698836739000,1698836740000,1,36766762,1698836741948
[m
[36m[11:05:42.071445] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:42.124737] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836742000-1698836743000[m
[36m[11:05:42.964486] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836740000-1698836741000 [m
[36m[11:05:42.965405] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836740000-1698836741000-141[m
[36m[11:05:42.965526] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836740000-1698836741000[m
[36m[11:05:42.965608] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836740000-1698836741000[m
[36m[11:05:42.965741] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:42.965780] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:42.969650] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836740000,1698836741000,9,299860982,1698836742965
1698836740000,1698836741000,5,736170044,1698836742965
1698836740000,1698836741000,6,5845449818,1698836742965
1698836740000,1698836741000,10,327094768,1698836742965
1698836740000,1698836741000,8,16372128236,1698836742965
1698836740000,1698836741000,7,26898176466,1698836742965
1698836740000,1698836741000,4,2129595468,1698836742965
1698836740000,1698836741000,11,317917124,1698836742965
1698836740000,1698836741000,1,36770512,1698836742965
[m
[36m[11:05:43.072731] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:43.116136] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836743000-1698836744000[m
[36m[11:05:43.980880] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836741000-1698836742000 [m
[36m[11:05:43.981746] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836741000-1698836742000-142[m
[36m[11:05:43.981858] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836741000-1698836742000[m
[36m[11:05:43.981933] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836741000-1698836742000[m
[36m[11:05:43.982060] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:43.982096] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:43.986184] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836741000,1698836742000,10,327096989,1698836743982
1698836741000,1698836742000,6,5845451968,1698836743982
1698836741000,1698836742000,5,736172224,1698836743982
1698836741000,1698836742000,8,16372130411,1698836743982
1698836741000,1698836742000,4,2129597563,1698836743982
1698836741000,1698836742000,7,26898178577,1698836743982
1698836741000,1698836742000,11,317919175,1698836743982
1698836741000,1698836742000,9,299863249,1698836743982
1698836741000,1698836742000,1,36774175,1698836743982
[m
[36m[11:05:44.074056] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:44.125291] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836744000-1698836745000[m
[36m[11:05:44.997859] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836742000-1698836743000 [m
[36m[11:05:44.998869] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836742000-1698836743000-143[m
[36m[11:05:44.998990] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836742000-1698836743000[m
[36m[11:05:44.999071] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836742000-1698836743000[m
[36m[11:05:44.999208] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:44.999247] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:45.003134] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836742000,1698836743000,6,5845454070,1698836744999
1698836742000,1698836743000,5,736174352,1698836744999
1698836742000,1698836743000,4,2129599605,1698836744999
1698836742000,1698836743000,8,16372132534,1698836744999
1698836742000,1698836743000,11,317921368,1698836744999
1698836742000,1698836743000,7,26898180688,1698836744999
1698836742000,1698836743000,10,327099253,1698836744999
1698836742000,1698836743000,9,299865408,1698836744999
1698836742000,1698836743000,1,36777833,1698836744999
[m
[36m[11:05:45.075348] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:45.113636] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836745000-1698836746000[m
[36m[11:05:46.014561] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836743000-1698836744000 [m
[36m[11:05:46.015184] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836743000-1698836744000-144[m
[36m[11:05:46.015557] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836743000-1698836744000[m
[36m[11:05:46.015891] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836743000-1698836744000[m
[36m[11:05:46.016037] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:46.016065] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:46.018734] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836743000,1698836744000,4,2129601841,1698836746016
1698836743000,1698836744000,5,736176640,1698836746016
1698836743000,1698836744000,6,5845456303,1698836746016
1698836743000,1698836744000,8,16372134655,1698836746016
1698836743000,1698836744000,11,317923434,1698836746016
1698836743000,1698836744000,7,26898182870,1698836746016
1698836743000,1698836744000,10,327101380,1698836746016
1698836743000,1698836744000,9,299867547,1698836746016
1698836743000,1698836744000,1,36781510,1698836746016
[m
[36m[11:05:46.076613] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:46.127232] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836746000-1698836747000[m
[36m[11:05:47.030031] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836744000-1698836745000 [m
[36m[11:05:47.030261] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836745000-1698836746000 [m
[36m[11:05:47.031056] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836744000-1698836745000-145[m
[36m[11:05:47.031135] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836744000-1698836745000[m
[36m[11:05:47.031187] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836744000-1698836745000[m
[36m[11:05:47.031267] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:47.031284] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:47.032979] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836744000,1698836745000,11,317925524,1698836747031
1698836744000,1698836745000,8,16372136793,1698836747031
1698836744000,1698836745000,10,327103482,1698836747031
1698836744000,1698836745000,7,26898185030,1698836747031
1698836744000,1698836745000,9,299869658,1698836747031
1698836744000,1698836745000,4,2129604081,1698836747031
1698836744000,1698836745000,6,5845458605,1698836747031
1698836744000,1698836745000,5,736178911,1698836747031
1698836744000,1698836745000,1,36785264,1698836747031
[m
[36m[11:05:47.034808] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836745000-1698836746000-146[m
[36m[11:05:47.034891] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836745000-1698836746000[m
[36m[11:05:47.034930] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836745000-1698836746000[m
[36m[11:05:47.035000] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:47.035016] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:47.036582] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836745000,1698836746000,11,317927807,1698836747035
1698836745000,1698836746000,10,327105799,1698836747035
1698836745000,1698836746000,8,16372138959,1698836747035
1698836745000,1698836746000,7,26898187186,1698836747035
1698836745000,1698836746000,9,299871803,1698836747035
1698836745000,1698836746000,4,2129606243,1698836747035
1698836745000,1698836746000,6,5845460775,1698836747035
1698836745000,1698836746000,5,736181023,1698836747035
[m
[36m[11:05:47.077849] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:47.117974] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836747000-1698836748000[m
[36m[11:05:48.040973] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836746000-1698836747000 [m
[36m[11:05:48.041959] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836746000-1698836747000-147[m
[36m[11:05:48.042065] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836746000-1698836747000[m
[36m[11:05:48.042133] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836746000-1698836747000[m
[36m[11:05:48.042287] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:48.042324] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:48.046117] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836746000,1698836747000,8,16372141200,1698836748042
1698836746000,1698836747000,7,26898189388,1698836748042
1698836746000,1698836747000,9,299874019,1698836748042
1698836746000,1698836747000,4,2129608427,1698836748042
1698836746000,1698836747000,10,327108015,1698836748042
1698836746000,1698836747000,6,5845462922,1698836748042
1698836746000,1698836747000,5,736183195,1698836748042
1698836746000,1698836747000,11,317930018,1698836748042
1698836746000,1698836747000,1,36788987,1698836748042
[m
[36m[11:05:48.079102] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:48.121207] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836748000-1698836749000[m
[36m[11:05:49.058896] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836747000-1698836748000 [m
[36m[11:05:49.059779] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836747000-1698836748000-148[m
[36m[11:05:49.059892] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836747000-1698836748000[m
[36m[11:05:49.059966] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836747000-1698836748000[m
[36m[11:05:49.060089] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:49.060123] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:49.063992] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836747000,1698836748000,8,16372143450,1698836749060
1698836747000,1698836748000,7,26898191532,1698836749060
1698836747000,1698836748000,9,299876138,1698836749060
1698836747000,1698836748000,10,327110178,1698836749060
1698836747000,1698836748000,4,2129610528,1698836749060
1698836747000,1698836748000,6,5845465069,1698836749060
1698836747000,1698836748000,5,736185409,1698836749060
1698836747000,1698836748000,11,317932170,1698836749060
1698836747000,1698836748000,1,36790622,1698836749060
[m
[36m[11:05:49.080002] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:49.117647] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836749000-1698836750000[m
[36m[11:05:50.074182] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836748000-1698836749000 [m
[36m[11:05:50.075039] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836748000-1698836749000-149[m
[36m[11:05:50.075144] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836748000-1698836749000[m
[36m[11:05:50.075212] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836748000-1698836749000[m
[36m[11:05:50.075321] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:50.075354] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:50.078716] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836748000,1698836749000,7,26898193680,1698836750075
1698836748000,1698836749000,10,327112431,1698836750075
1698836748000,1698836749000,9,299878270,1698836750075
1698836748000,1698836749000,4,2129612629,1698836750075
1698836748000,1698836749000,6,5845467210,1698836750075
1698836748000,1698836749000,5,736187555,1698836750075
1698836748000,1698836749000,11,317934373,1698836750075
1698836748000,1698836749000,8,16372145697,1698836750075
1698836748000,1698836749000,1,36794629,1698836750075
[m
[36m[11:05:50.081215] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:50.116789] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836750000-1698836751000[m
[36m[11:05:51.082459] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:51.089593] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836749000-1698836750000 [m
[36m[11:05:51.090436] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836749000-1698836750000-150[m
[36m[11:05:51.090538] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836749000-1698836750000[m
[36m[11:05:51.090606] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836749000-1698836750000[m
[36m[11:05:51.090719] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:51.090752] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:51.094064] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836749000,1698836750000,7,26898195998,1698836751090
1698836749000,1698836750000,9,299880477,1698836751090
1698836749000,1698836750000,4,2129614716,1698836751090
1698836749000,1698836750000,6,5845469341,1698836751090
1698836749000,1698836750000,5,736189659,1698836751090
1698836749000,1698836750000,11,317936500,1698836751090
1698836749000,1698836750000,8,16372147811,1698836751090
1698836749000,1698836750000,10,327114600,1698836751090
1698836749000,1698836750000,1,36798319,1698836751090
[m
[36m[11:05:51.154474] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836751000-1698836752000[m
[36m[11:05:52.083757] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:52.105783] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836750000-1698836751000 [m
[36m[11:05:52.106647] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836750000-1698836751000-151[m
[36m[11:05:52.106752] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836750000-1698836751000[m
[36m[11:05:52.106817] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836750000-1698836751000[m
[36m[11:05:52.106931] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:52.106962] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:52.110352] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836750000,1698836751000,4,2129616979,1698836752106
1698836750000,1698836751000,6,5845471582,1698836752106
1698836750000,1698836751000,5,736191801,1698836752106
1698836750000,1698836751000,10,327116674,1698836752106
1698836750000,1698836751000,11,317938639,1698836752106
1698836750000,1698836751000,8,16372150013,1698836752106
1698836750000,1698836751000,9,299882737,1698836752106
1698836750000,1698836751000,7,26898198284,1698836752106
1698836750000,1698836751000,1,36802019,1698836752106
[m
[36m[11:05:52.137059] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836752000-1698836753000[m
[36m[11:05:53.085034] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:53.113007] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836753000-1698836754000[m
[36m[11:05:53.123399] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836751000-1698836752000 [m
[36m[11:05:53.124197] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836751000-1698836752000-152[m
[36m[11:05:53.124284] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836751000-1698836752000[m
[36m[11:05:53.124337] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836751000-1698836752000[m
[36m[11:05:53.124430] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:53.124455] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:53.127138] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836751000,1698836752000,6,5845473716,1698836753124
1698836751000,1698836752000,10,327118752,1698836753124
1698836751000,1698836752000,11,317940687,1698836753124
1698836751000,1698836752000,5,736193939,1698836753124
1698836751000,1698836752000,8,16372152154,1698836753124
1698836751000,1698836752000,9,299884867,1698836753124
1698836751000,1698836752000,7,26898200391,1698836753124
1698836751000,1698836752000,4,2129619291,1698836753124
1698836751000,1698836752000,1,36805803,1698836753124
[m
[36m[11:05:54.086314] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:54.116115] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836754000-1698836755000[m
[36m[11:05:54.138022] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836752000-1698836753000 [m
[36m[11:05:54.138879] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836752000-1698836753000-153[m
[36m[11:05:54.138958] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836752000-1698836753000[m
[36m[11:05:54.139002] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836752000-1698836753000[m
[36m[11:05:54.139073] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:54.139094] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:54.141512] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836752000,1698836753000,11,317942847,1698836754139
1698836752000,1698836753000,10,327120879,1698836754139
1698836752000,1698836753000,6,5845475845,1698836754139
1698836752000,1698836753000,9,299886962,1698836754139
1698836752000,1698836753000,5,736196135,1698836754139
1698836752000,1698836753000,8,16372154271,1698836754139
1698836752000,1698836753000,7,26898202553,1698836754139
1698836752000,1698836753000,4,2129621425,1698836754139
1698836752000,1698836753000,1,36809518,1698836754139
[m
[36m[11:05:55.087578] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:55.145675] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836755000-1698836756000[m
[36m[11:05:55.150319] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836753000-1698836754000 [m
[36m[11:05:55.151102] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836753000-1698836754000-154[m
[36m[11:05:55.151205] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836753000-1698836754000[m
[36m[11:05:55.151274] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836753000-1698836754000[m
[36m[11:05:55.151384] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:55.151416] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:55.154802] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836753000,1698836754000,10,327123172,1698836755151
1698836753000,1698836754000,11,317945135,1698836755151
1698836753000,1698836754000,6,5845478044,1698836755151
1698836753000,1698836754000,9,299889143,1698836755151
1698836753000,1698836754000,5,736198344,1698836755151
1698836753000,1698836754000,8,16372156443,1698836755151
1698836753000,1698836754000,7,26898204713,1698836755151
1698836753000,1698836754000,4,2129623524,1698836755151
1698836753000,1698836754000,1,36813310,1698836755151
[m
[36m[11:05:56.088897] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:56.121531] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836756000-1698836757000[m
[36m[11:05:56.166121] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836754000-1698836755000 [m
[36m[11:05:56.167056] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836754000-1698836755000-155[m
[36m[11:05:56.167170] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836754000-1698836755000[m
[36m[11:05:56.167244] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836754000-1698836755000[m
[36m[11:05:56.167373] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:56.167406] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:56.171353] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836754000,1698836755000,6,5845480305,1698836756167
1698836754000,1698836755000,9,299891216,1698836756167
1698836754000,1698836755000,5,736200488,1698836756167
1698836754000,1698836755000,8,16372158587,1698836756167
1698836754000,1698836755000,7,26898206898,1698836756167
1698836754000,1698836755000,4,2129625638,1698836756167
1698836754000,1698836755000,10,327125368,1698836756167
1698836754000,1698836755000,11,317947342,1698836756167
1698836754000,1698836755000,1,36816450,1698836756167
[m
[36m[11:05:57.090313] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:57.123986] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836757000-1698836758000[m
[36m[11:05:57.181327] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836755000-1698836756000 [m
[36m[11:05:57.182134] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836755000-1698836756000-156[m
[36m[11:05:57.182295] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836755000-1698836756000[m
[36m[11:05:57.182374] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836755000-1698836756000[m
[36m[11:05:57.182508] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:57.182540] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:57.186444] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836755000,1698836756000,9,299893357,1698836757182
1698836755000,1698836756000,5,736202614,1698836757182
1698836755000,1698836756000,8,16372160742,1698836757182
1698836755000,1698836756000,7,26898209063,1698836757182
1698836755000,1698836756000,10,327127442,1698836757182
1698836755000,1698836756000,4,2129627787,1698836757182
1698836755000,1698836756000,11,317949416,1698836757182
1698836755000,1698836756000,6,5845482642,1698836757182
1698836755000,1698836756000,1,36818669,1698836757182
[m
[36m[11:05:58.091581] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:58.114610] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836758000-1698836759000[m
[36m[11:05:58.197603] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836756000-1698836757000 [m
[36m[11:05:58.198481] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836756000-1698836757000-157[m
[36m[11:05:58.198581] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836756000-1698836757000[m
[36m[11:05:58.198651] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836756000-1698836757000[m
[36m[11:05:58.198772] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:58.198806] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:58.202117] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836756000,1698836757000,9,299895623,1698836758198
1698836756000,1698836757000,8,16372162919,1698836758198
1698836756000,1698836757000,5,736204789,1698836758198
1698836756000,1698836757000,10,327129538,1698836758198
1698836756000,1698836757000,7,26898211230,1698836758198
1698836756000,1698836757000,4,2129629939,1698836758198
1698836756000,1698836757000,11,317951512,1698836758198
1698836756000,1698836757000,6,5845484777,1698836758198
1698836756000,1698836757000,1,36822441,1698836758198
[m
[36m[11:05:59.092967] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:59.116398] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836759000-1698836760000[m
[36m[11:05:59.215136] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836757000-1698836758000 [m
[36m[11:05:59.215993] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836757000-1698836758000-158[m
[36m[11:05:59.216103] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836757000-1698836758000[m
[36m[11:05:59.216177] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836757000-1698836758000[m
[36m[11:05:59.216301] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:05:59.216334] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:05:59.220359] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836757000,1698836758000,10,327131741,1698836759216
1698836757000,1698836758000,8,16372165073,1698836759216
1698836757000,1698836758000,7,26898213342,1698836759216
1698836757000,1698836758000,5,736206951,1698836759216
1698836757000,1698836758000,11,317953594,1698836759216
1698836757000,1698836758000,4,2129632013,1698836759216
1698836757000,1698836758000,6,5845486931,1698836759216
1698836757000,1698836758000,9,299897841,1698836759216
1698836757000,1698836758000,1,36826076,1698836759216
[m
[36m[11:05:59.346599] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:59.346914] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:59.347967] [D] [thread 131150] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:05:59.348065] [I] [thread 131150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:59.348084] [I] [thread 131150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:05:59.348198] [I] [thread 131150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:05:59.348211] [I] [thread 131150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:05:59.598099] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:05:59.598729] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:00.166278] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836760000-1698836761000[m
[36m[11:06:00.230536] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836758000-1698836759000 [m
[36m[11:06:00.231458] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836758000-1698836759000-159[m
[36m[11:06:00.231561] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836758000-1698836759000[m
[36m[11:06:00.231628] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836758000-1698836759000[m
[36m[11:06:00.231741] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:00.231775] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:00.235701] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836758000,1698836759000,7,26898215530,1698836760231
1698836758000,1698836759000,5,736209291,1698836760231
1698836758000,1698836759000,8,16372167431,1698836760231
1698836758000,1698836759000,11,317955907,1698836760231
1698836758000,1698836759000,4,2129634452,1698836760231
1698836758000,1698836759000,6,5845489207,1698836760231
1698836758000,1698836759000,9,299899952,1698836760231
1698836758000,1698836759000,10,327134028,1698836760231
1698836758000,1698836759000,1,36829762,1698836760231
[m
[36m[11:06:00.600064] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:01.153743] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836761000-1698836762000[m
[36m[11:06:01.246917] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836759000-1698836760000 [m
[36m[11:06:01.247489] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836759000-1698836760000-160[m
[36m[11:06:01.247559] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836759000-1698836760000[m
[36m[11:06:01.247601] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836759000-1698836760000[m
[36m[11:06:01.247673] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:01.247692] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:01.249444] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836759000,1698836760000,7,26898218357,1698836761247
1698836759000,1698836760000,5,736211927,1698836761247
1698836759000,1698836760000,6,5845491703,1698836761247
1698836759000,1698836760000,9,299902552,1698836761247
1698836759000,1698836760000,10,327136673,1698836761247
1698836759000,1698836760000,11,317958611,1698836761247
1698836759000,1698836760000,4,2129637009,1698836761247
1698836759000,1698836760000,8,16372170130,1698836761247
1698836759000,1698836760000,1,36833416,1698836761247
[m
[36m[11:06:01.601318] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:01.620205] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:01.620782] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:01.621506] [D] [thread 131156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:01.621598] [I] [thread 131156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:01.621617] [I] [thread 131156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:01.621734] [I] [thread 131156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:01.621748] [I] [thread 131156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:01.899949] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:01.900521] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:02.146777] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836762000-1698836763000[m
[36m[11:06:02.257229] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836760000-1698836761000 [m
[36m[11:06:02.258480] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836760000-1698836761000-161[m
[36m[11:06:02.258548] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836760000-1698836761000[m
[36m[11:06:02.258592] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836760000-1698836761000[m
[36m[11:06:02.258671] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:02.258693] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:02.260888] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836760000,1698836761000,9,299904737,1698836762258
1698836760000,1698836761000,10,327138809,1698836762258
1698836760000,1698836761000,6,5845493996,1698836762258
1698836760000,1698836761000,11,317960787,1698836762258
1698836760000,1698836761000,4,2129639155,1698836762258
1698836760000,1698836761000,8,16372172320,1698836762258
1698836760000,1698836761000,5,736214210,1698836762258
1698836760000,1698836761000,7,26898220652,1698836762258
1698836760000,1698836761000,1,36839246,1698836762258
[m
[36m[11:06:02.900929] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:03.119499] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836763000-1698836764000[m
[36m[11:06:03.273938] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836761000-1698836762000 [m
[36m[11:06:03.274810] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836761000-1698836762000-162[m
[36m[11:06:03.274915] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836761000-1698836762000[m
[36m[11:06:03.274983] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836761000-1698836762000[m
[36m[11:06:03.275096] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:03.275130] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:03.278750] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836761000,1698836762000,10,327141185,1698836763275
1698836761000,1698836762000,6,5845496608,1698836763275
1698836761000,1698836762000,9,299907206,1698836763275
1698836761000,1698836762000,11,317963187,1698836763275
1698836761000,1698836762000,4,2129641883,1698836763275
1698836761000,1698836762000,8,16372174930,1698836763275
1698836761000,1698836762000,5,736216878,1698836763275
1698836761000,1698836762000,7,26898223251,1698836763275
1698836761000,1698836762000,1,36843261,1698836763275
[m
[36m[11:06:03.902176] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:03.903253] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:03.903580] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:03.904766] [D] [thread 131161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:03.904863] [I] [thread 131161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:03.904882] [I] [thread 131161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:03.905000] [I] [thread 131161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:03.905013] [I] [thread 131161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:04.068276] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:04.068635] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:04.129334] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836764000-1698836765000[m
[36m[11:06:04.290449] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836762000-1698836763000 [m
[36m[11:06:04.291276] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836762000-1698836763000-163[m
[36m[11:06:04.291381] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836762000-1698836763000[m
[36m[11:06:04.291448] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836762000-1698836763000[m
[36m[11:06:04.291555] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:04.291588] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:04.294955] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836762000,1698836763000,6,5845498791,1698836764291
1698836762000,1698836763000,10,327143552,1698836764291
1698836762000,1698836763000,9,299909543,1698836764291
1698836762000,1698836763000,11,317965604,1698836764291
1698836762000,1698836763000,4,2129643977,1698836764291
1698836762000,1698836763000,8,16372177166,1698836764291
1698836762000,1698836763000,5,736219069,1698836764291
1698836762000,1698836763000,7,26898225449,1698836764291
1698836762000,1698836763000,1,36847130,1698836764291
[m
[36m[11:06:05.069837] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:05.121396] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836765000-1698836766000[m
[36m[11:06:05.308328] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836763000-1698836764000 [m
[36m[11:06:05.308983] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836763000-1698836764000-164[m
[36m[11:06:05.309058] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836763000-1698836764000[m
[36m[11:06:05.309100] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836763000-1698836764000[m
[36m[11:06:05.309174] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:05.309194] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:05.311180] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836763000,1698836764000,4,2129646599,1698836765309
1698836763000,1698836764000,10,327145999,1698836765309
1698836763000,1698836764000,11,317968000,1698836765309
1698836763000,1698836764000,6,5845501236,1698836765309
1698836763000,1698836764000,9,299911830,1698836765309
1698836763000,1698836764000,8,16372179605,1698836765309
1698836763000,1698836764000,5,736221645,1698836765309
1698836763000,1698836764000,7,26898227862,1698836765309
1698836763000,1698836764000,1,36850870,1698836765309
[m
[36m[11:06:06.071109] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:06.115666] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836766000-1698836767000[m
[36m[11:06:06.283893] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:06.284277] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:06.285271] [D] [thread 131167] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:06.285373] [I] [thread 131167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:06.285391] [I] [thread 131167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:06.285507] [I] [thread 131167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:06.285530] [I] [thread 131167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:06.320902] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836764000-1698836765000 [m
[36m[11:06:06.321700] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836764000-1698836765000-165[m
[36m[11:06:06.321797] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836764000-1698836765000[m
[36m[11:06:06.321860] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836764000-1698836765000[m
[36m[11:06:06.321972] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:06.322004] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:06.325433] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836764000,1698836765000,6,5845503625,1698836766322
1698836764000,1698836765000,9,299914389,1698836766322
1698836764000,1698836765000,8,16372181956,1698836766322
1698836764000,1698836765000,5,736223914,1698836766322
1698836764000,1698836765000,4,2129648993,1698836766322
1698836764000,1698836765000,10,327148598,1698836766322
1698836764000,1698836765000,7,26898230250,1698836766322
1698836764000,1698836765000,11,317970610,1698836766322
1698836764000,1698836765000,1,36856561,1698836766322
[m
[36m[11:06:06.495864] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:06.496209] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:07.136678] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836767000-1698836768000[m
[36m[11:06:07.337881] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836765000-1698836766000 [m
[36m[11:06:07.338741] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836765000-1698836766000-166[m
[36m[11:06:07.338810] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836765000-1698836766000[m
[36m[11:06:07.338864] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836765000-1698836766000[m
[36m[11:06:07.338965] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:07.338992] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:07.341867] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836765000,1698836766000,6,5845505940,1698836767339
1698836765000,1698836766000,8,16372184204,1698836767339
1698836765000,1698836766000,4,2129651338,1698836767339
1698836765000,1698836766000,5,736226256,1698836767339
1698836765000,1698836766000,10,327150679,1698836767339
1698836765000,1698836766000,7,26898232571,1698836767339
1698836765000,1698836766000,11,317972682,1698836767339
1698836765000,1698836766000,9,299916726,1698836767339
1698836765000,1698836766000,1,36860388,1698836767339
[m
[36m[11:06:07.497407] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:08.116268] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836768000-1698836769000[m
[36m[11:06:08.354458] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836766000-1698836767000 [m
[36m[11:06:08.355262] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836766000-1698836767000-167[m
[36m[11:06:08.355365] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836766000-1698836767000[m
[36m[11:06:08.355433] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836766000-1698836767000[m
[36m[11:06:08.355547] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:08.355580] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:08.358726] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836766000,1698836767000,6,5845508621,1698836768355
1698836766000,1698836767000,4,2129653828,1698836768355
1698836766000,1698836767000,8,16372186828,1698836768355
1698836766000,1698836767000,5,736228687,1698836768355
1698836766000,1698836767000,11,317975373,1698836768355
1698836766000,1698836767000,10,327153309,1698836768355
1698836766000,1698836767000,7,26898235073,1698836768355
1698836766000,1698836767000,9,299919286,1698836768355
1698836766000,1698836767000,1,36865393,1698836768355
[m
[36m[11:06:08.498672] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:08.531847] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:08.532171] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:08.533306] [D] [thread 131174] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:08.533410] [I] [thread 131174] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:08.533430] [I] [thread 131174] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:08.533553] [I] [thread 131174] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:08.533579] [I] [thread 131174] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:08.672197] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:08.672585] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:09.134779] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836769000-1698836770000[m
[36m[11:06:09.371335] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836767000-1698836768000 [m
[36m[11:06:09.372088] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836767000-1698836768000-168[m
[36m[11:06:09.372175] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836767000-1698836768000[m
[36m[11:06:09.372228] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836767000-1698836768000[m
[36m[11:06:09.372320] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:09.372343] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:09.374378] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836767000,1698836768000,4,2129656061,1698836769372
1698836767000,1698836768000,11,317977473,1698836769372
1698836767000,1698836768000,5,736230930,1698836769372
1698836767000,1698836768000,8,16372189011,1698836769372
1698836767000,1698836768000,10,327155489,1698836769372
1698836767000,1698836768000,9,299921454,1698836769372
1698836767000,1698836768000,7,26898237272,1698836769372
1698836767000,1698836768000,6,5845510892,1698836769372
1698836767000,1698836768000,1,36870071,1698836769372
[m
[36m[11:06:09.673798] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:10.110947] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836770000-1698836771000[m
[36m[11:06:10.384906] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836768000-1698836769000 [m
[36m[11:06:10.385693] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836768000-1698836769000-169[m
[36m[11:06:10.385794] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836768000-1698836769000[m
[36m[11:06:10.385859] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836768000-1698836769000[m
[36m[11:06:10.385974] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:10.386005] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:10.389419] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836768000,1698836769000,4,2129658779,1698836770386
1698836768000,1698836769000,11,317980093,1698836770386
1698836768000,1698836769000,5,736233597,1698836770386
1698836768000,1698836769000,8,16372191597,1698836770386
1698836768000,1698836769000,10,327157994,1698836770386
1698836768000,1698836769000,9,299923987,1698836770386
1698836768000,1698836769000,7,26898239888,1698836770386
1698836768000,1698836769000,6,5845513552,1698836770386
1698836768000,1698836769000,1,36874010,1698836770386
[m
[36m[11:06:10.675060] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:10.863955] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:10.864305] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:10.865249] [D] [thread 131180] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:10.865340] [I] [thread 131180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:10.865359] [I] [thread 131180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:10.865476] [I] [thread 131180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:10.865489] [I] [thread 131180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:11.123336] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836771000-1698836772000[m
[36m[11:06:11.203467] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:11.203825] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:11.400435] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836769000-1698836770000 [m
[36m[11:06:11.401225] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836769000-1698836770000-170[m
[36m[11:06:11.401325] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836769000-1698836770000[m
[36m[11:06:11.401390] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836769000-1698836770000[m
[36m[11:06:11.401504] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:11.401537] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:11.404928] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836769000,1698836770000,5,736235747,1698836771401
1698836769000,1698836770000,10,327160292,1698836771401
1698836769000,1698836770000,8,16372193811,1698836771401
1698836769000,1698836770000,9,299926225,1698836771401
1698836769000,1698836770000,7,26898242120,1698836771401
1698836769000,1698836770000,6,5845515683,1698836771401
1698836769000,1698836770000,4,2129661038,1698836771401
1698836769000,1698836770000,11,317982543,1698836771401
1698836769000,1698836770000,1,36879322,1698836771401
[m
[36m[11:06:12.118126] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836772000-1698836773000[m
[36m[11:06:12.205165] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:12.416403] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836770000-1698836771000 [m
[36m[11:06:12.417487] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836770000-1698836771000-171[m
[36m[11:06:12.417567] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836770000-1698836771000[m
[36m[11:06:12.417633] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836770000-1698836771000[m
[36m[11:06:12.417749] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:12.417783] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:12.420912] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836770000,1698836771000,10,327162716,1698836772417
1698836770000,1698836771000,5,736238391,1698836772417
1698836770000,1698836771000,8,16372196277,1698836772417
1698836770000,1698836771000,7,26898244630,1698836772417
1698836770000,1698836771000,9,299928540,1698836772417
1698836770000,1698836771000,6,5845518302,1698836772417
1698836770000,1698836771000,11,317984853,1698836772417
1698836770000,1698836771000,4,2129663681,1698836772417
1698836770000,1698836771000,1,36881621,1698836772417
[m
[36m[11:06:13.125290] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836773000-1698836774000[m
[36m[11:06:13.206463] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:13.235240] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:13.235547] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:13.236589] [D] [thread 131185] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:13.236692] [I] [thread 131185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:13.236710] [I] [thread 131185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:13.236817] [I] [thread 131185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:13.236829] [I] [thread 131185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:13.403670] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:13.404019] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:13.435010] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836771000-1698836772000 [m
[36m[11:06:13.436049] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836771000-1698836772000-172[m
[36m[11:06:13.436163] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836771000-1698836772000[m
[36m[11:06:13.436251] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836771000-1698836772000[m
[36m[11:06:13.436385] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:13.436422] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:13.440157] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836771000,1698836772000,8,16372198749,1698836773436
1698836771000,1698836772000,9,299930956,1698836773436
1698836771000,1698836772000,7,26898246959,1698836773436
1698836771000,1698836772000,11,317987318,1698836773436
1698836771000,1698836772000,4,2129665886,1698836773436
1698836771000,1698836772000,6,5845520559,1698836773436
1698836771000,1698836772000,10,327165244,1698836773436
1698836771000,1698836772000,5,736240769,1698836773436
1698836771000,1698836772000,1,36887353,1698836773436
[m
[36m[11:06:14.116936] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836774000-1698836775000[m
[36m[11:06:14.405298] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:14.451166] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836772000-1698836773000 [m
[36m[11:06:14.452192] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836772000-1698836773000-173[m
[36m[11:06:14.452329] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836772000-1698836773000[m
[36m[11:06:14.452416] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836772000-1698836773000[m
[36m[11:06:14.452559] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:14.452594] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:14.455370] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836772000,1698836773000,9,299933243,1698836774452
1698836772000,1698836773000,7,26898249213,1698836774452
1698836772000,1698836773000,10,327167342,1698836774452
1698836772000,1698836773000,11,317989397,1698836774452
1698836772000,1698836773000,6,5845522867,1698836774452
1698836772000,1698836773000,4,2129668220,1698836774452
1698836772000,1698836773000,5,736243171,1698836774452
1698836772000,1698836773000,8,16372201149,1698836774452
1698836772000,1698836773000,1,36891243,1698836774452
[m
[36m[11:06:15.151039] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836775000-1698836776000[m
[36m[11:06:15.406527] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:15.439680] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:15.440045] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:15.441639] [D] [thread 131191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:15.441736] [I] [thread 131191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:15.441754] [I] [thread 131191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:15.441873] [I] [thread 131191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:15.441886] [I] [thread 131191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:15.464377] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836773000-1698836774000 [m
[36m[11:06:15.465059] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836773000-1698836774000-174[m
[36m[11:06:15.465136] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836773000-1698836774000[m
[36m[11:06:15.465185] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836773000-1698836774000[m
[36m[11:06:15.465275] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:15.465298] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:15.467559] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836773000,1698836774000,7,26898251793,1698836775465
1698836773000,1698836774000,10,327170149,1698836775465
1698836773000,1698836774000,11,317992159,1698836775465
1698836773000,1698836774000,6,5845525371,1698836775465
1698836773000,1698836774000,4,2129670639,1698836775465
1698836773000,1698836774000,5,736245617,1698836775465
1698836773000,1698836774000,8,16372203689,1698836775465
1698836773000,1698836774000,9,299935946,1698836775465
1698836773000,1698836774000,1,36896818,1698836775465
[m
[36m[11:06:15.654011] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:15.654364] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:16.108143] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836776000-1698836777000[m
[36m[11:06:16.480824] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836774000-1698836775000 [m
[36m[11:06:16.481423] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836774000-1698836775000-175[m
[36m[11:06:16.481755] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836774000-1698836775000[m
[36m[11:06:16.481844] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836774000-1698836775000[m
[36m[11:06:16.481947] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:16.481980] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:16.484226] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836774000,1698836775000,7,26898254151,1698836776481
1698836774000,1698836775000,4,2129673029,1698836776481
1698836774000,1698836775000,6,5845527590,1698836776481
1698836774000,1698836775000,9,299938145,1698836776481
1698836774000,1698836775000,8,16372205888,1698836776481
1698836774000,1698836775000,5,736247950,1698836776481
1698836774000,1698836775000,10,327172445,1698836776481
1698836774000,1698836775000,11,317994458,1698836776481
1698836774000,1698836775000,1,36900508,1698836776481
[m
[36m[11:06:16.655670] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:17.123253] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836777000-1698836778000[m
[36m[11:06:17.490688] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836775000-1698836776000 [m
[36m[11:06:17.491401] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836775000-1698836776000-176[m
[36m[11:06:17.491465] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836775000-1698836776000[m
[36m[11:06:17.491515] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836775000-1698836776000[m
[36m[11:06:17.491603] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:17.491628] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:17.493695] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836775000,1698836776000,6,5845530239,1698836777491
1698836775000,1698836776000,10,327174922,1698836777491
1698836775000,1698836776000,9,299940645,1698836777491
1698836775000,1698836776000,8,16372208537,1698836777491
1698836775000,1698836776000,11,317997003,1698836777491
1698836775000,1698836776000,5,736250498,1698836777491
1698836775000,1698836776000,4,2129675640,1698836777491
1698836775000,1698836776000,7,26898256854,1698836777491
1698836775000,1698836776000,1,36905658,1698836777491
[m
[36m[11:06:17.656914] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:17.704020] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:17.704390] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:17.705405] [D] [thread 131196] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:17.705503] [I] [thread 131196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:17.705521] [I] [thread 131196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:17.705639] [I] [thread 131196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:17.705705] [I] [thread 131196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:17.856084] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:17.856476] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:18.114919] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836778000-1698836779000[m
[36m[11:06:18.505808] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836776000-1698836777000 [m
[36m[11:06:18.506929] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836776000-1698836777000-177[m
[36m[11:06:18.507053] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836776000-1698836777000[m
[36m[11:06:18.507135] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836776000-1698836777000[m
[36m[11:06:18.507264] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:18.507302] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:18.510415] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836776000,1698836777000,7,26898258958,1698836778507
1698836776000,1698836777000,6,5845532421,1698836778507
1698836776000,1698836777000,10,327177111,1698836778507
1698836776000,1698836777000,9,299942849,1698836778507
1698836776000,1698836777000,11,317999221,1698836778507
1698836776000,1698836777000,4,2129677825,1698836778507
1698836776000,1698836777000,8,16372210739,1698836778507
1698836776000,1698836777000,5,736252610,1698836778507
1698836776000,1698836777000,1,36910337,1698836778507
[m
[36m[11:06:18.857692] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:19.120377] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836779000-1698836780000[m
[36m[11:06:19.522685] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836777000-1698836778000 [m
[36m[11:06:19.523490] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836777000-1698836778000-178[m
[36m[11:06:19.523591] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836777000-1698836778000[m
[36m[11:06:19.523656] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836777000-1698836778000[m
[36m[11:06:19.523766] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:19.523798] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:19.527289] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836777000,1698836778000,10,327179440,1698836779523
1698836777000,1698836778000,6,5845534965,1698836779523
1698836777000,1698836778000,11,318001534,1698836779523
1698836777000,1698836778000,9,299945534,1698836779523
1698836777000,1698836778000,4,2129680447,1698836779523
1698836777000,1698836778000,8,16372213211,1698836779523
1698836777000,1698836778000,5,736255274,1698836779523
1698836777000,1698836778000,7,26898261639,1698836779523
1698836777000,1698836778000,1,36912671,1698836779523
[m
[36m[11:06:19.858427] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:19.875881] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:19.876555] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:19.877747] [D] [thread 131203] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:19.877870] [I] [thread 131203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:19.877890] [I] [thread 131203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:19.878013] [I] [thread 131203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:19.878029] [I] [thread 131203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:20.094909] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:20.095353] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:20.116109] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836780000-1698836781000[m
[36m[11:06:20.539558] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836778000-1698836779000 [m
[36m[11:06:20.540427] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836778000-1698836779000-179[m
[36m[11:06:20.540541] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836778000-1698836779000[m
[36m[11:06:20.540613] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836778000-1698836779000[m
[36m[11:06:20.540735] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:20.540771] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:20.544756] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836778000,1698836779000,10,327182024,1698836780540
1698836778000,1698836779000,11,318004200,1698836780540
1698836778000,1698836779000,6,5845537221,1698836780540
1698836778000,1698836779000,4,2129682662,1698836780540
1698836778000,1698836779000,8,16372215536,1698836780540
1698836778000,1698836779000,5,736257463,1698836780540
1698836778000,1698836779000,7,26898263858,1698836780540
1698836778000,1698836779000,9,299947905,1698836780540
1698836778000,1698836779000,1,36917972,1698836780540
[m
[36m[11:06:21.096603] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:21.125139] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836781000-1698836782000[m
[36m[11:06:21.556637] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836779000-1698836780000 [m
[36m[11:06:21.557496] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836779000-1698836780000-180[m
[36m[11:06:21.557598] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836779000-1698836780000[m
[36m[11:06:21.557662] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836779000-1698836780000[m
[36m[11:06:21.557772] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:21.557802] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:21.561177] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836779000,1698836780000,6,5845539672,1698836781557
1698836779000,1698836780000,4,2129685253,1698836781557
1698836779000,1698836780000,8,16372217901,1698836781557
1698836779000,1698836780000,5,736259999,1698836781557
1698836779000,1698836780000,10,327184415,1698836781557
1698836779000,1698836780000,7,26898266304,1698836781557
1698836779000,1698836780000,9,299950202,1698836781557
1698836779000,1698836780000,11,318006549,1698836781557
1698836779000,1698836780000,1,36921859,1698836781557
[m
[36m[11:06:22.097853] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:22.125717] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836782000-1698836783000[m
[36m[11:06:22.198098] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:22.198853] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:22.200022] [D] [thread 131209] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:22.200143] [I] [thread 131209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:22.200162] [I] [thread 131209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:22.200284] [I] [thread 131209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:22.200301] [I] [thread 131209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:22.399512] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:22.399853] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:22.572989] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836780000-1698836781000 [m
[36m[11:06:22.574447] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836780000-1698836781000-181[m
[36m[11:06:22.574569] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836780000-1698836781000[m
[36m[11:06:22.574647] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836780000-1698836781000[m
[36m[11:06:22.574778] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:22.574816] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:22.578030] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836780000,1698836781000,6,5845542179,1698836782574
1698836780000,1698836781000,10,327186964,1698836782574
1698836780000,1698836781000,8,16372220354,1698836782574
1698836780000,1698836781000,5,736262315,1698836782574
1698836780000,1698836781000,9,299952628,1698836782574
1698836780000,1698836781000,7,26898268707,1698836782574
1698836780000,1698836781000,11,318009072,1698836782574
1698836780000,1698836781000,4,2129687627,1698836782574
1698836780000,1698836781000,1,36927695,1698836782574
[m
[36m[11:06:23.119044] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836783000-1698836784000[m
[36m[11:06:23.401029] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:23.589301] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836781000-1698836782000 [m
[36m[11:06:23.590106] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836781000-1698836782000-182[m
[36m[11:06:23.590259] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836781000-1698836782000[m
[36m[11:06:23.590335] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836781000-1698836782000[m
[36m[11:06:23.590456] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:23.590488] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:23.593794] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836781000,1698836782000,8,16372222636,1698836783590
1698836781000,1698836782000,5,736264711,1698836783590
1698836781000,1698836782000,9,299954792,1698836783590
1698836781000,1698836782000,7,26898271027,1698836783590
1698836781000,1698836782000,11,318011238,1698836783590
1698836781000,1698836782000,4,2129690105,1698836783590
1698836781000,1698836782000,10,327189259,1698836783590
1698836781000,1698836782000,6,5845544686,1698836783590
1698836781000,1698836782000,1,36931750,1698836783590
[m
[36m[11:06:24.122809] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836784000-1698836785000[m
[36m[11:06:24.402298] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:24.409601] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:24.409914] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:24.410984] [D] [thread 131215] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:24.411080] [I] [thread 131215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:24.411098] [I] [thread 131215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:24.411216] [I] [thread 131215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:24.411229] [I] [thread 131215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:24.578341] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:24.578663] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:24.604952] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836782000-1698836783000 [m
[36m[11:06:24.605610] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836782000-1698836783000-183[m
[36m[11:06:24.605697] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836782000-1698836783000[m
[36m[11:06:24.605748] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836782000-1698836783000[m
[36m[11:06:24.605835] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:24.605856] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:24.607964] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836782000,1698836783000,8,16372225274,1698836784605
1698836782000,1698836783000,5,736267175,1698836784605
1698836782000,1698836783000,9,299957595,1698836784605
1698836782000,1698836783000,11,318013801,1698836784605
1698836782000,1698836783000,7,26898273552,1698836784605
1698836782000,1698836783000,10,327191857,1698836784605
1698836782000,1698836783000,6,5845547181,1698836784605
1698836782000,1698836783000,4,2129692599,1698836784605
1698836782000,1698836783000,1,36937566,1698836784605
[m
[36m[11:06:25.134378] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836785000-1698836786000[m
[36m[11:06:25.579864] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:25.617541] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836783000-1698836784000 [m
[36m[11:06:25.618854] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836783000-1698836784000-184[m
[36m[11:06:25.618967] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836783000-1698836784000[m
[36m[11:06:25.619031] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836783000-1698836784000[m
[36m[11:06:25.619140] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:25.619170] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:25.622547] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836783000,1698836784000,8,16372227529,1698836785619
1698836783000,1698836784000,5,736269381,1698836785619
1698836783000,1698836784000,10,327194156,1698836785619
1698836783000,1698836784000,7,26898275679,1698836785619
1698836783000,1698836784000,11,318016022,1698836785619
1698836783000,1698836784000,4,2129694813,1698836785619
1698836783000,1698836784000,6,5845549368,1698836785619
1698836783000,1698836784000,9,299959780,1698836785619
1698836783000,1698836784000,1,36941600,1698836785619
[m
[36m[11:06:26.120399] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836786000-1698836787000[m
[36m[11:06:26.581100] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:26.583205] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:26.583543] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:26.584534] [D] [thread 131221] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:26.584629] [I] [thread 131221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:26.584646] [I] [thread 131221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:26.584763] [I] [thread 131221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:26.584777] [I] [thread 131221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:26.633717] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836784000-1698836785000 [m
[36m[11:06:26.634648] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836784000-1698836785000-185[m
[36m[11:06:26.634761] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836784000-1698836785000[m
[36m[11:06:26.634837] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836784000-1698836785000[m
[36m[11:06:26.634968] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:26.635006] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:26.638929] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836784000,1698836785000,5,736272125,1698836786635
1698836784000,1698836785000,11,318018544,1698836786635
1698836784000,1698836785000,7,26898278364,1698836786635
1698836784000,1698836785000,4,2129697351,1698836786635
1698836784000,1698836785000,6,5845551963,1698836786635
1698836784000,1698836785000,9,299962311,1698836786635
1698836784000,1698836785000,10,327196906,1698836786635
1698836784000,1698836785000,8,16372230271,1698836786635
1698836784000,1698836785000,1,36947183,1698836786635
[m
[36m[11:06:26.772222] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:26.772630] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:27.121692] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836787000-1698836788000[m
[36m[11:06:27.652020] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836785000-1698836786000 [m
[36m[11:06:27.652902] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836785000-1698836786000-186[m
[36m[11:06:27.653017] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836785000-1698836786000[m
[36m[11:06:27.653095] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836785000-1698836786000[m
[36m[11:06:27.653225] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:27.653264] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:27.657254] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836785000,1698836786000,11,318020814,1698836787653
1698836785000,1698836786000,7,26898280545,1698836787653
1698836785000,1698836786000,4,2129699439,1698836787653
1698836785000,1698836786000,9,299964441,1698836787653
1698836785000,1698836786000,6,5845554120,1698836787653
1698836785000,1698836786000,10,327199062,1698836787653
1698836785000,1698836786000,8,16372232425,1698836787653
1698836785000,1698836786000,5,736274457,1698836787653
1698836785000,1698836786000,1,36948765,1698836787653
[m
[36m[11:06:27.773849] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:28.113502] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836788000-1698836789000[m
[36m[11:06:28.667037] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836786000-1698836787000 [m
[36m[11:06:28.667884] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836786000-1698836787000-187[m
[36m[11:06:28.667999] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836786000-1698836787000[m
[36m[11:06:28.668074] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836786000-1698836787000[m
[36m[11:06:28.668199] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:28.668236] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:28.672159] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836786000,1698836787000,4,2129702245,1698836788668
1698836786000,1698836787000,11,318023152,1698836788668
1698836786000,1698836787000,7,26898283161,1698836788668
1698836786000,1698836787000,9,299967085,1698836788668
1698836786000,1698836787000,6,5845556751,1698836788668
1698836786000,1698836787000,10,327201561,1698836788668
1698836786000,1698836787000,8,16372235060,1698836788668
1698836786000,1698836787000,5,736277094,1698836788668
1698836786000,1698836787000,1,36953823,1698836788668
[m
[36m[11:06:28.775109] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:28.874961] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:28.875294] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:28.876486] [D] [thread 131228] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:28.876590] [I] [thread 131228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:28.876608] [I] [thread 131228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:28.876725] [I] [thread 131228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:28.876739] [I] [thread 131228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:29.090028] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:29.090416] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:29.106773] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836789000-1698836790000[m
[36m[11:06:29.684640] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836787000-1698836788000 [m
[36m[11:06:29.685665] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836787000-1698836788000-188[m
[36m[11:06:29.685840] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836787000-1698836788000[m
[36m[11:06:29.685907] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836787000-1698836788000[m
[36m[11:06:29.686020] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:29.686050] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:29.689381] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836787000,1698836788000,11,318025670,1698836789686
1698836787000,1698836788000,7,26898285381,1698836789686
1698836787000,1698836788000,6,5845559000,1698836789686
1698836787000,1698836788000,10,327203900,1698836789686
1698836787000,1698836788000,5,736279208,1698836789686
1698836787000,1698836788000,8,16372237332,1698836789686
1698836787000,1698836788000,4,2129704484,1698836789686
1698836787000,1698836788000,9,299969488,1698836789686
1698836787000,1698836788000,1,36958396,1698836789686
[m
[36m[11:06:30.091674] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:30.126009] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836790000-1698836791000[m
[36m[11:06:30.702557] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836788000-1698836789000 [m
[36m[11:06:30.703482] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836788000-1698836789000-189[m
[36m[11:06:30.703587] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836788000-1698836789000[m
[36m[11:06:30.703650] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836788000-1698836789000[m
[36m[11:06:30.703762] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:30.703796] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:30.707615] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836788000,1698836789000,7,26898287818,1698836790703
1698836788000,1698836789000,6,5845561524,1698836790703
1698836788000,1698836789000,10,327206280,1698836790703
1698836788000,1698836789000,5,736281820,1698836790703
1698836788000,1698836789000,4,2129707123,1698836790703
1698836788000,1698836789000,8,16372239818,1698836790703
1698836788000,1698836789000,9,299971868,1698836790703
1698836788000,1698836789000,11,318028218,1698836790703
1698836788000,1698836789000,1,36962296,1698836790703
[m
[36m[11:06:31.092940] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:31.121656] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836791000-1698836792000[m
[36m[11:06:31.194942] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:31.195342] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:31.196445] [D] [thread 131233] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:31.196602] [I] [thread 131233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:31.196624] [I] [thread 131233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:31.196751] [I] [thread 131233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:31.196768] [I] [thread 131233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:31.367205] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:31.367554] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:31.718352] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836789000-1698836790000 [m
[36m[11:06:31.719234] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836789000-1698836790000-190[m
[36m[11:06:31.719345] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836789000-1698836790000[m
[36m[11:06:31.719421] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836789000-1698836790000[m
[36m[11:06:31.719542] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:31.719576] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:31.722976] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836789000,1698836790000,7,26898290280,1698836791719
1698836789000,1698836790000,10,327208893,1698836791719
1698836789000,1698836790000,6,5845563854,1698836791719
1698836789000,1698836790000,4,2129709262,1698836791719
1698836789000,1698836790000,9,299974221,1698836791719
1698836789000,1698836790000,5,736284091,1698836791719
1698836789000,1698836790000,8,16372242174,1698836791719
1698836789000,1698836790000,11,318030700,1698836791719
1698836789000,1698836790000,1,36967872,1698836791719
[m
[36m[11:06:32.152602] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836792000-1698836793000[m
[36m[11:06:32.368799] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:32.733675] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836790000-1698836791000 [m
[36m[11:06:32.734436] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836790000-1698836791000-191[m
[36m[11:06:32.734538] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836790000-1698836791000[m
[36m[11:06:32.734591] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836790000-1698836791000[m
[36m[11:06:32.734679] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:32.734700] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:32.736758] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836790000,1698836791000,6,5845566136,1698836792734
1698836790000,1698836791000,9,299976366,1698836792734
1698836790000,1698836791000,4,2129711585,1698836792734
1698836790000,1698836791000,5,736286492,1698836792734
1698836790000,1698836791000,8,16372244395,1698836792734
1698836790000,1698836791000,7,26898292777,1698836792734
1698836790000,1698836791000,10,327211125,1698836792734
1698836790000,1698836791000,11,318032792,1698836792734
1698836790000,1698836791000,1,36971681,1698836792734
[m
[36m[11:06:33.143741] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836793000-1698836794000[m
[36m[11:06:33.370041] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:33.385958] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:33.386305] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:33.387357] [D] [thread 131238] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:33.387454] [I] [thread 131238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:33.387472] [I] [thread 131238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:33.387588] [I] [thread 131238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:33.387602] [I] [thread 131238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:33.654078] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:33.654431] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:33.746352] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836791000-1698836792000 [m
[36m[11:06:33.747158] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836791000-1698836792000-192[m
[36m[11:06:33.747265] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836791000-1698836792000[m
[36m[11:06:33.747329] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836791000-1698836792000[m
[36m[11:06:33.747437] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:33.747466] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:33.750635] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836791000,1698836792000,6,5845568758,1698836793747
1698836791000,1698836792000,4,2129714139,1698836793747
1698836791000,1698836792000,9,299979070,1698836793747
1698836791000,1698836792000,5,736288932,1698836793747
1698836791000,1698836792000,8,16372246965,1698836793747
1698836791000,1698836792000,10,327213738,1698836793747
1698836791000,1698836792000,11,318035431,1698836793747
1698836791000,1698836792000,7,26898295301,1698836793747
1698836791000,1698836792000,1,36977298,1698836793747
[m
[36m[11:06:34.124039] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836794000-1698836795000[m
[36m[11:06:34.655624] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:34.762151] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836792000-1698836793000 [m
[36m[11:06:34.763103] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836792000-1698836793000-193[m
[36m[11:06:34.763181] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836792000-1698836793000[m
[36m[11:06:34.763247] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836792000-1698836793000[m
[36m[11:06:34.763370] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:34.763405] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:34.767257] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836792000,1698836793000,5,736291160,1698836794763
1698836792000,1698836793000,8,16372249129,1698836794763
1698836792000,1698836793000,10,327215863,1698836794763
1698836792000,1698836793000,11,318037532,1698836794763
1698836792000,1698836793000,7,26898297497,1698836794763
1698836792000,1698836793000,4,2129716524,1698836794763
1698836792000,1698836793000,9,299981398,1698836794763
1698836792000,1698836793000,6,5845571117,1698836794763
1698836792000,1698836793000,1,36980497,1698836794763
[m
[36m[11:06:35.132094] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836795000-1698836796000[m
[36m[11:06:35.656881] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:35.713768] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:35.714127] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:35.715088] [D] [thread 131243] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:35.715185] [I] [thread 131243] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:35.715204] [I] [thread 131243] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:35.715321] [I] [thread 131243] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:35.715335] [I] [thread 131243] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:35.779152] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836793000-1698836794000 [m
[36m[11:06:35.779962] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836793000-1698836794000-194[m
[36m[11:06:35.780063] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836793000-1698836794000[m
[36m[11:06:35.780128] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836793000-1698836794000[m
[36m[11:06:35.780241] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:35.780271] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:35.783675] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836793000,1698836794000,10,327218460,1698836795780
1698836793000,1698836794000,5,736293728,1698836795780
1698836793000,1698836794000,8,16372251818,1698836795780
1698836793000,1698836794000,11,318040039,1698836795780
1698836793000,1698836794000,7,26898300058,1698836795780
1698836793000,1698836794000,4,2129719013,1698836795780
1698836793000,1698836794000,9,299983967,1698836795780
1698836793000,1698836794000,6,5845573685,1698836795780
1698836793000,1698836794000,1,36984909,1698836795780
[m
[36m[11:06:35.888977] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:35.889308] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:36.119067] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836796000-1698836797000[m
[36m[11:06:36.796075] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836794000-1698836795000 [m
[36m[11:06:36.797158] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836794000-1698836795000-195[m
[36m[11:06:36.797264] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836794000-1698836795000[m
[36m[11:06:36.797328] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836794000-1698836795000[m
[36m[11:06:36.797427] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:36.797457] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:36.800430] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836794000,1698836795000,10,327220874,1698836796797
1698836794000,1698836795000,11,318042443,1698836796797
1698836794000,1698836795000,5,736295891,1698836796797
1698836794000,1698836795000,8,16372253970,1698836796797
1698836794000,1698836795000,4,2129721211,1698836796797
1698836794000,1698836795000,7,26898302207,1698836796797
1698836794000,1698836795000,9,299986180,1698836796797
1698836794000,1698836795000,6,5845575864,1698836796797
1698836794000,1698836795000,1,36988672,1698836796797
[m
[36m[11:06:36.890534] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:37.122040] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836797000-1698836798000[m
[36m[11:06:37.810794] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836795000-1698836796000 [m
[36m[11:06:37.811645] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836795000-1698836796000-196[m
[36m[11:06:37.811757] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836795000-1698836796000[m
[36m[11:06:37.811839] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836795000-1698836796000[m
[36m[11:06:37.811975] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:37.812014] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:37.815930] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836795000,1698836796000,5,736298539,1698836797812
1698836795000,1698836796000,4,2129723844,1698836797812
1698836795000,1698836796000,8,16372256457,1698836797812
1698836795000,1698836796000,9,299988629,1698836797812
1698836795000,1698836796000,7,26898304781,1698836797812
1698836795000,1698836796000,6,5845578503,1698836797812
1698836795000,1698836796000,10,327223380,1698836797812
1698836795000,1698836796000,11,318044888,1698836797812
1698836795000,1698836796000,1,36993380,1698836797812
[m
[36m[11:06:37.891822] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:37.988428] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:37.988809] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:37.990650] [D] [thread 131248] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:37.990757] [I] [thread 131248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:37.990775] [I] [thread 131248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:37.990868] [I] [thread 131248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:37.990883] [I] [thread 131248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:38.118657] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836798000-1698836799000[m
[36m[11:06:38.140724] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:38.141070] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:38.828702] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836796000-1698836797000 [m
[36m[11:06:38.829845] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836796000-1698836797000-197[m
[36m[11:06:38.829957] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836796000-1698836797000[m
[36m[11:06:38.830024] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836796000-1698836797000[m
[36m[11:06:38.830143] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:38.830173] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:38.833907] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836796000,1698836797000,5,736300902,1698836798830
1698836796000,1698836797000,9,299990976,1698836798830
1698836796000,1698836797000,8,16372258763,1698836798830
1698836796000,1698836797000,7,26898307118,1698836798830
1698836796000,1698836797000,10,327225715,1698836798830
1698836796000,1698836797000,6,5845580697,1698836798830
1698836796000,1698836797000,11,318047265,1698836798830
1698836796000,1698836797000,4,2129726150,1698836798830
1698836796000,1698836797000,1,36997929,1698836798830
[m
[36m[11:06:39.125786] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836799000-1698836800000[m
[36m[11:06:39.142342] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:39.844746] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836797000-1698836798000 [m
[36m[11:06:39.845471] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836797000-1698836798000-198[m
[36m[11:06:39.845544] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836797000-1698836798000[m
[36m[11:06:39.845583] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836797000-1698836798000[m
[36m[11:06:39.845653] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:39.845672] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:39.848095] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836797000,1698836798000,9,299993476,1698836799845
1698836797000,1698836798000,8,16372261132,1698836799845
1698836797000,1698836798000,7,26898309501,1698836799845
1698836797000,1698836798000,10,327228034,1698836799845
1698836797000,1698836798000,6,5845583153,1698836799845
1698836797000,1698836798000,11,318049463,1698836799845
1698836797000,1698836798000,4,2129728705,1698836799845
1698836797000,1698836798000,5,736303569,1698836799845
1698836797000,1698836798000,1,37001900,1698836799845
[m
[36m[11:06:40.123385] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836800000-1698836801000[m
[36m[11:06:40.143690] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:40.154248] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:40.154600] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:40.155608] [D] [thread 131253] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:40.155701] [I] [thread 131253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:40.155720] [I] [thread 131253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:40.155836] [I] [thread 131253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:40.155849] [I] [thread 131253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:40.375940] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:40.376302] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:40.857636] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836798000-1698836799000 [m
[36m[11:06:40.858378] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836798000-1698836799000-199[m
[36m[11:06:40.858471] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836798000-1698836799000[m
[36m[11:06:40.858519] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836798000-1698836799000[m
[36m[11:06:40.858605] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:40.858625] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:40.860546] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836798000,1698836799000,7,26898311993,1698836800858
1698836798000,1698836799000,8,16372263572,1698836800858
1698836798000,1698836799000,10,327230606,1698836800858
1698836798000,1698836799000,4,2129730967,1698836800858
1698836798000,1698836799000,6,5845585502,1698836800858
1698836798000,1698836799000,11,318051977,1698836800858
1698836798000,1698836799000,5,736305812,1698836800858
1698836798000,1698836799000,9,299996025,1698836800858
1698836798000,1698836799000,1,37007781,1698836800858
[m
[36m[11:06:41.128349] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836801000-1698836802000[m
[36m[11:06:41.377524] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:41.869039] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836799000-1698836800000 [m
[36m[11:06:41.869889] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836799000-1698836800000-200[m
[36m[11:06:41.869985] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836799000-1698836800000[m
[36m[11:06:41.870042] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836799000-1698836800000[m
[36m[11:06:41.870147] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:41.870176] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:41.873581] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836799000,1698836800000,4,2129733469,1698836801870
1698836799000,1698836800000,8,16372265898,1698836801870
1698836799000,1698836800000,6,5845587847,1698836801870
1698836799000,1698836800000,11,318054135,1698836801870
1698836799000,1698836800000,5,736308188,1698836801870
1698836799000,1698836800000,9,299998205,1698836801870
1698836799000,1698836800000,7,26898314440,1698836801870
1698836799000,1698836800000,10,327232958,1698836801870
1698836799000,1698836800000,1,37011784,1698836801870
[m
[36m[11:06:42.129936] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836802000-1698836803000[m
[36m[11:06:42.378908] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:42.419701] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:42.420022] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:42.421014] [D] [thread 131258] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:42.421108] [I] [thread 131258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:42.421127] [I] [thread 131258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:42.421244] [I] [thread 131258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:42.421258] [I] [thread 131258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:42.603151] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:42.603515] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:42.883839] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836800000-1698836801000 [m
[36m[11:06:42.884543] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836800000-1698836801000-201[m
[36m[11:06:42.884627] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836800000-1698836801000[m
[36m[11:06:42.884679] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836800000-1698836801000[m
[36m[11:06:42.884765] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:42.884788] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:42.887428] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836800000,1698836801000,8,16372268574,1698836802884
1698836800000,1698836801000,11,318056868,1698836802884
1698836800000,1698836801000,6,5845590326,1698836802884
1698836800000,1698836801000,5,736310598,1698836802884
1698836800000,1698836801000,9,300000777,1698836802884
1698836800000,1698836801000,4,2129736002,1698836802884
1698836800000,1698836801000,7,26898316923,1698836802884
1698836800000,1698836801000,10,327235554,1698836802884
1698836800000,1698836801000,1,37015146,1698836802884
[m
[36m[11:06:43.118469] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836803000-1698836804000[m
[36m[11:06:43.604731] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:43.897362] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836801000-1698836802000 [m
[36m[11:06:43.898118] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836801000-1698836802000-202[m
[36m[11:06:43.898261] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836801000-1698836802000[m
[36m[11:06:43.898333] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836801000-1698836802000[m
[36m[11:06:43.898455] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:43.898563] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:43.901874] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836801000,1698836802000,6,5845592577,1698836803898
1698836801000,1698836802000,9,300002954,1698836803898
1698836801000,1698836802000,5,736312872,1698836803898
1698836801000,1698836802000,4,2129738264,1698836803898
1698836801000,1698836802000,7,26898319187,1698836803898
1698836801000,1698836802000,10,327237655,1698836803898
1698836801000,1698836802000,11,318059093,1698836803898
1698836801000,1698836802000,8,16372270832,1698836803898
1698836801000,1698836802000,1,37019051,1698836803898
[m
[36m[11:06:44.123223] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836804000-1698836805000[m
[36m[11:06:44.606008] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:44.618062] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:44.618655] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:44.619541] [D] [thread 131263] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:44.619633] [I] [thread 131263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:44.619651] [I] [thread 131263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:44.619770] [I] [thread 131263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:44.619783] [I] [thread 131263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:44.879844] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:44.880457] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:44.912727] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836802000-1698836803000 [m
[36m[11:06:44.913498] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836802000-1698836803000-203[m
[36m[11:06:44.913605] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836802000-1698836803000[m
[36m[11:06:44.913672] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836802000-1698836803000[m
[36m[11:06:44.913780] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:44.913811] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:44.916772] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836802000,1698836803000,6,5845595171,1698836804913
1698836802000,1698836803000,9,300005564,1698836804913
1698836802000,1698836803000,4,2129740813,1698836804913
1698836802000,1698836803000,5,736315477,1698836804913
1698836802000,1698836803000,10,327240219,1698836804913
1698836802000,1698836803000,7,26898321817,1698836804913
1698836802000,1698836803000,11,318061639,1698836804913
1698836802000,1698836803000,8,16372273476,1698836804913
1698836802000,1698836803000,1,37024517,1698836804913
[m
[36m[11:06:45.117188] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836805000-1698836806000[m
[36m[11:06:45.881728] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:45.927968] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836803000-1698836804000 [m
[36m[11:06:45.928685] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836803000-1698836804000-204[m
[36m[11:06:45.928776] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836803000-1698836804000[m
[36m[11:06:45.928829] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836803000-1698836804000[m
[36m[11:06:45.928922] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:45.928945] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:45.931641] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836803000,1698836804000,9,300007857,1698836805928
1698836803000,1698836804000,6,5845597302,1698836805928
1698836803000,1698836804000,4,2129743073,1698836805928
1698836803000,1698836804000,5,736317673,1698836805928
1698836803000,1698836804000,10,327242419,1698836805928
1698836803000,1698836804000,7,26898323984,1698836805928
1698836803000,1698836804000,11,318063808,1698836805928
1698836803000,1698836804000,8,16372275613,1698836805928
1698836803000,1698836804000,1,37028429,1698836805928
[m
[36m[11:06:46.113707] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836806000-1698836807000[m
[36m[11:06:46.882999] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:46.925629] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:46.926181] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:46.927113] [D] [thread 131268] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:46.927209] [I] [thread 131268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:46.927228] [I] [thread 131268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:46.927342] [I] [thread 131268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:46.927355] [I] [thread 131268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:46.942720] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836804000-1698836805000 [m
[36m[11:06:46.943416] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836804000-1698836805000-205[m
[36m[11:06:46.943503] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836804000-1698836805000[m
[36m[11:06:46.943558] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836804000-1698836805000[m
[36m[11:06:46.943654] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:46.943682] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:46.946337] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836804000,1698836805000,6,5845599930,1698836806943
1698836804000,1698836805000,10,327244805,1698836806943
1698836804000,1698836805000,7,26898326542,1698836806943
1698836804000,1698836805000,11,318066241,1698836806943
1698836804000,1698836805000,5,736320325,1698836806943
1698836804000,1698836805000,8,16372278188,1698836806943
1698836804000,1698836805000,4,2129745829,1698836806943
1698836804000,1698836805000,9,300010495,1698836806943
1698836804000,1698836805000,1,37034211,1698836806943
[m
[36m[11:06:47.111951] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:47.112274] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:47.116835] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836807000-1698836808000[m
[36m[11:06:47.956695] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836805000-1698836806000 [m
[36m[11:06:47.957430] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836805000-1698836806000-206[m
[36m[11:06:47.957520] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836805000-1698836806000[m
[36m[11:06:47.957575] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836805000-1698836806000[m
[36m[11:06:47.957663] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:47.957685] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:47.959980] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836805000,1698836806000,10,327247360,1698836807957
1698836805000,1698836806000,6,5845602203,1698836807957
1698836805000,1698836806000,11,318068728,1698836807957
1698836805000,1698836806000,7,26898328761,1698836807957
1698836805000,1698836806000,5,736322484,1698836807957
1698836805000,1698836806000,4,2129747935,1698836807957
1698836805000,1698836806000,9,300012728,1698836807957
1698836805000,1698836806000,8,16372280504,1698836807957
1698836805000,1698836806000,1,37037838,1698836807957
[m
[36m[11:06:48.113484] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:48.124828] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836808000-1698836809000[m
[36m[11:06:48.969014] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836806000-1698836807000 [m
[36m[11:06:48.969782] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836806000-1698836807000-207[m
[36m[11:06:48.969876] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836806000-1698836807000[m
[36m[11:06:48.969935] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836806000-1698836807000[m
[36m[11:06:48.970039] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:48.970069] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:48.973138] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836806000,1698836807000,6,5845604780,1698836808970
1698836806000,1698836807000,7,26898331261,1698836808970
1698836806000,1698836807000,4,2129750383,1698836808970
1698836806000,1698836807000,5,736324942,1698836808970
1698836806000,1698836807000,9,300015014,1698836808970
1698836806000,1698836807000,8,16372282850,1698836808970
1698836806000,1698836807000,10,327249761,1698836808970
1698836806000,1698836807000,11,318071068,1698836808970
1698836806000,1698836807000,1,37042774,1698836808970
[m
[36m[11:06:49.114362] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:49.117749] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836809000-1698836810000[m
[36m[11:06:49.133606] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:49.134411] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:49.135119] [D] [thread 131273] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:49.135238] [I] [thread 131273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:49.135258] [I] [thread 131273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:49.135385] [I] [thread 131273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:49.135408] [I] [thread 131273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:49.347217] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:49.347802] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:49.983963] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836807000-1698836808000 [m
[36m[11:06:49.984708] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836807000-1698836808000-208[m
[36m[11:06:49.984783] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836807000-1698836808000[m
[36m[11:06:49.984844] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836807000-1698836808000[m
[36m[11:06:49.984959] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:49.984987] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:49.988347] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836807000,1698836808000,4,2129752823,1698836809984
1698836807000,1698836808000,9,300017690,1698836809984
1698836807000,1698836808000,5,736327258,1698836809984
1698836807000,1698836808000,10,327252195,1698836809984
1698836807000,1698836808000,8,16372285249,1698836809984
1698836807000,1698836808000,11,318073584,1698836809984
1698836807000,1698836808000,6,5845607254,1698836809984
1698836807000,1698836808000,7,26898333795,1698836809984
1698836807000,1698836808000,1,37046563,1698836809984
[m
[36m[11:06:50.128577] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836810000-1698836811000[m
[36m[11:06:50.349063] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:50.999985] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836808000-1698836809000 [m
[36m[11:06:51.001334] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836808000-1698836809000-209[m
[36m[11:06:51.001449] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836808000-1698836809000[m
[36m[11:06:51.001512] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836808000-1698836809000[m
[36m[11:06:51.001618] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:51.001648] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:51.005409] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836808000,1698836809000,5,736329694,1698836811001
1698836808000,1698836809000,8,16372287567,1698836811001
1698836808000,1698836809000,10,327254317,1698836811001
1698836808000,1698836809000,11,318075768,1698836811001
1698836808000,1698836809000,7,26898336185,1698836811001
1698836808000,1698836809000,6,5845609658,1698836811001
1698836808000,1698836809000,4,2129755331,1698836811001
1698836808000,1698836809000,9,300019985,1698836811001
1698836808000,1698836809000,1,37049079,1698836811001
[m
[36m[11:06:51.138245] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836811000-1698836812000[m
[36m[11:06:51.350361] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:51.453034] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:51.453743] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:51.454678] [D] [thread 131278] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:51.454786] [I] [thread 131278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:51.454805] [I] [thread 131278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:51.454930] [I] [thread 131278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:51.454945] [I] [thread 131278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:51.621660] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:51.622334] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:52.015303] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836809000-1698836810000 [m
[36m[11:06:52.016172] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836809000-1698836810000-210[m
[36m[11:06:52.016285] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836809000-1698836810000[m
[36m[11:06:52.016362] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836809000-1698836810000[m
[36m[11:06:52.016487] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:52.016521] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:52.020434] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836809000,1698836810000,5,736332303,1698836812016
1698836809000,1698836810000,10,327256925,1698836812016
1698836809000,1698836810000,8,16372290115,1698836812016
1698836809000,1698836810000,11,318078412,1698836812016
1698836809000,1698836810000,4,2129757691,1698836812016
1698836809000,1698836810000,7,26898338713,1698836812016
1698836809000,1698836810000,6,5845612112,1698836812016
1698836809000,1698836810000,9,300022525,1698836812016
1698836809000,1698836810000,1,37054811,1698836812016
[m
[36m[11:06:52.114266] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836812000-1698836813000[m
[36m[11:06:52.623569] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:53.030488] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836810000-1698836811000 [m
[36m[11:06:53.030720] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836811000-1698836812000 [m
[36m[11:06:53.031397] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836810000-1698836811000-211[m
[36m[11:06:53.031500] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836810000-1698836811000[m
[36m[11:06:53.031569] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836810000-1698836811000[m
[36m[11:06:53.031684] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:53.031730] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:53.035261] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836810000,1698836811000,10,327259153,1698836813031
1698836810000,1698836811000,8,16372292264,1698836813031
1698836810000,1698836811000,11,318080602,1698836813031
1698836810000,1698836811000,4,2129759963,1698836813031
1698836810000,1698836811000,7,26898340892,1698836813031
1698836810000,1698836811000,9,300024673,1698836813031
1698836810000,1698836811000,6,5845614317,1698836813031
1698836810000,1698836811000,5,736334697,1698836813031
1698836810000,1698836811000,1,37058811,1698836813031
[m
[36m[11:06:53.036130] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836811000-1698836812000-212[m
[36m[11:06:53.036212] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836811000-1698836812000[m
[36m[11:06:53.036266] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836811000-1698836812000[m
[36m[11:06:53.036356] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:53.036381] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:53.038633] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836811000,1698836812000,11,318083076,1698836813036
1698836811000,1698836812000,8,16372294952,1698836813036
1698836811000,1698836812000,4,2129762443,1698836813036
1698836811000,1698836812000,9,300027231,1698836813036
1698836811000,1698836812000,7,26898343494,1698836813036
1698836811000,1698836812000,6,5845616977,1698836813036
1698836811000,1698836812000,10,327261893,1698836813036
1698836811000,1698836812000,5,736337217,1698836813036
[m
[36m[11:06:53.118032] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836813000-1698836814000[m
[36m[11:06:53.618693] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:53.619326] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:53.620032] [D] [thread 131283] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:53.620125] [I] [thread 131283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:53.620143] [I] [thread 131283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:53.620261] [I] [thread 131283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:53.620276] [I] [thread 131283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:53.819855] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:53.820374] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:54.046413] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836812000-1698836813000 [m
[36m[11:06:54.047286] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836812000-1698836813000-213[m
[36m[11:06:54.047402] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836812000-1698836813000[m
[36m[11:06:54.047478] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836812000-1698836813000[m
[36m[11:06:54.047598] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:54.047634] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:54.051547] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836812000,1698836813000,11,318085435,1698836814047
1698836812000,1698836813000,4,2129764673,1698836814047
1698836812000,1698836813000,8,16372297124,1698836814047
1698836812000,1698836813000,9,300029413,1698836814047
1698836812000,1698836813000,10,327264115,1698836814047
1698836812000,1698836813000,7,26898345620,1698836814047
1698836812000,1698836813000,6,5845619114,1698836814047
1698836812000,1698836813000,5,736339371,1698836814047
1698836812000,1698836813000,1,37064507,1698836814047
[m
[36m[11:06:54.117233] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836814000-1698836815000[m
[36m[11:06:54.821646] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:55.064621] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836813000-1698836814000 [m
[36m[11:06:55.065299] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836813000-1698836814000-214[m
[36m[11:06:55.065363] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836813000-1698836814000[m
[36m[11:06:55.065403] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836813000-1698836814000[m
[36m[11:06:55.065486] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:55.065506] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:55.067330] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836813000,1698836814000,10,327266639,1698836815065
1698836813000,1698836814000,9,300032116,1698836815065
1698836813000,1698836814000,8,16372299614,1698836815065
1698836813000,1698836814000,7,26898348228,1698836815065
1698836813000,1698836814000,6,5845621744,1698836815065
1698836813000,1698836814000,4,2129767410,1698836815065
1698836813000,1698836814000,5,736342032,1698836815065
1698836813000,1698836814000,11,318087951,1698836815065
1698836813000,1698836814000,1,37068466,1698836815065
[m
[36m[11:06:55.116245] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836815000-1698836816000[m
[36m[11:06:55.822892] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:55.971524] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:55.971850] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:55.972817] [D] [thread 131288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:55.972911] [I] [thread 131288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:55.972929] [I] [thread 131288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:55.973045] [I] [thread 131288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:55.973059] [I] [thread 131288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:56.075412] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836814000-1698836815000 [m
[36m[11:06:56.076414] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836814000-1698836815000-215[m
[36m[11:06:56.076536] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836814000-1698836815000[m
[36m[11:06:56.076635] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836814000-1698836815000[m
[36m[11:06:56.076768] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:56.076799] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:56.080306] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836814000,1698836815000,8,16372301939,1698836816076
1698836814000,1698836815000,7,26898350505,1698836816076
1698836814000,1698836815000,6,5845623903,1698836816076
1698836814000,1698836815000,4,2129769486,1698836816076
1698836814000,1698836815000,11,318090300,1698836816076
1698836814000,1698836815000,5,736344227,1698836816076
1698836814000,1698836815000,10,327269040,1698836816076
1698836814000,1698836815000,9,300034463,1698836816076
1698836814000,1698836815000,1,37074531,1698836816076
[m
[36m[11:06:56.120028] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836816000-1698836817000[m
[36m[11:06:56.136757] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:56.137111] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:57.089310] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836815000-1698836816000 [m
[36m[11:06:57.090097] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836815000-1698836816000-216[m
[36m[11:06:57.090241] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836815000-1698836816000[m
[36m[11:06:57.090383] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836815000-1698836816000[m
[36m[11:06:57.090508] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:57.090603] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:57.093915] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836815000,1698836816000,8,16372304478,1698836817090
1698836815000,1698836816000,4,2129772054,1698836817090
1698836815000,1698836816000,7,26898353001,1698836817090
1698836815000,1698836816000,6,5845626440,1698836817090
1698836815000,1698836816000,11,318092649,1698836817090
1698836815000,1698836816000,10,327271348,1698836817090
1698836815000,1698836816000,5,736346809,1698836817090
1698836815000,1698836816000,9,300036920,1698836817090
1698836815000,1698836816000,1,37078454,1698836817090
[m
[36m[11:06:57.129210] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836817000-1698836818000[m
[36m[11:06:57.138285] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:58.104931] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836816000-1698836817000 [m
[36m[11:06:58.105753] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836816000-1698836817000-217[m
[36m[11:06:58.105857] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836816000-1698836817000[m
[36m[11:06:58.105927] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836816000-1698836817000[m
[36m[11:06:58.106042] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:58.106075] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:58.109484] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836816000,1698836817000,4,2129774459,1698836818106
1698836816000,1698836817000,11,318095300,1698836818106
1698836816000,1698836817000,7,26898355375,1698836818106
1698836816000,1698836817000,10,327273792,1698836818106
1698836816000,1698836817000,6,5845628736,1698836818106
1698836816000,1698836817000,5,736349097,1698836818106
1698836816000,1698836817000,9,300039309,1698836818106
1698836816000,1698836817000,8,16372307026,1698836818106
1698836816000,1698836817000,1,37081088,1698836818106
[m
[36m[11:06:58.134660] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836818000-1698836819000[m
[36m[11:06:58.139475] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:58.151321] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:58.151681] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:58.153132] [D] [thread 131293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:06:58.153236] [I] [thread 131293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:58.153255] [I] [thread 131293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:06:58.153381] [I] [thread 131293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:06:58.153400] [I] [thread 131293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:06:58.354108] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:58.354501] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:06:59.120726] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836817000-1698836818000 [m
[36m[11:06:59.121580] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836817000-1698836818000-218[m
[36m[11:06:59.121692] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836817000-1698836818000[m
[36m[11:06:59.121766] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836817000-1698836818000[m
[36m[11:06:59.121888] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:06:59.121921] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:06:59.125813] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836817000,1698836818000,10,327276099,1698836819121
1698836817000,1698836818000,7,26898357670,1698836819121
1698836817000,1698836818000,6,5845631144,1698836819121
1698836817000,1698836818000,9,300041518,1698836819121
1698836817000,1698836818000,5,736351452,1698836819121
1698836817000,1698836818000,11,318097522,1698836819121
1698836817000,1698836818000,8,16372309346,1698836819121
1698836817000,1698836818000,4,2129777028,1698836819121
1698836817000,1698836818000,1,37085619,1698836819121
[m
[36m[11:06:59.127558] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836819000-1698836820000[m
[36m[11:06:59.355718] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:00.121980] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836820000-1698836821000[m
[36m[11:07:00.136255] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836818000-1698836819000 [m
[36m[11:07:00.136992] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836818000-1698836819000-219[m
[36m[11:07:00.137085] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836818000-1698836819000[m
[36m[11:07:00.137143] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836818000-1698836819000[m
[36m[11:07:00.137243] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:00.137269] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:00.140261] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836818000,1698836819000,7,26898360195,1698836820137
1698836818000,1698836819000,9,300044195,1698836820137
1698836818000,1698836819000,6,5845633674,1698836820137
1698836818000,1698836819000,5,736353902,1698836820137
1698836818000,1698836819000,11,318100112,1698836820137
1698836818000,1698836819000,4,2129779410,1698836820137
1698836818000,1698836819000,8,16372311917,1698836820137
1698836818000,1698836819000,10,327278848,1698836820137
1698836818000,1698836819000,1,37089626,1698836820137
[m
[36m[11:07:00.354985] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:00.355340] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:00.356911] [D] [thread 131298] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:00.357013] [I] [thread 131298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:00.357032] [I] [thread 131298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:00.357144] [I] [thread 131298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:00.357202] [I] [thread 131298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:00.574375] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:00.574731] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:01.121511] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836821000-1698836822000[m
[36m[11:07:01.151721] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836819000-1698836820000 [m
[36m[11:07:01.152673] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836819000-1698836820000-220[m
[36m[11:07:01.152927] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836819000-1698836820000[m
[36m[11:07:01.153005] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836819000-1698836820000[m
[36m[11:07:01.153125] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:01.153185] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:01.156613] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836819000,1698836820000,7,26898362592,1698836821153
1698836819000,1698836820000,6,5845635891,1698836821153
1698836819000,1698836820000,5,736356119,1698836821153
1698836819000,1698836820000,11,318102192,1698836821153
1698836819000,1698836820000,4,2129781670,1698836821153
1698836819000,1698836820000,8,16372314087,1698836821153
1698836819000,1698836820000,10,327280932,1698836821153
1698836819000,1698836820000,9,300046440,1698836821153
1698836819000,1698836820000,1,37095657,1698836821153
[m
[36m[11:07:01.575932] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:02.114880] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836822000-1698836823000[m
[36m[11:07:02.169089] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836820000-1698836821000 [m
[36m[11:07:02.169928] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836820000-1698836821000-221[m
[36m[11:07:02.170041] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836820000-1698836821000[m
[36m[11:07:02.170114] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836820000-1698836821000[m
[36m[11:07:02.170298] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:02.170341] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:02.174254] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836820000,1698836821000,4,2129784302,1698836822170
1698836820000,1698836821000,11,318104890,1698836822170
1698836820000,1698836821000,6,5845638470,1698836822170
1698836820000,1698836821000,5,736358683,1698836822170
1698836820000,1698836821000,10,327283458,1698836822170
1698836820000,1698836821000,8,16372316691,1698836822170
1698836820000,1698836821000,9,300049101,1698836822170
1698836820000,1698836821000,7,26898365300,1698836822170
1698836820000,1698836821000,1,37099685,1698836822170
[m
[36m[11:07:02.577201] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:02.683403] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:02.683746] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:02.684782] [D] [thread 131303] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:02.684883] [I] [thread 131303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:02.684902] [I] [thread 131303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:02.685021] [I] [thread 131303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:02.685045] [I] [thread 131303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:02.898021] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:02.898419] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:03.142343] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836823000-1698836824000[m
[36m[11:07:03.184935] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836821000-1698836822000 [m
[36m[11:07:03.185632] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836821000-1698836822000-222[m
[36m[11:07:03.185735] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836821000-1698836822000[m
[36m[11:07:03.185802] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836821000-1698836822000[m
[36m[11:07:03.185899] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:03.185925] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:03.188224] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836821000,1698836822000,5,736360999,1698836823185
1698836821000,1698836822000,6,5845640614,1698836823185
1698836821000,1698836822000,10,327285670,1698836823185
1698836821000,1698836822000,9,300051247,1698836823185
1698836821000,1698836822000,8,16372318807,1698836823185
1698836821000,1698836822000,4,2129786523,1698836823185
1698836821000,1698836822000,11,318107223,1698836823185
1698836821000,1698836822000,7,26898367434,1698836823185
1698836821000,1698836822000,1,37105387,1698836823185
[m
[36m[11:07:03.899638] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:04.137238] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836824000-1698836825000[m
[36m[11:07:04.198306] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836822000-1698836823000 [m
[36m[11:07:04.199621] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836822000-1698836823000-223[m
[36m[11:07:04.199747] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836822000-1698836823000[m
[36m[11:07:04.199822] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836822000-1698836823000[m
[36m[11:07:04.199952] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:04.199986] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:04.203867] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836822000,1698836823000,6,5845643335,1698836824200
1698836822000,1698836823000,10,327288168,1698836824200
1698836822000,1698836823000,4,2129789355,1698836824200
1698836822000,1698836823000,9,300053775,1698836824200
1698836822000,1698836823000,8,16372321384,1698836824200
1698836822000,1698836823000,11,318109616,1698836824200
1698836822000,1698836823000,7,26898370075,1698836824200
1698836822000,1698836823000,5,736363796,1698836824200
1698836822000,1698836823000,1,37109409,1698836824200
[m
[36m[11:07:04.900890] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:05.001348] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:05.001689] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:05.003397] [D] [thread 131308] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:05.003496] [I] [thread 131308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:05.003514] [I] [thread 131308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:05.003629] [I] [thread 131308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:05.003642] [I] [thread 131308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:05.122177] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836825000-1698836826000[m
[36m[11:07:05.215314] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836823000-1698836824000 [m
[36m[11:07:05.216041] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836823000-1698836824000-224[m
[36m[11:07:05.216106] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836823000-1698836824000[m
[36m[11:07:05.216150] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836823000-1698836824000[m
[36m[11:07:05.216229] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:05.216251] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:05.217963] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836823000,1698836824000,9,300056149,1698836825216
1698836823000,1698836824000,8,16372323735,1698836825216
1698836823000,1698836824000,11,318112011,1698836825216
1698836823000,1698836824000,7,26898372347,1698836825216
1698836823000,1698836824000,4,2129791638,1698836825216
1698836823000,1698836824000,10,327290707,1698836825216
1698836823000,1698836824000,6,5845645772,1698836825216
1698836823000,1698836824000,5,736365965,1698836825216
1698836823000,1698836824000,1,37114890,1698836825216
[m
[36m[11:07:05.222867] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:05.223192] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:06.132073] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836826000-1698836827000[m
[36m[11:07:06.224537] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:06.226407] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836824000-1698836825000 [m
[36m[11:07:06.227200] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836824000-1698836825000-225[m
[36m[11:07:06.227303] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836824000-1698836825000[m
[36m[11:07:06.227367] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836824000-1698836825000[m
[36m[11:07:06.227478] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:06.227509] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:06.230874] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836824000,1698836825000,9,300058362,1698836826227
1698836824000,1698836825000,11,318114161,1698836826227
1698836824000,1698836825000,8,16372326119,1698836826227
1698836824000,1698836825000,4,2129794122,1698836826227
1698836824000,1698836825000,10,327292997,1698836826227
1698836824000,1698836825000,7,26898374747,1698836826227
1698836824000,1698836825000,6,5845648216,1698836826227
1698836824000,1698836825000,5,736368456,1698836826227
1698836824000,1698836825000,1,37117113,1698836826227
[m
[36m[11:07:07.117561] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836827000-1698836828000[m
[36m[11:07:07.225794] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:07.234517] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:07.234861] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:07.235821] [D] [thread 131313] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:07.235915] [I] [thread 131313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:07.235934] [I] [thread 131313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:07.236052] [I] [thread 131313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:07.236065] [I] [thread 131313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:07.242694] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836825000-1698836826000 [m
[36m[11:07:07.243246] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836825000-1698836826000-226[m
[36m[11:07:07.243315] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836825000-1698836826000[m
[36m[11:07:07.243354] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836825000-1698836826000[m
[36m[11:07:07.243421] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:07.243438] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:07.245103] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836825000,1698836826000,9,300060973,1698836827243
1698836825000,1698836826000,11,318116828,1698836827243
1698836825000,1698836826000,4,2129796436,1698836827243
1698836825000,1698836826000,10,327295428,1698836827243
1698836825000,1698836826000,8,16372328528,1698836827243
1698836825000,1698836826000,7,26898377163,1698836827243
1698836825000,1698836826000,5,736370751,1698836827243
1698836825000,1698836826000,6,5845650602,1698836827243
1698836825000,1698836826000,1,37122191,1698836827243
[m
[36m[11:07:07.450327] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:07.450675] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:08.154307] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836828000-1698836829000[m
[36m[11:07:08.253798] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836826000-1698836827000 [m
[36m[11:07:08.254755] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836826000-1698836827000-227[m
[36m[11:07:08.254874] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836826000-1698836827000[m
[36m[11:07:08.254949] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836826000-1698836827000[m
[36m[11:07:08.255080] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:08.255114] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:08.258646] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836826000,1698836827000,4,2129798721,1698836828255
1698836826000,1698836827000,10,327297515,1698836828255
1698836826000,1698836827000,8,16372330752,1698836828255
1698836826000,1698836827000,7,26898379462,1698836828255
1698836826000,1698836827000,6,5845652894,1698836828255
1698836826000,1698836827000,5,736373136,1698836828255
1698836826000,1698836827000,11,318119098,1698836828255
1698836826000,1698836827000,9,300063290,1698836828255
1698836826000,1698836827000,1,37126753,1698836828255
[m
[36m[11:07:08.451900] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:09.134834] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836829000-1698836830000[m
[36m[11:07:09.270641] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836827000-1698836828000 [m
[36m[11:07:09.271519] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836827000-1698836828000-228[m
[36m[11:07:09.271791] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836827000-1698836828000[m
[36m[11:07:09.271876] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836827000-1698836828000[m
[36m[11:07:09.272011] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:09.272050] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:09.275381] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836827000,1698836828000,4,2129801250,1698836829272
1698836827000,1698836828000,10,327300208,1698836829272
1698836827000,1698836828000,8,16372333333,1698836829272
1698836827000,1698836828000,7,26898381978,1698836829272
1698836827000,1698836828000,6,5845655395,1698836829272
1698836827000,1698836828000,5,736375633,1698836829272
1698836827000,1698836828000,11,318121710,1698836829272
1698836827000,1698836828000,9,300065894,1698836829272
1698836827000,1698836828000,1,37131737,1698836829272
[m
[36m[11:07:09.453168] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:09.468076] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:09.468478] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:09.469871] [D] [thread 131319] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:09.469959] [I] [thread 131319] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:09.469977] [I] [thread 131319] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:09.470086] [I] [thread 131319] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:09.470099] [I] [thread 131319] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:09.637753] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:09.638096] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:10.123417] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836830000-1698836831000[m
[36m[11:07:10.286867] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836828000-1698836829000 [m
[36m[11:07:10.287826] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836828000-1698836829000-229[m
[36m[11:07:10.287904] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836828000-1698836829000[m
[36m[11:07:10.287963] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836828000-1698836829000[m
[36m[11:07:10.288074] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:10.288102] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:10.291924] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836828000,1698836829000,7,26898384122,1698836830288
1698836828000,1698836829000,8,16372335510,1698836830288
1698836828000,1698836829000,6,5845657549,1698836830288
1698836828000,1698836829000,5,736377816,1698836830288
1698836828000,1698836829000,11,318123911,1698836830288
1698836828000,1698836829000,10,327302505,1698836830288
1698836828000,1698836829000,9,300068015,1698836830288
1698836828000,1698836829000,4,2129803634,1698836830288
1698836828000,1698836829000,1,37136632,1698836830288
[m
[36m[11:07:10.639297] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:11.115444] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836831000-1698836832000[m
[36m[11:07:11.301663] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836829000-1698836830000 [m
[36m[11:07:11.302559] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836829000-1698836830000-230[m
[36m[11:07:11.302654] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836829000-1698836830000[m
[36m[11:07:11.302708] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836829000-1698836830000[m
[36m[11:07:11.302803] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:11.302825] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:11.305166] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836829000,1698836830000,8,16372338193,1698836831302
1698836829000,1698836830000,6,5845660218,1698836831302
1698836829000,1698836830000,7,26898386820,1698836831302
1698836829000,1698836830000,5,736380463,1698836831302
1698836829000,1698836830000,10,327305127,1698836831302
1698836829000,1698836830000,9,300070631,1698836831302
1698836829000,1698836830000,11,318126520,1698836831302
1698836829000,1698836830000,4,2129806124,1698836831302
1698836829000,1698836830000,1,37140662,1698836831302
[m
[36m[11:07:11.640601] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:11.685384] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:11.685737] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:11.687395] [D] [thread 131324] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:11.687493] [I] [thread 131324] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:11.687510] [I] [thread 131324] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:11.687626] [I] [thread 131324] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:11.687639] [I] [thread 131324] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:11.871302] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:11.871630] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:12.117142] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836832000-1698836833000[m
[36m[11:07:12.314317] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836830000-1698836831000 [m
[36m[11:07:12.315356] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836830000-1698836831000-231[m
[36m[11:07:12.315471] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836830000-1698836831000[m
[36m[11:07:12.315546] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836830000-1698836831000[m
[36m[11:07:12.315674] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:12.315713] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:12.320138] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836830000,1698836831000,8,16372340390,1698836832315
1698836830000,1698836831000,6,5845662391,1698836832315
1698836830000,1698836831000,7,26898388955,1698836832315
1698836830000,1698836831000,10,327307409,1698836832315
1698836830000,1698836831000,5,736382607,1698836832315
1698836830000,1698836831000,9,300072771,1698836832315
1698836830000,1698836831000,4,2129808291,1698836832315
1698836830000,1698836831000,11,318128809,1698836832315
1698836830000,1698836831000,1,37146430,1698836832315
[m
[36m[11:07:12.872845] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:13.115778] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836833000-1698836834000[m
[36m[11:07:13.332253] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836831000-1698836832000 [m
[36m[11:07:13.333415] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836831000-1698836832000-232[m
[36m[11:07:13.333530] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836831000-1698836832000[m
[36m[11:07:13.333598] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836831000-1698836832000[m
[36m[11:07:13.333711] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:13.333744] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:13.337102] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836831000,1698836832000,8,16372342864,1698836833333
1698836831000,1698836832000,6,5845665105,1698836833333
1698836831000,1698836832000,7,26898391551,1698836833333
1698836831000,1698836832000,10,327309843,1698836833333
1698836831000,1698836832000,9,300075190,1698836833333
1698836831000,1698836832000,5,736385221,1698836833333
1698836831000,1698836832000,4,2129810959,1698836833333
1698836831000,1698836832000,11,318131191,1698836833333
1698836831000,1698836832000,1,37148668,1698836833333
[m
[36m[11:07:13.874118] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:13.929967] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:13.930322] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:13.931432] [D] [thread 131331] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:13.931528] [I] [thread 131331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:13.931546] [I] [thread 131331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:13.931662] [I] [thread 131331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:13.931715] [I] [thread 131331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:14.103465] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:14.103949] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:14.131859] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836834000-1698836835000[m
[36m[11:07:14.347169] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836832000-1698836833000 [m
[36m[11:07:14.347998] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836832000-1698836833000-233[m
[36m[11:07:14.348109] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836832000-1698836833000[m
[36m[11:07:14.348182] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836832000-1698836833000[m
[36m[11:07:14.348303] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:14.348333] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:14.351513] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836832000,1698836833000,8,16372345314,1698836834348
1698836832000,1698836833000,10,327312286,1698836834348
1698836832000,1698836833000,7,26898393968,1698836834348
1698836832000,1698836833000,9,300077689,1698836834348
1698836832000,1698836833000,4,2129813060,1698836834348
1698836832000,1698836833000,5,736387413,1698836834348
1698836832000,1698836833000,11,318133664,1698836834348
1698836832000,1698836833000,6,5845667473,1698836834348
1698836832000,1698836833000,1,37154147,1698836834348
[m
[36m[11:07:15.105171] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:15.126898] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836835000-1698836836000[m
[36m[11:07:15.362966] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836833000-1698836834000 [m
[36m[11:07:15.363793] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836833000-1698836834000-234[m
[36m[11:07:15.363867] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836833000-1698836834000[m
[36m[11:07:15.363927] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836833000-1698836834000[m
[36m[11:07:15.364035] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:15.364061] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:15.367618] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836833000,1698836834000,4,2129815639,1698836835364
1698836833000,1698836834000,11,318135976,1698836835364
1698836833000,1698836834000,5,736389927,1698836835364
1698836833000,1698836834000,10,327314678,1698836835364
1698836833000,1698836834000,6,5845669936,1698836835364
1698836833000,1698836834000,8,16372347811,1698836835364
1698836833000,1698836834000,9,300080115,1698836835364
1698836833000,1698836834000,7,26898396505,1698836835364
1698836833000,1698836834000,1,37158012,1698836835364
[m
[36m[11:07:16.106463] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:16.115408] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836836000-1698836837000[m
[36m[11:07:16.166023] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:16.166695] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:16.167467] [D] [thread 131338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:16.167563] [I] [thread 131338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:16.167581] [I] [thread 131338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:16.167698] [I] [thread 131338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:16.167711] [I] [thread 131338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:16.366219] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:16.366677] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:16.378896] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836834000-1698836835000 [m
[36m[11:07:16.379467] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836834000-1698836835000-235[m
[36m[11:07:16.379536] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836834000-1698836835000[m
[36m[11:07:16.379574] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836834000-1698836835000[m
[36m[11:07:16.379640] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:16.379656] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:16.381413] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836834000,1698836835000,5,736392253,1698836836379
1698836834000,1698836835000,10,327317171,1698836836379
1698836834000,1698836835000,9,300082565,1698836836379
1698836834000,1698836835000,4,2129818044,1698836836379
1698836834000,1698836835000,8,16372350188,1698836836379
1698836834000,1698836835000,7,26898398881,1698836836379
1698836834000,1698836835000,6,5845672279,1698836836379
1698836834000,1698836835000,11,318138645,1698836836379
1698836834000,1698836835000,1,37163638,1698836836379
[m
[36m[11:07:17.126156] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836837000-1698836838000[m
[36m[11:07:17.367930] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:17.392261] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836835000-1698836836000 [m
[36m[11:07:17.393108] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836835000-1698836836000-236[m
[36m[11:07:17.393221] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836835000-1698836836000[m
[36m[11:07:17.393292] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836835000-1698836836000[m
[36m[11:07:17.393418] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:17.393452] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:17.397428] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836835000,1698836836000,5,736394625,1698836837393
1698836835000,1698836836000,10,327319347,1698836837393
1698836835000,1698836836000,9,300084801,1698836837393
1698836835000,1698836836000,4,2129820416,1698836837393
1698836835000,1698836836000,7,26898401164,1698836837393
1698836835000,1698836836000,11,318140853,1698836837393
1698836835000,1698836836000,8,16372352485,1698836837393
1698836835000,1698836836000,6,5845674660,1698836837393
1698836835000,1698836836000,1,37167653,1698836837393
[m
[36m[11:07:18.123974] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836838000-1698836839000[m
[36m[11:07:18.369185] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:18.380285] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:18.380990] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:18.381961] [D] [thread 131344] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:18.382082] [I] [thread 131344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:18.382104] [I] [thread 131344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:18.382300] [I] [thread 131344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:18.382321] [I] [thread 131344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:18.407957] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836836000-1698836837000 [m
[36m[11:07:18.408651] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836836000-1698836837000-237[m
[36m[11:07:18.408744] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836836000-1698836837000[m
[36m[11:07:18.408797] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836836000-1698836837000[m
[36m[11:07:18.408886] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:18.408908] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:18.411516] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836836000,1698836837000,5,736397209,1698836838408
1698836836000,1698836837000,10,327322162,1698836838408
1698836836000,1698836837000,9,300087366,1698836838408
1698836836000,1698836837000,4,2129822854,1698836838408
1698836836000,1698836837000,11,318143490,1698836838408
1698836836000,1698836837000,7,26898403698,1698836838408
1698836836000,1698836837000,6,5845677216,1698836838408
1698836836000,1698836837000,8,16372355133,1698836838408
1698836836000,1698836837000,1,37173259,1698836838408
[m
[36m[11:07:18.592213] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:18.592698] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:19.166420] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836839000-1698836840000[m
[36m[11:07:19.422088] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836837000-1698836838000 [m
[36m[11:07:19.423020] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836837000-1698836838000-238[m
[36m[11:07:19.423134] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836837000-1698836838000[m
[36m[11:07:19.423210] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836837000-1698836838000[m
[36m[11:07:19.423336] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:19.423374] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:19.427817] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836837000,1698836838000,9,300089597,1698836839423
1698836837000,1698836838000,4,2129825066,1698836839423
1698836837000,1698836838000,11,318145602,1698836839423
1698836837000,1698836838000,7,26898405881,1698836839423
1698836837000,1698836838000,6,5845679433,1698836839423
1698836837000,1698836838000,8,16372357269,1698836839423
1698836837000,1698836838000,10,327324387,1698836839423
1698836837000,1698836838000,5,736399597,1698836839423
1698836837000,1698836838000,1,37176989,1698836839423
[m
[36m[11:07:19.593937] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:20.159666] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836840000-1698836841000[m
[36m[11:07:20.436951] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836838000-1698836839000 [m
[36m[11:07:20.437765] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836838000-1698836839000-239[m
[36m[11:07:20.437835] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836838000-1698836839000[m
[36m[11:07:20.437894] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836838000-1698836839000[m
[36m[11:07:20.438004] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:20.438035] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:20.441376] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836838000,1698836839000,4,2129827716,1698836840438
1698836838000,1698836839000,11,318148224,1698836840438
1698836838000,1698836839000,7,26898408546,1698836840438
1698836838000,1698836839000,6,5845681992,1698836840438
1698836838000,1698836839000,8,16372359921,1698836840438
1698836838000,1698836839000,10,327326953,1698836840438
1698836838000,1698836839000,5,736402123,1698836840438
1698836838000,1698836839000,9,300092354,1698836840438
1698836838000,1698836839000,1,37181756,1698836840438
[m
[36m[11:07:20.595220] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:20.655446] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:20.656269] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:20.657401] [D] [thread 131349] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:20.657507] [I] [thread 131349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:20.657526] [I] [thread 131349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:20.657641] [I] [thread 131349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:20.657707] [I] [thread 131349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:20.850127] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:20.851152] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:21.154544] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836841000-1698836842000[m
[36m[11:07:21.452737] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836839000-1698836840000 [m
[36m[11:07:21.453611] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836839000-1698836840000-240[m
[36m[11:07:21.453723] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836839000-1698836840000[m
[36m[11:07:21.453802] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836839000-1698836840000[m
[36m[11:07:21.453925] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:21.453962] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:21.457926] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836839000,1698836840000,7,26898410692,1698836841453
1698836839000,1698836840000,6,5845684121,1698836841453
1698836839000,1698836840000,8,16372362054,1698836841453
1698836839000,1698836840000,10,327329091,1698836841453
1698836839000,1698836840000,9,300094528,1698836841453
1698836839000,1698836840000,5,736404320,1698836841453
1698836839000,1698836840000,11,318150571,1698836841453
1698836839000,1698836840000,4,2129829996,1698836841453
1698836839000,1698836840000,1,37184476,1698836841453
[m
[36m[11:07:21.852394] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:22.129936] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836842000-1698836843000[m
[36m[11:07:22.469543] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836840000-1698836841000 [m
[36m[11:07:22.470627] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836840000-1698836841000-241[m
[36m[11:07:22.470741] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836840000-1698836841000[m
[36m[11:07:22.470814] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836840000-1698836841000[m
[36m[11:07:22.470944] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:22.470983] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:22.475818] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836840000,1698836841000,6,5845686752,1698836842471
1698836840000,1698836841000,7,26898413262,1698836842471
1698836840000,1698836841000,10,327331486,1698836842471
1698836840000,1698836841000,8,16372364615,1698836842471
1698836840000,1698836841000,11,318152969,1698836842471
1698836840000,1698836841000,5,736407002,1698836842471
1698836840000,1698836841000,9,300097018,1698836842471
1698836840000,1698836841000,4,2129832624,1698836842471
1698836840000,1698836841000,1,37188428,1698836842471
[m
[36m[11:07:22.835113] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:22.835437] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:22.836446] [D] [thread 131355] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:22.836544] [I] [thread 131355] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:22.836562] [I] [thread 131355] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:22.836678] [I] [thread 131355] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:22.836692] [I] [thread 131355] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:23.001737] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:23.002073] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:23.137218] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836843000-1698836844000[m
[36m[11:07:23.485360] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836841000-1698836842000 [m
[36m[11:07:23.486102] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836841000-1698836842000-242[m
[36m[11:07:23.486243] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836841000-1698836842000[m
[36m[11:07:23.486314] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836841000-1698836842000[m
[36m[11:07:23.486427] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:23.486459] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:23.489750] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836841000,1698836842000,7,26898415491,1698836843486
1698836841000,1698836842000,6,5845688945,1698836843486
1698836841000,1698836842000,11,318155330,1698836843486
1698836841000,1698836842000,10,327333919,1698836843486
1698836841000,1698836842000,8,16372366915,1698836843486
1698836841000,1698836842000,5,736409126,1698836843486
1698836841000,1698836842000,9,300099349,1698836843486
1698836841000,1698836842000,4,2129834711,1698836843486
1698836841000,1698836842000,1,37194125,1698836843486
[m
[36m[11:07:24.002558] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:24.128356] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836844000-1698836845000[m
[36m[11:07:24.501338] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836842000-1698836843000 [m
[36m[11:07:24.502135] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836842000-1698836843000-243[m
[36m[11:07:24.502279] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836842000-1698836843000[m
[36m[11:07:24.502348] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836842000-1698836843000[m
[36m[11:07:24.502465] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:24.502495] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:24.505771] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836842000,1698836843000,11,318157821,1698836844502
1698836842000,1698836843000,7,26898417938,1698836844502
1698836842000,1698836843000,6,5845691518,1698836844502
1698836842000,1698836843000,10,327336247,1698836844502
1698836842000,1698836843000,8,16372369383,1698836844502
1698836842000,1698836843000,4,2129837236,1698836844502
1698836842000,1698836843000,5,736411676,1698836844502
1698836842000,1698836843000,9,300101748,1698836844502
1698836842000,1698836843000,1,37198073,1698836844502
[m
[36m[11:07:25.003823] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:25.035289] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:25.035860] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:25.036627] [D] [thread 131360] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:25.036719] [I] [thread 131360] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:25.036737] [I] [thread 131360] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:25.036855] [I] [thread 131360] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:25.036868] [I] [thread 131360] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:25.115632] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836845000-1698836846000[m
[36m[11:07:25.215531] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:25.215841] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:25.516222] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836843000-1698836844000 [m
[36m[11:07:25.517033] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836843000-1698836844000-244[m
[36m[11:07:25.517104] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836843000-1698836844000[m
[36m[11:07:25.517163] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836843000-1698836844000[m
[36m[11:07:25.517274] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:25.517303] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:25.520640] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836843000,1698836844000,7,26898420317,1698836845517
1698836843000,1698836844000,6,5845693865,1698836845517
1698836843000,1698836844000,10,327338708,1698836845517
1698836843000,1698836844000,8,16372371779,1698836845517
1698836843000,1698836844000,4,2129839504,1698836845517
1698836843000,1698836844000,5,736413973,1698836845517
1698836843000,1698836844000,9,300104138,1698836845517
1698836843000,1698836844000,11,318160401,1698836845517
1698836843000,1698836844000,1,37203901,1698836845517
[m
[36m[11:07:26.115183] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836846000-1698836847000[m
[36m[11:07:26.217038] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:26.532184] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836844000-1698836845000 [m
[36m[11:07:26.533166] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836844000-1698836845000-245[m
[36m[11:07:26.533596] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836844000-1698836845000[m
[36m[11:07:26.533826] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836844000-1698836845000[m
[36m[11:07:26.533941] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:26.533967] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:26.536762] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836844000,1698836845000,7,26898422690,1698836846533
1698836844000,1698836845000,4,2129842023,1698836846533
1698836844000,1698836845000,6,5845696248,1698836846533
1698836844000,1698836845000,10,327340902,1698836846533
1698836844000,1698836845000,8,16372374112,1698836846533
1698836844000,1698836845000,5,736416412,1698836846533
1698836844000,1698836845000,9,300106402,1698836846533
1698836844000,1698836845000,11,318162579,1698836846533
1698836844000,1698836845000,1,37207909,1698836846533
[m
[36m[11:07:27.111176] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836847000-1698836848000[m
[36m[11:07:27.218354] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:27.284708] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:27.285036] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:27.286306] [D] [thread 131365] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:27.286430] [I] [thread 131365] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:27.286451] [I] [thread 131365] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:27.286572] [I] [thread 131365] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:27.286585] [I] [thread 131365] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:27.469784] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:27.470113] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:27.547716] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836845000-1698836846000 [m
[36m[11:07:27.548637] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836845000-1698836846000-246[m
[36m[11:07:27.548736] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836845000-1698836846000[m
[36m[11:07:27.548804] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836845000-1698836846000[m
[36m[11:07:27.548918] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:27.548952] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:27.552797] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836845000,1698836846000,7,26898425187,1698836847548
1698836845000,1698836846000,10,327343638,1698836847548
1698836845000,1698836846000,6,5845698651,1698836847548
1698836845000,1698836846000,5,736418813,1698836847548
1698836845000,1698836846000,8,16372376594,1698836847548
1698836845000,1698836846000,9,300108897,1698836847548
1698836845000,1698836846000,11,318165130,1698836847548
1698836845000,1698836846000,4,2129844433,1698836847548
1698836845000,1698836846000,1,37213531,1698836847548
[m
[36m[11:07:28.123275] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836848000-1698836849000[m
[36m[11:07:28.471292] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:28.561883] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836846000-1698836847000 [m
[36m[11:07:28.562943] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836846000-1698836847000-247[m
[36m[11:07:28.563048] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836846000-1698836847000[m
[36m[11:07:28.563116] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836846000-1698836847000[m
[36m[11:07:28.563238] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:28.563273] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:28.567528] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836846000,1698836847000,7,26898427512,1698836848563
1698836846000,1698836847000,9,300111146,1698836848563
1698836846000,1698836847000,6,5845700897,1698836848563
1698836846000,1698836847000,5,736421149,1698836848563
1698836846000,1698836847000,8,16372378799,1698836848563
1698836846000,1698836847000,11,318167237,1698836848563
1698836846000,1698836847000,4,2129846686,1698836848563
1698836846000,1698836847000,10,327345874,1698836848563
1698836846000,1698836847000,1,37215861,1698836848563
[m
[36m[11:07:29.117522] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836849000-1698836850000[m
[36m[11:07:29.472518] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:29.571912] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:29.572266] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:29.573390] [D] [thread 131370] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:29.573483] [I] [thread 131370] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:29.573501] [I] [thread 131370] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:29.573622] [I] [thread 131370] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:29.573642] [I] [thread 131370] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:29.576541] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836847000-1698836848000 [m
[36m[11:07:29.577305] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836847000-1698836848000-248[m
[36m[11:07:29.577619] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836847000-1698836848000[m
[36m[11:07:29.577693] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836847000-1698836848000[m
[36m[11:07:29.577779] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:29.577797] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:29.579530] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836847000,1698836848000,6,5845703556,1698836849577
1698836847000,1698836848000,5,736423619,1698836849577
1698836847000,1698836848000,8,16372381407,1698836849577
1698836847000,1698836848000,11,318169925,1698836849577
1698836847000,1698836848000,4,2129849157,1698836849577
1698836847000,1698836848000,10,327348513,1698836849577
1698836847000,1698836848000,7,26898430189,1698836849577
1698836847000,1698836848000,9,300113873,1698836849577
1698836847000,1698836848000,1,37220879,1698836849577
[m
[36m[11:07:29.734430] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:29.734792] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:30.109349] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836850000-1698836851000[m
[36m[11:07:30.587201] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836848000-1698836849000 [m
[36m[11:07:30.588143] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836848000-1698836849000-249[m
[36m[11:07:30.588215] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836848000-1698836849000[m
[36m[11:07:30.588272] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836848000-1698836849000[m
[36m[11:07:30.588379] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:30.588406] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:30.592080] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836848000,1698836849000,5,736425771,1698836850588
1698836848000,1698836849000,11,318172217,1698836850588
1698836848000,1698836849000,8,16372383593,1698836850588
1698836848000,1698836849000,4,2129851535,1698836850588
1698836848000,1698836849000,10,327350676,1698836850588
1698836848000,1698836849000,9,300116021,1698836850588
1698836848000,1698836849000,7,26898432317,1698836850588
1698836848000,1698836849000,6,5845705887,1698836850588
1698836848000,1698836849000,1,37224652,1698836850588
[m
[36m[11:07:30.736014] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:31.113472] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836851000-1698836852000[m
[36m[11:07:31.602831] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836849000-1698836850000 [m
[36m[11:07:31.603632] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836849000-1698836850000-250[m
[36m[11:07:31.603736] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836849000-1698836850000[m
[36m[11:07:31.603802] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836849000-1698836850000[m
[36m[11:07:31.603915] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:31.603943] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:31.607317] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836849000,1698836850000,8,16372386179,1698836851603
1698836849000,1698836850000,5,736428431,1698836851603
1698836849000,1698836850000,10,327353231,1698836851603
1698836849000,1698836850000,9,300118521,1698836851603
1698836849000,1698836850000,7,26898435014,1698836851603
1698836849000,1698836850000,11,318174698,1698836851603
1698836849000,1698836850000,6,5845708589,1698836851603
1698836849000,1698836850000,4,2129854188,1698836851603
1698836849000,1698836850000,1,37229578,1698836851603
[m
[36m[11:07:31.737317] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:31.761564] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:31.762138] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:31.763003] [D] [thread 131376] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:31.763093] [I] [thread 131376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:31.763111] [I] [thread 131376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:31.763229] [I] [thread 131376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:31.763242] [I] [thread 131376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:31.970372] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:31.970910] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:32.128321] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836852000-1698836853000[m
[36m[11:07:32.618731] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836850000-1698836851000 [m
[36m[11:07:32.619592] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836850000-1698836851000-251[m
[36m[11:07:32.619701] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836850000-1698836851000[m
[36m[11:07:32.619779] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836850000-1698836851000[m
[36m[11:07:32.619907] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:32.619945] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:32.623854] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836850000,1698836851000,8,16372388532,1698836852619
1698836850000,1698836851000,5,736430591,1698836852619
1698836850000,1698836851000,10,327355636,1698836852619
1698836850000,1698836851000,9,300120775,1698836852619
1698836850000,1698836851000,7,26898437219,1698836852619
1698836850000,1698836851000,11,318177025,1698836852619
1698836850000,1698836851000,4,2129856317,1698836852619
1698836850000,1698836851000,6,5845710771,1698836852619
1698836850000,1698836851000,1,37233999,1698836852619
[m
[36m[11:07:32.972192] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:33.121450] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836853000-1698836854000[m
[36m[11:07:33.636227] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836851000-1698836852000 [m
[36m[11:07:33.637273] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836851000-1698836852000-252[m
[36m[11:07:33.637371] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836851000-1698836852000[m
[36m[11:07:33.637424] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836851000-1698836852000[m
[36m[11:07:33.637519] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:33.637543] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:33.640302] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836851000,1698836852000,5,736433272,1698836853637
1698836851000,1698836852000,9,300123242,1698836853637
1698836851000,1698836852000,4,2129858883,1698836853637
1698836851000,1698836852000,7,26898439736,1698836853637
1698836851000,1698836852000,11,318179318,1698836853637
1698836851000,1698836852000,6,5845713295,1698836853637
1698836851000,1698836852000,10,327358114,1698836853637
1698836851000,1698836852000,8,16372391124,1698836853637
1698836851000,1698836852000,1,37237927,1698836853637
[m
[36m[11:07:33.973584] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:34.030908] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:34.031598] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:34.032339] [D] [thread 131382] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:34.032428] [I] [thread 131382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:34.032446] [I] [thread 131382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:34.032562] [I] [thread 131382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:34.032576] [I] [thread 131382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:34.153198] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836854000-1698836855000[m
[36m[11:07:34.201695] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:34.202179] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:34.649990] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836852000-1698836853000 [m
[36m[11:07:34.651004] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836852000-1698836853000-253[m
[36m[11:07:34.651117] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836852000-1698836853000[m
[36m[11:07:34.651194] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836852000-1698836853000[m
[36m[11:07:34.651321] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:34.651358] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:34.655683] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836852000,1698836853000,4,2129861166,1698836854651
1698836852000,1698836853000,11,318181770,1698836854651
1698836852000,1698836853000,7,26898442017,1698836854651
1698836852000,1698836853000,10,327360521,1698836854651
1698836852000,1698836853000,6,5845715533,1698836854651
1698836852000,1698836853000,8,16372393427,1698836854651
1698836852000,1698836853000,9,300125695,1698836854651
1698836852000,1698836853000,5,736435660,1698836854651
1698836852000,1698836853000,1,37243653,1698836854651
[m
[36m[11:07:35.146323] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836855000-1698836856000[m
[36m[11:07:35.203465] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:35.668128] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836853000-1698836854000 [m
[36m[11:07:35.669164] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836853000-1698836854000-254[m
[36m[11:07:35.669276] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836853000-1698836854000[m
[36m[11:07:35.669349] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836853000-1698836854000[m
[36m[11:07:35.669482] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:35.669521] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:35.674179] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836853000,1698836854000,11,318184160,1698836855669
1698836853000,1698836854000,7,26898444401,1698836855669
1698836853000,1698836854000,10,327362703,1698836855669
1698836853000,1698836854000,6,5845717973,1698836855669
1698836853000,1698836854000,4,2129863802,1698836855669
1698836853000,1698836854000,8,16372395821,1698836855669
1698836853000,1698836854000,9,300128018,1698836855669
1698836853000,1698836854000,5,736438149,1698836855669
1698836853000,1698836854000,1,37247468,1698836855669
[m
[36m[11:07:36.132207] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836856000-1698836857000[m
[36m[11:07:36.204769] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:36.234808] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:36.235417] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:36.236158] [D] [thread 131388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:36.236252] [I] [thread 131388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:36.236273] [I] [thread 131388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:36.236405] [I] [thread 131388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:36.236422] [I] [thread 131388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:36.471403] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:36.471719] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:36.685003] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836854000-1698836855000 [m
[36m[11:07:36.685863] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836854000-1698836855000-255[m
[36m[11:07:36.685976] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836854000-1698836855000[m
[36m[11:07:36.686052] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836854000-1698836855000[m
[36m[11:07:36.686177] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:36.686270] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:36.689380] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836854000,1698836855000,7,26898446810,1698836856686
1698836854000,1698836855000,6,5845720431,1698836856686
1698836854000,1698836855000,10,327365360,1698836856686
1698836854000,1698836855000,4,2129866043,1698836856686
1698836854000,1698836855000,9,300130501,1698836856686
1698836854000,1698836855000,8,16372398319,1698836856686
1698836854000,1698836855000,5,736440510,1698836856686
1698836854000,1698836855000,11,318186848,1698836856686
1698836854000,1698836855000,1,37251358,1698836856686
[m
[36m[11:07:37.113475] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836857000-1698836858000[m
[36m[11:07:37.472913] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:37.700945] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836855000-1698836856000 [m
[36m[11:07:37.701878] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836855000-1698836856000-256[m
[36m[11:07:37.702017] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836855000-1698836856000[m
[36m[11:07:37.702105] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836855000-1698836856000[m
[36m[11:07:37.702306] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:37.702349] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:37.706937] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836855000,1698836856000,7,26898449032,1698836857702
1698836855000,1698836856000,10,327367457,1698836857702
1698836855000,1698836856000,6,5845722709,1698836857702
1698836855000,1698836856000,4,2129868373,1698836857702
1698836855000,1698836856000,9,300132588,1698836857702
1698836855000,1698836856000,11,318188922,1698836857702
1698836855000,1698836856000,5,736442797,1698836857702
1698836855000,1698836856000,8,16372400515,1698836857702
1698836855000,1698836856000,1,37255282,1698836857702
[m
[36m[11:07:38.122986] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836858000-1698836859000[m
[36m[11:07:38.474290] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:38.536140] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:38.536499] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:38.537843] [D] [thread 131394] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:38.537938] [I] [thread 131394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:38.537957] [I] [thread 131394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:38.538073] [I] [thread 131394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:38.538086] [I] [thread 131394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:38.703610] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:38.703973] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:38.718411] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836856000-1698836857000 [m
[36m[11:07:38.719013] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836856000-1698836857000-257[m
[36m[11:07:38.719078] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836856000-1698836857000[m
[36m[11:07:38.719114] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836856000-1698836857000[m
[36m[11:07:38.719196] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:38.719222] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:38.722769] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836856000,1698836857000,4,2129870915,1698836858719
1698836856000,1698836857000,10,327370170,1698836858719
1698836856000,1698836857000,11,318191533,1698836858719
1698836856000,1698836857000,7,26898451676,1698836858719
1698836856000,1698836857000,6,5845725255,1698836858719
1698836856000,1698836857000,9,300135391,1698836858719
1698836856000,1698836857000,8,16372403147,1698836858719
1698836856000,1698836857000,5,736445295,1698836858719
1698836856000,1698836857000,1,37260901,1698836858719
[m
[36m[11:07:39.127017] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836859000-1698836860000[m
[36m[11:07:39.705172] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:39.734505] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836857000-1698836858000 [m
[36m[11:07:39.735393] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836857000-1698836858000-258[m
[36m[11:07:39.735474] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836857000-1698836858000[m
[36m[11:07:39.735531] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836857000-1698836858000[m
[36m[11:07:39.735626] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:39.735652] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:39.738289] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836857000,1698836858000,11,318193777,1698836859735
1698836857000,1698836858000,7,26898453870,1698836859735
1698836857000,1698836858000,6,5845727399,1698836859735
1698836857000,1698836858000,10,327372296,1698836859735
1698836857000,1698836858000,9,300137477,1698836859735
1698836857000,1698836858000,8,16372405282,1698836859735
1698836857000,1698836858000,5,736447551,1698836859735
1698836857000,1698836858000,4,2129873226,1698836859735
1698836857000,1698836858000,1,37264878,1698836859735
[m
[36m[11:07:40.112479] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836860000-1698836861000[m
[36m[11:07:40.706402] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:40.708702] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:40.709034] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:40.710249] [D] [thread 131401] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:40.710319] [I] [thread 131401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:40.710465] [I] [thread 131401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:40.710655] [I] [thread 131401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:40.710673] [I] [thread 131401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:40.749494] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836858000-1698836859000 [m
[36m[11:07:40.750245] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836858000-1698836859000-259[m
[36m[11:07:40.750326] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836858000-1698836859000[m
[36m[11:07:40.750380] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836858000-1698836859000[m
[36m[11:07:40.750473] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:40.750496] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:40.752875] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836858000,1698836859000,9,300140143,1698836860750
1698836858000,1698836859000,7,26898456491,1698836860750
1698836858000,1698836859000,10,327374958,1698836860750
1698836858000,1698836859000,6,5845730067,1698836860750
1698836858000,1698836859000,8,16372407865,1698836860750
1698836858000,1698836859000,5,736450198,1698836860750
1698836858000,1698836859000,11,318196364,1698836860750
1698836858000,1698836859000,4,2129875809,1698836860750
1698836858000,1698836859000,1,37270741,1698836860750
[m
[36m[11:07:40.865077] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:40.865433] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:41.117665] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836861000-1698836862000[m
[36m[11:07:41.762799] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836859000-1698836860000 [m
[36m[11:07:41.763528] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836859000-1698836860000-260[m
[36m[11:07:41.763617] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836859000-1698836860000[m
[36m[11:07:41.763668] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836859000-1698836860000[m
[36m[11:07:41.763762] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:41.763787] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:41.765843] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836859000,1698836860000,7,26898458712,1698836861763
1698836859000,1698836860000,6,5845732231,1698836861763
1698836859000,1698836860000,8,16372410099,1698836861763
1698836859000,1698836860000,5,736452320,1698836861763
1698836859000,1698836860000,11,318198719,1698836861763
1698836859000,1698836860000,4,2129877935,1698836861763
1698836859000,1698836860000,9,300142539,1698836861763
1698836859000,1698836860000,10,327377357,1698836861763
1698836859000,1698836860000,1,37274517,1698836861763
[m
[36m[11:07:41.866632] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:42.132316] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836862000-1698836863000[m
[36m[11:07:42.777726] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836860000-1698836861000 [m
[36m[11:07:42.778516] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836860000-1698836861000-261[m
[36m[11:07:42.778608] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836860000-1698836861000[m
[36m[11:07:42.778665] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836860000-1698836861000[m
[36m[11:07:42.778770] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:42.778801] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:42.781699] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836860000,1698836861000,7,26898461308,1698836862778
1698836860000,1698836861000,6,5845734832,1698836862778
1698836860000,1698836861000,8,16372412600,1698836862778
1698836860000,1698836861000,11,318201087,1698836862778
1698836860000,1698836861000,5,736454929,1698836862778
1698836860000,1698836861000,4,2129880543,1698836862778
1698836860000,1698836861000,9,300144980,1698836862778
1698836860000,1698836861000,10,327379796,1698836862778
1698836860000,1698836861000,1,37279451,1698836862778
[m
[36m[11:07:42.867958] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:43.013544] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:43.013866] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:43.015659] [D] [thread 131408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:43.016015] [I] [thread 131408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:43.016231] [I] [thread 131408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:43.016533] [I] [thread 131408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:43.016591] [I] [thread 131408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:43.128182] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836863000-1698836864000[m
[36m[11:07:43.229901] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:43.230255] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:43.793668] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836861000-1698836862000 [m
[36m[11:07:43.794938] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836861000-1698836862000-262[m
[36m[11:07:43.795054] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836861000-1698836862000[m
[36m[11:07:43.795118] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836861000-1698836862000[m
[36m[11:07:43.795225] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:43.795255] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:43.798667] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836861000,1698836862000,11,318203627,1698836863795
1698836861000,1698836862000,8,16372415033,1698836863795
1698836861000,1698836862000,6,5845737254,1698836863795
1698836861000,1698836862000,4,2129882843,1698836863795
1698836861000,1698836862000,5,736457136,1698836863795
1698836861000,1698836862000,9,300147375,1698836863795
1698836861000,1698836862000,10,327382202,1698836863795
1698836861000,1698836862000,7,26898463705,1698836863795
1698836861000,1698836862000,1,37282623,1698836863795
[m
[36m[11:07:44.118759] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836864000-1698836865000[m
[36m[11:07:44.231400] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:44.809571] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836862000-1698836863000 [m
[36m[11:07:44.810524] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836862000-1698836863000-263[m
[36m[11:07:44.810638] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836862000-1698836863000[m
[36m[11:07:44.810712] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836862000-1698836863000[m
[36m[11:07:44.810842] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:44.810877] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:44.814785] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836862000,1698836863000,5,736459614,1698836864810
1698836862000,1698836863000,9,300149692,1698836864810
1698836862000,1698836863000,10,327384367,1698836864810
1698836862000,1698836863000,11,318205955,1698836864810
1698836862000,1698836863000,7,26898466207,1698836864810
1698836862000,1698836863000,8,16372417540,1698836864810
1698836862000,1698836863000,4,2129885466,1698836864810
1698836862000,1698836863000,6,5845739839,1698836864810
1698836862000,1698836863000,1,37285683,1698836864810
[m
[36m[11:07:45.118241] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836865000-1698836866000[m
[36m[11:07:45.232604] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:45.340382] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:45.340716] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:45.342487] [D] [thread 131414] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:45.342605] [I] [thread 131414] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:45.342625] [I] [thread 131414] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:45.342750] [I] [thread 131414] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:45.342766] [I] [thread 131414] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:45.562475] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:45.562799] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:45.826008] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836863000-1698836864000 [m
[36m[11:07:45.826829] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836863000-1698836864000-264[m
[36m[11:07:45.826897] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836863000-1698836864000[m
[36m[11:07:45.826951] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836863000-1698836864000[m
[36m[11:07:45.827048] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:45.827075] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:45.829946] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836863000,1698836864000,5,736462026,1698836865827
1698836863000,1698836864000,9,300152292,1698836865827
1698836863000,1698836864000,10,327387066,1698836865827
1698836863000,1698836864000,11,318208543,1698836865827
1698836863000,1698836864000,4,2129887715,1698836865827
1698836863000,1698836864000,7,26898468655,1698836865827
1698836863000,1698836864000,8,16372419970,1698836865827
1698836863000,1698836864000,6,5845742184,1698836865827
1698836863000,1698836864000,1,37291522,1698836865827
[m
[36m[11:07:46.119181] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836866000-1698836867000[m
[36m[11:07:46.564042] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:46.842379] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836864000-1698836865000 [m
[36m[11:07:46.843149] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836864000-1698836865000-265[m
[36m[11:07:46.843254] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836864000-1698836865000[m
[36m[11:07:46.843318] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836864000-1698836865000[m
[36m[11:07:46.843431] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:46.843465] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:46.846926] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836864000,1698836865000,5,736464300,1698836866843
1698836864000,1698836865000,11,318210775,1698836866843
1698836864000,1698836865000,4,2129889942,1698836866843
1698836864000,1698836865000,8,16372422185,1698836866843
1698836864000,1698836865000,7,26898470883,1698836866843
1698836864000,1698836865000,6,5845744465,1698836866843
1698836864000,1698836865000,9,300154504,1698836866843
1698836864000,1698836865000,10,327389302,1698836866843
1698836864000,1698836865000,1,37295564,1698836866843
[m
[36m[11:07:47.119276] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836867000-1698836868000[m
[36m[11:07:47.565282] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:47.620572] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:47.620931] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:47.622319] [D] [thread 131421] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:47.622428] [I] [thread 131421] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:47.622447] [I] [thread 131421] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:47.622541] [I] [thread 131421] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:47.622557] [I] [thread 131421] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:47.832990] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:47.833355] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:47.858444] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836865000-1698836866000 [m
[36m[11:07:47.859245] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836865000-1698836866000-266[m
[36m[11:07:47.859348] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836865000-1698836866000[m
[36m[11:07:47.859417] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836865000-1698836866000[m
[36m[11:07:47.859528] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:47.859559] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:47.862956] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836865000,1698836866000,5,736466949,1698836867859
1698836865000,1698836866000,4,2129892425,1698836867859
1698836865000,1698836866000,11,318213543,1698836867859
1698836865000,1698836866000,8,16372424779,1698836867859
1698836865000,1698836866000,7,26898473471,1698836867859
1698836865000,1698836866000,6,5845747039,1698836867859
1698836865000,1698836866000,9,300157103,1698836867859
1698836865000,1698836866000,10,327391870,1698836867859
1698836865000,1698836866000,1,37301378,1698836867859
[m
[36m[11:07:48.149279] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836868000-1698836869000[m
[36m[11:07:48.834406] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:48.874345] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836866000-1698836867000 [m
[36m[11:07:48.875018] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836866000-1698836867000-267[m
[36m[11:07:48.875103] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836866000-1698836867000[m
[36m[11:07:48.875156] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836866000-1698836867000[m
[36m[11:07:48.875233] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:48.875252] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:48.876970] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836866000,1698836867000,4,2129894763,1698836868875
1698836866000,1698836867000,11,318215728,1698836868875
1698836866000,1698836867000,8,16372426949,1698836868875
1698836866000,1698836867000,7,26898475594,1698836868875
1698836866000,1698836867000,10,327394115,1698836868875
1698836866000,1698836867000,6,5845749223,1698836868875
1698836866000,1698836867000,9,300159235,1698836868875
1698836866000,1698836867000,5,736469230,1698836868875
1698836866000,1698836867000,1,37305250,1698836868875
[m
[36m[11:07:49.134333] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836869000-1698836870000[m
[36m[11:07:49.835523] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:49.843983] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:49.844309] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:49.845319] [D] [thread 131427] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:49.845414] [I] [thread 131427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:49.845433] [I] [thread 131427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:49.845551] [I] [thread 131427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:49.845564] [I] [thread 131427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:49.885551] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836867000-1698836868000 [m
[36m[11:07:49.886641] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836867000-1698836868000-268[m
[36m[11:07:49.886762] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836867000-1698836868000[m
[36m[11:07:49.886840] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836867000-1698836868000[m
[36m[11:07:49.886977] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:49.887014] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:49.890592] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836867000,1698836868000,11,318218209,1698836869887
1698836867000,1698836868000,10,327396539,1698836869887
1698836867000,1698836868000,8,16372429499,1698836869887
1698836867000,1698836868000,7,26898478185,1698836869887
1698836867000,1698836868000,6,5845751899,1698836869887
1698836867000,1698836868000,9,300161693,1698836869887
1698836867000,1698836868000,4,2129897513,1698836869887
1698836867000,1698836868000,5,736471912,1698836869887
1698836867000,1698836868000,1,37310750,1698836869887
[m
[36m[11:07:50.017484] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:50.017803] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:50.117994] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836870000-1698836871000[m
[36m[11:07:50.900824] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836868000-1698836869000 [m
[36m[11:07:50.902169] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836868000-1698836869000-269[m
[36m[11:07:50.902318] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836868000-1698836869000[m
[36m[11:07:50.902389] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836868000-1698836869000[m
[36m[11:07:50.902510] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:50.902542] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:50.906380] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836868000,1698836869000,10,327398854,1698836870902
1698836868000,1698836869000,8,16372431803,1698836870902
1698836868000,1698836869000,7,26898480447,1698836870902
1698836868000,1698836869000,6,5845754087,1698836870902
1698836868000,1698836869000,9,300164024,1698836870902
1698836868000,1698836869000,4,2129899648,1698836870902
1698836868000,1698836869000,11,318220779,1698836870902
1698836868000,1698836869000,5,736474072,1698836870902
1698836868000,1698836869000,1,37314446,1698836870902
[m
[36m[11:07:51.019008] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:51.144373] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836871000-1698836872000[m
[36m[11:07:51.918101] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836869000-1698836870000 [m
[36m[11:07:51.919506] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836869000-1698836870000-270[m
[36m[11:07:51.919637] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836869000-1698836870000[m
[36m[11:07:51.919718] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836869000-1698836870000[m
[36m[11:07:51.919844] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:51.919878] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:51.923786] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836869000,1698836870000,10,327401314,1698836871919
1698836869000,1698836870000,9,300166356,1698836871919
1698836869000,1698836870000,8,16372434268,1698836871919
1698836869000,1698836870000,7,26898482890,1698836871919
1698836869000,1698836870000,4,2129902184,1698836871919
1698836869000,1698836870000,6,5845756561,1698836871919
1698836869000,1698836870000,11,318223030,1698836871919
1698836869000,1698836870000,5,736476649,1698836871919
1698836869000,1698836870000,1,37317102,1698836871919
[m
[36m[11:07:52.020280] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:52.135282] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836872000-1698836873000[m
[36m[11:07:52.139983] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:52.140408] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:52.142041] [D] [thread 131433] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:52.142152] [I] [thread 131433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:52.142172] [I] [thread 131433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:52.142314] [I] [thread 131433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:52.142333] [I] [thread 131433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:52.367851] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:52.368238] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:52.937482] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836870000-1698836871000 [m
[36m[11:07:52.938325] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836870000-1698836871000-271[m
[36m[11:07:52.938427] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836870000-1698836871000[m
[36m[11:07:52.938497] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836870000-1698836871000[m
[36m[11:07:52.938610] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:52.938644] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:52.942050] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836870000,1698836871000,9,300168937,1698836872938
1698836870000,1698836871000,4,2129904593,1698836872938
1698836870000,1698836871000,7,26898485294,1698836872938
1698836870000,1698836871000,8,16372436697,1698836872938
1698836870000,1698836871000,6,5845758933,1698836872938
1698836870000,1698836871000,11,318225580,1698836872938
1698836870000,1698836871000,5,736478963,1698836872938
1698836870000,1698836871000,10,327403866,1698836872938
1698836870000,1698836871000,1,37321614,1698836872938
[m
[36m[11:07:53.134702] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836873000-1698836874000[m
[36m[11:07:53.369479] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:53.955960] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836871000-1698836872000 [m
[36m[11:07:53.956850] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836871000-1698836872000-272[m
[36m[11:07:53.956964] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836871000-1698836872000[m
[36m[11:07:53.957037] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836871000-1698836872000[m
[36m[11:07:53.957164] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:53.957201] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:53.961108] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836871000,1698836872000,8,16372438962,1698836873957
1698836871000,1698836872000,7,26898487617,1698836873957
1698836871000,1698836872000,6,5845761307,1698836873957
1698836871000,1698836872000,11,318227756,1698836873957
1698836871000,1698836872000,9,300171291,1698836873957
1698836871000,1698836872000,10,327406074,1698836873957
1698836871000,1698836872000,5,736481401,1698836873957
1698836871000,1698836872000,4,2129907181,1698836873957
1698836871000,1698836872000,1,37325598,1698836873957
[m
[36m[11:07:54.120219] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836874000-1698836875000[m
[36m[11:07:54.370792] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:54.409732] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:54.410052] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:54.411104] [D] [thread 131438] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:54.411200] [I] [thread 131438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:54.411219] [I] [thread 131438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:54.411335] [I] [thread 131438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:54.411348] [I] [thread 131438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:54.579381] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:54.579707] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:54.972398] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836872000-1698836873000 [m
[36m[11:07:54.973153] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836872000-1698836873000-273[m
[36m[11:07:54.973245] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836872000-1698836873000[m
[36m[11:07:54.973302] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836872000-1698836873000[m
[36m[11:07:54.973400] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:54.973427] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:54.976431] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836872000,1698836873000,8,16372441517,1698836874973
1698836872000,1698836873000,7,26898490092,1698836874973
1698836872000,1698836873000,6,5845763717,1698836874973
1698836872000,1698836873000,11,318230448,1698836874973
1698836872000,1698836873000,10,327408694,1698836874973
1698836872000,1698836873000,9,300173800,1698836874973
1698836872000,1698836873000,5,736483802,1698836874973
1698836872000,1698836873000,4,2129909534,1698836874973
1698836872000,1698836873000,1,37331583,1698836874973
[m
[36m[11:07:55.122600] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836875000-1698836876000[m
[36m[11:07:55.580908] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:55.987825] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836873000-1698836874000 [m
[36m[11:07:55.988653] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836873000-1698836874000-274[m
[36m[11:07:55.988727] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836873000-1698836874000[m
[36m[11:07:55.988786] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836873000-1698836874000[m
[36m[11:07:55.988899] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:55.988927] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:55.992298] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836873000,1698836874000,8,16372443683,1698836875988
1698836873000,1698836874000,9,300175994,1698836875988
1698836873000,1698836874000,6,5845765980,1698836875988
1698836873000,1698836874000,7,26898492251,1698836875988
1698836873000,1698836874000,11,318232542,1698836875988
1698836873000,1698836874000,10,327410852,1698836875988
1698836873000,1698836874000,4,2129911841,1698836875988
1698836873000,1698836874000,5,736486033,1698836875988
1698836873000,1698836874000,1,37335631,1698836875988
[m
[36m[11:07:56.117658] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836876000-1698836877000[m
[36m[11:07:56.582153] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:56.598749] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:56.599111] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:56.600316] [D] [thread 131443] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:56.600407] [I] [thread 131443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:56.600426] [I] [thread 131443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:56.600542] [I] [thread 131443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:56.600556] [I] [thread 131443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:56.822687] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:56.823005] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:57.004252] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836874000-1698836875000 [m
[36m[11:07:57.005466] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836874000-1698836875000-275[m
[36m[11:07:57.005572] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836874000-1698836875000[m
[36m[11:07:57.005641] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836874000-1698836875000[m
[36m[11:07:57.005724] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:57.005743] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:57.007755] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836874000,1698836875000,8,16372446369,1698836877005
1698836874000,1698836875000,10,327413446,1698836877005
1698836874000,1698836875000,11,318235030,1698836877005
1698836874000,1698836875000,7,26898494900,1698836877005
1698836874000,1698836875000,6,5845768591,1698836877005
1698836874000,1698836875000,4,2129914327,1698836877005
1698836874000,1698836875000,5,736488610,1698836877005
1698836874000,1698836875000,9,300178733,1698836877005
1698836874000,1698836875000,1,37341263,1698836877005
[m
[36m[11:07:57.111003] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836877000-1698836878000[m
[36m[11:07:57.824193] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:58.016909] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836875000-1698836876000 [m
[36m[11:07:58.017163] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836876000-1698836877000 [m
[36m[11:07:58.017913] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836875000-1698836876000-276[m
[36m[11:07:58.018023] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836875000-1698836876000[m
[36m[11:07:58.018094] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836875000-1698836876000[m
[36m[11:07:58.018270] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:58.018308] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:58.022074] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836875000,1698836876000,8,16372448619,1698836878018
1698836875000,1698836876000,11,318237446,1698836878018
1698836875000,1698836876000,7,26898497025,1698836878018
1698836875000,1698836876000,6,5845770714,1698836878018
1698836875000,1698836876000,4,2129916458,1698836878018
1698836875000,1698836876000,5,736490763,1698836878018
1698836875000,1698836876000,9,300180896,1698836878018
1698836875000,1698836876000,10,327415774,1698836878018
1698836875000,1698836876000,1,37345206,1698836878018
[m
[36m[11:07:58.023041] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836876000-1698836877000-277[m
[36m[11:07:58.023156] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836876000-1698836877000[m
[36m[11:07:58.023229] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836876000-1698836877000[m
[36m[11:07:58.023357] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:58.023391] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:58.026280] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836876000,1698836877000,7,26898499625,1698836878023
1698836876000,1698836877000,6,5845773339,1698836878023
1698836876000,1698836877000,4,2129919105,1698836878023
1698836876000,1698836877000,5,736493412,1698836878023
1698836876000,1698836877000,9,300183369,1698836878023
1698836876000,1698836877000,8,16372451301,1698836878023
1698836876000,1698836877000,10,327418212,1698836878023
1698836876000,1698836877000,11,318239997,1698836878023
[m
[36m[11:07:58.149951] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836878000-1698836879000[m
[36m[11:07:58.825449] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:58.873839] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:58.874155] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:58.875916] [D] [thread 131449] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:07:58.876025] [I] [thread 131449] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:58.876043] [I] [thread 131449] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:07:58.876172] [I] [thread 131449] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:07:58.876197] [I] [thread 131449] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:07:59.032371] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836877000-1698836878000 [m
[36m[11:07:59.033107] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836877000-1698836878000-278[m
[36m[11:07:59.033260] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836877000-1698836878000[m
[36m[11:07:59.033308] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836877000-1698836878000[m
[36m[11:07:59.033396] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:07:59.033417] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:07:59.035327] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836877000,1698836878000,7,26898502057,1698836879033
1698836877000,1698836878000,6,5845775676,1698836879033
1698836877000,1698836878000,4,2129921410,1698836879033
1698836877000,1698836878000,5,736495627,1698836879033
1698836877000,1698836878000,9,300185725,1698836879033
1698836877000,1698836878000,10,327420522,1698836879033
1698836877000,1698836878000,8,16372453534,1698836879033
1698836877000,1698836878000,11,318242371,1698836879033
1698836877000,1698836878000,1,37350356,1698836879033
[m
[36m[11:07:59.039903] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:59.040220] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:07:59.131418] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836879000-1698836880000[m
[36m[11:08:00.041419] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:00.043103] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836878000-1698836879000 [m
[36m[11:08:00.043887] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836878000-1698836879000-279[m
[36m[11:08:00.044135] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836878000-1698836879000[m
[36m[11:08:00.044208] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836878000-1698836879000[m
[36m[11:08:00.044327] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:00.044381] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:00.047439] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836878000,1698836879000,5,736498133,1698836880044
1698836878000,1698836879000,9,300187989,1698836880044
1698836878000,1698836879000,10,327422821,1698836880044
1698836878000,1698836879000,11,318244652,1698836880044
1698836878000,1698836879000,4,2129924003,1698836880044
1698836878000,1698836879000,8,16372455968,1698836880044
1698836878000,1698836879000,7,26898504656,1698836880044
1698836878000,1698836879000,6,5845778285,1698836880044
1698836878000,1698836879000,1,37352574,1698836880044
[m
[36m[11:08:00.129694] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836880000-1698836881000[m
[36m[11:08:01.042746] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:01.058662] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836879000-1698836880000 [m
[36m[11:08:01.059552] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836879000-1698836880000-280[m
[36m[11:08:01.059666] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836879000-1698836880000[m
[36m[11:08:01.059739] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836879000-1698836880000[m
[36m[11:08:01.059865] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:01.059900] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:01.063966] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836879000,1698836880000,9,300190520,1698836881059
1698836879000,1698836880000,5,736500432,1698836881059
1698836879000,1698836880000,10,327425333,1698836881059
1698836879000,1698836880000,11,318247133,1698836881059
1698836879000,1698836880000,4,2129926233,1698836881059
1698836879000,1698836880000,7,26898506963,1698836881059
1698836879000,1698836880000,8,16372458354,1698836881059
1698836879000,1698836880000,6,5845780598,1698836881059
1698836879000,1698836880000,1,37357941,1698836881059
[m
[36m[11:08:01.121486] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836881000-1698836882000[m
[36m[11:08:01.190220] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:01.190775] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:01.191648] [D] [thread 131455] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:01.191742] [I] [thread 131455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:01.191760] [I] [thread 131455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:01.191877] [I] [thread 131455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:01.191890] [I] [thread 131455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:01.359271] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:01.359673] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:02.074271] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836880000-1698836881000 [m
[36m[11:08:02.075149] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836880000-1698836881000-281[m
[36m[11:08:02.075246] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836880000-1698836881000[m
[36m[11:08:02.075314] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836880000-1698836881000[m
[36m[11:08:02.075420] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:02.075447] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:02.078422] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836880000,1698836881000,10,327427466,1698836882075
1698836880000,1698836881000,5,736502793,1698836882075
1698836880000,1698836881000,11,318249254,1698836882075
1698836880000,1698836881000,4,2129928637,1698836882075
1698836880000,1698836881000,7,26898509326,1698836882075
1698836880000,1698836881000,8,16372460675,1698836882075
1698836880000,1698836881000,6,5845782989,1698836882075
1698836880000,1698836881000,9,300192871,1698836882075
1698836880000,1698836881000,1,37362352,1698836882075
[m
[36m[11:08:02.117957] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836882000-1698836883000[m
[36m[11:08:02.360879] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:03.089455] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836881000-1698836882000 [m
[36m[11:08:03.090719] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836881000-1698836882000-282[m
[36m[11:08:03.090832] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836881000-1698836882000[m
[36m[11:08:03.090896] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836881000-1698836882000[m
[36m[11:08:03.091004] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:03.091038] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:03.094408] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836881000,1698836882000,10,327430167,1698836883091
1698836881000,1698836882000,5,736505292,1698836883091
1698836881000,1698836882000,11,318251971,1698836883091
1698836881000,1698836882000,4,2129931118,1698836883091
1698836881000,1698836882000,7,26898511820,1698836883091
1698836881000,1698836882000,8,16372463241,1698836883091
1698836881000,1698836882000,9,300195413,1698836883091
1698836881000,1698836882000,6,5845785464,1698836883091
1698836881000,1698836882000,1,37366325,1698836883091
[m
[36m[11:08:03.145544] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836883000-1698836884000[m
[36m[11:08:03.362159] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:03.386077] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:03.386460] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:03.387507] [D] [thread 131460] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:03.387623] [I] [thread 131460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:03.387644] [I] [thread 131460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:03.387780] [I] [thread 131460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:03.387800] [I] [thread 131460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:03.647576] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:03.647902] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:04.104371] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836882000-1698836883000 [m
[36m[11:08:04.104927] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836882000-1698836883000-283[m
[36m[11:08:04.104992] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836882000-1698836883000[m
[36m[11:08:04.105031] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836882000-1698836883000[m
[36m[11:08:04.105097] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:04.105114] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:04.106860] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836882000,1698836883000,5,736507643,1698836884105
1698836882000,1698836883000,7,26898513986,1698836884105
1698836882000,1698836883000,8,16372465369,1698836884105
1698836882000,1698836883000,9,300197574,1698836884105
1698836882000,1698836883000,6,5845787717,1698836884105
1698836882000,1698836883000,10,327432389,1698836884105
1698836882000,1698836883000,4,2129933507,1698836884105
1698836882000,1698836883000,11,318254237,1698836884105
1698836882000,1698836883000,1,37372090,1698836884105
[m
[36m[11:08:04.134036] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836884000-1698836885000[m
[36m[11:08:04.649149] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:05.114825] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836883000-1698836884000 [m
[36m[11:08:05.115656] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836883000-1698836884000-284[m
[36m[11:08:05.115749] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836883000-1698836884000[m
[36m[11:08:05.115797] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836883000-1698836884000[m
[36m[11:08:05.115880] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:05.115901] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:05.117723] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836883000,1698836884000,7,26898516627,1698836885115
1698836883000,1698836884000,9,300200191,1698836885115
1698836883000,1698836884000,8,16372468039,1698836885115
1698836883000,1698836884000,6,5845790232,1698836885115
1698836883000,1698836884000,10,327434973,1698836885115
1698836883000,1698836884000,4,2129935949,1698836885115
1698836883000,1698836884000,5,736510268,1698836885115
1698836883000,1698836884000,11,318256870,1698836885115
1698836883000,1698836884000,1,37376033,1698836885115
[m
[36m[11:08:05.126688] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836885000-1698836886000[m
[36m[11:08:05.650445] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:05.760139] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:05.760507] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:05.761601] [D] [thread 131465] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:05.761698] [I] [thread 131465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:05.761718] [I] [thread 131465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:05.761833] [I] [thread 131465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:05.761847] [I] [thread 131465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:05.954349] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:05.954701] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:06.121075] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836886000-1698836887000[m
[36m[11:08:06.126369] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836884000-1698836885000 [m
[36m[11:08:06.127152] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836884000-1698836885000-285[m
[36m[11:08:06.127686] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836884000-1698836885000[m
[36m[11:08:06.127803] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836884000-1698836885000[m
[36m[11:08:06.127940] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:06.127975] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:06.131379] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836884000,1698836885000,7,26898518831,1698836886128
1698836884000,1698836885000,9,300202455,1698836886128
1698836884000,1698836885000,8,16372470223,1698836886128
1698836884000,1698836885000,10,327437217,1698836886128
1698836884000,1698836885000,6,5845792400,1698836886128
1698836884000,1698836885000,4,2129938068,1698836886128
1698836884000,1698836885000,11,318259141,1698836886128
1698836884000,1698836885000,5,736512476,1698836886128
1698836884000,1698836885000,1,37381372,1698836886128
[m
[36m[11:08:06.956007] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:07.127205] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836887000-1698836888000[m
[36m[11:08:07.141929] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836885000-1698836886000 [m
[36m[11:08:07.142789] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836885000-1698836886000-286[m
[36m[11:08:07.142894] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836885000-1698836886000[m
[36m[11:08:07.142958] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836885000-1698836886000[m
[36m[11:08:07.143067] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:07.143096] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:07.146482] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836885000,1698836886000,9,300204992,1698836887143
1698836885000,1698836886000,7,26898521289,1698836887143
1698836885000,1698836886000,10,327439597,1698836887143
1698836885000,1698836886000,4,2129940628,1698836887143
1698836885000,1698836886000,8,16372472693,1698836887143
1698836885000,1698836886000,6,5845794920,1698836887143
1698836885000,1698836886000,11,318261453,1698836887143
1698836885000,1698836886000,5,736515111,1698836887143
1698836885000,1698836886000,1,37383275,1698836887143
[m
[36m[11:08:07.957295] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:07.997918] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:07.998336] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:07.999658] [D] [thread 131470] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:07.999750] [I] [thread 131470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:07.999769] [I] [thread 131470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:07.999885] [I] [thread 131470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:07.999898] [I] [thread 131470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:08.116753] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836888000-1698836889000[m
[36m[11:08:08.157706] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836886000-1698836887000 [m
[36m[11:08:08.158541] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836886000-1698836887000-287[m
[36m[11:08:08.158649] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836886000-1698836887000[m
[36m[11:08:08.158710] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836886000-1698836887000[m
[36m[11:08:08.158811] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:08.158836] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:08.161182] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836886000,1698836887000,10,327442173,1698836888158
1698836886000,1698836887000,4,2129942903,1698836888158
1698836886000,1698836887000,7,26898523596,1698836888158
1698836886000,1698836887000,8,16372475060,1698836888158
1698836886000,1698836887000,6,5845797198,1698836888158
1698836886000,1698836887000,11,318263866,1698836888158
1698836886000,1698836887000,5,736517303,1698836888158
1698836886000,1698836887000,9,300207472,1698836888158
1698836886000,1698836887000,1,37388981,1698836888158
[m
[36m[11:08:08.175483] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:08.175852] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:09.112388] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836889000-1698836890000[m
[36m[11:08:09.169977] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836887000-1698836888000 [m
[36m[11:08:09.171046] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836887000-1698836888000-288[m
[36m[11:08:09.171147] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836887000-1698836888000[m
[36m[11:08:09.171207] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836887000-1698836888000[m
[36m[11:08:09.171309] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:09.171336] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:09.174731] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836887000,1698836888000,7,26898525987,1698836889171
1698836887000,1698836888000,8,16372477423,1698836889171
1698836887000,1698836888000,6,5845799640,1698836889171
1698836887000,1698836888000,11,318266086,1698836889171
1698836887000,1698836888000,5,736519783,1698836889171
1698836887000,1698836888000,9,300209764,1698836889171
1698836887000,1698836888000,4,2129945496,1698836889171
1698836887000,1698836888000,10,327444602,1698836889171
1698836887000,1698836888000,1,37392912,1698836889171
[m
[36m[11:08:09.177074] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:10.120918] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836890000-1698836891000[m
[36m[11:08:10.178365] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:10.186593] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836888000-1698836889000 [m
[36m[11:08:10.187649] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836888000-1698836889000-289[m
[36m[11:08:10.187761] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836888000-1698836889000[m
[36m[11:08:10.187835] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836888000-1698836889000[m
[36m[11:08:10.187963] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:10.187998] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:10.191583] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836888000,1698836889000,7,26898528388,1698836890188
1698836888000,1698836889000,8,16372479895,1698836890188
1698836888000,1698836889000,11,318268651,1698836890188
1698836888000,1698836889000,6,5845802092,1698836890188
1698836888000,1698836889000,5,736522140,1698836890188
1698836888000,1698836889000,9,300212260,1698836890188
1698836888000,1698836889000,4,2129947735,1698836890188
1698836888000,1698836889000,10,327447101,1698836890188
1698836888000,1698836889000,1,37397892,1698836890188
[m
[36m[11:08:10.256097] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:10.256667] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:10.257548] [D] [thread 131475] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:10.257644] [I] [thread 131475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:10.257663] [I] [thread 131475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:10.257781] [I] [thread 131475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:10.257794] [I] [thread 131475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:10.467198] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:10.467705] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:11.116034] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836891000-1698836892000[m
[36m[11:08:11.203006] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836889000-1698836890000 [m
[36m[11:08:11.204036] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836889000-1698836890000-290[m
[36m[11:08:11.204111] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836889000-1698836890000[m
[36m[11:08:11.204170] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836889000-1698836890000[m
[36m[11:08:11.204278] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:11.204309] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:11.208083] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836889000,1698836890000,7,26898530832,1698836891204
1698836889000,1698836890000,11,318270870,1698836891204
1698836889000,1698836890000,8,16372482117,1698836891204
1698836889000,1698836890000,6,5845804375,1698836891204
1698836889000,1698836890000,9,300214404,1698836891204
1698836889000,1698836890000,5,736524485,1698836891204
1698836889000,1698836890000,4,2129950093,1698836891204
1698836889000,1698836890000,10,327449174,1698836891204
1698836889000,1698836890000,1,37402246,1698836891204
[m
[36m[11:08:11.468892] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:12.125217] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836892000-1698836893000[m
[36m[11:08:12.219541] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836890000-1698836891000 [m
[36m[11:08:12.220251] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836890000-1698836891000-291[m
[36m[11:08:12.220326] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836890000-1698836891000[m
[36m[11:08:12.220370] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836890000-1698836891000[m
[36m[11:08:12.220446] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:12.220465] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:12.222965] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836890000,1698836891000,9,300217163,1698836892220
1698836890000,1698836891000,8,16372484714,1698836892220
1698836890000,1698836891000,4,2129952543,1698836892220
1698836890000,1698836891000,6,5845806876,1698836892220
1698836890000,1698836891000,5,736526949,1698836892220
1698836890000,1698836891000,10,327451847,1698836892220
1698836890000,1698836891000,7,26898533458,1698836892220
1698836890000,1698836891000,11,318273636,1698836892220
1698836890000,1698836891000,1,37406298,1698836892220
[m
[36m[11:08:12.470321] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:12.522171] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:12.522558] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:12.523618] [D] [thread 131480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:12.523719] [I] [thread 131480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:12.523738] [I] [thread 131480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:12.523854] [I] [thread 131480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:12.523879] [I] [thread 131480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:12.695094] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:12.695631] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:13.122977] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836893000-1698836894000[m
[36m[11:08:13.232660] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836891000-1698836892000 [m
[36m[11:08:13.233705] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836891000-1698836892000-292[m
[36m[11:08:13.233823] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836891000-1698836892000[m
[36m[11:08:13.233894] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836891000-1698836892000[m
[36m[11:08:13.234019] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:13.234056] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:13.237536] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836891000,1698836892000,8,16372486966,1698836893234
1698836891000,1698836892000,4,2129954781,1698836893234
1698836891000,1698836892000,5,736529242,1698836893234
1698836891000,1698836892000,6,5845809060,1698836893234
1698836891000,1698836892000,10,327453953,1698836893234
1698836891000,1698836892000,9,300219412,1698836893234
1698836891000,1698836892000,7,26898535657,1698836893234
1698836891000,1698836892000,11,318275870,1698836893234
1698836891000,1698836892000,1,37411920,1698836893234
[m
[36m[11:08:13.696893] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:14.121494] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836894000-1698836895000[m
[36m[11:08:14.250814] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836892000-1698836893000 [m
[36m[11:08:14.251640] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836892000-1698836893000-293[m
[36m[11:08:14.251742] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836892000-1698836893000[m
[36m[11:08:14.251809] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836892000-1698836893000[m
[36m[11:08:14.251923] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:14.251957] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:14.255366] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836892000,1698836893000,4,2129957427,1698836894251
1698836892000,1698836893000,10,327456547,1698836894251
1698836892000,1698836893000,5,736531840,1698836894251
1698836892000,1698836893000,6,5845811687,1698836894251
1698836892000,1698836893000,9,300221895,1698836894251
1698836892000,1698836893000,7,26898538300,1698836894251
1698836892000,1698836893000,8,16372489694,1698836894251
1698836892000,1698836893000,11,318278347,1698836894251
1698836892000,1698836893000,1,37415301,1698836894251
[m
[36m[11:08:14.698138] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:14.714000] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:14.714701] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:14.715425] [D] [thread 131485] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:14.715554] [I] [thread 131485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:14.715573] [I] [thread 131485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:14.715690] [I] [thread 131485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:14.715703] [I] [thread 131485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:14.936325] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:14.936924] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:15.117422] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836895000-1698836896000[m
[36m[11:08:15.267573] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836893000-1698836894000 [m
[36m[11:08:15.268376] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836893000-1698836894000-294[m
[36m[11:08:15.268475] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836893000-1698836894000[m
[36m[11:08:15.268544] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836893000-1698836894000[m
[36m[11:08:15.268657] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:15.268689] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:15.272095] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836893000,1698836894000,9,300224193,1698836895268
1698836893000,1698836894000,5,736534009,1698836895268
1698836893000,1698836894000,6,5845813842,1698836895268
1698836893000,1698836894000,11,318280653,1698836895268
1698836893000,1698836894000,8,16372491901,1698836895268
1698836893000,1698836894000,7,26898540446,1698836895268
1698836893000,1698836894000,10,327459057,1698836895268
1698836893000,1698836894000,4,2129959659,1698836895268
1698836893000,1698836894000,1,37419386,1698836895268
[m
[36m[11:08:15.938351] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:16.111384] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836896000-1698836897000[m
[36m[11:08:16.283796] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836894000-1698836895000 [m
[36m[11:08:16.284610] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836894000-1698836895000-295[m
[36m[11:08:16.284681] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836894000-1698836895000[m
[36m[11:08:16.284741] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836894000-1698836895000[m
[36m[11:08:16.284851] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:16.284882] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:16.288258] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836894000,1698836895000,5,736536626,1698836896284
1698836894000,1698836895000,6,5845816447,1698836896284
1698836894000,1698836895000,11,318282969,1698836896284
1698836894000,1698836895000,10,327461468,1698836896284
1698836894000,1698836895000,8,16372494444,1698836896284
1698836894000,1698836895000,7,26898543004,1698836896284
1698836894000,1698836895000,4,2129962469,1698836896284
1698836894000,1698836895000,9,300226732,1698836896284
1698836894000,1698836895000,1,37423453,1698836896284
[m
[36m[11:08:16.939653] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:17.002769] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:17.003406] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:17.004244] [D] [thread 131491] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:17.004354] [I] [thread 131491] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:17.004376] [I] [thread 131491] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:17.004504] [I] [thread 131491] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:17.004536] [I] [thread 131491] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:17.140867] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836897000-1698836898000[m
[36m[11:08:17.171859] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:17.172253] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:17.299437] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836895000-1698836896000 [m
[36m[11:08:17.300315] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836895000-1698836896000-296[m
[36m[11:08:17.300427] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836895000-1698836896000[m
[36m[11:08:17.300507] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836895000-1698836896000[m
[36m[11:08:17.300638] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:17.300671] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:17.304702] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836895000,1698836896000,5,736538986,1698836897300
1698836895000,1698836896000,6,5845818726,1698836897300
1698836895000,1698836896000,10,327463828,1698836897300
1698836895000,1698836896000,11,318285358,1698836897300
1698836895000,1698836896000,4,2129964655,1698836897300
1698836895000,1698836896000,8,16372496772,1698836897300
1698836895000,1698836896000,9,300229063,1698836897300
1698836895000,1698836896000,7,26898545281,1698836897300
1698836895000,1698836896000,1,37429243,1698836897300
[m
[36m[11:08:18.127037] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836898000-1698836899000[m
[36m[11:08:18.173499] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:18.315641] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836896000-1698836897000 [m
[36m[11:08:18.316908] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836896000-1698836897000-297[m
[36m[11:08:18.317041] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836896000-1698836897000[m
[36m[11:08:18.317117] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836896000-1698836897000[m
[36m[11:08:18.317242] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:18.317278] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:18.320646] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836896000,1698836897000,6,5845821277,1698836898317
1698836896000,1698836897000,11,318287681,1698836898317
1698836896000,1698836897000,10,327466194,1698836898317
1698836896000,1698836897000,9,300231314,1698836898317
1698836896000,1698836897000,4,2129967122,1698836898317
1698836896000,1698836897000,8,16372499059,1698836898317
1698836896000,1698836897000,7,26898547625,1698836898317
1698836896000,1698836897000,5,736541603,1698836898317
1698836896000,1698836897000,1,37433140,1698836898317
[m
[36m[11:08:19.145378] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836899000-1698836900000[m
[36m[11:08:19.174754] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:19.187715] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:19.188079] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:19.189907] [D] [thread 131496] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:19.190031] [I] [thread 131496] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:19.190050] [I] [thread 131496] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:19.190174] [I] [thread 131496] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:19.190258] [I] [thread 131496] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:19.330165] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836897000-1698836898000 [m
[36m[11:08:19.331074] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836897000-1698836898000-298[m
[36m[11:08:19.331169] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836897000-1698836898000[m
[36m[11:08:19.331226] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836897000-1698836898000[m
[36m[11:08:19.331330] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:19.331359] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:19.334661] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836897000,1698836898000,4,2129969465,1698836899331
1698836897000,1698836898000,9,300233842,1698836899331
1698836897000,1698836898000,8,16372501543,1698836899331
1698836897000,1698836898000,7,26898550092,1698836899331
1698836897000,1698836898000,5,736543915,1698836899331
1698836897000,1698836898000,6,5845823769,1698836899331
1698836897000,1698836898000,11,318290390,1698836899331
1698836897000,1698836898000,10,327468769,1698836899331
1698836897000,1698836898000,1,37438963,1698836899331
[m
[36m[11:08:19.376958] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:19.377274] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:20.127786] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836900000-1698836901000[m
[36m[11:08:20.344478] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836898000-1698836899000 [m
[36m[11:08:20.345077] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836898000-1698836899000-299[m
[36m[11:08:20.345151] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836898000-1698836899000[m
[36m[11:08:20.345193] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836898000-1698836899000[m
[36m[11:08:20.345274] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:20.345296] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:20.347482] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836898000,1698836899000,9,300236097,1698836900345
1698836898000,1698836899000,4,2129971993,1698836900345
1698836898000,1698836899000,8,16372503796,1698836900345
1698836898000,1698836899000,7,26898552395,1698836900345
1698836898000,1698836899000,5,736546377,1698836900345
1698836898000,1698836899000,10,327470971,1698836900345
1698836898000,1698836899000,6,5845826157,1698836900345
1698836898000,1698836899000,11,318292627,1698836900345
1698836898000,1698836899000,1,37442891,1698836900345
[m
[36m[11:08:20.378438] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:21.119614] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836901000-1698836902000[m
[36m[11:08:21.357767] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836899000-1698836900000 [m
[36m[11:08:21.358821] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836899000-1698836900000-300[m
[36m[11:08:21.358920] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836899000-1698836900000[m
[36m[11:08:21.358996] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836899000-1698836900000[m
[36m[11:08:21.359270] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:21.359314] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:21.362735] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836899000,1698836900000,8,16372506371,1698836901359
1698836899000,1698836900000,7,26898554914,1698836901359
1698836899000,1698836900000,5,736548839,1698836901359
1698836899000,1698836900000,10,327473601,1698836901359
1698836899000,1698836900000,11,318295204,1698836901359
1698836899000,1698836900000,6,5845828659,1698836901359
1698836899000,1698836900000,9,300238787,1698836901359
1698836899000,1698836900000,4,2129974508,1698836901359
1698836899000,1698836900000,1,37447495,1698836901359
[m
[36m[11:08:21.379679] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:21.384225] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:21.384574] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:21.385750] [D] [thread 131502] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:08:21.385847] [I] [thread 131502] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:21.385864] [I] [thread 131502] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:08:21.385982] [I] [thread 131502] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:08:21.385995] [I] [thread 131502] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:08:21.616870] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:21.617460] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:22.111149] [D] [thread 130785] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 1698836902000-1698836903000[m
[36m[11:08:22.372508] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 1000 Deploy merge task for slice 1698836900000-1698836901000 [m
[36m[11:08:22.373239] [D] [thread 130785] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 1698836900000-1698836901000-301[m
[36m[11:08:22.373335] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836900000-1698836901000[m
[36m[11:08:22.373396] [D] [thread 130785] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 1698836900000-1698836901000[m
[36m[11:08:22.373498] [D] [thread 130785] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:08:22.373527] [D] [thread 130785] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:08:22.376550] [D] [thread 130785] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownWithMonitoringSourceThreeLevel.out following content 1698836900000,1698836901000,8,16372508552,1698836902373
1698836900000,1698836901000,7,26898557110,1698836902373
1698836900000,1698836901000,10,327475703,1698836902373
1698836900000,1698836901000,6,5845830874,1698836902373
1698836900000,1698836901000,5,736551067,1698836902373
1698836900000,1698836901000,9,300240873,1698836902373
1698836900000,1698836901000,11,318297312,1698836902373
1698836900000,1698836901000,4,2129976757,1698836902373
1698836900000,1698836901000,1,37450602,1698836902373
[m
[36m[11:08:22.618731] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:22.649827] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:08:22.650517] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:08:22.651252] [I] [thread 131506] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[11:08:22.651342] [D] [thread 131506] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[11:08:22.651479] [I] [thread 131506] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[11:08:22.651496] [I] [thread 131506] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:08:22.651581] [I] [thread 130775] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:08:22.651631] [I] [thread 130775] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:08:22.651652] [I] [thread 130775] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:08:22.651780] [I] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[11:08:22.651846] [D] [thread 130775] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[11:08:22.651977] [D] [thread 130775] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[11:08:22.652354] [D] [thread 130775] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[11:08:22.653184] [D] [thread 130775] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:08:22.653249] [D] [thread 130775] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:08:22.653306] [D] [thread 130775] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:08:22.653433] [D] [thread 130775] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:08:22.653455] [D] [thread 130775] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[11:08:22.653491] [D] [thread 130775] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[11:08:22.653518] [D] [thread 130775] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:08:22.653557] [D] [thread 130775] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[11:08:22.653570] [D] [thread 130775] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[11:08:22.653702] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:43561[m
[36m[11:08:22.653736] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:43561 queryId=1[m
[36m[11:08:22.660249] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.32:40925[m
[36m[11:08:22.660322] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:40925 queryId=1[m
[36m[11:08:22.664980] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.33:46215[m
[36m[11:08:22.665068] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:46215 queryId=1[m
[36m[11:08:22.669749] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.34:41467[m
[36m[11:08:22.669883] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:41467 queryId=1[m
[36m[11:08:22.674286] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.35:46859[m
[36m[11:08:22.674368] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:46859 queryId=1[m
[36m[11:08:22.678705] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.36:36103[m
[36m[11:08:22.678783] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.36:36103 queryId=1[m
[36m[11:08:22.683471] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:34913[m
[36m[11:08:22.683562] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:34913 queryId=1[m
[36m[11:08:22.688134] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:43573[m
[36m[11:08:22.688220] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:43573 queryId=1[m
[36m[11:08:22.692650] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=11 and IP=192.168.2.39:34743[m
[36m[11:08:22.692741] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.39:34743 queryId=1[m
[36m[11:08:22.696566] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.30:44461[m
[36m[11:08:22.696655] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:44461 queryId=1[m
[36m[11:08:22.701051] [D] [thread 130775] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.31:41517[m
[36m[11:08:22.701174] [D] [thread 130775] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:41517 queryId=1[m
[36m[11:08:22.705778] [D] [thread 130775] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 11 queues[m
[36m[11:08:22.809584] [D] [thread 130784] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): EndOfStream received for channel [m
[36m[11:08:22.809711] [D] [thread 130784] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=0)[m
[32m[11:08:22.809806] [I] [thread 130784] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(1)[m
[36m[11:08:22.809834] [D] [thread 130784] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::45::0::0, counter is at 1.[m
[36m[11:08:22.809906] [D] [thread 130784] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:08:22.809934] [W] [thread 130784] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:22.820828] [D] [thread 130787] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[11:08:22.820960] [D] [thread 130787] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[11:08:22.821066] [D] [thread 130787] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  1  type= HardStop[m
[36m[11:08:22.821124] [D] [thread 130787] [DataSource.cpp:218] [stop] DataSource 90: Stop called and source is running[m
[36m[11:08:22.821146] [D] [thread 130787] [DataSource.cpp:237] [stop] DataSource 90 was running, retrieving future now...[m
[36m[11:08:22.972797] [D] [thread 130784] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): EndOfStream received for channel [m
[36m[11:08:22.972976] [D] [thread 130784] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=0)[m
[32m[11:08:22.973102] [I] [thread 130784] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(1)[m
[36m[11:08:22.973156] [D] [thread 130784] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::27::0::0, counter is at 1.[m
[36m[11:08:22.973238] [D] [thread 130784] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:08:22.973283] [W] [thread 130784] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:22.976415] [D] [thread 130784] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): EndOfStream received for channel [m
[36m[11:08:22.976578] [D] [thread 130784] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[11:08:22.976699] [I] [thread 130784] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[11:08:22.976757] [D] [thread 130784] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[11:08:22.976855] [D] [thread 130784] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:08:22.976906] [W] [thread 130784] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:22.979744] [D] [thread 130784] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): EndOfStream received for channel [m
[36m[11:08:22.979856] [D] [thread 130784] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=0)[m
[32m[11:08:22.979940] [I] [thread 130784] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(1)[m
[36m[11:08:22.979979] [D] [thread 130784] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::39::0::0, counter is at 1.[m
[36m[11:08:22.980040] [D] [thread 130784] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:08:22.980073] [W] [thread 130784] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.290799] [D] [thread 130784] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): EndOfStream received for channel [m
[36m[11:08:23.290979] [D] [thread 130784] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[32m[11:08:23.291104] [I] [thread 130784] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[11:08:23.291156] [D] [thread 130784] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[11:08:23.291241] [D] [thread 130784] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:08:23.291287] [W] [thread 130784] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.294330] [D] [thread 130784] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): EndOfStream received for channel [m
[36m[11:08:23.294482] [D] [thread 130784] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=0)[m
[32m[11:08:23.294590] [I] [thread 130784] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(1)[m
[36m[11:08:23.294642] [D] [thread 130784] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::57::0::0, counter is at 1.[m
[36m[11:08:23.294721] [D] [thread 130784] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:08:23.294765] [W] [thread 130784] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.297944] [D] [thread 130784] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): EndOfStream received for channel [m
[36m[11:08:23.298084] [D] [thread 130784] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=0)[m
[32m[11:08:23.298237] [I] [thread 130784] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(1)[m
[36m[11:08:23.298301] [D] [thread 130784] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::63::0::0, counter is at 1.[m
[36m[11:08:23.298385] [D] [thread 130784] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:08:23.298430] [W] [thread 130784] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.301383] [D] [thread 130784] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43017): EndOfStream received for channel [m
[36m[11:08:23.301520] [D] [thread 130784] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::69::0::0(threadId=0)[m
[32m[11:08:23.301620] [I] [thread 130784] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::69::0::0; newCnt(1)[m
[36m[11:08:23.301673] [D] [thread 130784] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::69::0::0, counter is at 1.[m
[36m[11:08:23.301752] [D] [thread 130784] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:08:23.301795] [W] [thread 130784] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.386353] [D] [thread 130854] [DataSource.cpp:471] [runningRoutineWithGatheringInterval] DataSource 90 call close[m
[36m[11:08:23.386463] [D] [thread 130854] [DataSource.cpp:281] [close] DataSource 90 : Data Source add end of stream. Gracefully=HardStop[m
[36m[11:08:23.386526] [D] [thread 130854] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 90 terminationType=HardStop[m
[36m[11:08:23.386727] [D] [thread 130854] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.386901] [D] [thread 130854] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.387326] [D] [thread 130854] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=90 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.387420] [D] [thread 130854] [FixedSizeBufferPool.cpp:53] [destroy] Destroying LocalBufferPool[m
[36m[11:08:23.387564] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 4 belonging to query id: 1 stage id: 4[m
[36m[11:08:23.387875] [D] [thread 130854] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 90 is notifying completion: HardStop[m
[36m[11:08:23.388001] [D] [thread 130854] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 90 is terminated; tokens left = 13[m
[36m[11:08:23.387929] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 4[m
[36m[11:08:23.388055] [D] [thread 130854] [DataSource.cpp:474] [runningRoutineWithGatheringInterval] DataSource 90 end running[m
[36m[11:08:23.388120] [D] [thread 130785] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:1 stage id:4 reached prev=1[m
[36m[11:08:23.388169] [D] [thread 130854] [DataSource.cpp:313] [runningRoutine] DataSource 90 end runningRoutine[m
[36m[11:08:23.388200] [D] [thread 130854] [DataSource.cpp:162] [operator()] DataSource 90: runningRoutine is finished[m
[36m[11:08:23.388915] [D] [thread 130785] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 1 Pipeline 4 is terminated; tokens left = 12[m
[36m[11:08:23.389174] [D] [thread 130785] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.389518] [D] [thread 130785] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[33m[1m[11:08:23.389616] [W] [thread 130787] [DataSource.cpp:242] [stop] Stopped Source 90 = HardStop[m
[36m[11:08:23.389686] [D] [thread 130787] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.389753] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.389943] [D] [thread 130785] [ExecutablePipeline.cpp:286] [postReconfigurationCallback] Going to reconfigure next pipeline belonging to subplanId: 1 stage id: 3 got EndOfStream  with nextPipeline[m
[36m[11:08:23.390024] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.390422] [D] [thread 130787] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 27 is notifying completion: HardStop[m
[36m[11:08:23.390493] [D] [thread 130787] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 27 is terminated; tokens left = 11[m
[36m[11:08:23.390539] [D] [thread 130787] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 27 terminationType=HardStop[m
[36m[11:08:23.390639] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.390710] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.390785] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.390859] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.391005] [D] [thread 130785] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 9 and now is 8[m
[36m[11:08:23.391007] [D] [thread 130787] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=27 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.391245] [D] [thread 130787] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:08:23.391298] [D] [thread 130787] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.391361] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.391518] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.391817] [D] [thread 130787] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 33 is notifying completion: HardStop[m
[36m[11:08:23.391877] [D] [thread 130787] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 33 is terminated; tokens left = 10[m
[36m[11:08:23.391906] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:08:23.391922] [D] [thread 130787] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[11:08:23.392047] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.392229] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.392312] [D] [thread 130785] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 0[m
[36m[11:08:23.392470] [D] [thread 130787] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.392476] [D] [thread 130785] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[11:08:23.392621] [D] [thread 130785] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::27::0::0[m
[36m[11:08:23.392757] [D] [thread 130785] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::27::0::0[m
[32m[11:08:23.393019] [I] [thread 130785] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(0)[m
[36m[11:08:23.394005] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.394409] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.394467] [D] [thread 130785] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 8 and now is 7[m
[36m[11:08:23.392566] [D] [thread 130787] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:08:23.395152] [D] [thread 130787] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.395257] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.395374] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:08:23.395445] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.395466] [D] [thread 130785] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[11:08:23.395517] [D] [thread 130785] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[11:08:23.395555] [D] [thread 130785] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[11:08:23.395593] [D] [thread 130785] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[11:08:23.395675] [I] [thread 130785] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[11:08:23.395793] [D] [thread 130787] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 39 is notifying completion: HardStop[m
[36m[11:08:23.395850] [D] [thread 130787] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 39 is terminated; tokens left = 9[m
[36m[11:08:23.395895] [D] [thread 130787] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 39 terminationType=HardStop[m
[36m[11:08:23.395993] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.396147] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.396369] [D] [thread 130787] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=39 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.396426] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.396452] [D] [thread 130787] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:08:23.396682] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.396733] [D] [thread 130787] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.396803] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.396801] [D] [thread 130785] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 7 and now is 6[m
[36m[11:08:23.396965] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.397254] [D] [thread 130787] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 45 is notifying completion: HardStop[m
[36m[11:08:23.397314] [D] [thread 130787] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 45 is terminated; tokens left = 8[m
[36m[11:08:23.397356] [D] [thread 130787] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 45 terminationType=HardStop[m
[36m[11:08:23.397446] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.397510] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:08:23.397585] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.397677] [D] [thread 130785] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 0[m
[36m[11:08:23.397805] [D] [thread 130787] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=45 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.397819] [D] [thread 130785] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[11:08:23.397879] [D] [thread 130787] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:08:23.397924] [D] [thread 130787] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.397870] [D] [thread 130785] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::39::0::0[m
[36m[11:08:23.397975] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.397994] [D] [thread 130785] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::39::0::0[m
[36m[11:08:23.398090] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[32m[11:08:23.398126] [I] [thread 130785] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(0)[m
[36m[11:08:23.398356] [D] [thread 130787] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 51 is notifying completion: HardStop[m
[36m[11:08:23.398393] [D] [thread 130787] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 51 is terminated; tokens left = 7[m
[36m[11:08:23.398416] [D] [thread 130787] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[11:08:23.398478] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.398570] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.398632] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.398711] [D] [thread 130787] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.398717] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.398753] [D] [thread 130787] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:08:23.398783] [D] [thread 130787] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.398753] [D] [thread 130785] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 6 and now is 5[m
[36m[11:08:23.398812] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.398886] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.399014] [D] [thread 130787] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 57 is notifying completion: HardStop[m
[36m[11:08:23.399045] [D] [thread 130787] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 57 is terminated; tokens left = 6[m
[36m[11:08:23.399067] [D] [thread 130787] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 57 terminationType=HardStop[m
[36m[11:08:23.399115] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.399204] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:08:23.399207] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.399396] [D] [thread 130785] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 0[m
[36m[11:08:23.399448] [D] [thread 130787] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=57 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.399434] [D] [thread 130785] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[11:08:23.399495] [D] [thread 130787] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:08:23.399517] [D] [thread 130785] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::45::0::0[m
[36m[11:08:23.399519] [D] [thread 130787] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.399601] [D] [thread 130785] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::45::0::0[m
[36m[11:08:23.399603] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[32m[11:08:23.399711] [I] [thread 130785] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(0)[m
[36m[11:08:23.399734] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.399922] [D] [thread 130787] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 63 is notifying completion: HardStop[m
[36m[11:08:23.399963] [D] [thread 130787] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 63 is terminated; tokens left = 5[m
[36m[11:08:23.399990] [D] [thread 130787] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 63 terminationType=HardStop[m
[36m[11:08:23.400052] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.400139] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.400209] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.400288] [D] [thread 130787] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=63 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.400294] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.400334] [D] [thread 130787] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:08:23.400319] [D] [thread 130785] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 5 and now is 4[m
[36m[11:08:23.400358] [D] [thread 130787] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0[m
[36m[11:08:23.400388] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.400473] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:08:23.400634] [D] [thread 130787] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 1 Source 69 is notifying completion: HardStop[m
[36m[11:08:23.400667] [D] [thread 130787] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 1 Source 69 is terminated; tokens left = 4[m
[36m[11:08:23.400701] [D] [thread 130787] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 69 terminationType=HardStop[m
[36m[11:08:23.400761] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.400778] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:08:23.400850] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.400906] [D] [thread 130785] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[11:08:23.400980] [D] [thread 130785] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[11:08:23.401003] [D] [thread 130787] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=69 reconfType=HardEndOfStream queryId=1 querySubPlanId=1 threadPool->getNumberOfThreads()=1[m
[36m[11:08:23.401029] [D] [thread 130785] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[11:08:23.401043] [D] [thread 130787] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:69 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:08:23.401153] [D] [thread 130785] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[11:08:23.401292] [I] [thread 130785] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[11:08:23.401814] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.401912] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.401967] [D] [thread 130785] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 4 and now is 3[m
[36m[11:08:23.402437] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[11:08:23.402556] [D] [thread 130785] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 0[m
[36m[11:08:23.402597] [D] [thread 130785] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[11:08:23.402653] [D] [thread 130785] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::57::0::0[m
[36m[11:08:23.402707] [D] [thread 130785] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::57::0::0[m
[32m[11:08:23.402813] [I] [thread 130785] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(0)[m
[36m[11:08:23.403224] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.403419] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.403443] [D] [thread 130785] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 3 and now is 2[m
[36m[11:08:23.403774] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[11:08:23.403867] [D] [thread 130785] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 0[m
[36m[11:08:23.403893] [D] [thread 130785] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[11:08:23.403910] [D] [thread 130785] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::63::0::0[m
[36m[11:08:23.403929] [D] [thread 130785] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::63::0::0[m
[32m[11:08:23.403994] [I] [thread 130785] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(0)[m
[36m[11:08:23.404293] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.404407] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.404430] [D] [thread 130785] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 1 stage id: 3 but refCount was 2 and now is 1[m
[36m[11:08:23.404727] [D] [thread 130785] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::69::0::0[m
[36m[11:08:23.404817] [D] [thread 130785] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::69::0::0 Thread 0[m
[36m[11:08:23.404843] [D] [thread 130785] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::69::0::0[m
[36m[11:08:23.404860] [D] [thread 130785] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::69::0::0[m
[36m[11:08:23.404877] [D] [thread 130785] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::69::0::0[m
[32m[11:08:23.404931] [I] [thread 130785] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::69::0::0; newCnt(0)[m
[36m[11:08:23.405247] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 1 stage id: 3[m
[36m[11:08:23.405386] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 3[m
[36m[11:08:23.405426] [D] [thread 130785] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:1 stage id:3 reached prev=1[m
[36m[11:08:23.405475] [D] [thread 130785] [AbstractSlicePreAggregationHandler.cpp:116] [stop] shutdown AbstractSlicePreAggregationHandler: HardStop[m
[36m[11:08:23.405586] [D] [thread 130785] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 1 Pipeline 3 is terminated; tokens left = 3[m
[36m[11:08:23.405648] [D] [thread 130785] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.405899] [D] [thread 130785] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.406151] [D] [thread 130785] [ExecutablePipeline.cpp:286] [postReconfigurationCallback] Going to reconfigure next pipeline belonging to subplanId: 1 stage id: 2 got EndOfStream  with nextPipeline[m
[36m[11:08:23.406518] [D] [thread 130785] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 1 stage id: 2[m
[36m[11:08:23.406613] [D] [thread 130785] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 1 stage id: 2[m
[36m[11:08:23.406629] [D] [thread 130785] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:1 stage id:2 reached prev=1[m
[36m[11:08:23.406651] [D] [thread 130785] [KeyedSliceMergingHandler.cpp:38] [stop] stop GlobalSliceMergingHandler: HardStop[m
[36m[11:08:23.406731] [D] [thread 130785] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 1 Pipeline 2 is terminated; tokens left = 2[m
[36m[11:08:23.406788] [D] [thread 130785] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.407010] [D] [thread 130785] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.407373] [D] [thread 130785] [ExecutablePipeline.cpp:293] [postReconfigurationCallback] Going to reconfigure next sink belonging to subplanId: 1 sink id: FileSink() got EndOfStream  with nextPipeline[m
[36m[11:08:23.407633] [D] [thread 130785] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:08:23.407813] [D] [thread 130785] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 1 Sink FileSink() is terminated; tokens left = 1[m
[36m[11:08:23.407884] [D] [thread 130785] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.408107] [D] [thread 130785] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=false type HardEndOfStream[m
[36m[11:08:23.408384] [D] [thread 130785] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
2023-11-01 11:08:23.408 postReconfigurationCallback: queryId=1, querySubPlanId=1; queryId=1 subPlanId=1 processedTasks=22654 processedTuple=68251 processedBuffers=22654 processedWatermarks=0 latencyAVG=1676564547498 queueSizeAVG=0 availableGlobalBufferAVG=830 availableFixedBufferAVG=62
[36m[11:08:23.408864] [D] [thread 130785] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=1[m
[36m[11:08:23.408910] [D] [thread 130785] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=1[m
[36m[11:08:23.408926] [D] [thread 130785] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-1 is marked as stopped now[m
[36m[11:08:23.409142] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Destroy[m
[36m[11:08:23.409315] [D] [thread 130787] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 1 blocking=true type Destroy[m
[36m[11:08:23.409754] [D] [thread 130787] [DataSource.cpp:124] [~DataSource] DataSource 90: Destroy Data Source.[m
[36m[11:08:23.410066] [D] [thread 130787] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  1[m
[36m[11:08:23.410256] [D] [thread 130787] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 1 was successful[m
[36m[11:08:23.410295] [D] [thread 130787] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  1  succeeded[m
[36m[11:08:23.410316] [D] [thread 130787] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[1m[41m[11:08:23.424486] [C] [thread 130775] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[11:08:23.424572] [I] [thread 130775] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[11:08:23.424639] [I] [thread 130775] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[11:08:23.424706] [W] [thread 130775] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[11:08:23.424718] [I] [thread 130775] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[11:08:23.424727] [W] [thread 130775] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[11:08:23.651837] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:08:23.817829] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:23.818813] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:44461 went dead so we remove it[m
[32m[11:08:23.818964] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[11:08:23.818989] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:23.819018] [I] [thread 130792] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:08:23.819026] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:08:23.819037] [I] [thread 130792] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:08:23.819047] [I] [thread 130792] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:08:23.819056] [I] [thread 130792] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:08:23.819065] [I] [thread 130792] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:08:23.819108] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:08:23.824038] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:23.824943] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:41517 went dead so we remove it[m
[32m[11:08:23.825087] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[11:08:23.825111] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:23.825132] [I] [thread 130792] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:08:23.825141] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:08:23.825157] [I] [thread 130792] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:08:23.825206] [I] [thread 130792] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:08:23.825219] [I] [thread 130792] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:08:23.825228] [I] [thread 130792] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:08:23.825250] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[11:08:24.653127] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:08:24.981810] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:24.982753] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:44461 went dead so we remove it[m
[32m[11:08:24.982894] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:08:24.982924] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[11:08:24.987772] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:24.988673] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:41517 went dead so we remove it[m
[32m[11:08:24.988814] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:08:24.988843] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[11:08:24.993715] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:24.994759] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:40925 went dead so we remove it[m
[32m[11:08:24.994901] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[32m[11:08:24.994928] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:24.994940] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:08:24.994964] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:08:24.999976] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:25.000901] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:46215 went dead so we remove it[m
[32m[11:08:25.001050] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[32m[11:08:25.001076] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:25.001088] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:08:25.001111] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:08:25.006109] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:25.007077] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:41467 went dead so we remove it[m
[32m[11:08:25.007225] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[32m[11:08:25.007250] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:25.007262] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:08:25.007287] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:08:25.012293] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:25.013224] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:46859 went dead so we remove it[m
[32m[11:08:25.013372] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=2][m
[32m[11:08:25.013399] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:25.013410] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:08:25.013435] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:08:25.018471] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:25.019395] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.36:36103 went dead so we remove it[m
[32m[11:08:25.019545] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=2][m
[32m[11:08:25.019570] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:25.019581] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:08:25.019607] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[11:08:25.654411] [D] [thread 130791] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:08:26.108539] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.109461] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:44461 went dead so we remove it[m
[32m[11:08:26.109602] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:08:26.109631] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[11:08:26.114671] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.115604] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:41517 went dead so we remove it[m
[32m[11:08:26.115750] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:08:26.115779] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[11:08:26.120774] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.121707] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:40925 went dead so we remove it[m
[32m[11:08:26.121854] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[33m[1m[11:08:26.121885] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[11:08:26.126916] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.127857] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:46215 went dead so we remove it[m
[32m[11:08:26.128003] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[33m[1m[11:08:26.128033] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 5 doesn't exists in the system.[m
[31m[1m[11:08:26.133141] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.134069] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:41467 went dead so we remove it[m
[32m[11:08:26.134263] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[33m[1m[11:08:26.134296] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 6 doesn't exists in the system.[m
[31m[1m[11:08:26.139228] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.140155] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:46859 went dead so we remove it[m
[32m[11:08:26.140301] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=2][m
[33m[1m[11:08:26.140332] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 7 doesn't exists in the system.[m
[31m[1m[11:08:26.145359] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.146328] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.36:36103 went dead so we remove it[m
[32m[11:08:26.146469] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=2][m
[33m[1m[11:08:26.146500] [W] [thread 130792] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 8 doesn't exists in the system.[m
[31m[1m[11:08:26.151601] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.152525] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.37:34913 went dead so we remove it[m
[32m[11:08:26.152671] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=2][m
[32m[11:08:26.152696] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:26.152708] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:08:26.152731] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:08:26.157734] [E] [thread 130792] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:08:26.158709] [W] [thread 130792] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.38:43573 went dead so we remove it[m
[32m[11:08:26.158852] [I] [thread 130792] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=2][m
[32m[11:08:26.158877] [I] [thread 130792] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:08:26.158889] [I] [thread 130792] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:08:26.158912] [D] [thread 130792] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
