
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[10:09:05.767301] [I] [thread 126814] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 1
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[10:09:05.767497] [I] [thread 126814] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[10:09:05.767747] [D] [thread 126814] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[10:09:05.768791] [D] [thread 126814] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[10:09:05.769148] [I] [thread 126814] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[10:09:05.769904] [D] [thread 126814] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[10:09:05.769977] [D] [thread 126814] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[10:09:05.770686] [D] [thread 126814] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[10:09:05.770797] [D] [thread 126814] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[10:09:05.770911] [D] [thread 126814] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[10:09:05.771267] [D] [thread 126814] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[10:09:05.771427] [D] [thread 126814] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[10:09:05.823775] [D] [thread 126814] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[10:09:05.823864] [D] [thread 126814] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:09:05.824339] [D] [thread 126814] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:09:05.824737] [D] [thread 126814] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:09:05.825065] [D] [thread 126814] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:09:05.825363] [D] [thread 126814] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:09:05.825548] [D] [thread 126814] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:09:05.825940] [D] [thread 126814] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[10:09:05.827173] [D] [thread 126814] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[10:09:05.827242] [D] [thread 126814] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[10:09:05.827527] [D] [thread 126814] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[10:09:05.827829] [D] [thread 126814] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[10:09:05.828129] [D] [thread 126814] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[10:09:05.829108] [D] [thread 126814] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[10:09:05.829621] [D] [thread 126814] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= true[m
[36m[10:09:05.829808] [D] [thread 126814] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[10:09:05.830053] [D] [thread 126814] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= true , storage= NewestEntry [m
[32m[10:09:05.830872] [I] [thread 126814] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedCpuMetrics[m
[32m[10:09:05.831390] [I] [thread 126814] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source DiskMetric[m
[32m[10:09:05.831877] [I] [thread 126814] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source MemoryMetric[m
[32m[10:09:05.832698] [I] [thread 126814] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedNetworkMetrics[m
[32m[10:09:05.832866] [I] [thread 126814] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[10:09:05.832951] [D] [thread 126814] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[10:09:05.833320] [D] [thread 126814] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[10:09:05.833337] [I] [thread 126822] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[10:09:05.833382] [D] [thread 126822] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:09:05.833835] [D] [thread 126823] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[10:09:05.840526] [D] [thread 126823] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[10:09:05.840551] [D] [thread 126814] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[10:09:05.840599] [D] [thread 126814] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[10:09:05.841029] [D] [thread 126814] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedCpuMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[36m[10:09:05.841091] [D] [thread 126814] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedCpuMetrics already exist.[m
[36m[10:09:05.841125] [D] [thread 126814] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedCpuMetrics[m
[36m[10:09:05.841292] [D] [thread 126814] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= DiskMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[36m[10:09:05.841315] [D] [thread 126814] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source DiskMetric already exist.[m
[36m[10:09:05.841342] [D] [thread 126814] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source DiskMetric[m
[36m[10:09:05.841513] [D] [thread 126814] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= MemoryMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[36m[10:09:05.841530] [D] [thread 126814] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source MemoryMetric already exist.[m
[36m[10:09:05.841546] [D] [thread 126814] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source MemoryMetric[m
[36m[10:09:05.841746] [D] [thread 126814] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedNetworkMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:09:05.841778] [D] [thread 126814] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedNetworkMetrics already exist.[m
[36m[10:09:05.841793] [D] [thread 126814] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedNetworkMetrics[m
[36m[10:09:05.841829] [D] [thread 126814] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[10:09:05.841838] [D] [thread 126814] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[10:09:05.842423] [D] [thread 126814] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[10:09:05.842584] [D] [thread 126814] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[10:09:05.842661] [D] [thread 126814] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[10:09:05.842691] [D] [thread 126814] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=true[m
[36m[10:09:05.842918] [D] [thread 126814] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[10:09:05.842988] [D] [thread 126814] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[10:09:05.843070] [I] [thread 126814] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:09:05.843580] [I] [thread 126814] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[10:09:05.843646] [I] [thread 126814] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:09:05.843870] [I] [thread 126814] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[10:09:05.843919] [I] [thread 126814] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:09:05.844362] [I] [thread 126814] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[10:09:05.844416] [I] [thread 126814] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:09:05.845088] [I] [thread 126814] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:09:05.845454] [D] [thread 126814] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[10:09:05.845706] [D] [thread 126814] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=true[m
[32m[10:09:05.845948] [I] [thread 126814] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config DiskMetric _ph with wait time 1000[m
[32m[10:09:05.846241] [I] [thread 126814] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config MemoryMetric _ph with wait time 1000[m
[32m[10:09:05.846339] [I] [thread 126814] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedCpuMetrics _ph with wait time 1000[m
[32m[10:09:05.846393] [I] [thread 126814] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedNetworkMetrics _ph with wait time 1000[m
[36m[10:09:05.858035] [D] [thread 126814] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975446528 available bytes[m
[36m[10:09:05.869463] [D] [thread 126814] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[10:09:05.919336] [D] [thread 126814] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[33m[1m[10:09:05.919738] [W] [thread 126814] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[10:09:05.919847] [D] [thread 126814] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:09:05.919955] [D] [thread 126814] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:09:05.920042] [D] [thread 126814] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:09:05.920095] [D] [thread 126814] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:09:05.920404] [D] [thread 126814] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[10:09:05.920512] [D] [thread 126814] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[10:09:05.920790] [D] [thread 126814] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[10:09:05.921007] [D] [thread 126814] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[10:09:05.921044] [W] [thread 126814] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[10:09:05.921105] [D] [thread 126814] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[10:09:05.923479] [D] [thread 126828] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[10:09:05.925186] [D] [thread 126828] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[10:09:05.925335] [D] [thread 126828] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 37323[m
[36m[10:09:05.926605] [D] [thread 126831] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 37323[m
[32m[10:09:05.926755] [I] [thread 126814] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:37323[m
[36m[10:09:05.926862] [D] [thread 126814] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1698942112  with numThreads= 1[m
[36m[10:09:05.927120] [D] [thread 126814] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[10:09:05.927614] [D] [thread 126814] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[10:09:05.927666] [D] [thread 126814] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[10:09:05.927731] [D] [thread 126832] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[10:09:05.927810] [D] [thread 126814] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[10:09:05.927841] [D] [thread 126814] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[10:09:05.927972] [D] [thread 126832] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[10:09:05.928444] [D] [thread 126833] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[10:09:05.928917] [D] [thread 126833] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[10:09:05.931954] [D] [thread 126833] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 41583[m
[36m[10:09:05.931993] [D] [thread 126814] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:41583: 41583[m
[36m[10:09:05.932018] [D] [thread 126814] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[10:09:05.932044] [D] [thread 126814] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[10:09:05.932145] [D] [thread 126814] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[10:09:05.934342] [D] [thread 126833] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[10:09:05.934712] [D] [thread 126814] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[32m[10:09:05.935690] [I] [thread 126814] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[36m[10:09:05.935753] [D] [thread 126814] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[10:09:05.939174] [D] [thread 126814] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 41583
dataPort: 37323
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1654507504
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:05.952213] [D] [thread 126824] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 41583
dataPort: 37323
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1654507504
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:05.952544] [D] [thread 126824] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 41583
dataPort: 37323
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975446528
  cpuCoreNum: 4
  totalCPUJiffies: 1654507504
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:05.952706] [D] [thread 126824] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[10:09:05.952738] [W] [thread 126824] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[10:09:05.952750] [D] [thread 126824] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:05.952828] [D] [thread 126824] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:05.952883] [D] [thread 126824] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[10:09:05.953247] [D] [thread 126824] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[10:09:05.953385] [I] [thread 126824] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[10:09:05.953522] [D] [thread 126824] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:05.953899] [D] [thread 126824] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:05.954018] [I] [thread 126824] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:05.954053] [D] [thread 126824] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:05.954110] [D] [thread 126824] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:05.954123] [D] [thread 126824] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:05.954159] [D] [thread 126824] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:05.955638] [D] [thread 126824] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[10:09:05.957533] [D] [thread 126814] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[10:09:05.957614] [D] [thread 126814] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[10:09:05.957712] [D] [thread 126814] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[10:09:05.957728] [D] [thread 126814] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[10:09:05.991199] [D] [thread 126814] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[10:09:05.991310] [D] [thread 126814] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[10:09:05.991324] [D] [thread 126814] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[10:09:05.991814] [D] [thread 126814] [NesWorker.cpp:377] [connect] NesWorker: start with register source[m
[36m[10:09:05.991868] [D] [thread 126814] [NesWorker.cpp:458] [waitForConnect] NesWorker::waitForConnect()[m
[36m[10:09:05.991888] [D] [thread 126814] [NesWorker.cpp:462] [waitForConnect] waitForConnect: check connect[m
[36m[10:09:05.991895] [D] [thread 126814] [NesWorker.cpp:467] [waitForConnect] waitForConnect: connected[m
[36m[10:09:05.991929] [D] [thread 126814] [CoordinatorRPCClient.cpp:168] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources: got 4 physical sources to register for worker with id 1[m
[36m[10:09:05.992194] [D] [thread 126814] [CoordinatorRPCClient.cpp:180] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources request=workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[36m[10:09:05.994510] [D] [thread 126824] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:05.994612] [I] [thread 126824] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:05.994637] [D] [thread 126824] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:05.994720] [D] [thread 126824] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:05.994941] [D] [thread 126824] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:05.995007] [D] [thread 126824] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:05.995197] [D] [thread 126824] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:05.995260] [D] [thread 126824] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:05.995331] [D] [thread 126824] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:09:05.995382] [D] [thread 126824] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:05.995529] [D] [thread 126824] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:05.995561] [D] [thread 126824] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:05.995617] [D] [thread 126824] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:05.995631] [D] [thread 126824] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:05.995655] [D] [thread 126824] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:09:05.995680] [D] [thread 126824] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:05.995751] [D] [thread 126824] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:05.995771] [D] [thread 126824] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:05.995798] [D] [thread 126824] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:05.995810] [D] [thread 126824] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:05.995828] [D] [thread 126824] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:09:05.995849] [D] [thread 126824] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:05.995907] [D] [thread 126824] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:05.995926] [D] [thread 126824] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:05.995950] [D] [thread 126824] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:05.995962] [D] [thread 126824] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:05.995994] [D] [thread 126824] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:09:05.996008] [D] [thread 126824] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:05.997303] [D] [thread 126814] [CoordinatorRPCClient.cpp:129] [onSuccess] CoordinatorRPCClient::: status ok return success=true[m
[36m[10:09:05.997424] [D] [thread 126814] [NesWorker.cpp:419] [registerPhysicalSources] NesWorker::registerPhysicalSources success=true[m
[36m[10:09:05.997439] [D] [thread 126814] [NesWorker.cpp:379] [connect] registered= true[m
[36m[10:09:05.997482] [D] [thread 126814] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[10:09:05.997604] [D] [thread 126814] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[10:09:05.998255] [D] [thread 126814] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[10:09:05.998336] [I] [thread 126837] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[10:09:06.014095] [I] [thread 126837] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[10:09:06.014453] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:06.030638] [D] [thread 126814] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[10:09:06.030736] [D] [thread 126814] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[10:09:06.030811] [D] [thread 126814] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[10:09:06.031259] [D] [thread 126814] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[10:09:07.015738] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:08.017133] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:08.807563] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:08.808880] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:08.810917] [D] [thread 126842] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[10:09:08.813673] [D] [thread 126842] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[10:09:08.813789] [D] [thread 126842] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[10:09:08.813910] [D] [thread 126842] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));;}
}
[m
[36m[10:09:08.816278] [D] [thread 126843] [File.cpp:27] [createFile] Create File to file:///tmp/query_01-11-2023_10-09-08_1656431.cpp[m
[36m[10:09:08.817555] [D] [thread 126843] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:09:08.818723] [D] [thread 126843] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_01-11-2023_10-09-08_1656431.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_01-11-2023_10-09-08_1656431.cpp'[m
[36m[10:09:09.810156] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:10.549202] [I] [thread 126843] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1733.108857ms[m
[36m[10:09:10.551125] [D] [thread 126842] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[10:09:10.551226] [D] [thread 126842] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[10:09:10.551261] [D] [thread 126842] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[10:09:10.551316] [D] [thread 126842] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[10:09:10.811462] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:10.895100] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:10.895650] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:10.896878] [I] [thread 126848] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:10.898455] [I] [thread 126848] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:11.171519] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:11.172045] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:11.172841] [I] [thread 126849] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:11.173419] [I] [thread 126849] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:11.335103] [D] [thread 126824] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 45807
dataPort: 43389
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:09:11.335369] [D] [thread 126824] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 45807
dataPort: 43389
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:09:11.335450] [D] [thread 126824] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:11.335652] [D] [thread 126824] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:11.335683] [D] [thread 126824] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:11.335739] [D] [thread 126824] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[10:09:11.335899] [D] [thread 126824] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:11.336001] [I] [thread 126824] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:11.336241] [I] [thread 126824] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:11.336457] [D] [thread 126824] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[10:09:11.336755] [D] [thread 126824] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:11.337049] [D] [thread 126824] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:11.337124] [I] [thread 126824] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:09:11.337160] [D] [thread 126824] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:09:11.337208] [D] [thread 126824] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:11.337232] [D] [thread 126824] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:11.337260] [D] [thread 126824] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:11.337905] [D] [thread 126824] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[10:09:12.173299] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:13.174605] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:14.175907] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:14.307188] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:14.307716] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:14.308606] [I] [thread 126850] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:14.309702] [I] [thread 126850] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:14.456533] [D] [thread 126824] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 37051
dataPort: 35759
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:09:14.456851] [D] [thread 126824] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 37051
dataPort: 35759
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:09:14.456983] [D] [thread 126824] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:14.457180] [D] [thread 126824] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:14.457216] [D] [thread 126824] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:14.457270] [D] [thread 126824] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[10:09:14.457387] [D] [thread 126824] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:14.457438] [I] [thread 126824] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:14.457523] [I] [thread 126824] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:14.457602] [D] [thread 126824] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[10:09:14.461687] [D] [thread 126824] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:14.462086] [D] [thread 126824] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:14.462167] [I] [thread 126824] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:09:14.462223] [D] [thread 126824] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:09:14.462263] [D] [thread 126824] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:14.462273] [D] [thread 126824] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:14.462290] [D] [thread 126824] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:14.462752] [D] [thread 126824] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[10:09:15.308988] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:16.310321] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:17.258289] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:17.258848] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:17.259961] [I] [thread 126851] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:17.261310] [I] [thread 126851] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:17.407481] [D] [thread 126824] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 33389
dataPort: 38921
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688477513
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:17.407808] [D] [thread 126824] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 33389
dataPort: 38921
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688477513
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:17.407893] [D] [thread 126824] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:17.408214] [D] [thread 126824] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:17.408245] [D] [thread 126824] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:17.408302] [D] [thread 126824] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[10:09:17.408461] [D] [thread 126824] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:17.408548] [I] [thread 126824] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:17.408688] [I] [thread 126824] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:17.408778] [D] [thread 126824] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[10:09:17.408881] [D] [thread 126824] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:17.409157] [D] [thread 126824] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:17.409221] [I] [thread 126824] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:09:17.409283] [D] [thread 126824] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:09:17.409330] [D] [thread 126824] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:17.409355] [D] [thread 126824] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:17.409382] [D] [thread 126824] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:17.409973] [D] [thread 126824] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[10:09:17.445012] [D] [thread 126835] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 4
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream3"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:17.445130] [I] [thread 126835] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:09:17.445173] [D] [thread 126835] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:09:17.445262] [D] [thread 126835] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= test_stream3 logical source= debs[m
[36m[10:09:17.445470] [D] [thread 126835] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:09:17.445522] [D] [thread 126835] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream3[m
[36m[10:09:17.445615] [D] [thread 126835] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream3 does not exist, try to add[m
[36m[10:09:17.445649] [D] [thread 126835] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:17.445699] [D] [thread 126835] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:09:17.445752] [D] [thread 126835] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:17.445860] [D] [thread 126835] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:17.445923] [D] [thread 126835] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:17.446018] [D] [thread 126835] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:09:17.446074] [D] [thread 126835] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:17.446103] [D] [thread 126835] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:17.446170] [D] [thread 126835] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:09:17.446292] [D] [thread 126835] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:17.446464] [D] [thread 126835] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:17.446516] [D] [thread 126835] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:17.446574] [D] [thread 126835] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:09:17.446613] [D] [thread 126835] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:17.446642] [D] [thread 126835] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:17.446690] [D] [thread 126835] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:09:17.446742] [D] [thread 126835] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:17.446974] [D] [thread 126835] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:17.447033] [D] [thread 126835] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:17.447092] [D] [thread 126835] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:17.447130] [D] [thread 126835] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:17.447160] [D] [thread 126835] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:17.447205] [D] [thread 126835] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:09:17.447260] [D] [thread 126835] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:17.447407] [D] [thread 126835] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:17.447457] [D] [thread 126835] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:17.447510] [D] [thread 126835] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:17.447545] [D] [thread 126835] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:17.447574] [D] [thread 126835] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:17.447616] [D] [thread 126835] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:09:17.447642] [D] [thread 126835] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:17.451956] [D] [thread 126852] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 2
[m
[36m[10:09:17.452092] [D] [thread 126852] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[10:09:17.452132] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:09:17.452166] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:09:17.452199] [D] [thread 126852] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[10:09:17.452220] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:17.452241] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:17.452266] [D] [thread 126852] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:09:17.452356] [D] [thread 126852] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:09:17.452524] [I] [thread 126852] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:17.452596] [D] [thread 126852] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:09:17.452626] [D] [thread 126852] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:09:17.452664] [D] [thread 126852] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 2[m
[32m[10:09:17.452687] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:09:17.452711] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:09:17.452738] [D] [thread 126852] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[10:09:17.452758] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:09:17.452778] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:09:17.452801] [D] [thread 126852] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:09:17.452924] [I] [thread 126852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:09:17.452986] [D] [thread 126852] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:09:17.453288] [D] [thread 126852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:09:17.453323] [D] [thread 126852] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:09:18.260115] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:19.261432] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:20.262723] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:20.411470] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:20.412036] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:20.412949] [I] [thread 126854] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:20.414603] [I] [thread 126854] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:20.558071] [D] [thread 126835] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 37727
dataPort: 41007
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688353534
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:20.558420] [D] [thread 126835] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 37727
dataPort: 41007
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688353534
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:20.558549] [D] [thread 126835] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:20.558939] [D] [thread 126835] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:20.559047] [D] [thread 126835] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:20.559130] [D] [thread 126835] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[10:09:20.559306] [D] [thread 126835] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:20.559396] [I] [thread 126835] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:20.559543] [I] [thread 126835] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:20.559633] [D] [thread 126835] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[10:09:20.559743] [D] [thread 126835] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:20.560116] [D] [thread 126835] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:20.560226] [I] [thread 126835] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:09:20.560264] [D] [thread 126835] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:09:20.560316] [D] [thread 126835] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:20.560342] [D] [thread 126835] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:20.560370] [D] [thread 126835] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:20.560996] [D] [thread 126835] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[10:09:20.599750] [D] [thread 126855] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:20.599890] [I] [thread 126855] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:09:20.599932] [D] [thread 126855] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:09:20.600022] [D] [thread 126855] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[10:09:20.600233] [D] [thread 126855] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:09:20.600286] [D] [thread 126855] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[10:09:20.600362] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:09:20.600404] [D] [thread 126855] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[10:09:20.600435] [D] [thread 126855] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:20.600487] [D] [thread 126855] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:09:20.600537] [D] [thread 126855] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:20.600667] [D] [thread 126855] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:20.600713] [D] [thread 126855] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:20.600765] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:09:20.600798] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:09:20.600830] [D] [thread 126855] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:20.600881] [D] [thread 126855] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:20.600938] [D] [thread 126855] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:09:20.600998] [D] [thread 126855] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:20.601151] [D] [thread 126855] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:20.601229] [D] [thread 126855] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:20.601294] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:09:20.601329] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:09:20.601362] [D] [thread 126855] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:20.601392] [D] [thread 126855] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:20.601441] [D] [thread 126855] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:09:20.601498] [D] [thread 126855] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:20.601660] [D] [thread 126855] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:20.601708] [D] [thread 126855] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:20.601765] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:20.601822] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:20.601858] [D] [thread 126855] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:20.601886] [D] [thread 126855] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:20.601934] [D] [thread 126855] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:09:20.601988] [D] [thread 126855] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:20.602129] [D] [thread 126855] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:20.602177] [D] [thread 126855] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:20.602291] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:20.602330] [D] [thread 126855] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:20.602365] [D] [thread 126855] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:20.602396] [D] [thread 126855] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:20.602446] [D] [thread 126855] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:09:20.602499] [D] [thread 126855] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:20.606827] [D] [thread 126852] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[10:09:20.606939] [D] [thread 126852] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[10:09:20.606974] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:09:20.607008] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:09:20.607041] [D] [thread 126852] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[10:09:20.607061] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:20.607082] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:20.607107] [D] [thread 126852] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:09:20.607272] [D] [thread 126852] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:09:20.607438] [I] [thread 126852] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:20.607483] [D] [thread 126852] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:09:20.607511] [D] [thread 126852] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:09:20.607539] [D] [thread 126852] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[10:09:20.607561] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:09:20.607586] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:09:20.607614] [D] [thread 126852] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[10:09:20.607634] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:09:20.607655] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:09:20.607679] [D] [thread 126852] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:09:20.607846] [I] [thread 126852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:09:20.607914] [D] [thread 126852] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:09:20.608266] [D] [thread 126852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:09:20.608303] [D] [thread 126852] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:09:21.413312] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:22.414601] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:23.415912] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:23.596481] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:23.596942] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:23.597720] [I] [thread 126857] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:23.599483] [I] [thread 126857] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:23.747531] [D] [thread 126852] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 36071
dataPort: 37611
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688042875
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:23.747857] [D] [thread 126852] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 36071
dataPort: 37611
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688042875
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:23.747939] [D] [thread 126852] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:23.748353] [D] [thread 126852] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:23.748404] [D] [thread 126852] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:23.748472] [D] [thread 126852] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[10:09:23.748637] [D] [thread 126852] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:23.748726] [I] [thread 126852] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:23.748870] [I] [thread 126852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:23.748955] [D] [thread 126852] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[10:09:23.749056] [D] [thread 126852] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:23.749430] [D] [thread 126852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:23.749492] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:09:23.749524] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:09:23.749569] [D] [thread 126852] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:23.749622] [D] [thread 126852] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:23.749651] [D] [thread 126852] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:23.750373] [D] [thread 126852] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[10:09:23.785924] [D] [thread 126852] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:23.786030] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:09:23.786071] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:09:23.786152] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[10:09:23.786401] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:09:23.786455] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[10:09:23.786529] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:09:23.786559] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:09:23.786589] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[10:09:23.786616] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:23.786663] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:09:23.786739] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:23.786858] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:23.786897] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:23.786947] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:09:23.786975] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:09:23.786999] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:09:23.787025] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:23.787048] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:23.787073] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:09:23.787112] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:23.787202] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:23.787236] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:23.787274] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:09:23.787323] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:09:23.787348] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:09:23.787374] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:23.787398] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:23.787442] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:09:23.787487] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:23.787601] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:23.787640] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:23.787689] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:23.787718] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:23.787741] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:23.787769] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:23.787794] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:23.787821] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:09:23.787866] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:23.787987] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:23.788026] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:23.788130] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:23.788166] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:23.788201] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:23.788234] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:23.788261] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:23.788290] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:09:23.788334] [D] [thread 126852] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:23.792556] [D] [thread 126852] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[10:09:23.792657] [D] [thread 126852] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[10:09:23.792692] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:09:23.792723] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:09:23.792752] [D] [thread 126852] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[10:09:23.792769] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:23.792787] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:23.792808] [D] [thread 126852] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:09:23.792895] [D] [thread 126852] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:09:23.793041] [I] [thread 126852] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:23.793080] [D] [thread 126852] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:09:23.793104] [D] [thread 126852] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:09:23.793128] [D] [thread 126852] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[10:09:23.793148] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:09:23.793169] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:09:23.793192] [D] [thread 126852] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[10:09:23.793209] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:09:23.793227] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:09:23.793247] [D] [thread 126852] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:09:23.793383] [I] [thread 126852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:09:23.793442] [D] [thread 126852] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:09:23.793786] [D] [thread 126852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:09:23.793818] [D] [thread 126852] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:09:24.598261] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:25.599587] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:26.600879] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:26.772000] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:26.772425] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:26.773108] [I] [thread 126859] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:26.775162] [I] [thread 126859] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:26.925078] [D] [thread 126852] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 40461
dataPort: 40321
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2687965723
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:26.925344] [D] [thread 126852] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 40461
dataPort: 40321
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2687965723
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:26.925421] [D] [thread 126852] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:26.926101] [D] [thread 126852] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:26.926284] [D] [thread 126852] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:26.926360] [D] [thread 126852] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[10:09:26.926533] [D] [thread 126852] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:26.926658] [I] [thread 126852] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:26.926990] [I] [thread 126852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:26.927174] [D] [thread 126852] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[10:09:26.927363] [D] [thread 126852] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:26.928219] [D] [thread 126852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:26.928486] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:09:26.928532] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:09:26.928581] [D] [thread 126852] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:26.928604] [D] [thread 126852] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:26.928632] [D] [thread 126852] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:26.929637] [D] [thread 126852] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[10:09:26.967694] [D] [thread 126852] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:26.967800] [I] [thread 126852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:09:26.967836] [D] [thread 126852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:09:26.967910] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[10:09:26.968084] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:09:26.968125] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[10:09:26.968193] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:09:26.968256] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:09:26.968282] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:09:26.968310] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[10:09:26.968336] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:26.968364] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:09:26.968562] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:26.968818] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:26.968923] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:26.969046] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:09:26.969135] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:09:26.969169] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:09:26.969361] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:09:26.969406] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:26.969433] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:26.969563] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:09:26.969620] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:26.970016] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:26.970078] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:26.970337] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:09:26.970381] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:09:26.970469] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:09:26.970541] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:09:26.970626] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:26.970692] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:26.970755] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:09:26.970956] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:26.971290] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:26.971424] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:26.971595] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:26.971704] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:26.971726] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:26.971810] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:26.971849] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:26.971977] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:26.972109] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:09:26.972244] [D] [thread 126852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:26.972469] [D] [thread 126852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:26.972589] [D] [thread 126852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:26.972786] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:26.972823] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:26.972913] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:26.972995] [D] [thread 126852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:26.973034] [D] [thread 126852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:26.973124] [D] [thread 126852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:26.973237] [D] [thread 126852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:09:26.973324] [D] [thread 126852] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:26.977561] [D] [thread 126858] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 2
[m
[36m[10:09:26.977666] [D] [thread 126858] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[10:09:26.977697] [I] [thread 126858] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:09:26.977725] [D] [thread 126858] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:09:26.977751] [D] [thread 126858] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[10:09:26.977767] [I] [thread 126858] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:26.977782] [D] [thread 126858] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:26.977801] [D] [thread 126858] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:09:26.977868] [D] [thread 126858] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:09:26.977996] [I] [thread 126858] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:26.978022] [D] [thread 126858] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:09:26.978036] [D] [thread 126858] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:09:26.978050] [D] [thread 126858] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 2[m
[32m[10:09:26.978060] [I] [thread 126858] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:09:26.978071] [D] [thread 126858] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:09:26.978084] [D] [thread 126858] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[10:09:26.978092] [I] [thread 126858] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:09:26.978102] [D] [thread 126858] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:09:26.978112] [D] [thread 126858] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:09:26.978178] [I] [thread 126858] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:09:26.978236] [D] [thread 126858] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:09:26.978499] [D] [thread 126858] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:09:26.978521] [D] [thread 126858] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:09:27.773684] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:28.774946] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:29.776198] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:29.875356] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:29.875898] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:29.876696] [I] [thread 126861] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:29.878813] [I] [thread 126861] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:30.020510] [D] [thread 126860] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.36"
grpcPort: 46129
dataPort: 44447
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688605035
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:30.020812] [D] [thread 126860] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.36"
grpcPort: 46129
dataPort: 44447
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688605035
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:30.020884] [D] [thread 126860] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:30.021412] [D] [thread 126860] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:30.021478] [D] [thread 126860] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:30.021560] [D] [thread 126860] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[10:09:30.021715] [D] [thread 126860] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:30.021794] [I] [thread 126860] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:30.021921] [I] [thread 126860] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:30.021996] [D] [thread 126860] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[10:09:30.022090] [D] [thread 126860] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:30.022583] [D] [thread 126860] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:30.022750] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:09:30.022786] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:09:30.022831] [D] [thread 126860] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:30.022852] [D] [thread 126860] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:30.022876] [D] [thread 126860] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:30.023428] [D] [thread 126860] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[10:09:30.061159] [D] [thread 126860] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:30.061330] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:09:30.061368] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:09:30.061450] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[10:09:30.061641] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:09:30.061686] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[10:09:30.061759] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:09:30.061788] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:09:30.061812] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:09:30.061835] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:09:30.061864] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[10:09:30.061891] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:30.061937] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:09:30.061980] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:30.062081] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:30.062117] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:30.062158] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:09:30.062185] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:09:30.062281] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:09:30.062307] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:09:30.062330] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:09:30.062386] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:30.062416] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:30.062444] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:09:30.062490] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:30.062608] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:30.062647] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:30.062692] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:09:30.062718] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:09:30.062741] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:09:30.062764] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:09:30.062787] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:09:30.062815] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:30.062838] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:30.062863] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:09:30.062903] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:30.063006] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:30.063044] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:30.063087] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:30.063115] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:30.063139] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:30.063162] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:30.063185] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:30.063212] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:30.063235] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:30.063261] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:09:30.063304] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:30.063413] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:30.063452] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:30.063496] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:30.063522] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:30.063545] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:30.063568] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:30.063592] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:30.063619] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:30.063642] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:30.063668] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:09:30.063689] [D] [thread 126860] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:30.069157] [D] [thread 126860] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[10:09:30.069246] [D] [thread 126860] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[10:09:30.069272] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:09:30.069295] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:09:30.069317] [D] [thread 126860] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[10:09:30.069330] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:30.069342] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:30.069357] [D] [thread 126860] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:09:30.069417] [D] [thread 126860] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:09:30.069584] [I] [thread 126860] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:30.069617] [D] [thread 126860] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:09:30.069635] [D] [thread 126860] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:09:30.069655] [D] [thread 126860] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[10:09:30.069669] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:09:30.069685] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:09:30.069703] [D] [thread 126860] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[10:09:30.069716] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:09:30.069744] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:09:30.069761] [D] [thread 126860] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:09:30.069847] [I] [thread 126860] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:09:30.069892] [D] [thread 126860] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:09:30.070249] [D] [thread 126860] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:09:30.070284] [D] [thread 126860] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:09:30.877103] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:31.878499] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:32.879791] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:32.943782] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:32.944355] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:32.945247] [I] [thread 126864] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:32.947883] [I] [thread 126864] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:33.092907] [D] [thread 126862] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 45171
dataPort: 44285
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688713416
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:33.093202] [D] [thread 126862] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 45171
dataPort: 44285
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2688713416
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:33.093292] [D] [thread 126862] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:33.093888] [D] [thread 126862] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:33.093970] [D] [thread 126862] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:33.094074] [D] [thread 126862] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[10:09:33.094342] [D] [thread 126862] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:33.094448] [I] [thread 126862] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:33.094597] [I] [thread 126862] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:33.094690] [D] [thread 126862] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[10:09:33.094805] [D] [thread 126862] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:33.095422] [D] [thread 126862] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:33.095536] [I] [thread 126862] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:09:33.095576] [D] [thread 126862] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:09:33.095632] [D] [thread 126862] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:33.095656] [D] [thread 126862] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:33.095710] [D] [thread 126862] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:33.096344] [D] [thread 126862] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[10:09:33.133228] [D] [thread 126865] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:33.133324] [I] [thread 126865] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:09:33.133391] [D] [thread 126865] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:09:33.133449] [D] [thread 126865] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[10:09:33.133596] [D] [thread 126865] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:09:33.133625] [D] [thread 126865] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[10:09:33.133676] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:09:33.133692] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:09:33.133703] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:09:33.133713] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:09:33.133724] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:09:33.133750] [D] [thread 126865] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[10:09:33.133770] [D] [thread 126865] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:33.133789] [D] [thread 126865] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:09:33.133822] [D] [thread 126865] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:33.133919] [D] [thread 126865] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:33.133945] [D] [thread 126865] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:33.133997] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:09:33.134013] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:09:33.134024] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:09:33.134035] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:09:33.134046] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:09:33.134057] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:09:33.134074] [D] [thread 126865] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:33.134090] [D] [thread 126865] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:33.134105] [D] [thread 126865] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:09:33.134137] [D] [thread 126865] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:33.134273] [D] [thread 126865] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:33.134307] [D] [thread 126865] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:33.134347] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:09:33.134366] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:09:33.134381] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:09:33.134395] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:09:33.134409] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:09:33.134424] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:09:33.134444] [D] [thread 126865] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:33.134551] [D] [thread 126865] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:33.134588] [D] [thread 126865] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:09:33.134630] [D] [thread 126865] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:33.134761] [D] [thread 126865] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:33.134793] [D] [thread 126865] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:33.134835] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:33.134853] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:33.134868] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:33.134883] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:33.134898] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:33.134913] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:33.134932] [D] [thread 126865] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:33.134950] [D] [thread 126865] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:33.134969] [D] [thread 126865] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:09:33.135000] [D] [thread 126865] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:33.135090] [D] [thread 126865] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:33.135119] [D] [thread 126865] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:33.135154] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:33.135172] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:33.135188] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:33.135202] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:33.135217] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:33.135232] [D] [thread 126865] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:33.135250] [D] [thread 126865] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:33.135265] [D] [thread 126865] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:33.135284] [D] [thread 126865] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:09:33.135299] [D] [thread 126865] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:33.139238] [D] [thread 126866] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 3
[m
[36m[10:09:33.139295] [D] [thread 126866] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[10:09:33.139315] [I] [thread 126866] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:09:33.139337] [D] [thread 126866] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:09:33.139359] [D] [thread 126866] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[10:09:33.139371] [I] [thread 126866] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:33.139382] [D] [thread 126866] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:33.139396] [D] [thread 126866] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:09:33.139456] [D] [thread 126866] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:09:33.139571] [I] [thread 126866] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:33.139684] [D] [thread 126866] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:09:33.139708] [D] [thread 126866] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:09:33.139728] [D] [thread 126866] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 3[m
[32m[10:09:33.139744] [I] [thread 126866] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:09:33.139760] [D] [thread 126866] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:09:33.139777] [D] [thread 126866] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[10:09:33.139788] [I] [thread 126866] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:09:33.139799] [D] [thread 126866] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:09:33.139813] [D] [thread 126866] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:09:33.139910] [I] [thread 126866] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:09:33.139953] [D] [thread 126866] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:09:33.140272] [D] [thread 126866] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:09:33.140296] [D] [thread 126866] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:09:33.945621] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:34.946918] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:35.948192] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:36.111511] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:36.111924] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:36.112726] [I] [thread 126868] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:36.115280] [I] [thread 126868] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:36.264386] [D] [thread 126866] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 37323
dataPort: 36379
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688831057
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:36.264669] [D] [thread 126866] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 37323
dataPort: 36379
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688831057
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:36.264749] [D] [thread 126866] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:36.265357] [D] [thread 126866] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:36.265424] [D] [thread 126866] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:36.265516] [D] [thread 126866] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[10:09:36.265690] [D] [thread 126866] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:36.265781] [I] [thread 126866] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:36.266018] [I] [thread 126866] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:36.266108] [D] [thread 126866] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[10:09:36.266278] [D] [thread 126866] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:36.266887] [D] [thread 126866] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:36.267008] [I] [thread 126866] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:09:36.267050] [D] [thread 126866] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:09:36.267104] [D] [thread 126866] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:36.267129] [D] [thread 126866] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:36.267156] [D] [thread 126866] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:36.267825] [D] [thread 126866] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[10:09:36.303879] [D] [thread 126860] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:36.304012] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:09:36.304054] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:09:36.304144] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[10:09:36.304355] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:09:36.304406] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[10:09:36.304485] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:09:36.304519] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:09:36.304546] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:09:36.304573] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:09:36.304599] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:09:36.304625] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:09:36.304661] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[10:09:36.304692] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:36.304725] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:09:36.304774] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:36.304888] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:36.304932] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:36.305021] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:09:36.305060] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:09:36.305088] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:09:36.305115] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:09:36.305141] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:09:36.305168] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:09:36.305195] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[10:09:36.305229] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:36.305259] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:36.305291] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:09:36.305348] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:36.305499] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:36.305580] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:36.305646] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:09:36.305678] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:09:36.305706] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:09:36.305733] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:09:36.305760] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:09:36.305786] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:09:36.305813] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[10:09:36.305847] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:36.305877] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:36.305909] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:09:36.305961] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:36.306100] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:36.306147] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:36.306256] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:36.306303] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:36.306331] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:36.306358] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:36.306385] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:36.306411] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:36.306438] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:36.306472] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:36.306532] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:36.306574] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:09:36.306633] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:36.306898] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:36.306960] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:36.307027] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:36.307060] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:36.307087] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:36.307115] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:36.307141] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:36.307168] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:36.307196] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:36.307233] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:36.307263] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:36.307297] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:09:36.307322] [D] [thread 126860] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:36.311114] [D] [thread 126860] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 3
[m
[36m[10:09:36.311174] [D] [thread 126860] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[10:09:36.311195] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:09:36.311217] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:09:36.311238] [D] [thread 126860] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[10:09:36.311249] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:36.311261] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:36.311274] [D] [thread 126860] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:09:36.311330] [D] [thread 126860] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:09:36.311435] [I] [thread 126860] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:36.311463] [D] [thread 126860] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:09:36.311487] [D] [thread 126860] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:09:36.311504] [D] [thread 126860] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 3[m
[32m[10:09:36.311516] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:09:36.311530] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:09:36.311544] [D] [thread 126860] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[10:09:36.311555] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:09:36.311580] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:09:36.311595] [D] [thread 126860] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:09:36.311677] [I] [thread 126860] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:09:36.311720] [D] [thread 126860] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:09:36.312055] [D] [thread 126860] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:09:36.312077] [D] [thread 126860] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:09:37.113170] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:38.114436] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:39.089083] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:39.089599] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:39.090433] [I] [thread 126870] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:39.093266] [I] [thread 126870] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:39.236652] [D] [thread 126860] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.39"
grpcPort: 40941
dataPort: 35793
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688774988
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:39.236908] [D] [thread 126860] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.39"
grpcPort: 40941
dataPort: 35793
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2688774988
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:09:39.236980] [D] [thread 126860] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:09:39.237547] [D] [thread 126860] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:09:39.237577] [D] [thread 126860] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:09:39.237631] [D] [thread 126860] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 11 and resources 65535[m
[36m[10:09:39.237803] [D] [thread 126860] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:09:39.237881] [I] [thread 126860] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:09:39.238023] [I] [thread 126860] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:39.238104] [D] [thread 126860] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 11[m
[36m[10:09:39.238254] [D] [thread 126860] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:09:39.238804] [D] [thread 126860] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:09:39.238933] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:09:39.238967] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:09:39.239010] [D] [thread 126860] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:09:39.239032] [D] [thread 126860] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:09:39.239056] [D] [thread 126860] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:09:39.239603] [D] [thread 126860] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=11[m
[36m[10:09:39.275827] [D] [thread 126860] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 11
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream10"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:09:39.275943] [I] [thread 126860] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:09:39.275985] [D] [thread 126860] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:09:39.276073] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= test_stream10 logical source= debs[m
[36m[10:09:39.276282] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:09:39.276335] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream10[m
[36m[10:09:39.276418] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:09:39.276453] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:09:39.276479] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:09:39.276504] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:09:39.276530] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:09:39.276556] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:09:39.276582] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=test_stream9[m
[36m[10:09:39.276616] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream10 does not exist, try to add[m
[36m[10:09:39.276649] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:39.276682] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:09:39.276732] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:09:39.276852] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:09:39.276894] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:09:39.276943] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:09:39.276975] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:09:39.277002] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:09:39.277029] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:09:39.277056] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:09:39.277083] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:09:39.277109] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[10:09:39.277136] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=DiskMetric_ph[m
[36m[10:09:39.277169] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:09:39.277198] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:39.277396] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:09:39.277471] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:09:39.277650] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:09:39.277702] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:09:39.277764] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:09:39.277798] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:09:39.277826] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:09:39.277853] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:09:39.277881] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:09:39.277908] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:09:39.277935] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[10:09:39.277963] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=MemoryMetric_ph[m
[36m[10:09:39.278020] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:09:39.278164] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:39.278294] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:09:39.278386] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:09:39.278663] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:09:39.278726] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:09:39.278801] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:39.278837] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:39.278866] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:39.278893] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:39.278919] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:39.278946] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:39.278973] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:39.279000] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedCpuMetrics_ph[m
[36m[10:09:39.279037] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:09:39.279068] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:39.279120] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:09:39.279180] [D] [thread 126860] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:09:39.279335] [D] [thread 126860] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:09:39.279383] [D] [thread 126860] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:09:39.279438] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:39.279470] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:39.279497] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:39.279525] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:39.279552] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:39.279579] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:39.279606] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:39.279671] [D] [thread 126860] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:09:39.279714] [D] [thread 126860] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:09:39.279749] [D] [thread 126860] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:09:39.279806] [D] [thread 126860] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:09:39.279834] [D] [thread 126860] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:09:39.284008] [D] [thread 126871] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 11
oldParent: 1
newParent: 3
[m
[36m[10:09:39.284110] [D] [thread 126871] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 11  parentId= 1[m
[32m[10:09:39.284143] [I] [thread 126871] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:09:39.284177] [D] [thread 126871] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:09:39.284210] [D] [thread 126871] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  11  exists[m
[32m[10:09:39.284231] [I] [thread 126871] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:39.284252] [D] [thread 126871] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:09:39.284276] [D] [thread 126871] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:09:39.284358] [D] [thread 126871] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:09:39.284548] [I] [thread 126871] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:09:39.284595] [D] [thread 126871] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:09:39.284623] [D] [thread 126871] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:09:39.284672] [D] [thread 126871] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 11  parentId= 3[m
[32m[10:09:39.284696] [I] [thread 126871] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:09:39.284721] [D] [thread 126871] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:09:39.284748] [D] [thread 126871] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 11 exists[m
[32m[10:09:39.284768] [I] [thread 126871] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:09:39.284789] [D] [thread 126871] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:09:39.284814] [D] [thread 126871] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:09:39.284958] [I] [thread 126871] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:09:39.285011] [D] [thread 126871] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:09:39.285645] [D] [thread 126871] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:09:39.285687] [D] [thread 126871] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:09:40.090777] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:41.092065] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:41.250789] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:41.251184] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:41.252083] [I] [thread 126872] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:09:41.254335] [I] [thread 126872] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:09:42.252536] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:42.753285] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:42.753916] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:42.906624] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:42.907270] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:42.909135] [D] [thread 126877] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[10:09:42.909269] [I] [thread 126877] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[10:09:42.909302] [I] [thread 126877] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[10:09:42.909357] [D] [thread 126877] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[10:09:42.909460] [D] [thread 126877] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "WrappedNetworkMetrics"[m
[36m[10:09:42.909536] [D] [thread 126877] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));[m
[36m[10:09:42.909603] [D] [thread 126877] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));
}
}
[m
[36m[10:09:42.911094] [D] [thread 126878] [File.cpp:27] [createFile] Create File to file:///tmp/query_01-11-2023_10-09-42_1664126.cpp[m
[36m[10:09:42.911684] [D] [thread 126878] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:09:42.911773] [D] [thread 126878] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[10:09:42.912158] [D] [thread 126878] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -o/tmp/query_01-11-2023_10-09-42_1664126.so -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_01-11-2023_10-09-42_1664126.cpp'[m
[36m[10:09:43.908586] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:44.909841] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:45.830556] [I] [thread 126878] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2919.539388ms[m
[36m[10:09:45.831140] [D] [thread 126877] [Query.cpp:231] [from] Query: create new Query with source WrappedNetworkMetrics[m
[36m[10:09:45.831205] [D] [thread 126877] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  WrappedNetworkMetrics[m
[32m[10:09:45.831520] [I] [thread 126877] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.832940] [D] [thread 126877] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[10:09:45.833463] [D] [thread 126877] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[10:09:45.833877] [I] [thread 126877] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.834076] [D] [thread 126877] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[10:09:45.834344] [D] [thread 126877] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.834396] [D] [thread 126877] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:09:45.834870] [I] [thread 126877] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[10:09:45.835092] [D] [thread 126877] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Avg;) as new root of the plan.[m
[36m[10:09:45.835245] [D] [thread 126877] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.835278] [D] [thread 126877] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.835513] [D] [thread 126877] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[10:09:45.835661] [I] [thread 126877] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:09:45.835817] [D] [thread 126877] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[10:09:45.835980] [D] [thread 126877] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.836015] [D] [thread 126877] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.836945] [D] [thread 126877] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.837159] [D] [thread 126877] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.837292] [D] [thread 126877] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:45.837468] [D] [thread 126877] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.837540] [D] [thread 126877] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.837572] [D] [thread 126877] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:45.837673] [D] [thread 126877] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:09:45.837736] [D] [thread 126877] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.837770] [D] [thread 126877] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.837799] [D] [thread 126877] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:45.838463] [D] [thread 126877] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source WrappedNetworkMetrics with schema: WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:45.838554] [D] [thread 126877] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:45.838693] [D] [thread 126877] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:45.839850] [D] [thread 126877] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:45.840682] [D] [thread 126877] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:09:45.841201] [I] [thread 126877] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[10:09:45.841871] [I] [thread 126877] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[10:09:45.841960] [I] [thread 126877] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:09:45.842014] [I] [thread 126822] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:09:45.842124] [I] [thread 126822] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:09:45.842159] [I] [thread 126822] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:09:45.842463] [I] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[10:09:45.842612] [D] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:09:45.842688] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.842762] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.842811] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:45.842862] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:45.843049] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:45.844175] [D] [thread 126822] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:45.844842] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:45.845065] [D] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:09:45.845166] [D] [thread 126822] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:09:45.845593] [D] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[10:09:45.845647] [I] [thread 126822] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:09:45.845863] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:09:45.846456] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:09:45.846905] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:09:45.847170] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.847640] [D] [thread 126822] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[10:09:45.848140] [D] [thread 126822] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.848508] [D] [thread 126822] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[10:09:45.848715] [I] [thread 126822] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.848920] [D] [thread 126822] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:09:45.848952] [I] [thread 126822] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:09:45.849106] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:09:45.849389] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:09:45.849725] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:09:45.849965] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.850410] [D] [thread 126822] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[10:09:45.850757] [I] [thread 126822] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.850870] [D] [thread 126822] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:09:45.850884] [I] [thread 126822] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:09:45.850987] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:09:45.851415] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:09:45.851878] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:09:45.852401] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.852762] [D] [thread 126822] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[10:09:45.853079] [I] [thread 126822] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[10:09:45.853389] [I] [thread 126822] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.853624] [D] [thread 126822] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[10:09:45.853913] [D] [thread 126822] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.854125] [D] [thread 126822] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.854457] [D] [thread 126822] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[10:09:45.854773] [D] [thread 126822] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.854973] [D] [thread 126822] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.855135] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.855284] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.855403] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:45.855531] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:45.855647] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:45.856610] [D] [thread 126822] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:45.857329] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:09:45.857444] [I] [thread 126822] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[10:09:45.857905] [I] [thread 126822] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:09:45.857965] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.858025] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.858071] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[10:09:45.859045] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.859161] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.859309] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.859338] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.859478] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.859978] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:09:45.860641] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.860748] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.860846] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.860882] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.860924] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.861185] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:09:45.861631] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.861710] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.861807] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.861825] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.861971] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.862377] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:09:45.862773] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.862908] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.863053] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.863148] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.863247] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.863603] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:09:45.864061] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.864135] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.864221] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.864243] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.864324] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.864799] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:09:45.865430] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.865533] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.865630] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.865650] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.865693] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.866312] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:09:45.866879] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.866981] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.867077] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.867094] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.867142] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.867523] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:09:45.868154] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.868257] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.868360] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.868380] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.868414] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.868832] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:09:45.869390] [I] [thread 126822] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:09:45.869492] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:09:45.869596] [D] [thread 126822] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:09:45.869615] [D] [thread 126822] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:09:45.869651] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:09:45.870029] [D] [thread 126822] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[10:09:45.871117] [D] [thread 126822] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[32m[10:09:45.871270] [I] [thread 126822] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[10:09:45.871586] [D] [thread 126822] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:45.871915] [D] [thread 126822] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[10:09:45.872371] [D] [thread 126822] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:45.872512] [D] [thread 126822] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[10:09:45.873052] [D] [thread 126822] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:45.873531] [D] [thread 126822] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[10:09:45.873742] [D] [thread 126822] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[10:09:45.873858] [D] [thread 126822] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:09:45.874122] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:45.874255] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:09:45.874301] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:09:45.874321] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[10:09:45.874823] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:09:45.874870] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[10:09:45.875066] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:09:45.875101] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[10:09:45.875313] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:09:45.875374] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[10:09:45.875508] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:09:45.875538] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[10:09:45.875758] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:09:45.875897] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[10:09:45.876014] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:09:45.876054] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[10:09:45.876262] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:09:45.876299] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[10:09:45.877029] [I] [thread 126822] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:09:45.877132] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877146] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877157] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877166] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877176] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877185] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877217] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877228] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877236] [I] [thread 126822] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:45.877247] [I] [thread 126822] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:09:45.877270] [I] [thread 126822] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:09:45.877280] [I] [thread 126822] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:09:45.877595] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:09:45.878264] [D] [thread 126822] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(23) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:09:45.878853] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[10:09:45.879101] [D] [thread 126822] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[10:09:45.879843] [D] [thread 126822] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:45.880326] [D] [thread 126822] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:45.880731] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.880869] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.880951] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[10:09:45.881037] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:45.881162] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:45.883032] [D] [thread 126822] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:09:45.883494] [I] [thread 126822] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:09:45.883732] [I] [thread 126822] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:45.885483] [D] [thread 126822] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:09:45.885887] [I] [thread 126822] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:09:45.886081] [I] [thread 126822] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:45.886453] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:45.887380] [D] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:09:45.887435] [D] [thread 126822] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:09:45.887870] [D] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:09:45.887984] [D] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[10:09:45.888003] [D] [thread 126822] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[10:09:45.888082] [I] [thread 126822] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[10:09:45.888129] [I] [thread 126822] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:09:45.888455] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:09:45.888737] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[10:09:45.889166] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[10:09:45.889554] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[10:09:45.889829] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[10:09:45.890295] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[10:09:45.890815] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[10:09:45.891067] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[10:09:45.891427] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[10:09:45.891848] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[10:09:45.892141] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[10:09:45.892548] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[10:09:45.892979] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[10:09:45.893406] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[10:09:45.893747] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[10:09:45.894278] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[10:09:45.894711] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[10:09:45.895053] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[10:09:45.895563] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[10:09:45.896512] [D] [thread 126822] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:09:45.896590] [D] [thread 126822] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:09:45.896666] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896711] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896734] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896757] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896795] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896818] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896839] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896859] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896879] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896899] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896918] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896938] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896949] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.896981] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.896995] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.897027] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.897041] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.897060] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.897072] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.897088] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.897099] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.897119] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.897132] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.897148] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.897159] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.897175] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.897186] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.899161] [D] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:09:45.899244] [D] [thread 126822] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:09:45.899321] [D] [thread 126822] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:09:45.899341] [D] [thread 126822] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:09:45.899349] [D] [thread 126822] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[10:09:45.899359] [D] [thread 126822] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[10:09:45.899413] [I] [thread 126822] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[10:09:45.900283] [D] [thread 126822] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:45.900348] [D] [thread 126822] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:09:45.900364] [D] [thread 126822] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:09:45.900422] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900465] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900486] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900507] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900544] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900566] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900610] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900632] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900652] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900686] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900710] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900744] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900759] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.900847] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.900928] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.901001] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.901168] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.901324] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.901436] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.901498] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.901527] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.901591] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.901610] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.901686] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.901715] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.901839] [D] [thread 126822] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:09:45.901890] [D] [thread 126822] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:09:45.902422] [D] [thread 126822] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[10:09:45.902596] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:09:45.902698] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[10:09:45.902910] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:09:45.903004] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[10:09:45.903112] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:09:45.903139] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[10:09:45.903168] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:09:45.903179] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[10:09:45.903202] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:09:45.903270] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[10:09:45.903354] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:09:45.903401] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[10:09:45.903449] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:09:45.903504] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[10:09:45.903583] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:09:45.903645] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[10:09:45.903730] [I] [thread 126822] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:09:45.903782] [D] [thread 126822] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:09:45.903947] [I] [thread 126822] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[10:09:45.904380] [D] [thread 126822] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:09:45.904595] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.904884] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.905079] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.905478] [D] [thread 126822] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:09:45.905626] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.905721] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.905920] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.906303] [D] [thread 126822] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:09:45.906450] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.906546] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.906767] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.907117] [D] [thread 126822] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:09:45.907313] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.907561] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.907799] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.908094] [D] [thread 126822] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:09:45.908252] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.908545] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.908745] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.909046] [D] [thread 126822] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:09:45.909255] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.909367] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.909603] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.910002] [D] [thread 126822] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:09:45.910116] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.910236] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.910324] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:45.910636] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.910915] [D] [thread 126822] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:09:45.911109] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.911348] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.911556] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[10:09:45.911727] [I] [thread 126822] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 8 sub-graphs to create a single sub-graph[m
[36m[10:09:45.911757] [D] [thread 126822] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[10:09:45.912352] [D] [thread 126822] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[10:09:45.912392] [D] [thread 126822] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:09:45.912497] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.912512] [D] [thread 126822] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:09:45.912569] [D] [thread 126822] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:09:45.912785] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.913031] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.913124] [D] [thread 126822] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:09:45.913184] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.913211] [D] [thread 126822] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:09:45.913243] [D] [thread 126822] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:09:45.913352] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.913569] [D] [thread 126822] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:09:45.913812] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.913845] [D] [thread 126822] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:09:45.913888] [D] [thread 126822] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:09:45.913993] [W] [thread 126822] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:09:45.914025] [D] [thread 126822] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:09:45.914279] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.914350] [D] [thread 126822] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:09:45.914382] [D] [thread 126822] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:09:45.914583] [W] [thread 126822] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:09:45.914636] [D] [thread 126822] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:09:45.914810] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.914858] [D] [thread 126822] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:09:45.914960] [D] [thread 126822] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:09:45.915152] [W] [thread 126822] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:09:45.915247] [D] [thread 126822] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:09:45.915417] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.915547] [D] [thread 126822] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:09:45.915650] [D] [thread 126822] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:09:45.915800] [W] [thread 126822] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:09:45.915890] [D] [thread 126822] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:09:45.916052] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.916135] [D] [thread 126822] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:09:45.916175] [D] [thread 126822] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:09:45.916309] [W] [thread 126822] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:09:45.916334] [D] [thread 126822] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:09:45.916519] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:09:45.916570] [D] [thread 126822] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:09:45.916680] [D] [thread 126822] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:09:45.916949] [W] [thread 126822] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:09:45.917109] [D] [thread 126822] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:09:45.917132] [D] [thread 126822] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[10:09:45.917139] [D] [thread 126822] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:09:45.917146] [D] [thread 126822] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[10:09:45.917174] [D] [thread 126822] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:09:45.917183] [D] [thread 126822] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[10:09:45.917210] [D] [thread 126822] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:09:45.917617] [D] [thread 126822] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[10:09:45.917826] [D] [thread 126822] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:09:45.917957] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:09:45.918086] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.918369] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[10:09:45.918434] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.918602] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:09:45.918640] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.918667] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:09:45.918867] [W] [thread 126822] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:09:45.918982] [W] [thread 126822] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:09:45.919151] [D] [thread 126822] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:09:45.919354] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:09:45.919411] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.919546] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[10:09:45.919661] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.919873] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:09:45.919952] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.919973] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:09:45.920133] [W] [thread 126822] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:09:45.920163] [W] [thread 126822] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:09:45.920293] [D] [thread 126822] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:09:45.920446] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:09:45.920565] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.920703] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[10:09:45.920748] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.920958] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:09:45.921035] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.921057] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:09:45.921362] [W] [thread 126822] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:09:45.921484] [W] [thread 126822] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:09:45.921565] [D] [thread 126822] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:09:45.921645] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:09:45.921674] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.921809] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[10:09:45.921878] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.922069] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:09:45.922160] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.922296] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:09:45.922517] [D] [thread 126822] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:09:45.922668] [D] [thread 126822] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:09:45.922692] [D] [thread 126822] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:09:45.923101] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:09:45.923153] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.923169] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:09:45.923329] [D] [thread 126822] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:09:45.923363] [D] [thread 126822] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:09:45.923388] [D] [thread 126822] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:09:45.923810] [D] [thread 126822] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:09:45.923924] [D] [thread 126822] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:09:45.923978] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:09:45.924005] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.924097] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[10:09:45.924120] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.924263] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:09:45.924294] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.924325] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:09:45.924480] [W] [thread 126822] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:09:45.924644] [W] [thread 126822] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:09:45.924864] [D] [thread 126822] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:09:45.924949] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:09:45.924976] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.925070] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(18)[m
[36m[10:09:45.925092] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.925204] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:09:45.925258] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.925277] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:09:45.925464] [W] [thread 126822] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:09:45.925529] [W] [thread 126822] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:09:45.925579] [D] [thread 126822] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:09:45.925679] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:09:45.925702] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.925801] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[10:09:45.925832] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.925952] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:09:45.925972] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.926016] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:09:45.926155] [W] [thread 126822] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:09:45.926332] [W] [thread 126822] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:09:45.926450] [D] [thread 126822] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:09:45.926575] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:09:45.926657] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.926799] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(22)[m
[36m[10:09:45.926820] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.926937] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:09:45.927040] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.927088] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:09:45.927223] [D] [thread 126822] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:09:45.927379] [D] [thread 126822] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:09:45.927442] [D] [thread 126822] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:09:45.927794] [D] [thread 126822] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:09:45.927858] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.927878] [D] [thread 126822] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:09:45.927982] [D] [thread 126822] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:09:45.928018] [D] [thread 126822] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:09:45.928050] [D] [thread 126822] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:09:45.928529] [D] [thread 126822] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:09:45.928588] [D] [thread 126822] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.928614] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.928723] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.928832] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:09:45.929329] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 4[m
[36m[10:09:45.929392] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.929427] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.929830] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[10:09:45.930172] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:09:45.930313] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.930326] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.930362] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.930380] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.930558] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:09:45.930775] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.930879] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:09:45.931040] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:09:45.931254] [D] [thread 126822] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 4[m
[36m[10:09:45.931618] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.931681] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.931716] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:09:45.931740] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.931809] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.931933] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.931962] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:09:45.932163] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:09:45.932267] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:09:45.932406] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 4[m
[36m[10:09:45.932495] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.932570] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.932662] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.932686] [D] [thread 126822] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:09:45.932752] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.932813] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.933046] [D] [thread 126822] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:09:45.933076] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.933122] [D] [thread 126822] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:09:45.933266] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[10:09:45.933725] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.933817] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.933840] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[10:09:45.933850] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[10:09:45.934330] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:09:45.934511] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.934618] [D] [thread 126822] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:09:45.934682] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:09:45.934777] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.934805] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:09:45.934815] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:09:45.935068] [D] [thread 126822] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[10:09:45.935288] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.935348] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.935371] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:09:45.935394] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.935541] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.935774] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:09:45.935853] [W] [thread 126822] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:09:45.935897] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.935913] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.936006] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.936032] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:09:45.936353] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 5[m
[36m[10:09:45.936428] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.936447] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.936605] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[10:09:45.936983] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:09:45.937072] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.937083] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.937117] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.937131] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.937201] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:09:45.937241] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.937259] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:09:45.937269] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:09:45.937488] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[10:09:45.937790] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.937897] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.937922] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:09:45.937975] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.938056] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.938298] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.938377] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:09:45.938491] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:09:45.938565] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:09:45.938649] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 5[m
[36m[10:09:45.938667] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.938720] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.938755] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.938782] [D] [thread 126822] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:09:45.938854] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.938904] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.939049] [D] [thread 126822] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:09:45.939113] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.939179] [D] [thread 126822] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:09:45.939454] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[10:09:45.939811] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.939852] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.939870] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[10:09:45.939880] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[10:09:45.940175] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:09:45.940375] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.940434] [D] [thread 126822] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:09:45.940492] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:09:45.940518] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.940584] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:09:45.940612] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:09:45.940731] [D] [thread 126822] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[10:09:45.940889] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.940923] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.940982] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:09:45.941121] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.941297] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.941489] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:09:45.941555] [W] [thread 126822] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:09:45.941570] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.941587] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.941738] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.941775] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:09:45.942090] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 6[m
[36m[10:09:45.942154] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.942287] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.942613] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[10:09:45.942937] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:09:45.943043] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.943054] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.943084] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.943099] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.943169] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:09:45.943218] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.943237] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:09:45.943246] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:09:45.943335] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[10:09:45.943490] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.943564] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.943621] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:09:45.943683] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.943828] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.944097] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.944187] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:09:45.944346] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:09:45.944433] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:09:45.944527] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 6[m
[36m[10:09:45.944546] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.944578] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.944615] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.944632] [D] [thread 126822] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:09:45.944743] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.944794] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.944972] [D] [thread 126822] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:09:45.944991] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.945092] [D] [thread 126822] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:09:45.945284] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[10:09:45.945671] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.945737] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.945757] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[10:09:45.945767] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[10:09:45.945924] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:09:45.946014] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.946038] [D] [thread 126822] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:09:45.946260] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:09:45.946356] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.946442] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:09:45.946461] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:09:45.946722] [D] [thread 126822] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[10:09:45.946893] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.946949] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.946971] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:09:45.946994] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.947110] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.947268] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:09:45.947374] [W] [thread 126822] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:09:45.947432] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.947455] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.947647] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.947699] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:09:45.947941] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 7[m
[36m[10:09:45.948029] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.948081] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.948272] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[10:09:45.948682] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:09:45.948722] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.948732] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.948761] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.948775] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.948845] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:09:45.948884] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.948921] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:09:45.948932] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:09:45.949014] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[10:09:45.949253] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.949313] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.949350] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:09:45.949415] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.949580] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.949864] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.949918] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:09:45.950052] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:09:45.950076] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:09:45.950184] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[10:09:45.950235] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.950284] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.950331] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.950359] [D] [thread 126822] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:09:45.950491] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.950520] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.950661] [D] [thread 126822] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:09:45.950698] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.950767] [D] [thread 126822] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:09:45.950978] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[10:09:45.951306] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.951346] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.951364] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[10:09:45.951374] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[10:09:45.951525] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:09:45.951689] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.951765] [D] [thread 126822] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:09:45.951910] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:09:45.951963] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.952031] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:09:45.952046] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:09:45.952152] [D] [thread 126822] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[10:09:45.952255] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.952317] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.952474] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:09:45.952561] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.952681] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.952898] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.952995] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.953205] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(23) on execution node with id 2[m
[36m[10:09:45.953288] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.953306] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.953595] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:09:45.953990] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(23) as new root of the plan.[m
[36m[10:09:45.954046] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.954067] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.954101] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.954116] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.954185] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:09:45.954274] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.954295] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:09:45.954310] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:09:45.954420] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[10:09:45.954632] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.954698] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.954839] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 2[m
[36m[10:09:45.954907] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.955055] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.955309] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:09:45.955401] [W] [thread 126822] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:09:45.955418] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.955434] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.955444] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.955557] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.955588] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:09:45.955873] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 8[m
[36m[10:09:45.955913] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.955967] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.956216] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[10:09:45.956609] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:09:45.956665] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.956686] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.956719] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.956734] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.956804] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:09:45.956854] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.956894] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:09:45.956906] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:09:45.956974] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[10:09:45.957183] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.957256] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.957313] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:09:45.957384] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.957524] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.957741] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.957829] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:09:45.957945] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:09:45.957971] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:09:45.958015] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 8[m
[36m[10:09:45.958033] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.958049] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.958085] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.958100] [D] [thread 126822] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:09:45.958140] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.958151] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.958249] [D] [thread 126822] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:09:45.958264] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.958311] [D] [thread 126822] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:09:45.958414] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[10:09:45.958726] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.958885] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.958927] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[10:09:45.958940] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[10:09:45.959419] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:09:45.959536] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.959560] [D] [thread 126822] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:09:45.959616] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:09:45.959643] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.959660] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:09:45.959669] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:09:45.959760] [D] [thread 126822] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[10:09:45.959883] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.959913] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.959944] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:09:45.960002] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.960146] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.960346] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:09:45.960456] [W] [thread 126822] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:09:45.960532] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.960556] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.960712] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.960796] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:09:45.961031] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 9[m
[36m[10:09:45.961065] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.961112] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.961315] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[10:09:45.961740] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:09:45.961795] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.961816] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.961850] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.961865] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.961934] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:09:45.961977] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.961995] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:09:45.962004] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:09:45.962094] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[10:09:45.962342] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.962387] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.962455] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:09:45.962488] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.962619] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.962885] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.962947] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:09:45.963061] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:09:45.963156] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:09:45.963233] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(18) on execution node with id 9[m
[36m[10:09:45.963250] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.963277] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.963322] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.963338] [D] [thread 126822] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:09:45.963431] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.963476] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.963599] [D] [thread 126822] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:09:45.963615] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.963670] [D] [thread 126822] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:09:45.963849] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[10:09:45.964261] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.964307] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.964325] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:09:45.964335] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[10:09:45.964514] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:09:45.964669] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.964717] [D] [thread 126822] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:09:45.964833] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:09:45.964892] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.964925] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:09:45.964936] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:09:45.965158] [D] [thread 126822] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[10:09:45.965277] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.965346] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.965382] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:09:45.965407] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.965527] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.965730] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:09:45.965868] [W] [thread 126822] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:09:45.965886] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.965936] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.966070] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.966353] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:09:45.966543] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 10[m
[36m[10:09:45.966598] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.966670] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.966941] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[10:09:45.967312] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:09:45.967448] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.967459] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.967493] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.967508] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.967578] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:09:45.967620] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.967637] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:09:45.967647] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:09:45.967736] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[10:09:45.967977] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.968041] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.968088] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:09:45.968127] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.968276] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.968492] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.968606] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:09:45.968737] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:09:45.968776] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:09:45.968878] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 10[m
[36m[10:09:45.968909] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.968958] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.969038] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.969059] [D] [thread 126822] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:09:45.969161] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.969214] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.969415] [D] [thread 126822] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:09:45.969457] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.969530] [D] [thread 126822] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:09:45.969677] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[10:09:45.970055] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.970112] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.970128] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[10:09:45.970138] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[10:09:45.970319] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:09:45.970427] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.970536] [D] [thread 126822] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:09:45.970630] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:09:45.970715] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.970773] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:09:45.970790] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:09:45.970955] [D] [thread 126822] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[10:09:45.971067] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.971104] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.971156] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:09:45.971201] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.971341] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.971568] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:09:45.971668] [W] [thread 126822] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:09:45.971685] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.971736] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.971841] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.971879] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:09:45.972162] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 11[m
[36m[10:09:45.972235] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.972253] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.972434] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[10:09:45.972748] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:09:45.972798] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.972819] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.972852] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.972867] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.972935] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:09:45.972974] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.972992] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:09:45.973025] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:09:45.973162] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 11 to the query Id 1[m
[36m[10:09:45.973260] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.973284] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.973302] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:09:45.973325] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.973406] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.973611] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:09:45.973674] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:09:45.973830] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:09:45.973850] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:09:45.974030] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(22) on execution node with id 11[m
[36m[10:09:45.974053] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.974104] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.974145] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.974173] [D] [thread 126822] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:09:45.974336] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.974360] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.974533] [D] [thread 126822] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:09:45.974582] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.974647] [D] [thread 126822] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:09:45.974817] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[10:09:45.975216] [D] [thread 126822] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:09:45.975273] [D] [thread 126822] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:09:45.975289] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[10:09:45.975299] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[10:09:45.975473] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:09:45.975545] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.975645] [D] [thread 126822] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:09:45.975740] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:09:45.975769] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.975799] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:09:45.975813] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:09:45.975898] [D] [thread 126822] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[10:09:45.976006] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.976075] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.976137] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:09:45.976198] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.976328] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.976554] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.976658] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:45.976854] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 3[m
[36m[10:09:45.976930] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.976949] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.977119] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[10:09:45.977554] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(24) as new root of the plan.[m
[36m[10:09:45.977611] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.977631] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.977663] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.977679] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.977748] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:09:45.977865] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.977891] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:09:45.977900] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:09:45.978072] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[10:09:45.978271] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.978332] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.978356] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 3[m
[36m[10:09:45.978423] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.978497] [D] [thread 126822] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:09:45.978687] [D] [thread 126822] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:09:45.978788] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:09:45.979035] [D] [thread 126822] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[10:09:45.979112] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:09:45.979131] [W] [thread 126822] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:09:45.979279] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:09:45.979649] [D] [thread 126822] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[10:09:45.979699] [D] [thread 126822] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:45.979720] [D] [thread 126822] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:45.979749] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.979762] [D] [thread 126822] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:09:45.979833] [D] [thread 126822] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:09:45.979874] [D] [thread 126822] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:09:45.979910] [W] [thread 126822] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:09:45.979920] [D] [thread 126822] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:09:45.980053] [D] [thread 126822] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[10:09:45.980241] [D] [thread 126822] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:09:45.980277] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:09:45.980353] [I] [thread 126822] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:09:45.980438] [D] [thread 126822] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:09:45.980484] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.980544] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.980560] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.980570] [D] [thread 126822] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:09:45.980621] [D] [thread 126822] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[10:09:45.980745] [I] [thread 126822] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[10:09:45.980818] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.981035] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:09:45.981088] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[10:09:45.981176] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.981514] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.981573] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.981603] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[10:09:45.981659] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.981762] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:45.981782] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.981790] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:45.982021] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:09:45.982285] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:09:45.982353] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:09:45.982392] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.982411] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.982450] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:09:45.982466] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[10:09:45.982742] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[10:09:45.983210] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[10:09:45.983381] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.983459] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.983548] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:09:45.983580] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.983598] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:45.983965] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[10:09:45.984043] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:09:45.984061] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:09:45.984271] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:09:45.984327] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:09:45.984345] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[10:09:45.984362] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:45.984396] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:09:45.984433] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.984493] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:09:45.984507] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[10:09:45.984563] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.984695] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.984814] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.984858] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:45.984901] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.984974] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:45.984989] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.984996] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:45.985086] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:09:45.985171] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:09:45.985183] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:09:45.985202] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.985219] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.985252] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:09:45.985265] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[10:09:45.985347] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[10:09:45.985511] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[10:09:45.985590] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.985631] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.985643] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:09:45.985658] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.985669] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:45.985803] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[10:09:45.985846] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:09:45.985859] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:09:45.986011] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:09:45.986033] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:09:45.986046] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[10:09:45.986057] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:45.986104] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:09:45.986137] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.986222] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:09:45.986240] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[10:09:45.986272] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.986391] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.986441] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.986482] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:09:45.986522] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.986587] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:45.986601] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.986609] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:45.986679] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:09:45.986753] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:09:45.986773] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:09:45.986790] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.986805] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.986835] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:09:45.986848] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[10:09:45.986925] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[10:09:45.987084] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[10:09:45.987176] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.987218] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.987230] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:09:45.987246] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.987258] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:45.987436] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[10:09:45.987485] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:09:45.987499] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:09:45.987646] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:09:45.987663] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:09:45.987677] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[10:09:45.987688] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:45.987722] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:09:45.987753] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.987815] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:09:45.987837] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[10:09:45.987863] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.987972] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.988022] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.988062] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[10:09:45.988101] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.988171] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:45.988186] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.988193] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:45.988257] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:09:45.988324] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:09:45.988336] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:09:45.988353] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.988369] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.988399] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:09:45.988411] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[10:09:45.988487] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[10:09:45.988653] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[10:09:45.988734] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.988776] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.988787] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:09:45.988803] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.988815] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:45.988931] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[10:09:45.988970] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:09:45.988982] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:09:45.989111] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:09:45.989134] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:09:45.989146] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[10:09:45.989156] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:45.989189] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:09:45.989227] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.989409] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.989431] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.989452] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[10:09:45.989488] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.989547] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:45.989562] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.989569] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:45.989635] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.989700] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.989713] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:09:45.989730] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.989744] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.989771] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:09:45.989782] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[10:09:45.989858] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[10:09:45.990001] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(23) as root operator.[m
[36m[10:09:45.990069] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:09:45.990107] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:09:45.990118] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:09:45.990133] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.990157] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:45.990405] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[10:09:45.990480] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:09:45.990496] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:09:45.990698] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:09:45.990718] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:09:45.990733] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:09:45.990744] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:45.990773] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:09:45.990807] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.990856] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:09:45.990870] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[10:09:45.990894] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.991012] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.991034] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.991054] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[10:09:45.991097] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.991175] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:45.991192] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.991211] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:45.991354] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:09:45.991447] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:09:45.991459] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:09:45.991479] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.991495] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.991528] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:09:45.991541] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[10:09:45.991721] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[10:09:45.992126] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[10:09:45.992284] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:45.992428] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:45.992448] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:09:45.992471] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.992487] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:45.992728] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[10:09:45.992879] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:09:45.992932] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:09:45.993409] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:09:45.993471] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:09:45.993526] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[10:09:45.993542] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:45.993610] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:09:45.993716] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.993839] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[10:09:45.993858] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[10:09:45.993930] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.994292] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.994361] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.994412] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:45.994529] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.994678] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:45.994734] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.994745] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:45.994902] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:09:45.995073] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:09:45.995092] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:09:45.995144] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.995196] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.995262] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[10:09:45.995317] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[10:09:45.995496] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[10:09:45.995931] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(18) as root operator.[m
[36m[10:09:45.996063] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:45.996182] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:45.996196] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:09:45.996216] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.996230] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:45.996463] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[10:09:45.996600] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:09:45.996640] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:09:45.996934] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:09:45.996974] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:09:45.997021] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[10:09:45.997035] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:45.997073] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:09:45.997121] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.997178] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[10:09:45.997205] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[10:09:45.997270] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.997542] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:45.997671] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:45.997750] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:09:45.997800] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.997925] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:45.998024] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:45.998039] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:45.998147] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:09:45.998337] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:09:45.998403] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:09:45.998426] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.998469] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:45.998519] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[10:09:45.998537] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[10:09:45.998662] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[10:09:45.999000] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[10:09:45.999116] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:45.999171] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:45.999183] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:09:45.999203] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:45.999269] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:45.999405] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[10:09:45.999457] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:09:45.999471] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:09:45.999640] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:09:45.999664] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:09:45.999677] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[10:09:45.999689] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:45.999754] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:09:45.999794] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:45.999854] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[10:09:45.999869] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[10:09:45.999896] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:46.000013] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.000063] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.000126] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[10:09:46.000191] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:46.000359] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:46.000382] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:46.000389] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:46.000464] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:09:46.000575] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:09:46.000710] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:09:46.000771] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.000838] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.000946] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[10:09:46.000971] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[10:09:46.001153] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[10:09:46.001561] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(22) as root operator.[m
[36m[10:09:46.001749] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:46.001891] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:46.001920] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:09:46.001975] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.002022] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:46.002337] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[10:09:46.002453] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:09:46.002531] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:09:46.002938] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:09:46.002986] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:09:46.003043] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  11[m
[36m[10:09:46.003065] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:46.003142] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:09:46.003200] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:46.003585] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.003718] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.003788] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.003844] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:46.003953] [D] [thread 126822] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:09:46.004017] [D] [thread 126822] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:09:46.004059] [D] [thread 126822] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:09:46.004172] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:46.004302] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:46.004370] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:09:46.004428] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.004446] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.004513] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:09:46.004532] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[10:09:46.004689] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[10:09:46.005037] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[10:09:46.005139] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:09:46.005185] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:09:46.005197] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:09:46.005230] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.005248] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:09:46.005445] [I] [thread 126822] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[10:09:46.005531] [D] [thread 126822] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:09:46.005605] [D] [thread 126822] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:09:46.005947] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:09:46.005984] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:09:46.006001] [D] [thread 126822] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:09:46.006012] [D] [thread 126822] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:09:46.006047] [D] [thread 126822] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:09:46.006108] [D] [thread 126822] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:09:46.006164] [D] [thread 126822] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[10:09:46.006179] [D] [thread 126822] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:09:46.006215] [D] [thread 126822] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:09:46.006237] [D] [thread 126822] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[10:09:46.006313] [D] [thread 126822] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:09:46.006443] [D] [thread 126822] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[10:09:46.006504] [D] [thread 126822] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:09:46.006548] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.006597] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.007057] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.007189] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.007237] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.007298] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.007340] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.008083] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.008155] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.008175] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.008347] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.008459] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.008574] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.008669] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.008703] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.009366] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.009430] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.009448] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.009609] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.009663] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.009786] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.009859] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.010004] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.010684] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.010750] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.010768] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.010932] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.010972] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.011061] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.011137] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.011214] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.011910] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.011974] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.011992] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.012183] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.012335] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.012432] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[10:09:46.012510] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.012542] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.013247] [D] [thread 126822] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:09:46.013607] [I] [thread 126822] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:09:46.013726] [I] [thread 126822] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.013961] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.014060] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.014081] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.014384] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.014474] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.014516] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.014580] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.014610] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.015331] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.015400] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.015419] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.015587] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.015698] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.015790] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.015834] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.015908] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.016581] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.016645] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.016663] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.016825] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.016866] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.016953] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.017053] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.017120] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.017771] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.017833] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.017850] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.017998] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.018037] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.018121] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:09:46.018172] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.018323] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.018997] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.019062] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.019078] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.019269] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.019412] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.019512] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[10:09:46.019613] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.019647] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.020395] [D] [thread 126822] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:09:46.020717] [I] [thread 126822] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:09:46.020836] [I] [thread 126822] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.021043] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.021112] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.021164] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.021433] [D] [thread 126822] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:09:46.021523] [D] [thread 126822] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:09:46.021566] [D] [thread 126822] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:09:46.021615] [D] [thread 126822] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:09:46.021649] [D] [thread 126822] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:09:46.021932] [D] [thread 126822] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:09:46.022031] [D] [thread 126822] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[10:09:46.023844] [D] [thread 126822] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:11)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.30:43389 1::37::0::0})
|    SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.31:35759 1::52::0::0})
|--ExecutionNode(id:2, ip:192.168.2.30, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.11:37323)})
|  |    CENTRALWINDOW(23)
|  |      SOURCE(25,,NetworkSourceDescriptor{tcp://192.168.2.32:38921 1::25::0::0})
|  |      SOURCE(28,,NetworkSourceDescriptor{tcp://192.168.2.33:41007 1::28::0::0})
|  |      SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.34:37611 1::31::0::0})
|  |      SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.35:40321 1::34::0::0})
|  |--ExecutionNode(id:4, ip:192.168.2.32, topologyId:4)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(27: {NetworkSinkDescriptor(partition=1::25::0::0;nodeLocation=tcp://192.168.2.30:43389)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:5, ip:192.168.2.33, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(30: {NetworkSinkDescriptor(partition=1::28::0::0;nodeLocation=tcp://192.168.2.30:43389)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:6, ip:192.168.2.34, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.30:43389)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:7, ip:192.168.2.35, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:43389)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|--ExecutionNode(id:3, ip:192.168.2.31, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.11:37323)})
|  |    CENTRALWINDOW(24)
|  |      SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.36:44447 1::40::0::0})
|  |      SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.37:44285 1::43::0::0})
|  |      SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.38:36379 1::46::0::0})
|  |      SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.39:35793 1::49::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.36, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.31:35759)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.31:35759)})
|  |  |    WATERMARKASSIGNER(18)
|  |  |      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.31:35759)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:11, ip:192.168.2.39, topologyId:11)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  |  SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.31:35759)})
|  |  |    WATERMARKASSIGNER(22)
|  |  |      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.024077] [D] [thread 126822] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[10:09:46.024119] [D] [thread 126822] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:09:46.024421] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.024478] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.024786] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.024824] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.024989] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.025021] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.025136] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.025183] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.025276] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.025317] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.025442] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.025518] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.025612] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.025666] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.025725] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.025738] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.025842] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.025859] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.025977] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.026017] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.026112] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.026162] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.026580] [D] [thread 126822] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[10:09:46.026636] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[10:09:46.026650] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.026662] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.026948] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:33389[m
[36m[10:09:46.027068] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:33389 queryId=1 querySubPlanId = 1[m
[36m[10:09:46.027446] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(27: {NetworkSinkDescriptor(partition=1::25::0::0;nodeLocation=tcp://192.168.2.30:43389)})
  WATERMARKASSIGNER(8)
    SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.027502] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.027836] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.031643] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.032894] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.033508] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.034075] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.034995] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:09:46.036143] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.036675] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.037274] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.037689] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.038268] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.038985] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:09:46.039360] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.039980] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.040660] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.041220] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.041624] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.042259] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.054908] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[10:09:46.054987] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.055018] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.055139] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:37727[m
[36m[10:09:46.055169] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:37727 queryId=1 querySubPlanId = 2[m
[36m[10:09:46.055487] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(30: {NetworkSinkDescriptor(partition=1::28::0::0;nodeLocation=tcp://192.168.2.30:43389)})
  WATERMARKASSIGNER(10)
    SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.055552] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.055739] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.056307] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.056888] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.057298] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.057837] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.058519] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:09:46.058633] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.059037] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.059612] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.060006] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.060544] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.061101] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:09:46.061428] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.062030] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.062617] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.063188] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.063589] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.064135] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.073655] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[10:09:46.073780] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.073799] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.073921] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:36071[m
[36m[10:09:46.073951] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:36071 queryId=1 querySubPlanId = 3[m
[36m[10:09:46.074370] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.30:43389)})
  WATERMARKASSIGNER(12)
    SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.074451] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.074638] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.075201] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.075783] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.076196] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.076728] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.077365] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:09:46.077479] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.077874] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.078489] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.078891] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.079434] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.079999] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:09:46.080293] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.080901] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.081460] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.082019] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.082443] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.082985] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.092576] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[10:09:46.092660] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.092691] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.092809] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:40461[m
[36m[10:09:46.092840] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:40461 queryId=1 querySubPlanId = 4[m
[36m[10:09:46.093150] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:43389)})
  WATERMARKASSIGNER(14)
    SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.093237] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.093529] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.094052] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.094665] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.095080] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.095620] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.096265] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:09:46.096379] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.096774] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.097377] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.097778] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.098363] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.098948] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:09:46.099238] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.099843] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.100393] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.100949] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.101355] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.101903] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.111515] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[10:09:46.111597] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.111628] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.111745] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:45807[m
[36m[10:09:46.111775] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:45807 queryId=1 querySubPlanId = 5[m
[36m[10:09:46.112276] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.11:37323)})
  CENTRALWINDOW(23)
    SOURCE(25,,NetworkSourceDescriptor{tcp://192.168.2.32:38921 1::25::0::0})
    SOURCE(28,,NetworkSourceDescriptor{tcp://192.168.2.33:41007 1::28::0::0})
    SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.34:37611 1::31::0::0})
    SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.35:40321 1::34::0::0})
[m
[36m[10:09:46.112333] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.112511] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.112923] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.113104] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.113334] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.113551] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.114074] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:09:46.114263] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.114647] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:09:46.114776] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.114816] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:09:46.114902] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.115572] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.116156] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.116402] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.116629] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.117169] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:38921 1::25::0::0}[m
[36m[10:09:46.117472] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.118081] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.118830] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.119405] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.119815] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.120368] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.121019] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:41007 1::28::0::0}[m
[36m[10:09:46.121330] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.121945] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.122582] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.123157] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.123556] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.124092] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.124723] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:37611 1::31::0::0}[m
[36m[10:09:46.124994] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.125608] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.126241] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.126827] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.127246] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.127781] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.128414] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:40321 1::34::0::0}[m
[36m[10:09:46.128687] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.129284] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.129880] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.130498] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.130905] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.131447] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.145664] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[10:09:46.145748] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.145779] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.145901] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.36:46129[m
[36m[10:09:46.145932] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.36:46129 queryId=1 querySubPlanId = 6[m
[36m[10:09:46.146347] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.31:35759)})
  WATERMARKASSIGNER(16)
    SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.146405] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.146623] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.147175] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.147754] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.148166] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.148712] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.149337] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:09:46.149450] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.149863] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.150564] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.151014] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.151777] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.152415] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:09:46.152749] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.153357] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.153987] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.154609] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.155024] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.155571] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.165054] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[10:09:46.165181] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.165202] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.165326] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:45171[m
[36m[10:09:46.165355] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:45171 queryId=1 querySubPlanId = 7[m
[36m[10:09:46.165726] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.31:35759)})
  WATERMARKASSIGNER(18)
    SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.165809] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.166032] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.166628] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.167219] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.167634] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.168173] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.168814] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:09:46.168929] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.169333] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.169917] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.170455] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.171029] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.171616] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:09:46.171908] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.172509] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.173063] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.173636] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.174042] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.174623] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.184256] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[10:09:46.184341] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.184362] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.184480] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:37323[m
[36m[10:09:46.184511] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:37323 queryId=1 querySubPlanId = 8[m
[36m[10:09:46.184819] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.31:35759)})
  WATERMARKASSIGNER(20)
    SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.184928] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.185198] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.185725] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.186360] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.186782] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.187324] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.187971] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:09:46.188086] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.188485] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.189053] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.189488] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.190047] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.190678] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:09:46.190972] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.191583] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.192132] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.192699] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.193101] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.193652] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.203314] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=11[m
[36m[10:09:46.203396] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.203426] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.203542] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.39:40941[m
[36m[10:09:46.203572] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.39:40941 queryId=1 querySubPlanId = 9[m
[36m[10:09:46.203906] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.31:35759)})
  WATERMARKASSIGNER(22)
    SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:09:46.204026] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.204432] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.204944] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.205536] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.205942] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.206522] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.207179] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:09:46.207293] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.207702] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.208272] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.208670] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.209217] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.209788] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:09:46.210079] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.210723] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.211283] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.211865] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.212277] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.212823] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.222776] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[10:09:46.222852] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.222874] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.222996] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:37051[m
[36m[10:09:46.223058] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:37051 queryId=1 querySubPlanId = 10[m
[36m[10:09:46.223635] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.11:37323)})
  CENTRALWINDOW(24)
    SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.36:44447 1::40::0::0})
    SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.37:44285 1::43::0::0})
    SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.38:36379 1::46::0::0})
    SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.39:35793 1::49::0::0})
[m
[36m[10:09:46.223703] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.223969] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.224338] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.224522] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.224763] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.224986] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.225482] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:09:46.225625] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.225792] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:09:46.226001] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.226054] [D] [thread 126822] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:09:46.226180] [D] [thread 126822] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:09:46.226733] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.227304] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.227546] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.227756] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.228281] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.36:44447 1::40::0::0}[m
[36m[10:09:46.228549] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.229170] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.229816] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.230440] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.230858] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.231409] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.232061] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:44285 1::43::0::0}[m
[36m[10:09:46.232341] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.232960] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.233617] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.234182] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.234615] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.235154] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.235788] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:36379 1::46::0::0}[m
[36m[10:09:46.236060] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.236663] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.237250] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.237819] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.238258] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.238825] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.239461] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.39:35793 1::49::0::0}[m
[36m[10:09:46.239734] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.240354] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.240963] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.241543] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.241944] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:09:46.242598] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.256755] [D] [thread 126822] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[10:09:46.256883] [D] [thread 126822] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:09:46.256905] [D] [thread 126822] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:09:46.257159] [D] [thread 126822] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:41583[m
[36m[10:09:46.257297] [D] [thread 126822] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:41583 queryId=1 querySubPlanId = 11[m
[36m[10:09:46.257687] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.30:43389 1::37::0::0})
  SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.31:35759 1::52::0::0})
[m
[36m[10:09:46.257757] [D] [thread 126822] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:09:46.258032] [D] [thread 126822] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:09:46.258554] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.258795] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.259086] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.259245] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.259728] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:43389 1::37::0::0}[m
[36m[10:09:46.259853] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.260047] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.260433] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.260581] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.260746] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.260981] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.261417] [D] [thread 126822] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:35759 1::52::0::0}[m
[36m[10:09:46.261529] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.261702] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.262083] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.262278] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.262450] [D] [thread 126822] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:46.262701] [D] [thread 126822] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:09:46.269472] [D] [thread 126822] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 11 queues[m
[36m[10:09:46.538619] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:46.538926] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:47.540138] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:48.063706] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:48.064016] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:49.065259] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:49.331165] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:49.331741] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:49.333388] [D] [thread 126890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:09:49.333601] [I] [thread 126890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:49.333631] [I] [thread 126890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[10:09:49.333718] [E] [thread 126890] [NodeEngine.cpp:479] [getQueryStatistics] AbstractQueryManager::getQueryStatistics: query does not exists 1[m
[36m[10:09:49.556121] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:49.556505] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:50.557678] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:09:50.954831] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[10:09:50.954981] [D] [thread 126834] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:09:50.955496] [D] [thread 126834] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:09:50.955575] [D] [thread 126834] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:09:50.955927] [D] [thread 126834] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:09:50.957241] [D] [thread 126834] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:09:50.957371] [D] [thread 126834] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:09:50.957796] [D] [thread 126834] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:09:50.958004] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[10:09:50.958078] [D] [thread 126834] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:09:50.958543] [D] [thread 126834] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:09:50.958608] [D] [thread 126834] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:09:50.958960] [D] [thread 126834] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:09:50.960358] [D] [thread 126834] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:09:50.960475] [D] [thread 126834] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:09:50.960879] [D] [thread 126834] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:09:50.961039] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[10:09:50.961113] [D] [thread 126834] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:09:50.961509] [D] [thread 126834] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:09:50.961567] [D] [thread 126834] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:09:50.961918] [D] [thread 126834] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:09:50.963348] [D] [thread 126834] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(55: {FileSinkDescriptor()})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.30:43389 1::37::0::0})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.31:35759 1::52::0::0})
[m
[32m[10:09:50.963430] [I] [thread 126834] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 11 [m
[32m[10:09:50.963558] [I] [thread 126834] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
[36m[10:09:50.963856] [D] [thread 126834] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 11[m
Dumping queryPlan: [36m[10:09:50.963981] [D] [thread 126834] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-11-2023-11-01 10:09:50 - 1. LogicalQueryPlan[m
SINK(55: {FileSinkDescriptor()})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.30:43389 1::37::0::0})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.31:35759 1::52::0::0})

[32m[10:09:50.964549] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[32m[10:09:50.964685] [I] [thread 126834] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:09:50.964703] [I] [thread 126834] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:09:50.964710] [I] [thread 126834] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:09:50.964731] [I] [thread 126834] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:50.964739] [I] [thread 126834] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:09:50.964818] [I] [thread 126834] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:09:50.965038] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[10:09:50.965183] [D] [thread 126834] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:09:50.965199] [I] [thread 126834] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:09:50.965206] [I] [thread 126834] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[10:09:50.965280] [D] [thread 126834] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:09:50.965305] [D] [thread 126834] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:09:50.965353] [D] [thread 126834] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:09:50.965374] [D] [thread 126834] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
Dumping queryPlan: PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[32m[10:09:50.965503] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[10:09:50.965614] [D] [thread 126834] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:09:50.965649] [D] [thread 126834] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:09:50.965693] [I] [thread 126834] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:09:50.965702] [I] [thread 126834] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:09:50.965716] [I] [thread 126834] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:09:50.965811] [D] [thread 126834] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:09:50.965828] [D] [thread 126834] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:09:50.965883] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[10:09:50.965959] [D] [thread 126834] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:09:50.965976] [D] [thread 126834] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:09:50.966009] [I] [thread 126834] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:09:50.966018] [I] [thread 126834] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:09:50.966027] [I] [thread 126834] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:09:50.966100] [D] [thread 126834] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
Dumping pipelineQueryPlan: [36m[10:09:50.966116] [D] [thread 126834] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[10:09:50.966263] [D] [thread 126834] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-11-2023-11-01 10:09:50 - 2. PhysicalQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 11, no. pipelines: 3
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[10:09:50.966505] [D] [thread 126834] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 11[m
Dumping pipelineQueryPlan: [32m[10:09:50.966871] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 11, no. pipelines: 3
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[10:09:50.967073] [D] [thread 126834] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[10:09:50.967092] [D] [thread 126834] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:50.967100] [D] [thread 126834] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:09:50.967558] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[10:09:50.967704] [D] [thread 126834] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:09:50.967720] [D] [thread 126834] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:50.967727] [D] [thread 126834] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:09:50.967874] [I] [thread 126834] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[10:09:50.967977] [D] [thread 126834] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:09:50.967993] [D] [thread 126834] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:09:50.968000] [D] [thread 126834] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:09:50.968093] [D] [thread 126834] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-11-01 10:09:50 - 3. AfterPipelinedQueryPlan[m
[36m[10:09:50.968450] [D] [thread 126834] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-11-01 10:09:50 - 4. AfterAddScanAndEmitPhase[m
[36m[10:09:50.968709] [D] [thread 126834] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 11[m
[36m[10:09:50.968982] [D] [thread 126834] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  59[m
[32m[10:09:50.969043] [I] [thread 126834] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[10:09:50.969470] [D] [thread 126834] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out[m
[32m[10:09:50.974232] [I] [thread 126834] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:09:50.974903] [D] [thread 126834] [DataSource.cpp:75] [DataSource] DataSource  37 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:09:50.975928] [I] [thread 126834] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:09:50.976307] [D] [thread 126834] [DataSource.cpp:75] [DataSource] DataSource  52 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:09:50.977472] [D] [thread 126834] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 11[m
[36m[10:09:50.977671] [D] [thread 126834] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  11  as a singleton[m
[36m[10:09:50.977698] [D] [thread 126834] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=11[m
[36m[10:09:50.977748] [D] [thread 126834] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 2[m
[36m[10:09:50.977787] [D] [thread 126834] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  37  not found. Creating new element with with qep [m
[36m[10:09:50.978054] [D] [thread 126834] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  52  not found. Creating new element with with qep [m
[36m[10:09:50.978129] [D] [thread 126834] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 11  pair queryId= 1  subplanId= 11[m
2023-11-01 10:09:50.978 setup: queryId=1, querySubPlanId=11; 
2023-11-01 10:09:50.978 start: queryId=1, querySubPlanId=11; 
[36m[10:09:50.978601] [D] [thread 126834] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=11[m
[36m[10:09:50.978765] [D] [thread 126834] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=11[m
[36m[10:09:50.979108] [D] [thread 126834] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::37::0::0 from 192.168.2.30[m
[36m[10:09:50.979469] [D] [thread 126834] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::37::0::0=1[m
[36m[10:09:50.979525] [D] [thread 126834] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff3000b050  started successfully[m
[36m[10:09:50.979584] [D] [thread 126834] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::52::0::0 from 192.168.2.31[m
[36m[10:09:50.979649] [D] [thread 126834] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::52::0::0=1[m
[36m[10:09:50.979670] [D] [thread 126834] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff3000ea90  started successfully[m
[36m[10:09:50.979732] [D] [thread 126834] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[10:09:50.979870] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[10:09:50.980250] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[10:09:50.981145] [D] [thread 126832] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::37::0::0[m
[36m[10:09:50.981326] [D] [thread 126834] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::37::0::0[m
[36m[10:09:50.981641] [D] [thread 126834] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[10:09:50.981696] [D] [thread 126834] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff3000b050  started successfully[m
[36m[10:09:50.981798] [D] [thread 126834] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:09:50.981879] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[10:09:50.982032] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[10:09:50.982403] [D] [thread 126832] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[10:09:50.982516] [D] [thread 126834] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[10:09:50.982662] [D] [thread 126834] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:09:50.982689] [D] [thread 126834] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff3000ea90  started successfully[m
[36m[10:09:50.982742] [D] [thread 126834] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[10:09:50.983102] [D] [thread 126834] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  11  succeeded[m
[36m[10:09:50.983211] [D] [thread 126834] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[10:09:51.559084] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:52.240774] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:52.241636] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:52.242490] [D] [thread 126903] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:09:52.242584] [I] [thread 126903] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:52.242603] [I] [thread 126903] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:09:52.242823] [I] [thread 126903] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:52.242874] [I] [thread 126903] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:09:52.435607] [D] [thread 126831] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:37323): ClientAnnouncement received for channel 0:1::37::0::0[m
[32m[10:09:52.435818] [I] [thread 126831] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::37::0::0(threadId=0) Data[m
[36m[10:09:52.435972] [D] [thread 126831] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::37::0::0(threadId=0) REGISTERED[m
[36m[10:09:52.480912] [D] [thread 126831] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:37323): ClientAnnouncement received for channel 0:1::52::0::0[m
[32m[10:09:52.481060] [I] [thread 126831] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::52::0::0(threadId=0) Data[m
[36m[10:09:52.481163] [D] [thread 126831] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::52::0::0(threadId=0) REGISTERED[m
[36m[10:09:52.571154] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:52.571706] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:53.161743] [D] [thread 126822] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[10:09:53.161888] [D] [thread 126822] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[10:09:53.162566] [D] [thread 126822] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[10:09:53.162734] [D] [thread 126822] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[10:09:53.162763] [D] [thread 126822] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[10:09:53.162998] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.32[m
[36m[10:09:53.163079] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:33389 queryId=1[m
[36m[10:09:53.167937] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.33[m
[36m[10:09:53.168021] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:37727 queryId=1[m
[36m[10:09:53.172590] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.34[m
[36m[10:09:53.172715] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:36071 queryId=1[m
[36m[10:09:53.177353] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.35[m
[36m[10:09:53.177438] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:40461 queryId=1[m
[36m[10:09:53.182080] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.30[m
[36m[10:09:53.182164] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:45807 queryId=1[m
[36m[10:09:53.186828] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.36[m
[36m[10:09:53.186908] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.36:46129 queryId=1[m
[36m[10:09:53.191567] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[10:09:53.191649] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:45171 queryId=1[m
[36m[10:09:53.196218] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[10:09:53.196343] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:37323 queryId=1[m
[36m[10:09:53.200925] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=11 and IP=192.168.2.39[m
[36m[10:09:53.201008] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.39:40941 queryId=1[m
[36m[10:09:53.205562] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.31[m
[36m[10:09:53.205646] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:37051 queryId=1[m
[36m[10:09:53.210253] [D] [thread 126822] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[10:09:53.210326] [D] [thread 126822] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:41583 queryId=1[m
[36m[10:09:53.214951] [D] [thread 126822] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 11 queues[m
[36m[10:09:53.296408] [D] [thread 126901] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[10:09:53.296507] [D] [thread 126901] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[10:09:53.296631] [D] [thread 126901] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  11   1[m
[36m[10:09:53.296724] [D] [thread 126901] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1698833393296[m
[36m[10:09:53.296746] [D] [thread 126901] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  11  succeeded[m
[36m[10:09:53.296771] [D] [thread 126901] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[10:09:53.318397] [D] [thread 126822] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[10:09:53.318497] [D] [thread 126822] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[10:09:53.319241] [I] [thread 126822] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[10:09:53.319426] [D] [thread 126822] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:09:53.573042] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:54.198819] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:54.200779] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833393000,1698833394000,9,296289297,1698833394198
1698833393000,1698833394000,8,16368544956,1698833394198
1698833393000,1698833394000,11,314353293,1698833394198
1698833393000,1698833394000,10,323525164,1698833394198
[m
[36m[10:09:54.201135] [D] [thread 126832] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1698833394201[m
[36m[10:09:54.222169] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:54.222312] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:54.224291] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833393000,1698833394000,7,26894583452,1698833394222
1698833393000,1698833394000,6,5841850459,1698833394222
1698833393000,1698833394000,4,2125981556,1698833394222
1698833393000,1698833394000,5,732564847,1698833394222
[m
[36m[10:09:54.574422] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:54.843066] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:54.843664] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:54.844375] [D] [thread 126908] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:09:54.844500] [I] [thread 126908] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:54.844520] [I] [thread 126908] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:09:54.844638] [I] [thread 126908] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:54.844651] [I] [thread 126908] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:09:55.032932] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:55.033523] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:55.184005] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:55.184082] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:55.185414] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833394000,1698833395000,9,296291572,1698833395184
1698833394000,1698833395000,8,16368547250,1698833395184
1698833394000,1698833395000,11,314355506,1698833395184
1698833394000,1698833395000,10,323527434,1698833395184
[m
[36m[10:09:55.213083] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:55.213152] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:55.214487] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833394000,1698833395000,6,5841852831,1698833395213
1698833394000,1698833395000,4,2125984022,1698833395213
1698833394000,1698833395000,5,732567386,1698833395213
1698833394000,1698833395000,7,26894585862,1698833395213
[m
[36m[10:09:56.034826] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:56.184702] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:56.184808] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:56.187102] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833395000,1698833396000,9,296294020,1698833396184
1698833395000,1698833396000,8,16368549635,1698833396184
1698833395000,1698833396000,10,323529907,1698833396184
1698833395000,1698833396000,11,314358057,1698833396184
[m
[36m[10:09:56.211203] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:56.211296] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:56.213471] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833395000,1698833396000,4,2125986241,1698833396211
1698833395000,1698833396000,6,5841855162,1698833396211
1698833395000,1698833396000,7,26894588226,1698833396211
1698833395000,1698833396000,5,732569600,1698833396211
[m
[36m[10:09:57.036147] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:57.182292] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:57.182393] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:57.184541] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833396000,1698833397000,9,296296196,1698833397182
1698833396000,1698833397000,8,16368551881,1698833397182
1698833396000,1698833397000,11,314360246,1698833397182
1698833396000,1698833397000,10,323532114,1698833397182
[m
[36m[10:09:57.219334] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:57.219429] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:57.221400] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833396000,1698833397000,4,2125988692,1698833397219
1698833396000,1698833397000,6,5841857514,1698833397219
1698833396000,1698833397000,7,26894590559,1698833397219
1698833396000,1698833397000,5,732572046,1698833397219
[m
[36m[10:09:57.368801] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:57.369377] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:57.370220] [D] [thread 126913] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:09:57.370310] [I] [thread 126913] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:57.370329] [I] [thread 126913] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:09:57.370446] [I] [thread 126913] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:57.370459] [I] [thread 126913] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:09:57.598703] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:57.599021] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:58.180357] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:58.180514] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:58.182753] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833397000,1698833398000,9,296298916,1698833398180
1698833397000,1698833398000,8,16368554499,1698833398180
1698833397000,1698833398000,11,314362933,1698833398180
1698833397000,1698833398000,10,323534828,1698833398180
[m
[36m[10:09:58.224911] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:58.225003] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:58.227217] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833397000,1698833398000,4,2125991288,1698833398225
1698833397000,1698833398000,6,5841860026,1698833398225
1698833397000,1698833398000,7,26894593112,1698833398225
1698833397000,1698833398000,5,732574540,1698833398225
[m
[36m[10:09:58.600267] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:59.183026] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:59.183131] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:59.185344] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833398000,1698833399000,9,296301103,1698833399183
1698833398000,1698833399000,8,16368556703,1698833399183
1698833398000,1698833399000,10,323536989,1698833399183
1698833398000,1698833399000,11,314365138,1698833399183
[m
[36m[10:09:59.213348] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:09:59.213424] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:09:59.215183] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833398000,1698833399000,6,5841862228,1698833399213
1698833398000,1698833399000,7,26894595299,1698833399213
1698833398000,1698833399000,5,732576699,1698833399213
1698833398000,1698833399000,4,2125993469,1698833399213
[m
[36m[10:09:59.601587] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:59.754322] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:59.754679] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:59.755856] [D] [thread 126918] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:09:59.755950] [I] [thread 126918] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:59.755970] [I] [thread 126918] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:09:59.756085] [I] [thread 126918] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:09:59.756098] [I] [thread 126918] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:09:59.967482] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:09:59.967795] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:00.187758] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:00.187863] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:00.190069] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833399000,1698833400000,9,296303591,1698833400187
1698833399000,1698833400000,8,16368559217,1698833400187
1698833399000,1698833400000,10,323539382,1698833400187
1698833399000,1698833400000,11,314367595,1698833400187
[m
[36m[10:10:00.220581] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:00.220669] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:00.222625] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833399000,1698833400000,4,2125996175,1698833400220
1698833399000,1698833400000,6,5841864780,1698833400220
1698833399000,1698833400000,7,26894597910,1698833400220
1698833399000,1698833400000,5,732579444,1698833400220
[m
[36m[10:10:00.969079] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:01.218265] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:01.218370] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:01.220620] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833400000,1698833401000,6,5841867138,1698833401218
1698833400000,1698833401000,7,26894600195,1698833401218
1698833400000,1698833401000,5,732581615,1698833401218
1698833400000,1698833401000,4,2125998427,1698833401218
[m
[36m[10:10:01.221206] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:01.221290] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:01.223472] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833400000,1698833401000,9,296306131,1698833401221
1698833400000,1698833401000,10,323541883,1698833401221
1698833400000,1698833401000,8,16368561644,1698833401221
1698833400000,1698833401000,11,314370089,1698833401221
[m
[36m[10:10:01.970424] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:02.211223] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:02.211566] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:02.212517] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:02.212603] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:02.212707] [D] [thread 126924] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:02.212774] [I] [thread 126924] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:02.212790] [I] [thread 126924] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:02.212908] [I] [thread 126924] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:02.212923] [I] [thread 126924] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:02.213783] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833401000,1698833402000,10,323544052,1698833402212
1698833401000,1698833402000,8,16368563927,1698833402212
1698833401000,1698833402000,11,314372305,1698833402212
1698833401000,1698833402000,9,296308610,1698833402212
[m
[36m[10:10:02.215892] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:02.215969] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:02.217265] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833401000,1698833402000,6,5841869502,1698833402216
1698833401000,1698833402000,7,26894602644,1698833402216
1698833401000,1698833402000,5,732584228,1698833402216
1698833401000,1698833402000,4,2126000991,1698833402216
[m
[36m[10:10:02.432795] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:02.433122] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:03.204975] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:03.205078] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:03.207392] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833402000,1698833403000,8,16368566584,1698833403205
1698833402000,1698833403000,10,323546786,1698833403205
1698833402000,1698833403000,11,314375014,1698833403205
1698833402000,1698833403000,9,296311161,1698833403205
[m
[36m[10:10:03.214172] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:03.214309] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:03.215913] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833402000,1698833403000,6,5841872024,1698833403214
1698833402000,1698833403000,7,26894605118,1698833403214
1698833402000,1698833403000,5,732586666,1698833403214
1698833402000,1698833403000,4,2126003386,1698833403214
[m
[36m[10:10:03.434388] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:04.204299] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:04.204401] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:04.206733] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833403000,1698833404000,10,323548937,1698833404204
1698833403000,1698833404000,8,16368568712,1698833404204
1698833403000,1698833404000,11,314377225,1698833404204
1698833403000,1698833404000,9,296313429,1698833404204
[m
[36m[10:10:04.219828] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:04.219902] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:04.221466] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833403000,1698833404000,6,5841874204,1698833404219
1698833403000,1698833404000,7,26894607342,1698833404219
1698833403000,1698833404000,4,2126005601,1698833404219
1698833403000,1698833404000,5,732588853,1698833404219
[m
[36m[10:10:04.435675] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:04.576213] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:04.576555] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:04.577627] [D] [thread 126929] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:04.577749] [I] [thread 126929] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:04.577769] [I] [thread 126929] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:04.577893] [I] [thread 126929] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:04.577906] [I] [thread 126929] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:04.795711] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:04.796028] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:05.211336] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:05.211444] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:05.213669] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833404000,1698833405000,10,323551597,1698833405211
1698833404000,1698833405000,8,16368571331,1698833405211
1698833404000,1698833405000,11,314379712,1698833405211
1698833404000,1698833405000,9,296315960,1698833405211
[m
[36m[10:10:05.216253] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:05.216520] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:05.218550] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833404000,1698833405000,6,5841876840,1698833405216
1698833404000,1698833405000,7,26894609959,1698833405216
1698833404000,1698833405000,4,2126008212,1698833405216
1698833404000,1698833405000,5,732591504,1698833405216
[m
[36m[10:10:05.797266] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:06.196047] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:06.196141] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:06.198080] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833405000,1698833406000,8,16368573582,1698833406196
1698833405000,1698833406000,11,314382017,1698833406196
1698833405000,1698833406000,9,296318292,1698833406196
1698833405000,1698833406000,10,323553950,1698833406196
[m
[36m[10:10:06.215988] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:06.216070] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:06.217976] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833405000,1698833406000,6,5841879099,1698833406216
1698833405000,1698833406000,7,26894612229,1698833406216
1698833405000,1698833406000,4,2126010373,1698833406216
1698833405000,1698833406000,5,732593661,1698833406216
[m
[36m[10:10:06.798530] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:07.058750] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:07.059107] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:07.060050] [D] [thread 126934] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:07.060143] [I] [thread 126934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:07.060162] [I] [thread 126934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:07.060279] [I] [thread 126934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:07.060292] [I] [thread 126934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:07.220936] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:07.221044] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:07.223372] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833406000,1698833407000,8,16368576086,1698833407221
1698833406000,1698833407000,11,314384044,1698833407221
1698833406000,1698833407000,9,296320552,1698833407221
1698833406000,1698833407000,10,323556140,1698833407221
[m
[36m[10:10:07.223953] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:07.224031] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:07.226128] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833406000,1698833407000,6,5841881527,1698833407224
1698833406000,1698833407000,7,26894614575,1698833407224
1698833406000,1698833407000,4,2126012865,1698833407224
1698833406000,1698833407000,5,732596109,1698833407224
[m
[36m[10:10:07.360947] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:07.361272] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:08.211386] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:08.211494] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:08.213452] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833407000,1698833408000,11,314386725,1698833408211
1698833407000,1698833408000,9,296322896,1698833408211
1698833407000,1698833408000,10,323558710,1698833408211
1698833407000,1698833408000,8,16368578489,1698833408211
[m
[36m[10:10:08.219635] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:08.219715] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:08.221577] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833407000,1698833408000,6,5841883725,1698833408219
1698833407000,1698833408000,7,26894616813,1698833408219
1698833407000,1698833408000,4,2126015016,1698833408219
1698833407000,1698833408000,5,732598285,1698833408219
[m
[36m[10:10:08.362538] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:09.206417] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:09.206525] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:09.208315] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833408000,1698833409000,11,314388896,1698833409206
1698833408000,1698833409000,10,323560950,1698833409206
1698833408000,1698833409000,9,296325086,1698833409206
1698833408000,1698833409000,8,16368580677,1698833409206
[m
[36m[10:10:09.220931] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:09.221017] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:09.222752] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833408000,1698833409000,6,5841885986,1698833409221
1698833408000,1698833409000,7,26894619043,1698833409221
1698833408000,1698833409000,4,2126017308,1698833409221
1698833408000,1698833409000,5,732600616,1698833409221
[m
[36m[10:10:09.363831] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:09.394617] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:09.395171] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:09.395937] [D] [thread 126939] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:09.396034] [I] [thread 126939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:09.396053] [I] [thread 126939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:09.396168] [I] [thread 126939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:09.396180] [I] [thread 126939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:09.606897] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:09.607447] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:10.159604] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:10.159680] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:10.160978] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833409000,1698833410000,7,26894621758,1698833410159
1698833409000,1698833410000,6,5841888662,1698833410159
1698833409000,1698833410000,4,2126019862,1698833410159
1698833409000,1698833410000,5,732603045,1698833410159
[m
[36m[10:10:10.194146] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:10.194260] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:10.195547] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833409000,1698833410000,11,314391509,1698833410194
1698833409000,1698833410000,10,323563581,1698833410194
1698833409000,1698833410000,9,296327782,1698833410194
1698833409000,1698833410000,8,16368583395,1698833410194
[m
[36m[10:10:10.608710] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:11.154803] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:11.154908] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:11.157071] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833410000,1698833411000,5,732605119,1698833411154
1698833410000,1698833411000,7,26894623909,1698833411154
1698833410000,1698833411000,6,5841890815,1698833411154
1698833410000,1698833411000,4,2126022094,1698833411154
[m
[36m[10:10:11.182657] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:11.182740] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:11.184572] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833410000,1698833411000,11,314393816,1698833411182
1698833410000,1698833411000,10,323565824,1698833411182
1698833410000,1698833411000,9,296329991,1698833411182
1698833410000,1698833411000,8,16368585569,1698833411182
[m
[36m[10:10:11.610076] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:11.871653] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:11.872268] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:11.872981] [D] [thread 126944] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:11.873075] [I] [thread 126944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:11.873094] [I] [thread 126944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:11.873210] [I] [thread 126944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:11.873223] [I] [thread 126944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:12.086112] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:12.086781] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:12.152330] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:12.152436] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:12.154773] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833411000,1698833412000,5,732607730,1698833412152
1698833411000,1698833412000,7,26894626431,1698833412152
1698833411000,1698833412000,6,5841893471,1698833412152
1698833411000,1698833412000,4,2126024678,1698833412152
[m
[36m[10:10:12.174943] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:12.175036] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:12.176935] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833411000,1698833412000,10,323568209,1698833412175
1698833411000,1698833412000,11,314396219,1698833412175
1698833411000,1698833412000,8,16368588026,1698833412175
1698833411000,1698833412000,9,296332432,1698833412175
[m
[36m[10:10:13.088041] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:13.150325] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:13.150415] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:13.152624] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833412000,1698833413000,5,732609957,1698833413150
1698833412000,1698833413000,7,26894628736,1698833413150
1698833412000,1698833413000,6,5841895725,1698833413150
1698833412000,1698833413000,4,2126026943,1698833413150
[m
[36m[10:10:13.167410] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:13.167501] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:13.169405] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833412000,1698833413000,10,323570736,1698833413167
1698833412000,1698833413000,11,314398721,1698833413167
1698833412000,1698833413000,9,296334883,1698833413167
1698833412000,1698833413000,8,16368590388,1698833413167
[m
[36m[10:10:14.089343] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:14.150810] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:14.150901] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:14.153107] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833413000,1698833414000,7,26894631021,1698833414150
1698833413000,1698833414000,5,732612363,1698833414150
1698833413000,1698833414000,6,5841898074,1698833414150
1698833413000,1698833414000,4,2126029330,1698833414150
[m
[36m[10:10:14.165159] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:14.165236] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:14.166972] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833413000,1698833414000,10,323572918,1698833414165
1698833413000,1698833414000,11,314400889,1698833414165
1698833413000,1698833414000,9,296337122,1698833414165
1698833413000,1698833414000,8,16368592627,1698833414165
[m
[36m[10:10:14.272422] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:14.272754] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:14.273901] [D] [thread 126949] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:14.273994] [I] [thread 126949] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:14.274015] [I] [thread 126949] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:14.274131] [I] [thread 126949] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:14.274143] [I] [thread 126949] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:14.472656] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:14.472988] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:15.154708] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:15.154816] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:15.156974] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833414000,1698833415000,10,323575584,1698833415154
1698833414000,1698833415000,11,314403540,1698833415154
1698833414000,1698833415000,9,296339737,1698833415154
1698833414000,1698833415000,8,16368595254,1698833415154
[m
[36m[10:10:15.223060] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:15.223143] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:15.225206] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833414000,1698833415000,7,26894633750,1698833415223
1698833414000,1698833415000,5,732614820,1698833415223
1698833414000,1698833415000,6,5841900645,1698833415223
1698833414000,1698833415000,4,2126031767,1698833415223
[m
[36m[10:10:15.474392] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:16.137455] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:16.137564] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:16.139880] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833415000,1698833416000,5,732616986,1698833416137
1698833415000,1698833416000,4,2126033931,1698833416137
1698833415000,1698833416000,6,5841902756,1698833416137
1698833415000,1698833416000,7,26894635881,1698833416137
[m
[36m[10:10:16.144005] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:16.144076] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:16.145582] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833415000,1698833416000,10,323577815,1698833416144
1698833415000,1698833416000,11,314405806,1698833416144
1698833415000,1698833416000,9,296341908,1698833416144
1698833415000,1698833416000,8,16368597423,1698833416144
[m
[36m[10:10:16.475658] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:16.619560] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:16.619898] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:16.621029] [D] [thread 126954] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:16.621124] [I] [thread 126954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:16.621144] [I] [thread 126954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:16.621259] [I] [thread 126954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:16.621272] [I] [thread 126954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:16.827724] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:16.828080] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:17.135830] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:17.135907] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:17.137134] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833416000,1698833417000,10,323580334,1698833417135
1698833416000,1698833417000,11,314408323,1698833417135
1698833416000,1698833417000,9,296344495,1698833417135
1698833416000,1698833417000,8,16368600035,1698833417135
[m
[36m[10:10:17.220854] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:17.220928] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:17.222108] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833416000,1698833417000,7,26894638381,1698833417220
1698833416000,1698833417000,5,732619880,1698833417220
1698833416000,1698833417000,6,5841905487,1698833417220
1698833416000,1698833417000,4,2126036695,1698833417220
[m
[36m[10:10:17.829336] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:18.134714] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:18.134808] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:18.136746] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833417000,1698833418000,10,323582734,1698833418134
1698833417000,1698833418000,11,314410720,1698833418134
1698833417000,1698833418000,9,296346843,1698833418134
1698833417000,1698833418000,8,16368602357,1698833418134
[m
[36m[10:10:18.217612] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:18.217677] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:18.219463] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833417000,1698833418000,7,26894640823,1698833418217
1698833417000,1698833418000,6,5841907717,1698833418217
1698833417000,1698833418000,4,2126038844,1698833418217
1698833417000,1698833418000,5,732622196,1698833418217
[m
[36m[10:10:18.830617] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:19.021777] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:19.022131] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:19.023168] [D] [thread 126959] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:19.023267] [I] [thread 126959] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:19.023286] [I] [thread 126959] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:19.023400] [I] [thread 126959] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:19.023423] [I] [thread 126959] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:19.212187] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:19.212271] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:19.213694] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833418000,1698833419000,6,5841910138,1698833419212
1698833418000,1698833419000,4,2126041359,1698833419212
1698833418000,1698833419000,7,26894643416,1698833419212
1698833418000,1698833419000,5,732624711,1698833419212
[m
[36m[10:10:19.217401] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:19.217482] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:19.218806] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833418000,1698833419000,10,323585168,1698833419217
1698833418000,1698833419000,11,314412995,1698833419217
1698833418000,1698833419000,9,296349192,1698833419217
1698833418000,1698833419000,8,16368604739,1698833419217
[m
[36m[10:10:19.231400] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:19.231735] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:20.213609] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:20.213718] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:20.215964] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833419000,1698833420000,11,314415611,1698833420213
1698833419000,1698833420000,9,296351686,1698833420213
1698833419000,1698833420000,8,16368607202,1698833420213
1698833419000,1698833420000,10,323587798,1698833420213
[m
[36m[10:10:20.221004] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:20.221093] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:20.223258] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833419000,1698833420000,6,5841912591,1698833420221
1698833419000,1698833420000,4,2126043821,1698833420221
1698833419000,1698833420000,7,26894645831,1698833420221
1698833419000,1698833420000,5,732627045,1698833420221
[m
[36m[10:10:20.232884] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:21.207294] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:21.207401] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:21.209613] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833420000,1698833421000,9,296353879,1698833421207
1698833420000,1698833421000,11,314417832,1698833421207
1698833420000,1698833421000,8,16368609423,1698833421207
1698833420000,1698833421000,10,323589993,1698833421207
[m
[36m[10:10:21.222895] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:21.222988] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:21.224695] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833420000,1698833421000,6,5841914984,1698833421223
1698833420000,1698833421000,7,26894648089,1698833421223
1698833420000,1698833421000,5,732629347,1698833421223
1698833420000,1698833421000,4,2126046280,1698833421223
[m
[36m[10:10:21.234113] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:21.404705] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:21.405219] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:21.406076] [D] [thread 126964] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:21.406169] [I] [thread 126964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:21.406218] [I] [thread 126964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:21.406341] [I] [thread 126964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:21.406353] [I] [thread 126964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:21.637680] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:21.638136] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:22.198904] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:22.199008] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:22.201242] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833421000,1698833422000,11,314420385,1698833422199
1698833421000,1698833422000,9,296356532,1698833422199
1698833421000,1698833422000,8,16368612105,1698833422199
1698833421000,1698833422000,10,323592657,1698833422199
[m
[36m[10:10:22.227423] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:22.227506] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:22.229375] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833421000,1698833422000,7,26894650674,1698833422227
1698833421000,1698833422000,5,732631872,1698833422227
1698833421000,1698833422000,4,2126048748,1698833422227
1698833421000,1698833422000,6,5841917639,1698833422227
[m
[36m[10:10:22.639446] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:23.215244] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:23.215341] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:23.217291] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833422000,1698833423000,8,16368614418,1698833423215
1698833422000,1698833423000,11,314422841,1698833423215
1698833422000,1698833423000,9,296358699,1698833423215
1698833422000,1698833423000,10,323594877,1698833423215
[m
[36m[10:10:23.224975] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:23.225052] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:23.226789] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833422000,1698833423000,7,26894652932,1698833423225
1698833422000,1698833423000,5,732634063,1698833423225
1698833422000,1698833423000,4,2126050983,1698833423225
1698833422000,1698833423000,6,5841919833,1698833423225
[m
[36m[10:10:23.640731] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:23.743395] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:23.743995] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:23.744777] [D] [thread 126969] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:23.744868] [I] [thread 126969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:23.744887] [I] [thread 126969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:23.745001] [I] [thread 126969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:23.745014] [I] [thread 126969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:23.975488] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:23.975829] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:24.212826] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:24.212939] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:24.215253] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833423000,1698833424000,7,26894655527,1698833424213
1698833423000,1698833424000,5,732636726,1698833424213
1698833423000,1698833424000,4,2126053583,1698833424213
1698833423000,1698833424000,6,5841922335,1698833424213
[m
[36m[10:10:24.215860] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:24.215939] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:24.217960] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833423000,1698833424000,9,296361276,1698833424215
1698833423000,1698833424000,10,323597373,1698833424215
1698833423000,1698833424000,8,16368617115,1698833424215
1698833423000,1698833424000,11,314425432,1698833424215
[m
[36m[10:10:24.977066] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:25.208661] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:25.208735] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:25.210026] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833424000,1698833425000,6,5841924463,1698833425208
1698833424000,1698833425000,7,26894657922,1698833425208
1698833424000,1698833425000,5,732638946,1698833425208
1698833424000,1698833425000,4,2126055802,1698833425208
[m
[36m[10:10:25.217254] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:25.217328] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:25.218679] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833424000,1698833425000,9,296363775,1698833425217
1698833424000,1698833425000,8,16368619408,1698833425217
1698833424000,1698833425000,10,323599780,1698833425217
1698833424000,1698833425000,11,314427861,1698833425217
[m
[36m[10:10:25.978359] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:26.169910] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:26.170271] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:26.171304] [D] [thread 126975] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:26.171399] [I] [thread 126975] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:26.171418] [I] [thread 126975] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:26.171534] [I] [thread 126975] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:26.171546] [I] [thread 126975] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:26.218616] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:26.218723] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:26.220875] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833425000,1698833426000,6,5841927021,1698833426218
1698833425000,1698833426000,7,26894660283,1698833426218
1698833425000,1698833426000,5,732641457,1698833426218
1698833425000,1698833426000,4,2126058332,1698833426218
[m
[36m[10:10:26.221475] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:26.221554] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:26.223667] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833425000,1698833426000,10,323601981,1698833426221
1698833425000,1698833426000,8,16368621756,1698833426221
1698833425000,1698833426000,11,314430029,1698833426221
1698833425000,1698833426000,9,296366189,1698833426221
[m
[36m[10:10:26.334350] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:26.334691] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:27.210142] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:27.210303] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:27.212527] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833426000,1698833427000,10,323604655,1698833427210
1698833426000,1698833427000,8,16368624289,1698833427210
1698833426000,1698833427000,11,314432736,1698833427210
1698833426000,1698833427000,9,296368788,1698833427210
[m
[36m[10:10:27.216732] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:27.216805] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:27.218373] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833426000,1698833427000,7,26894662809,1698833427216
1698833426000,1698833427000,5,732643840,1698833427216
1698833426000,1698833427000,4,2126060664,1698833427216
1698833426000,1698833427000,6,5841929581,1698833427216
[m
[36m[10:10:27.335929] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:28.205948] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:28.206035] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:28.208199] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833427000,1698833428000,10,323606814,1698833428206
1698833427000,1698833428000,8,16368626453,1698833428206
1698833427000,1698833428000,11,314434923,1698833428206
1698833427000,1698833428000,9,296370909,1698833428206
[m
[36m[10:10:28.222903] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:28.223004] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:28.224795] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833427000,1698833428000,7,26894664931,1698833428223
1698833427000,1698833428000,5,732646021,1698833428223
1698833427000,1698833428000,4,2126062879,1698833428223
1698833427000,1698833428000,6,5841931748,1698833428223
[m
[36m[10:10:28.337213] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:28.635958] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:28.637179] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:28.637901] [D] [thread 126982] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:28.638015] [I] [thread 126982] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:28.638033] [I] [thread 126982] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:28.638154] [I] [thread 126982] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:28.638258] [I] [thread 126982] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:28.879899] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:28.880550] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:29.209464] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:29.209569] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:29.211602] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833428000,1698833429000,10,323609297,1698833429209
1698833428000,1698833429000,8,16368629103,1698833429209
1698833428000,1698833429000,11,314437377,1698833429209
1698833428000,1698833429000,9,296373538,1698833429209
[m
[36m[10:10:29.222949] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:29.223039] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:29.224805] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833428000,1698833429000,7,26894667644,1698833429223
1698833428000,1698833429000,5,732648734,1698833429223
1698833428000,1698833429000,4,2126065541,1698833429223
1698833428000,1698833429000,6,5841934458,1698833429223
[m
[36m[10:10:29.881768] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:30.206678] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:30.206791] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:30.209072] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833429000,1698833430000,10,323611719,1698833430206
1698833429000,1698833430000,8,16368631323,1698833430206
1698833429000,1698833430000,11,314439793,1698833430206
1698833429000,1698833430000,9,296375801,1698833430206
[m
[36m[10:10:30.220205] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:30.220274] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:30.221710] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833429000,1698833430000,7,26894669847,1698833430220
1698833429000,1698833430000,4,2126067700,1698833430220
1698833429000,1698833430000,5,732650894,1698833430220
1698833429000,1698833430000,6,5841936627,1698833430220
[m
[36m[10:10:30.883049] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:31.026515] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:31.027188] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:31.027931] [D] [thread 126987] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:31.028046] [I] [thread 126987] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:31.028065] [I] [thread 126987] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:31.028221] [I] [thread 126987] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:31.028241] [I] [thread 126987] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:31.192903] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:31.193008] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:31.195299] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833430000,1698833431000,8,16368633654,1698833431193
1698833430000,1698833431000,10,323613976,1698833431193
1698833430000,1698833431000,11,314442014,1698833431193
1698833430000,1698833431000,9,296378132,1698833431193
[m
[36m[10:10:31.216324] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:31.216419] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:31.218426] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833430000,1698833431000,7,26894672207,1698833431216
1698833430000,1698833431000,4,2126070153,1698833431216
1698833430000,1698833431000,5,732653352,1698833431216
1698833430000,1698833431000,6,5841939051,1698833431216
[m
[36m[10:10:31.257030] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:31.257593] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:32.179034] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:32.179108] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:32.180504] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833431000,1698833432000,8,16368636226,1698833432179
1698833431000,1698833432000,10,323616577,1698833432179
1698833431000,1698833432000,11,314444647,1698833432179
1698833431000,1698833432000,9,296380722,1698833432179
[m
[36m[10:10:32.206787] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:32.206872] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:32.208436] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833431000,1698833432000,4,2126072620,1698833432206
1698833431000,1698833432000,7,26894674749,1698833432206
1698833431000,1698833432000,5,732655820,1698833432206
1698833431000,1698833432000,6,5841941565,1698833432206
[m
[36m[10:10:32.258889] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:33.171138] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:33.171236] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:33.173407] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833432000,1698833433000,8,16368638410,1698833433171
1698833432000,1698833433000,10,323618787,1698833433171
1698833432000,1698833433000,11,314446868,1698833433171
1698833432000,1698833433000,9,296382883,1698833433171
[m
[36m[10:10:33.211951] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:33.212034] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:33.214181] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833432000,1698833433000,4,2126074927,1698833433212
1698833432000,1698833433000,7,26894676968,1698833433212
1698833432000,1698833433000,5,732658154,1698833433212
1698833432000,1698833433000,6,5841943858,1698833433212
[m
[36m[10:10:33.260223] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:33.419230] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:33.419746] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:33.420572] [D] [thread 126995] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:33.420665] [I] [thread 126995] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:33.420684] [I] [thread 126995] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:33.420803] [I] [thread 126995] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:33.420815] [I] [thread 126995] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:33.658484] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:33.659046] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:34.175075] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:34.175180] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:34.177653] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833433000,1698833434000,8,16368641015,1698833434175
1698833433000,1698833434000,10,323621309,1698833434175
1698833433000,1698833434000,11,314449401,1698833434175
1698833433000,1698833434000,9,296385479,1698833434175
[m
[36m[10:10:34.199291] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:34.199385] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:34.201629] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833433000,1698833434000,4,2126077394,1698833434199
1698833433000,1698833434000,7,26894679606,1698833434199
1698833433000,1698833434000,5,732660630,1698833434199
1698833433000,1698833434000,6,5841946383,1698833434199
[m
[36m[10:10:34.660300] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:35.192042] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:35.192147] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:35.194693] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833434000,1698833435000,4,2126079602,1698833435192
1698833434000,1698833435000,7,26894681833,1698833435192
1698833434000,1698833435000,5,732662866,1698833435192
1698833434000,1698833435000,6,5841948600,1698833435192
[m
[36m[10:10:35.228431] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:35.228535] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:35.230615] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833434000,1698833435000,8,16368643344,1698833435228
1698833434000,1698833435000,10,323623615,1698833435228
1698833434000,1698833435000,11,314451691,1698833435228
1698833434000,1698833435000,9,296387711,1698833435228
[m
[36m[10:10:35.661535] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:35.939577] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:35.940104] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:35.940936] [D] [thread 127000] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:35.941029] [I] [thread 127000] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:35.941049] [I] [thread 127000] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:35.941164] [I] [thread 127000] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:35.941177] [I] [thread 127000] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:36.128007] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:36.128369] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:36.186832] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:36.186939] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:36.189101] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833435000,1698833436000,4,2126082257,1698833436186
1698833435000,1698833436000,7,26894684323,1698833436186
1698833435000,1698833436000,5,732665504,1698833436186
1698833435000,1698833436000,6,5841951148,1698833436186
[m
[36m[10:10:36.221665] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:36.221744] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:36.223475] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833435000,1698833436000,10,323626098,1698833436221
1698833435000,1698833436000,11,314454018,1698833436221
1698833435000,1698833436000,9,296390095,1698833436221
1698833435000,1698833436000,8,16368645944,1698833436221
[m
[36m[10:10:37.129598] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:37.185115] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:37.185202] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:37.187098] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833436000,1698833437000,4,2126084471,1698833437185
1698833436000,1698833437000,7,26894686642,1698833437185
1698833436000,1698833437000,5,732667691,1698833437185
1698833436000,1698833437000,6,5841953410,1698833437185
[m
[36m[10:10:37.219469] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:37.219554] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:37.221408] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833436000,1698833437000,9,296392546,1698833437219
1698833436000,1698833437000,11,314456579,1698833437219
1698833436000,1698833437000,10,323628744,1698833437219
1698833436000,1698833437000,8,16368648312,1698833437219
[m
[36m[10:10:38.130967] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:38.189354] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:38.189459] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:38.191498] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833437000,1698833438000,4,2126086740,1698833438189
1698833437000,1698833438000,7,26894688882,1698833438189
1698833437000,1698833438000,5,732670108,1698833438189
1698833437000,1698833438000,6,5841955729,1698833438189
[m
[36m[10:10:38.207327] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:38.207409] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:38.209114] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833437000,1698833438000,9,296394753,1698833438207
1698833437000,1698833438000,11,314458759,1698833438207
1698833437000,1698833438000,10,323630901,1698833438207
1698833437000,1698833438000,8,16368650559,1698833438207
[m
[36m[10:10:38.374673] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:38.375000] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:38.376001] [D] [thread 127005] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:38.376093] [I] [thread 127005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:38.376112] [I] [thread 127005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:38.376228] [I] [thread 127005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:38.376240] [I] [thread 127005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:38.592350] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:38.592708] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:39.198296] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:39.198365] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:39.199469] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833438000,1698833439000,9,296397468,1698833439198
1698833438000,1698833439000,11,314461357,1698833439198
1698833438000,1698833439000,8,16368653228,1698833439198
1698833438000,1698833439000,10,323633610,1698833439198
[m
[36m[10:10:39.219530] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:39.219597] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:39.221372] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833438000,1698833439000,4,2126089431,1698833439219
1698833438000,1698833439000,7,26894691600,1698833439219
1698833438000,1698833439000,6,5841958309,1698833439219
1698833438000,1698833439000,5,732672624,1698833439219
[m
[36m[10:10:39.594080] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:40.190458] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:40.190565] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:40.192572] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833439000,1698833440000,9,296399606,1698833440190
1698833439000,1698833440000,11,314463627,1698833440190
1698833439000,1698833440000,8,16368655375,1698833440190
1698833439000,1698833440000,10,323635814,1698833440190
[m
[36m[10:10:40.203010] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:40.203111] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:40.204688] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833439000,1698833440000,7,26894693755,1698833440203
1698833439000,1698833440000,6,5841960465,1698833440203
1698833439000,1698833440000,5,732674768,1698833440203
1698833439000,1698833440000,4,2126091777,1698833440203
[m
[36m[10:10:40.595451] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:40.775485] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:40.776095] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:40.776819] [D] [thread 127010] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:40.776913] [I] [thread 127010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:40.776933] [I] [thread 127010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:40.777048] [I] [thread 127010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:40.777061] [I] [thread 127010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:41.010126] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:41.010751] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:41.185604] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:41.185710] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:41.187730] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833440000,1698833441000,9,296402076,1698833441185
1698833440000,1698833441000,11,314465976,1698833441185
1698833440000,1698833441000,8,16368657921,1698833441185
1698833440000,1698833441000,10,323638255,1698833441185
[m
[36m[10:10:41.190997] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:41.191081] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:41.192989] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833440000,1698833441000,7,26894696279,1698833441191
1698833440000,1698833441000,5,732677396,1698833441191
1698833440000,1698833441000,6,5841963076,1698833441191
1698833440000,1698833441000,4,2126094426,1698833441191
[m
[36m[10:10:42.012053] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:42.181611] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:42.181696] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:42.183493] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833441000,1698833442000,7,26894698662,1698833442181
1698833441000,1698833442000,5,732679629,1698833442181
1698833441000,1698833442000,4,2126096559,1698833442181
1698833441000,1698833442000,6,5841965360,1698833442181
[m
[36m[10:10:42.212604] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:42.212703] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:42.214920] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833441000,1698833442000,9,296404611,1698833442212
1698833441000,1698833442000,11,314468483,1698833442212
1698833441000,1698833442000,10,323640734,1698833442212
1698833441000,1698833442000,8,16368660286,1698833442212
[m
[36m[10:10:43.013374] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:43.174649] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:43.174759] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:43.177001] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833442000,1698833443000,7,26894700893,1698833443174
1698833442000,1698833443000,5,732682034,1698833443174
1698833442000,1698833443000,4,2126099031,1698833443174
1698833442000,1698833443000,6,5841967721,1698833443174
[m
[36m[10:10:43.202107] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:43.202253] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:43.203565] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833442000,1698833443000,11,314470658,1698833443202
1698833442000,1698833443000,10,323642913,1698833443202
1698833442000,1698833443000,8,16368662544,1698833443202
1698833442000,1698833443000,9,296406939,1698833443202
[m
[36m[10:10:43.221711] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:43.222307] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:43.223059] [D] [thread 127015] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:43.223145] [I] [thread 127015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:43.223164] [I] [thread 127015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:43.223278] [I] [thread 127015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:43.223290] [I] [thread 127015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:43.446028] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:43.446361] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:44.175610] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:44.175717] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:44.177869] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833443000,1698833444000,7,26894703468,1698833444175
1698833443000,1698833444000,4,2126101403,1698833444175
1698833443000,1698833444000,6,5841970180,1698833444175
1698833443000,1698833444000,5,732684463,1698833444175
[m
[36m[10:10:44.192428] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:44.192532] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:44.194129] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833443000,1698833444000,11,314473259,1698833444192
1698833443000,1698833444000,10,323645549,1698833444192
1698833443000,1698833444000,8,16368665101,1698833444192
1698833443000,1698833444000,9,296409524,1698833444192
[m
[36m[10:10:44.447608] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:45.190176] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:45.190336] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:45.192609] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833444000,1698833445000,11,314475493,1698833445190
1698833444000,1698833445000,10,323647740,1698833445190
1698833444000,1698833445000,8,16368667318,1698833445190
1698833444000,1698833445000,9,296411742,1698833445190
[m
[36m[10:10:45.227079] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:45.227174] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:45.229072] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833444000,1698833445000,7,26894705781,1698833445227
1698833444000,1698833445000,4,2126103638,1698833445227
1698833444000,1698833445000,6,5841972378,1698833445227
1698833444000,1698833445000,5,732686714,1698833445227
[m
[36m[10:10:45.448932] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:45.644509] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:45.644837] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:45.645889] [D] [thread 127020] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:45.645979] [I] [thread 127020] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:45.645998] [I] [thread 127020] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:45.646114] [I] [thread 127020] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:45.646128] [I] [thread 127020] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:45.907771] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:45.908104] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:46.223913] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:46.224014] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:46.226000] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833445000,1698833446000,11,314478103,1698833446224
1698833445000,1698833446000,10,323650289,1698833446224
1698833445000,1698833446000,8,16368669919,1698833446224
1698833445000,1698833446000,9,296414296,1698833446224
[m
[36m[10:10:46.226596] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:46.226674] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:46.228510] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833445000,1698833446000,4,2126106282,1698833446226
1698833445000,1698833446000,6,5841975096,1698833446226
1698833445000,1698833446000,5,732689389,1698833446226
1698833445000,1698833446000,7,26894708565,1698833446226
[m
[36m[10:10:46.909264] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:47.207346] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:47.207422] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:47.208730] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833446000,1698833447000,4,2126108510,1698833447207
1698833446000,1698833447000,6,5841977268,1698833447207
1698833446000,1698833447000,5,732691588,1698833447207
1698833446000,1698833447000,7,26894710751,1698833447207
[m
[36m[10:10:47.210465] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:47.210539] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:47.211852] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833446000,1698833447000,10,323652644,1698833447210
1698833446000,1698833447000,8,16368672176,1698833447210
1698833446000,1698833447000,9,296416603,1698833447210
1698833446000,1698833447000,11,314480663,1698833447210
[m
[36m[10:10:47.910565] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:48.183072] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:48.183378] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:48.184502] [D] [thread 127025] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:48.184605] [I] [thread 127025] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:48.184624] [I] [thread 127025] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:48.184739] [I] [thread 127025] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:48.184805] [I] [thread 127025] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:48.210974] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:48.211081] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:48.213328] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833447000,1698833448000,10,323654916,1698833448211
1698833447000,1698833448000,8,16368674496,1698833448211
1698833447000,1698833448000,9,296418938,1698833448211
1698833447000,1698833448000,11,314482836,1698833448211
[m
[36m[10:10:48.216846] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:48.216927] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:48.218669] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833447000,1698833448000,4,2126111062,1698833448216
1698833447000,1698833448000,6,5841979629,1698833448216
1698833447000,1698833448000,5,732693980,1698833448216
1698833447000,1698833448000,7,26894713063,1698833448216
[m
[36m[10:10:48.397449] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:48.397767] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:49.201989] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:49.202094] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:49.204349] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833448000,1698833449000,6,5841982075,1698833449202
1698833448000,1698833449000,5,732696421,1698833449202
1698833448000,1698833449000,7,26894715629,1698833449202
1698833448000,1698833449000,4,2126113514,1698833449202
[m
[36m[10:10:49.209705] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:49.209795] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:49.211997] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833448000,1698833449000,8,16368676997,1698833449209
1698833448000,1698833449000,10,323657490,1698833449209
1698833448000,1698833449000,9,296421465,1698833449209
1698833448000,1698833449000,11,314485487,1698833449209
[m
[36m[10:10:49.399010] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:50.201688] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:50.201792] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:50.204109] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833449000,1698833450000,6,5841984365,1698833450201
1698833449000,1698833450000,5,732698693,1698833450201
1698833449000,1698833450000,4,2126115816,1698833450201
1698833449000,1698833450000,7,26894717775,1698833450201
[m
[36m[10:10:50.204708] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:50.204798] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:50.206950] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833449000,1698833450000,8,16368679155,1698833450204
1698833449000,1698833450000,10,323659656,1698833450204
1698833449000,1698833450000,9,296423651,1698833450204
1698833449000,1698833450000,11,314487661,1698833450204
[m
[36m[10:10:50.400381] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:50.520036] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:50.520372] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:50.521330] [D] [thread 127030] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:50.521420] [I] [thread 127030] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:50.521439] [I] [thread 127030] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:50.521555] [I] [thread 127030] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:50.521567] [I] [thread 127030] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:50.858090] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:50.858471] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:51.190388] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:51.190494] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:51.192703] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833450000,1698833451000,6,5841986993,1698833451190
1698833450000,1698833451000,5,732701284,1698833451190
1698833450000,1698833451000,4,2126118386,1698833451190
1698833450000,1698833451000,7,26894720448,1698833451190
[m
[36m[10:10:51.205938] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:51.206031] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:51.207880] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833450000,1698833451000,8,16368681792,1698833451206
1698833450000,1698833451000,10,323662272,1698833451206
1698833450000,1698833451000,9,296426359,1698833451206
1698833450000,1698833451000,11,314490170,1698833451206
[m
[36m[10:10:51.859646] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:52.188095] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:52.188200] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:52.190505] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833451000,1698833452000,6,5841989112,1698833452188
1698833451000,1698833452000,5,732703417,1698833452188
1698833451000,1698833452000,4,2126120551,1698833452188
1698833451000,1698833452000,7,26894722583,1698833452188
[m
[36m[10:10:52.198108] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:52.198242] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:52.199893] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833451000,1698833452000,8,16368684057,1698833452198
1698833451000,1698833452000,10,323664545,1698833452198
1698833451000,1698833452000,9,296428557,1698833452198
1698833451000,1698833452000,11,314492512,1698833452198
[m
[36m[10:10:52.860920] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:53.067184] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:53.067510] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:53.069285] [D] [thread 127035] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:53.069402] [I] [thread 127035] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:53.069422] [I] [thread 127035] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:53.069548] [I] [thread 127035] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:53.069586] [I] [thread 127035] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:53.184504] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:53.184616] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:53.186922] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833452000,1698833453000,10,323666757,1698833453184
1698833452000,1698833453000,8,16368686383,1698833453184
1698833452000,1698833453000,9,296430839,1698833453184
1698833452000,1698833453000,11,314494751,1698833453184
[m
[36m[10:10:53.192191] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:53.192282] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:53.194030] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833452000,1698833453000,6,5841991606,1698833453192
1698833452000,1698833453000,5,732705939,1698833453192
1698833452000,1698833453000,4,2126123005,1698833453192
1698833452000,1698833453000,7,26894725071,1698833453192
[m
[36m[10:10:53.314501] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:53.314812] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:54.196026] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:54.196099] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:54.197373] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833453000,1698833454000,6,5841994055,1698833454196
1698833453000,1698833454000,5,732708358,1698833454196
1698833453000,1698833454000,4,2126125394,1698833454196
1698833453000,1698833454000,7,26894727561,1698833454196
[m
[36m[10:10:54.225806] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:54.225880] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:54.227219] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833453000,1698833454000,10,323669568,1698833454225
1698833453000,1698833454000,8,16368688914,1698833454225
1698833453000,1698833454000,9,296433424,1698833454225
1698833453000,1698833454000,11,314497384,1698833454225
[m
[36m[10:10:54.316034] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:55.189701] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:55.189807] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:55.192080] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833454000,1698833455000,6,5841996240,1698833455189
1698833454000,1698833455000,5,732710606,1698833455189
1698833454000,1698833455000,4,2126127766,1698833455189
1698833454000,1698833455000,7,26894729756,1698833455189
[m
[36m[10:10:55.211175] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:55.211252] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:55.212935] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833454000,1698833455000,8,16368691082,1698833455211
1698833454000,1698833455000,9,296435604,1698833455211
1698833454000,1698833455000,11,314499562,1698833455211
1698833454000,1698833455000,10,323671847,1698833455211
[m
[36m[10:10:55.317270] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:55.511444] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:55.511791] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:55.512975] [D] [thread 127040] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:55.513071] [I] [thread 127040] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:55.513091] [I] [thread 127040] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:55.513205] [I] [thread 127040] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:55.513217] [I] [thread 127040] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:55.883126] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:55.883451] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:56.193206] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:56.193314] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:56.195600] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833455000,1698833456000,6,5841998908,1698833456193
1698833455000,1698833456000,4,2126130254,1698833456193
1698833455000,1698833456000,5,732713137,1698833456193
1698833455000,1698833456000,7,26894732390,1698833456193
[m
[36m[10:10:56.222242] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:56.222331] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:56.224259] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833455000,1698833456000,8,16368693850,1698833456222
1698833455000,1698833456000,9,296438208,1698833456222
1698833455000,1698833456000,11,314502126,1698833456222
1698833455000,1698833456000,10,323674428,1698833456222
[m
[36m[10:10:56.884707] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:57.189882] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:57.189989] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:57.192275] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833456000,1698833457000,6,5842001133,1698833457190
1698833456000,1698833457000,4,2126132408,1698833457190
1698833456000,1698833457000,5,732715331,1698833457190
1698833456000,1698833457000,7,26894734566,1698833457190
[m
[36m[10:10:57.223306] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:57.223399] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:57.225324] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833456000,1698833457000,9,296440412,1698833457223
1698833456000,1698833457000,11,314504402,1698833457223
1698833456000,1698833457000,10,323676690,1698833457223
1698833456000,1698833457000,8,16368696179,1698833457223
[m
[36m[10:10:57.886038] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:58.059389] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:58.059729] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:58.060833] [D] [thread 127045] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:10:58.060931] [I] [thread 127045] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:58.060950] [I] [thread 127045] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:10:58.061067] [I] [thread 127045] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:10:58.061080] [I] [thread 127045] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:10:58.177373] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:58.177477] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:58.179761] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833457000,1698833458000,4,2126134886,1698833458177
1698833457000,1698833458000,6,5842003531,1698833458177
1698833457000,1698833458000,5,732717785,1698833458177
1698833457000,1698833458000,7,26894736914,1698833458177
[m
[36m[10:10:58.213124] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:58.213210] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:58.215316] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833457000,1698833458000,9,296442717,1698833458213
1698833457000,1698833458000,11,314506631,1698833458213
1698833457000,1698833458000,10,323678978,1698833458213
1698833457000,1698833458000,8,16368698546,1698833458213
[m
[36m[10:10:58.334119] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:58.334668] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:10:59.174153] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:59.174311] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:59.176481] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833458000,1698833459000,4,2126137291,1698833459174
1698833458000,1698833459000,6,5842005877,1698833459174
1698833458000,1698833459000,5,732720160,1698833459174
1698833458000,1698833459000,7,26894739345,1698833459174
[m
[36m[10:10:59.206038] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:10:59.206130] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:10:59.208110] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833458000,1698833459000,9,296445285,1698833459206
1698833458000,1698833459000,11,314509260,1698833459206
1698833458000,1698833459000,10,323681530,1698833459206
1698833458000,1698833459000,8,16368701063,1698833459206
[m
[36m[10:10:59.335930] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:00.220520] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:00.220626] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:00.222948] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833459000,1698833460000,9,296447587,1698833460220
1698833459000,1698833460000,11,314511410,1698833460220
1698833459000,1698833460000,10,323683657,1698833460220
1698833459000,1698833460000,8,16368703216,1698833460220
[m
[36m[10:11:00.228571] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:00.228672] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:00.230635] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833459000,1698833460000,4,2126139722,1698833460228
1698833459000,1698833460000,6,5842008071,1698833460228
1698833459000,1698833460000,7,26894741563,1698833460228
1698833459000,1698833460000,5,732722391,1698833460228
[m
[36m[10:11:00.337293] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:00.472721] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:00.473224] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:00.474065] [D] [thread 127050] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:00.474157] [I] [thread 127050] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:00.474176] [I] [thread 127050] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:00.474323] [I] [thread 127050] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:00.474338] [I] [thread 127050] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:00.710518] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:00.711109] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:01.206615] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:01.206688] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:01.207997] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833460000,1698833461000,11,314513956,1698833461206
1698833460000,1698833461000,10,323686321,1698833461206
1698833460000,1698833461000,8,16368705892,1698833461206
1698833460000,1698833461000,9,296450337,1698833461206
[m
[36m[10:11:01.218518] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:01.218590] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:01.220220] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833460000,1698833461000,6,5842010820,1698833461218
1698833460000,1698833461000,7,26894744251,1698833461218
1698833460000,1698833461000,5,732725019,1698833461218
1698833460000,1698833461000,4,2126142360,1698833461218
[m
[36m[10:11:01.712433] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:02.206837] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:02.206960] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:02.208434] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833461000,1698833462000,11,314516347,1698833462207
1698833461000,1698833462000,10,323688648,1698833462207
1698833461000,1698833462000,8,16368708086,1698833462207
1698833461000,1698833462000,9,296452622,1698833462207
[m
[36m[10:11:02.213063] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:02.213131] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:02.214300] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833461000,1698833462000,6,5842013062,1698833462213
1698833461000,1698833462000,7,26894746419,1698833462213
1698833461000,1698833462000,5,732727239,1698833462213
1698833461000,1698833462000,4,2126144556,1698833462213
[m
[36m[10:11:02.713729] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:02.939613] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:02.940241] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:02.940929] [D] [thread 127055] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:02.941021] [I] [thread 127055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:02.941041] [I] [thread 127055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:02.941159] [I] [thread 127055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:02.941172] [I] [thread 127055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:03.180937] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:03.181491] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:03.197759] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:03.197833] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:03.199159] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833462000,1698833463000,11,314518609,1698833463197
1698833462000,1698833463000,10,323690934,1698833463197
1698833462000,1698833463000,9,296454962,1698833463197
1698833462000,1698833463000,8,16368710569,1698833463197
[m
[36m[10:11:03.222104] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:03.222230] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:03.224301] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833462000,1698833463000,7,26894748824,1698833463222
1698833462000,1698833463000,5,732729791,1698833463222
1698833462000,1698833463000,4,2126147170,1698833463222
1698833462000,1698833463000,6,5842015699,1698833463222
[m
[36m[10:11:04.182787] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:04.191149] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:04.191234] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:04.193126] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833463000,1698833464000,11,314521131,1698833464191
1698833463000,1698833464000,10,323693469,1698833464191
1698833463000,1698833464000,9,296457404,1698833464191
1698833463000,1698833464000,8,16368712918,1698833464191
[m
[36m[10:11:04.210402] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:04.210480] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:04.212175] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833463000,1698833464000,7,26894751287,1698833464210
1698833463000,1698833464000,5,732732039,1698833464210
1698833463000,1698833464000,4,2126149397,1698833464210
1698833463000,1698833464000,6,5842018022,1698833464210
[m
[36m[10:11:05.184114] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:05.187207] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:05.187298] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:05.189461] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833464000,1698833465000,11,314523322,1698833465187
1698833464000,1698833465000,10,323695658,1698833465187
1698833464000,1698833465000,9,296459587,1698833465187
1698833464000,1698833465000,8,16368715106,1698833465187
[m
[36m[10:11:05.205379] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:05.205450] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:05.207430] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833464000,1698833465000,7,26894753481,1698833465205
1698833464000,1698833465000,5,732734389,1698833465205
1698833464000,1698833465000,4,2126151733,1698833465205
1698833464000,1698833465000,6,5842020347,1698833465205
[m
[36m[10:11:05.388528] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:05.389088] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:05.389836] [D] [thread 127060] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:05.389926] [I] [thread 127060] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:05.389945] [I] [thread 127060] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:05.390063] [I] [thread 127060] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:05.390076] [I] [thread 127060] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:05.613346] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:05.613880] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:06.192485] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:06.192592] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:06.194947] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833465000,1698833466000,11,314525883,1698833466192
1698833465000,1698833466000,10,323698294,1698833466192
1698833465000,1698833466000,8,16368717707,1698833466192
1698833465000,1698833466000,9,296462302,1698833466192
[m
[36m[10:11:06.195536] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:06.195618] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:06.197673] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833465000,1698833466000,7,26894756071,1698833466195
1698833465000,1698833466000,5,732736912,1698833466195
1698833465000,1698833466000,4,2126154188,1698833466195
1698833465000,1698833466000,6,5842022918,1698833466195
[m
[36m[10:11:06.615177] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:07.218117] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:07.218265] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:07.220391] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833466000,1698833467000,7,26894758343,1698833467218
1698833466000,1698833467000,5,732739057,1698833467218
1698833466000,1698833467000,4,2126156408,1698833467218
1698833466000,1698833467000,6,5842025031,1698833467218
[m
[36m[10:11:07.220976] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:07.221055] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:07.223187] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833466000,1698833467000,11,314528309,1698833467221
1698833466000,1698833467000,10,323700469,1698833467221
1698833466000,1698833467000,8,16368719925,1698833467221
1698833466000,1698833467000,9,296464457,1698833467221
[m
[36m[10:11:07.616490] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:07.776593] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:07.777159] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:07.778020] [D] [thread 127066] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:07.778113] [I] [thread 127066] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:07.778133] [I] [thread 127066] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:07.778288] [I] [thread 127066] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:07.778303] [I] [thread 127066] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:07.990920] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:07.991230] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:08.210393] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:08.210504] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:08.212727] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833467000,1698833468000,10,323702912,1698833468210
1698833467000,1698833468000,8,16368722401,1698833468210
1698833467000,1698833468000,9,296466901,1698833468210
1698833467000,1698833468000,11,314530801,1698833468210
[m
[36m[10:11:08.217566] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:08.217645] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:08.219370] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833467000,1698833468000,4,2126159067,1698833468217
1698833467000,1698833468000,5,732741653,1698833468217
1698833467000,1698833468000,6,5842027635,1698833468217
1698833467000,1698833468000,7,26894761087,1698833468217
[m
[36m[10:11:08.992419] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:09.192473] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:09.192545] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:09.193809] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833468000,1698833469000,10,323705417,1698833469192
1698833468000,1698833469000,8,16368724739,1698833469192
1698833468000,1698833469000,9,296469290,1698833469192
1698833468000,1698833469000,11,314533266,1698833469192
[m
[36m[10:11:09.207159] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:09.207233] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:09.208558] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833468000,1698833469000,4,2126161242,1698833469207
1698833468000,1698833469000,5,732743940,1698833469207
1698833468000,1698833469000,6,5842029951,1698833469207
1698833468000,1698833469000,7,26894763439,1698833469207
[m
[36m[10:11:09.993767] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:10.172596] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:10.172916] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:10.173880] [D] [thread 127072] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:10.173973] [I] [thread 127072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:10.173992] [I] [thread 127072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:10.174109] [I] [thread 127072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:10.174122] [I] [thread 127072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:10.193727] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:10.193821] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:10.195787] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833469000,1698833470000,10,323707600,1698833470193
1698833469000,1698833470000,8,16368727032,1698833470193
1698833469000,1698833470000,9,296471588,1698833470193
1698833469000,1698833470000,11,314535452,1698833470193
[m
[36m[10:11:10.203458] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:10.203544] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:10.205250] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833469000,1698833470000,4,2126163654,1698833470203
1698833469000,1698833470000,5,732746375,1698833470203
1698833469000,1698833470000,6,5842032333,1698833470203
1698833469000,1698833470000,7,26894765733,1698833470203
[m
[36m[10:11:10.394979] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:10.395285] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:11.185322] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:11.185428] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:11.187711] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833470000,1698833471000,10,323710230,1698833471185
1698833470000,1698833471000,8,16368729637,1698833471185
1698833470000,1698833471000,9,296474192,1698833471185
1698833470000,1698833471000,11,314538130,1698833471185
[m
[36m[10:11:11.214543] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:11.214628] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:11.216491] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833470000,1698833471000,4,2126166257,1698833471214
1698833470000,1698833471000,5,732748833,1698833471214
1698833470000,1698833471000,6,5842034798,1698833471214
1698833470000,1698833471000,7,26894768215,1698833471214
[m
[36m[10:11:11.396547] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:12.183642] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:12.183748] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:12.185979] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833471000,1698833472000,8,16368731798,1698833472183
1698833471000,1698833472000,10,323712411,1698833472183
1698833471000,1698833472000,9,296476346,1698833472183
1698833471000,1698833472000,11,314540285,1698833472183
[m
[36m[10:11:12.204988] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:12.205069] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:12.207054] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833471000,1698833472000,5,732751005,1698833472205
1698833471000,1698833472000,6,5842037000,1698833472205
1698833471000,1698833472000,7,26894770426,1698833472205
1698833471000,1698833472000,4,2126168633,1698833472205
[m
[36m[10:11:12.397864] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:12.544480] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:12.544795] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:12.545859] [D] [thread 127077] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:12.545956] [I] [thread 127077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:12.545974] [I] [thread 127077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:12.546091] [I] [thread 127077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:12.546111] [I] [thread 127077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:12.758399] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:12.758749] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:13.183281] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:13.183385] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:13.185588] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833472000,1698833473000,8,16368734350,1698833473183
1698833472000,1698833473000,10,323714939,1698833473183
1698833472000,1698833473000,9,296478874,1698833473183
1698833472000,1698833473000,11,314542829,1698833473183
[m
[36m[10:11:13.192453] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:13.192542] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:13.194616] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833472000,1698833473000,5,732753651,1698833473192
1698833472000,1698833473000,6,5842039634,1698833473192
1698833472000,1698833473000,7,26894773108,1698833473192
1698833472000,1698833473000,4,2126171154,1698833473192
[m
[36m[10:11:13.760236] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:14.179440] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:14.179545] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:14.181757] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833473000,1698833474000,5,732755876,1698833474179
1698833473000,1698833474000,6,5842041837,1698833474179
1698833473000,1698833474000,4,2126173286,1698833474179
1698833473000,1698833474000,7,26894775262,1698833474179
[m
[36m[10:11:14.210789] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:14.210865] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:14.212888] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833473000,1698833474000,8,16368736733,1698833474210
1698833473000,1698833474000,9,296481224,1698833474210
1698833473000,1698833474000,10,323717294,1698833474210
1698833473000,1698833474000,11,314545141,1698833474210
[m
[36m[10:11:14.761719] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:14.948772] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:14.949409] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:14.950718] [D] [thread 127082] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:14.950948] [I] [thread 127082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:14.950975] [I] [thread 127082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:14.951104] [I] [thread 127082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:14.951139] [I] [thread 127082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:15.176571] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:15.176642] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:15.177809] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833474000,1698833475000,5,732758396,1698833475176
1698833474000,1698833475000,6,5842044323,1698833475176
1698833474000,1698833475000,7,26894777654,1698833475176
1698833474000,1698833475000,4,2126175931,1698833475176
[m
[36m[10:11:15.182774] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:15.183119] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:15.203250] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:15.203329] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:15.204771] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833474000,1698833475000,9,296483567,1698833475203
1698833474000,1698833475000,10,323719607,1698833475203
1698833474000,1698833475000,11,314547425,1698833475203
1698833474000,1698833475000,8,16368739317,1698833475203
[m
[36m[10:11:16.170325] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:16.170405] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:16.171692] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833475000,1698833476000,5,732760720,1698833476170
1698833475000,1698833476000,4,2126178218,1698833476170
1698833475000,1698833476000,7,26894780097,1698833476170
1698833475000,1698833476000,6,5842046683,1698833476170
[m
[36m[10:11:16.184290] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:16.217121] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:16.217199] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:16.218433] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833475000,1698833476000,9,296486180,1698833476217
1698833475000,1698833476000,10,323722122,1698833476217
1698833475000,1698833476000,11,314550015,1698833476217
1698833475000,1698833476000,8,16368741751,1698833476217
[m
[36m[10:11:17.174829] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:17.174903] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:17.176542] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833476000,1698833477000,4,2126180556,1698833477174
1698833476000,1698833477000,5,732763013,1698833477174
1698833476000,1698833477000,7,26894782354,1698833477174
1698833476000,1698833477000,6,5842049008,1698833477174
[m
[36m[10:11:17.185316] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:17.225241] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:17.225354] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:17.227488] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833476000,1698833477000,10,323724435,1698833477225
1698833476000,1698833477000,11,314552209,1698833477225
1698833476000,1698833477000,8,16368743893,1698833477225
1698833476000,1698833477000,9,296488485,1698833477225
[m
[36m[10:11:17.399329] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:17.399678] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:17.400638] [D] [thread 127087] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:17.400732] [I] [thread 127087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:17.400751] [I] [thread 127087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:17.400868] [I] [thread 127087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:17.400881] [I] [thread 127087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:17.612575] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:17.612909] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:18.162165] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:18.162329] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:18.164276] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833477000,1698833478000,7,26894784951,1698833478162
1698833477000,1698833478000,4,2126183018,1698833478162
1698833477000,1698833478000,5,732765577,1698833478162
1698833477000,1698833478000,6,5842051603,1698833478162
[m
[36m[10:11:18.220578] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:18.220683] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:18.222799] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833477000,1698833478000,11,314554761,1698833478220
1698833477000,1698833478000,8,16368746517,1698833478220
1698833477000,1698833478000,9,296491165,1698833478220
1698833477000,1698833478000,10,323727175,1698833478220
[m
[36m[10:11:18.614320] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:19.157233] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:19.157337] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:19.159583] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833478000,1698833479000,7,26894787118,1698833479157
1698833478000,1698833479000,4,2126185219,1698833479157
1698833478000,1698833479000,5,732767750,1698833479157
1698833478000,1698833479000,6,5842053754,1698833479157
[m
[36m[10:11:19.215535] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:19.215638] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:19.217799] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833478000,1698833479000,11,314557004,1698833479215
1698833478000,1698833479000,8,16368748748,1698833479215
1698833478000,1698833479000,9,296493333,1698833479215
1698833478000,1698833479000,10,323729382,1698833479215
[m
[36m[10:11:19.615568] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:19.816754] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:19.817126] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:19.818303] [D] [thread 127092] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:19.818398] [I] [thread 127092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:19.818418] [I] [thread 127092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:19.818535] [I] [thread 127092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:19.818547] [I] [thread 127092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:20.017713] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:20.018034] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:20.150527] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:20.150634] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:20.152808] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833479000,1698833480000,7,26894789604,1698833480150
1698833479000,1698833480000,4,2126187847,1698833480150
1698833479000,1698833480000,5,732770341,1698833480150
1698833479000,1698833480000,6,5842056301,1698833480150
[m
[36m[10:11:20.211564] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:20.211667] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:20.213810] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833479000,1698833480000,8,16368751210,1698833480211
1698833479000,1698833480000,11,314559368,1698833480211
1698833479000,1698833480000,9,296495796,1698833480211
1698833479000,1698833480000,10,323731846,1698833480211
[m
[36m[10:11:21.019380] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:21.211640] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:21.211734] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:21.213640] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833480000,1698833481000,8,16368753604,1698833481211
1698833480000,1698833481000,11,314561885,1698833481211
1698833480000,1698833481000,9,296498155,1698833481211
1698833480000,1698833481000,10,323734258,1698833481211
[m
[36m[10:11:21.217666] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:21.217746] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:21.219419] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833480000,1698833481000,4,2126190180,1698833481217
1698833480000,1698833481000,7,26894791984,1698833481217
1698833480000,1698833481000,5,732772594,1698833481217
1698833480000,1698833481000,6,5842058606,1698833481217
[m
[36m[10:11:22.020755] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:22.208285] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:22.208359] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:22.209665] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833481000,1698833482000,7,26894794372,1698833482208
1698833481000,1698833482000,5,732774972,1698833482208
1698833481000,1698833482000,6,5842060941,1698833482208
1698833481000,1698833482000,4,2126192689,1698833482208
[m
[36m[10:11:22.213992] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:22.214058] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:22.215560] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833481000,1698833482000,8,16368755791,1698833482214
1698833481000,1698833482000,11,314564080,1698833482214
1698833481000,1698833482000,10,323736440,1698833482214
1698833481000,1698833482000,9,296500424,1698833482214
[m
[36m[10:11:22.266441] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:22.266765] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:22.268388] [D] [thread 127097] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:22.268483] [I] [thread 127097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:22.268503] [I] [thread 127097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:22.268620] [I] [thread 127097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:22.268633] [I] [thread 127097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:22.463104] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:22.463419] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:23.194286] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:23.194356] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:23.195446] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833482000,1698833483000,5,732777463,1698833483194
1698833482000,1698833483000,6,5842063451,1698833483194
1698833482000,1698833483000,4,2126195161,1698833483194
1698833482000,1698833483000,7,26894797070,1698833483194
[m
[36m[10:11:23.221391] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:23.221468] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:23.222932] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833482000,1698833483000,8,16368758604,1698833483221
1698833482000,1698833483000,11,314566826,1698833483221
1698833482000,1698833483000,10,323739073,1698833483221
1698833482000,1698833483000,9,296503055,1698833483221
[m
[36m[10:11:23.464622] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:24.189657] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:24.189726] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:24.190856] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833483000,1698833484000,6,5842065608,1698833484189
1698833483000,1698833484000,5,732779627,1698833484189
1698833483000,1698833484000,7,26894799264,1698833484189
1698833483000,1698833484000,4,2126197454,1698833484189
[m
[36m[10:11:24.211093] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:24.211169] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:24.212521] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833483000,1698833484000,10,323741245,1698833484211
1698833483000,1698833484000,9,296505202,1698833484211
1698833483000,1698833484000,11,314569138,1698833484211
1698833483000,1698833484000,8,16368760930,1698833484211
[m
[36m[10:11:24.465963] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:24.658823] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:24.659153] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:24.660299] [D] [thread 127102] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:24.660395] [I] [thread 127102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:24.660414] [I] [thread 127102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:24.660530] [I] [thread 127102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:24.660543] [I] [thread 127102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:24.943517] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:24.943857] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:25.180014] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:25.180120] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:25.182345] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833484000,1698833485000,6,5842068258,1698833485180
1698833484000,1698833485000,5,732782321,1698833485180
1698833484000,1698833485000,7,26894801913,1698833485180
1698833484000,1698833485000,4,2126200035,1698833485180
[m
[36m[10:11:25.207411] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:25.207493] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:25.209346] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833484000,1698833485000,10,323743760,1698833485207
1698833484000,1698833485000,11,314571647,1698833485207
1698833484000,1698833485000,9,296507711,1698833485207
1698833484000,1698833485000,8,16368763450,1698833485207
[m
[36m[10:11:25.945093] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:26.182693] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:26.182800] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:26.184961] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833485000,1698833486000,6,5842070505,1698833486182
1698833485000,1698833486000,5,732784490,1698833486182
1698833485000,1698833486000,7,26894804100,1698833486182
1698833485000,1698833486000,4,2126202184,1698833486182
[m
[36m[10:11:26.195561] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:26.195731] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:26.197246] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833485000,1698833486000,10,323746123,1698833486195
1698833485000,1698833486000,9,296510034,1698833486195
1698833485000,1698833486000,11,314574034,1698833486195
1698833485000,1698833486000,8,16368765713,1698833486195
[m
[36m[10:11:26.946398] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:27.170277] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:27.170389] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:27.172673] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833486000,1698833487000,6,5842072842,1698833487170
1698833486000,1698833487000,5,732786884,1698833487170
1698833486000,1698833487000,7,26894806423,1698833487170
1698833486000,1698833487000,4,2126204639,1698833487170
[m
[36m[10:11:27.200637] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:27.200705] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:27.201809] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833486000,1698833487000,10,323748267,1698833487200
1698833486000,1698833487000,11,314576152,1698833487200
1698833486000,1698833487000,9,296512272,1698833487200
1698833486000,1698833487000,8,16368767997,1698833487200
[m
[36m[10:11:27.203850] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:27.204471] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:27.205164] [D] [thread 127107] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:27.205257] [I] [thread 127107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:27.205276] [I] [thread 127107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:27.205391] [I] [thread 127107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:27.205404] [I] [thread 127107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:27.424861] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:27.425188] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:28.169228] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:28.169335] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:28.171351] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833487000,1698833488000,6,5842075321,1698833488169
1698833487000,1698833488000,5,732789296,1698833488169
1698833487000,1698833488000,7,26894808912,1698833488169
1698833487000,1698833488000,4,2126207069,1698833488169
[m
[36m[10:11:28.190638] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:28.190716] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:28.192389] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833487000,1698833488000,10,323750911,1698833488190
1698833487000,1698833488000,11,314578822,1698833488190
1698833487000,1698833488000,9,296514831,1698833488190
1698833487000,1698833488000,8,16368770571,1698833488190
[m
[36m[10:11:28.426430] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:29.177932] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:29.178029] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:29.180030] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833488000,1698833489000,10,323753130,1698833489178
1698833488000,1698833489000,11,314581046,1698833489178
1698833488000,1698833489000,8,16368772700,1698833489178
1698833488000,1698833489000,9,296516997,1698833489178
[m
[36m[10:11:29.223126] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:29.223221] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:29.225350] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833488000,1698833489000,6,5842077496,1698833489223
1698833488000,1698833489000,5,732791680,1698833489223
1698833488000,1698833489000,7,26894811137,1698833489223
1698833488000,1698833489000,4,2126209304,1698833489223
[m
[36m[10:11:29.427808] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:29.535810] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:29.536144] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:29.537149] [D] [thread 127112] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:29.537224] [I] [thread 127112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:29.537240] [I] [thread 127112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:29.537347] [I] [thread 127112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:29.537358] [I] [thread 127112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:29.742352] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:29.742669] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:30.178686] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:30.178792] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:30.180761] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833489000,1698833490000,11,314583562,1698833490178
1698833489000,1698833490000,10,323755701,1698833490178
1698833489000,1698833490000,9,296519625,1698833490178
1698833489000,1698833490000,8,16368775335,1698833490178
[m
[36m[10:11:30.221124] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:30.221217] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:30.223440] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833489000,1698833490000,6,5842080236,1698833490221
1698833489000,1698833490000,7,26894813777,1698833490221
1698833489000,1698833490000,4,2126211862,1698833490221
1698833489000,1698833490000,5,732794395,1698833490221
[m
[36m[10:11:30.743869] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:31.168567] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:31.168650] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:31.170294] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833490000,1698833491000,11,314585909,1698833491168
1698833490000,1698833491000,10,323758010,1698833491168
1698833490000,1698833491000,8,16368777606,1698833491168
1698833490000,1698833491000,9,296521945,1698833491168
[m
[36m[10:11:31.223210] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:31.223285] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:31.224794] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833490000,1698833491000,6,5842082404,1698833491223
1698833490000,1698833491000,7,26894815931,1698833491223
1698833490000,1698833491000,4,2126214091,1698833491223
1698833490000,1698833491000,5,732796588,1698833491223
[m
[36m[10:11:31.745132] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:31.903698] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:31.904094] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:31.905178] [D] [thread 127117] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:31.905275] [I] [thread 127117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:31.905293] [I] [thread 127117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:31.905409] [I] [thread 127117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:31.905422] [I] [thread 127117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:32.133770] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:32.134093] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:32.170314] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:32.170405] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:32.172887] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833491000,1698833492000,10,323760326,1698833492170
1698833491000,1698833492000,11,314588173,1698833492170
1698833491000,1698833492000,8,16368780039,1698833492170
1698833491000,1698833492000,9,296524321,1698833492170
[m
[36m[10:11:32.221912] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:32.222007] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:32.224121] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833491000,1698833492000,6,5842084886,1698833492222
1698833491000,1698833492000,7,26894818496,1698833492222
1698833491000,1698833492000,4,2126216655,1698833492222
1698833491000,1698833492000,5,732799152,1698833492222
[m
[36m[10:11:33.135301] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:33.160296] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:33.160386] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:33.162374] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833492000,1698833493000,10,323762837,1698833493160
1698833492000,1698833493000,11,314590740,1698833493160
1698833492000,1698833493000,8,16368782437,1698833493160
1698833492000,1698833493000,9,296526758,1698833493160
[m
[36m[10:11:33.214800] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:33.214905] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:33.217222] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833492000,1698833493000,6,5842087228,1698833493214
1698833492000,1698833493000,4,2126218922,1698833493214
1698833492000,1698833493000,7,26894821034,1698833493214
1698833492000,1698833493000,5,732801282,1698833493214
[m
[36m[10:11:34.136636] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:34.157629] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:34.157724] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:34.160216] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833493000,1698833494000,10,323765050,1698833494157
1698833493000,1698833494000,8,16368784608,1698833494157
1698833493000,1698833494000,11,314592948,1698833494157
1698833493000,1698833494000,9,296528923,1698833494157
[m
[36m[10:11:34.225926] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:34.226009] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:34.228247] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833493000,1698833494000,5,732803656,1698833494226
1698833493000,1698833494000,4,2126221219,1698833494226
1698833493000,1698833494000,6,5842089693,1698833494226
1698833493000,1698833494000,7,26894823328,1698833494226
[m
[36m[10:11:34.419449] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:34.419853] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:34.421476] [D] [thread 127122] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:34.421572] [I] [thread 127122] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:34.421591] [I] [thread 127122] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:34.421708] [I] [thread 127122] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:34.421721] [I] [thread 127122] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:34.638484] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:34.638835] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:35.220242] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:35.220344] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:35.222974] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833494000,1698833495000,10,323767758,1698833495220
1698833494000,1698833495000,8,16368787320,1698833495220
1698833494000,1698833495000,11,314595502,1698833495220
1698833494000,1698833495000,9,296531630,1698833495220
[m
[36m[10:11:35.223792] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:35.223878] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:35.225814] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833494000,1698833495000,4,2126223759,1698833495223
1698833494000,1698833495000,7,26894825860,1698833495223
1698833494000,1698833495000,6,5842092358,1698833495223
1698833494000,1698833495000,5,732806341,1698833495223
[m
[36m[10:11:35.640118] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:36.204943] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:36.205047] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:36.207392] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833495000,1698833496000,8,16368789515,1698833496205
1698833495000,1698833496000,11,314597771,1698833496205
1698833495000,1698833496000,9,296533764,1698833496205
1698833495000,1698833496000,10,323770075,1698833496205
[m
[36m[10:11:36.218846] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:36.218929] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:36.220979] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833495000,1698833496000,4,2126226057,1698833496218
1698833495000,1698833496000,7,26894828035,1698833496218
1698833495000,1698833496000,6,5842094517,1698833496218
1698833495000,1698833496000,5,732808465,1698833496218
[m
[36m[10:11:36.641550] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:36.795328] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:36.795891] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:36.796640] [D] [thread 127127] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:36.796733] [I] [thread 127127] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:36.796752] [I] [thread 127127] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:36.796868] [I] [thread 127127] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:36.796880] [I] [thread 127127] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:37.020853] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:37.021184] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:37.212589] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:37.212686] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:37.214907] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833496000,1698833497000,7,26894830534,1698833497212
1698833496000,1698833497000,6,5842097038,1698833497212
1698833496000,1698833497000,4,2126228848,1698833497212
1698833496000,1698833497000,5,732811070,1698833497212
[m
[36m[10:11:37.226079] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:37.226163] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:37.228231] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833496000,1698833497000,8,16368792080,1698833497226
1698833496000,1698833497000,11,314600266,1698833497226
1698833496000,1698833497000,9,296536176,1698833497226
1698833496000,1698833497000,10,323772458,1698833497226
[m
[36m[10:11:38.022439] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:38.202966] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:38.203039] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:38.204409] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833497000,1698833498000,7,26894832934,1698833498203
1698833497000,1698833498000,6,5842099394,1698833498203
1698833497000,1698833498000,4,2126231023,1698833498203
1698833497000,1698833498000,5,732813302,1698833498203
[m
[36m[10:11:38.219445] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:38.219521] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:38.220815] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833497000,1698833498000,9,296538651,1698833498219
1698833497000,1698833498000,10,323774964,1698833498219
1698833497000,1698833498000,11,314602936,1698833498219
1698833497000,1698833498000,8,16368794556,1698833498219
[m
[36m[10:11:39.023765] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:39.202824] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:39.202934] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:39.205395] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833498000,1698833499000,7,26894835217,1698833499203
1698833498000,1698833499000,4,2126233495,1698833499203
1698833498000,1698833499000,6,5842101776,1698833499203
1698833498000,1698833499000,5,732815745,1698833499203
[m
[36m[10:11:39.223075] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:39.223163] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:39.224746] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833498000,1698833499000,9,296540852,1698833499223
1698833498000,1698833499000,10,323777135,1698833499223
1698833498000,1698833499000,11,314605081,1698833499223
1698833498000,1698833499000,8,16368796876,1698833499223
[m
[36m[10:11:39.242544] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:39.242849] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:39.244009] [D] [thread 127132] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:39.244134] [I] [thread 127132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:39.244154] [I] [thread 127132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:39.244308] [I] [thread 127132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:39.244327] [I] [thread 127132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:39.431194] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:39.431518] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:40.197223] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:40.197319] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:40.199947] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833499000,1698833500000,7,26894837722,1698833500197
1698833499000,1698833500000,4,2126235902,1698833500197
1698833499000,1698833500000,5,732818197,1698833500197
1698833499000,1698833500000,6,5842104280,1698833500197
[m
[36m[10:11:40.223830] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:40.223912] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:40.225585] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833499000,1698833500000,9,296543617,1698833500223
1698833499000,1698833500000,10,323779765,1698833500223
1698833499000,1698833500000,11,314607727,1698833500223
1698833499000,1698833500000,8,16368799484,1698833500223
[m
[36m[10:11:40.432700] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:41.196179] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:41.196284] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:41.198604] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833500000,1698833501000,7,26894839928,1698833501196
1698833500000,1698833501000,4,2126238071,1698833501196
1698833500000,1698833501000,6,5842106420,1698833501196
1698833500000,1698833501000,5,732820364,1698833501196
[m
[36m[10:11:41.216396] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:41.216489] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:41.218544] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833500000,1698833501000,10,323781966,1698833501216
1698833500000,1698833501000,11,314609935,1698833501216
1698833500000,1698833501000,8,16368801600,1698833501216
1698833500000,1698833501000,9,296545861,1698833501216
[m
[36m[10:11:41.433968] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:41.652546] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:41.652872] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:41.654801] [D] [thread 127137] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:41.654932] [I] [thread 127137] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:41.654953] [I] [thread 127137] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:41.655092] [I] [thread 127137] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:41.655114] [I] [thread 127137] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:41.883601] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:41.883941] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:42.198184] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:42.198339] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:42.200312] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833501000,1698833502000,7,26894842534,1698833502198
1698833501000,1698833502000,4,2126240699,1698833502198
1698833501000,1698833502000,5,732822966,1698833502198
1698833501000,1698833502000,6,5842109143,1698833502198
[m
[36m[10:11:42.218882] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:42.218959] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:42.220633] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833501000,1698833502000,10,323784476,1698833502218
1698833501000,1698833502000,11,314612371,1698833502218
1698833501000,1698833502000,8,16368804179,1698833502218
1698833501000,1698833502000,9,296548407,1698833502218
[m
[36m[10:11:42.885182] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:43.194266] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:43.194370] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:43.196339] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833502000,1698833503000,7,26894844758,1698833503194
1698833502000,1698833503000,4,2126242841,1698833503194
1698833502000,1698833503000,6,5842111301,1698833503194
1698833502000,1698833503000,5,732825157,1698833503194
[m
[36m[10:11:43.211165] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:43.211243] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:43.212927] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833502000,1698833503000,10,323786819,1698833503211
1698833502000,1698833503000,11,314614747,1698833503211
1698833502000,1698833503000,8,16368806378,1698833503211
1698833502000,1698833503000,9,296550727,1698833503211
[m
[36m[10:11:43.886332] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:44.116607] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:44.116950] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:44.117935] [D] [thread 127142] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:44.118029] [I] [thread 127142] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:44.118048] [I] [thread 127142] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:44.118165] [I] [thread 127142] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:44.118178] [I] [thread 127142] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:44.192553] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:44.192662] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:44.194689] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833503000,1698833504000,7,26894847078,1698833504192
1698833503000,1698833504000,4,2126245338,1698833504192
1698833503000,1698833504000,5,732827636,1698833504192
1698833503000,1698833504000,6,5842113738,1698833504192
[m
[36m[10:11:44.213225] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:44.213302] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:44.215152] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833503000,1698833504000,10,323788982,1698833504213
1698833503000,1698833504000,11,314616912,1698833504213
1698833503000,1698833504000,8,16368808782,1698833504213
1698833503000,1698833504000,9,296553022,1698833504213
[m
[36m[10:11:44.376287] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:44.376636] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:45.192958] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:45.193063] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:45.195334] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833504000,1698833505000,7,26894849659,1698833505193
1698833504000,1698833505000,4,2126247702,1698833505193
1698833504000,1698833505000,6,5842116175,1698833505193
1698833504000,1698833505000,5,732830012,1698833505193
[m
[36m[10:11:45.200797] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:45.200900] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:45.202620] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833504000,1698833505000,10,323791658,1698833505200
1698833504000,1698833505000,11,314619620,1698833505200
1698833504000,1698833505000,8,16368811286,1698833505200
1698833504000,1698833505000,9,296555562,1698833505200
[m
[36m[10:11:45.377879] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:46.185916] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:46.186015] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:46.187515] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833505000,1698833506000,7,26894851823,1698833506186
1698833505000,1698833506000,4,2126249911,1698833506186
1698833505000,1698833506000,6,5842118396,1698833506186
1698833505000,1698833506000,5,732832233,1698833506186
[m
[36m[10:11:46.197413] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:46.197479] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:46.199295] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833505000,1698833506000,10,323793883,1698833506197
1698833505000,1698833506000,11,314621818,1698833506197
1698833505000,1698833506000,8,16368813443,1698833506197
1698833505000,1698833506000,9,296557725,1698833506197
[m
[36m[10:11:46.379227] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:46.548675] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:46.549006] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:46.550237] [D] [thread 127147] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:46.550327] [I] [thread 127147] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:46.550344] [I] [thread 127147] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:46.550463] [I] [thread 127147] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:46.550475] [I] [thread 127147] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:46.783611] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:46.783959] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:47.187570] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:47.187679] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:47.189897] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833506000,1698833507000,7,26894854399,1698833507187
1698833506000,1698833507000,4,2126252539,1698833507187
1698833506000,1698833507000,6,5842121036,1698833507187
1698833506000,1698833507000,5,732834827,1698833507187
[m
[36m[10:11:47.193955] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:47.194039] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:47.195954] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833506000,1698833507000,10,323796354,1698833507194
1698833506000,1698833507000,8,16368816004,1698833507194
1698833506000,1698833507000,11,314624277,1698833507194
1698833506000,1698833507000,9,296560349,1698833507194
[m
[36m[10:11:47.785196] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:48.181100] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:48.181206] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:48.183441] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833507000,1698833508000,10,323798679,1698833508181
1698833507000,1698833508000,8,16368818277,1698833508181
1698833507000,1698833508000,11,314626624,1698833508181
1698833507000,1698833508000,9,296562616,1698833508181
[m
[36m[10:11:48.214160] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:48.214418] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:48.216891] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833507000,1698833508000,7,26894856728,1698833508214
1698833507000,1698833508000,4,2126254665,1698833508214
1698833507000,1698833508000,6,5842123184,1698833508214
1698833507000,1698833508000,5,732837048,1698833508214
[m
[36m[10:11:48.786517] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:49.035685] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:49.036036] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:49.037082] [D] [thread 127152] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:49.037181] [I] [thread 127152] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:49.037200] [I] [thread 127152] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:49.037317] [I] [thread 127152] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:49.037382] [I] [thread 127152] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:49.180037] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:49.180142] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:49.182674] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833508000,1698833509000,10,323801008,1698833509180
1698833508000,1698833509000,8,16368820760,1698833509180
1698833508000,1698833509000,9,296565023,1698833509180
1698833508000,1698833509000,11,314628997,1698833509180
[m
[36m[10:11:49.208212] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:49.208306] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:49.210787] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833508000,1698833509000,4,2126257228,1698833509208
1698833508000,1698833509000,6,5842125732,1698833509208
1698833508000,1698833509000,5,732839597,1698833509208
1698833508000,1698833509000,7,26894859385,1698833509208
[m
[36m[10:11:49.285462] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:49.285813] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:50.179860] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:50.179967] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:50.182254] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833509000,1698833510000,10,323803555,1698833510180
1698833509000,1698833510000,8,16368823115,1698833510180
1698833509000,1698833510000,9,296567410,1698833510180
1698833509000,1698833510000,11,314631548,1698833510180
[m
[36m[10:11:50.223309] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:50.223408] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:50.225807] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833509000,1698833510000,4,2126259644,1698833510223
1698833509000,1698833510000,6,5842128062,1698833510223
1698833509000,1698833510000,5,732841876,1698833510223
1698833509000,1698833510000,7,26894861732,1698833510223
[m
[36m[10:11:50.287093] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:51.180542] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:51.180635] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:51.182635] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833510000,1698833511000,10,323805683,1698833511180
1698833510000,1698833511000,8,16368825262,1698833511180
1698833510000,1698833511000,9,296569596,1698833511180
1698833510000,1698833511000,11,314633714,1698833511180
[m
[36m[10:11:51.207944] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:51.208021] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:51.209916] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833510000,1698833511000,6,5842130227,1698833511208
1698833510000,1698833511000,5,732844056,1698833511208
1698833510000,1698833511000,7,26894863860,1698833511208
1698833510000,1698833511000,4,2126262023,1698833511208
[m
[36m[10:11:51.288384] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:51.539530] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:51.539876] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:51.541056] [D] [thread 127157] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:51.541151] [I] [thread 127157] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:51.541170] [I] [thread 127157] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:51.541286] [I] [thread 127157] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:51.541299] [I] [thread 127157] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:51.786681] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:51.787249] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:52.176509] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:52.176622] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:52.178999] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833511000,1698833512000,10,323808190,1698833512176
1698833511000,1698833512000,8,16368827894,1698833512176
1698833511000,1698833512000,9,296572169,1698833512176
1698833511000,1698833512000,11,314636189,1698833512176
[m
[36m[10:11:52.194498] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:52.194590] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:52.196497] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833511000,1698833512000,6,5842132888,1698833512194
1698833511000,1698833512000,7,26894866545,1698833512194
1698833511000,1698833512000,5,732846671,1698833512194
1698833511000,1698833512000,4,2126264564,1698833512194
[m
[36m[10:11:52.788538] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:53.169820] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:53.169904] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:53.171356] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833512000,1698833513000,10,323810539,1698833513169
1698833512000,1698833513000,8,16368830120,1698833513169
1698833512000,1698833513000,9,296574475,1698833513169
1698833512000,1698833513000,11,314638564,1698833513169
[m
[36m[10:11:53.195706] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:53.195780] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:53.197098] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833512000,1698833513000,6,5842135109,1698833513195
1698833512000,1698833513000,7,26894868739,1698833513195
1698833512000,1698833513000,5,732848940,1698833513195
1698833512000,1698833513000,4,2126266783,1698833513195
[m
[36m[10:11:53.789808] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:53.839334] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:53.839879] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:53.840668] [D] [thread 127162] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:53.840762] [I] [thread 127162] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:53.840781] [I] [thread 127162] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:53.840899] [I] [thread 127162] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:53.840911] [I] [thread 127162] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:54.032977] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:54.033463] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:54.190526] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:54.190631] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:54.192871] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833513000,1698833514000,6,5842137627,1698833514190
1698833513000,1698833514000,7,26894871252,1698833514190
1698833513000,1698833514000,4,2126269395,1698833514190
1698833513000,1698833514000,5,732851556,1698833514190
[m
[36m[10:11:54.215735] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:54.215837] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:54.217738] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833513000,1698833514000,10,323813043,1698833514215
1698833513000,1698833514000,8,16368832607,1698833514215
1698833513000,1698833514000,9,296576866,1698833514215
1698833513000,1698833514000,11,314640957,1698833514215
[m
[36m[10:11:55.034744] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:55.184888] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:55.185002] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:55.187410] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833514000,1698833515000,6,5842139947,1698833515185
1698833514000,1698833515000,7,26894873603,1698833515185
1698833514000,1698833515000,4,2126271639,1698833515185
1698833514000,1698833515000,5,732853792,1698833515185
[m
[36m[10:11:55.210356] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:55.210434] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:55.211863] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833514000,1698833515000,8,16368834995,1698833515210
1698833514000,1698833515000,9,296579304,1698833515210
1698833514000,1698833515000,11,314643436,1698833515210
1698833514000,1698833515000,10,323815684,1698833515210
[m
[36m[10:11:56.036001] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:56.187934] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:56.188036] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:56.190265] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833515000,1698833516000,6,5842142246,1698833516188
1698833515000,1698833516000,7,26894875834,1698833516188
1698833515000,1698833516000,4,2126274022,1698833516188
1698833515000,1698833516000,5,732856184,1698833516188
[m
[36m[10:11:56.216083] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:56.216149] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:56.217328] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833515000,1698833516000,8,16368837216,1698833516216
1698833515000,1698833516000,11,314645580,1698833516216
1698833515000,1698833516000,9,296581510,1698833516216
1698833515000,1698833516000,10,323817864,1698833516216
[m
[36m[10:11:56.226347] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:56.226916] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:56.227728] [D] [thread 127168] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:56.227819] [I] [thread 127168] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:56.227839] [I] [thread 127168] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:56.227958] [I] [thread 127168] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:56.227970] [I] [thread 127168] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:56.403555] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:56.403875] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:57.192985] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:57.193089] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:57.195359] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833516000,1698833517000,6,5842144751,1698833517193
1698833516000,1698833517000,7,26894878386,1698833517193
1698833516000,1698833517000,4,2126276425,1698833517193
1698833516000,1698833517000,5,732858613,1698833517193
[m
[36m[10:11:57.204325] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:57.204418] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:57.206183] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833516000,1698833517000,8,16368839813,1698833517204
1698833516000,1698833517000,11,314648198,1698833517204
1698833516000,1698833517000,9,296584116,1698833517204
1698833516000,1698833517000,10,323820470,1698833517204
[m
[36m[10:11:57.405211] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:58.197849] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:58.197956] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:58.200243] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833517000,1698833518000,6,5842146885,1698833518198
1698833517000,1698833518000,4,2126278715,1698833518198
1698833517000,1698833518000,7,26894880507,1698833518198
1698833517000,1698833518000,5,732860899,1698833518198
[m
[36m[10:11:58.200823] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:58.200901] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:58.203040] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833517000,1698833518000,8,16368841989,1698833518200
1698833517000,1698833518000,11,314650459,1698833518200
1698833517000,1698833518000,9,296586280,1698833518200
1698833517000,1698833518000,10,323822621,1698833518200
[m
[36m[10:11:58.406415] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:58.540260] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:58.540788] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:58.541601] [D] [thread 127173] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:11:58.541696] [I] [thread 127173] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:58.541715] [I] [thread 127173] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:11:58.541834] [I] [thread 127173] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:11:58.541847] [I] [thread 127173] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:11:58.775210] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:58.775795] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:11:59.193327] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:59.193435] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:59.195721] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833518000,1698833519000,8,16368844640,1698833519193
1698833518000,1698833519000,11,314652924,1698833519193
1698833518000,1698833519000,9,296588845,1698833519193
1698833518000,1698833519000,10,323825221,1698833519193
[m
[36m[10:11:59.198159] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:11:59.198299] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:11:59.200477] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833518000,1698833519000,7,26894883194,1698833519198
1698833518000,1698833519000,4,2126281274,1698833519198
1698833518000,1698833519000,6,5842149576,1698833519198
1698833518000,1698833519000,5,732863562,1698833519198
[m
[36m[10:11:59.777046] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:00.195817] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:00.195889] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:00.197129] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833519000,1698833520000,4,2126283502,1698833520195
1698833519000,1698833520000,7,26894885446,1698833520195
1698833519000,1698833520000,6,5842151761,1698833520195
1698833519000,1698833520000,5,732865709,1698833520195
[m
[36m[10:12:00.223354] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:00.223423] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:00.224486] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833519000,1698833520000,11,314655399,1698833520223
1698833519000,1698833520000,8,16368846995,1698833520223
1698833519000,1698833520000,9,296591187,1698833520223
1698833519000,1698833520000,10,323827557,1698833520223
[m
[36m[10:12:00.778376] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:00.919560] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:00.919871] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:00.920904] [D] [thread 127178] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:00.921001] [I] [thread 127178] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:00.921020] [I] [thread 127178] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:00.921139] [I] [thread 127178] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:00.921162] [I] [thread 127178] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:01.201243] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:01.201319] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:01.202603] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833520000,1698833521000,4,2126286066,1698833521201
1698833520000,1698833521000,7,26894887870,1698833521201
1698833520000,1698833521000,6,5842154283,1698833521201
1698833520000,1698833521000,5,732868266,1698833521201
[m
[36m[10:12:01.219891] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:01.220241] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:01.227930] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:01.228048] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:01.229528] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833520000,1698833521000,9,296593556,1698833521228
1698833520000,1698833521000,10,323829892,1698833521228
1698833520000,1698833521000,11,314657870,1698833521228
1698833520000,1698833521000,8,16368849543,1698833521228
[m
[36m[10:12:02.216898] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:02.217004] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:02.219294] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833521000,1698833522000,4,2126288443,1698833522217
1698833521000,1698833522000,7,26894890242,1698833522217
1698833521000,1698833522000,6,5842156595,1698833522217
1698833521000,1698833522000,5,732870526,1698833522217
[m
[36m[10:12:02.219893] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:02.219979] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:02.221642] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:02.222079] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833521000,1698833522000,9,296595998,1698833522220
1698833521000,1698833522000,10,323832331,1698833522220
1698833521000,1698833522000,11,314660370,1698833522220
1698833521000,1698833522000,8,16368851951,1698833522220
[m
[36m[10:12:03.206939] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:03.207044] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:03.209190] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833522000,1698833523000,7,26894892385,1698833523207
1698833522000,1698833523000,6,5842158878,1698833523207
1698833522000,1698833523000,5,732872876,1698833523207
1698833522000,1698833523000,4,2126290956,1698833523207
[m
[36m[10:12:03.223054] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:03.224696] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:03.224766] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:03.226541] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833522000,1698833523000,9,296598263,1698833523224
1698833522000,1698833523000,10,323834499,1698833523224
1698833522000,1698833523000,11,314662529,1698833523224
1698833522000,1698833523000,8,16368854100,1698833523224
[m
[36m[10:12:03.478266] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:03.478774] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:03.479636] [D] [thread 127183] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:03.479726] [I] [thread 127183] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:03.479745] [I] [thread 127183] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:03.479860] [I] [thread 127183] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:03.479873] [I] [thread 127183] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:03.707677] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:03.708285] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:04.206372] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:04.206477] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:04.208681] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833523000,1698833524000,7,26894895081,1698833524206
1698833523000,1698833524000,6,5842161447,1698833524206
1698833523000,1698833524000,4,2126293383,1698833524206
1698833523000,1698833524000,5,732875431,1698833524206
[m
[36m[10:12:04.221563] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:04.221649] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:04.223582] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833523000,1698833524000,10,323837084,1698833524221
1698833523000,1698833524000,11,314665051,1698833524221
1698833523000,1698833524000,8,16368856788,1698833524221
1698833523000,1698833524000,9,296601016,1698833524221
[m
[36m[10:12:04.709650] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:05.202445] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:05.202551] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:05.204764] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833524000,1698833525000,7,26894897269,1698833525202
1698833524000,1698833525000,6,5842163599,1698833525202
1698833524000,1698833525000,4,2126295545,1698833525202
1698833524000,1698833525000,5,732877567,1698833525202
[m
[36m[10:12:05.216367] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:05.216460] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:05.218250] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833524000,1698833525000,10,323839358,1698833525216
1698833524000,1698833525000,11,314667345,1698833525216
1698833524000,1698833525000,8,16368858914,1698833525216
1698833524000,1698833525000,9,296603196,1698833525216
[m
[36m[10:12:05.710959] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:05.888530] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:05.889046] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:05.890650] [D] [thread 127188] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:05.890832] [I] [thread 127188] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:05.890851] [I] [thread 127188] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:05.890978] [I] [thread 127188] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:05.891002] [I] [thread 127188] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:06.175618] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:06.176175] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:06.199966] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:06.200056] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:06.201758] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833525000,1698833526000,7,26894899676,1698833526200
1698833525000,1698833526000,6,5842166146,1698833526200
1698833525000,1698833526000,4,2126298144,1698833526200
1698833525000,1698833526000,5,732880119,1698833526200
[m
[36m[10:12:06.204610] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:06.204685] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:06.206402] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833525000,1698833526000,10,323841647,1698833526204
1698833525000,1698833526000,11,314669645,1698833526204
1698833525000,1698833526000,8,16368861338,1698833526204
1698833525000,1698833526000,9,296605636,1698833526204
[m
[36m[10:12:07.177556] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:07.194949] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:07.195013] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:07.196734] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833526000,1698833527000,7,26894902108,1698833527195
1698833526000,1698833527000,6,5842168504,1698833527195
1698833526000,1698833527000,4,2126300361,1698833527195
1698833526000,1698833527000,5,732882349,1698833527195
[m
[36m[10:12:07.204255] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:07.204501] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:07.206595] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833526000,1698833527000,10,323844152,1698833527204
1698833526000,1698833527000,11,314672223,1698833527204
1698833526000,1698833527000,8,16368863725,1698833527204
1698833526000,1698833527000,9,296608008,1698833527204
[m
[36m[10:12:08.178913] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:08.194142] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:08.194231] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:08.195321] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833527000,1698833528000,10,323846332,1698833528194
1698833527000,1698833528000,11,314674414,1698833528194
1698833527000,1698833528000,9,296610205,1698833528194
1698833527000,1698833528000,8,16368865937,1698833528194
[m
[36m[10:12:08.222060] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:08.222272] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:08.223564] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833527000,1698833528000,7,26894904421,1698833528222
1698833527000,1698833528000,6,5842170785,1698833528222
1698833527000,1698833528000,4,2126302780,1698833528222
1698833527000,1698833528000,5,732884737,1698833528222
[m
[36m[10:12:08.399568] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:08.400115] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:08.400919] [D] [thread 127194] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:08.401018] [I] [thread 127194] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:08.401038] [I] [thread 127194] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:08.401152] [I] [thread 127194] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:08.401165] [I] [thread 127194] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:08.625622] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:08.626154] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:09.186952] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:09.187049] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:09.188949] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833528000,1698833529000,10,323848991,1698833529187
1698833528000,1698833529000,8,16368868640,1698833529187
1698833528000,1698833529000,9,296612881,1698833529187
1698833528000,1698833529000,11,314676974,1698833529187
[m
[36m[10:12:09.217839] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:09.217922] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:09.219812] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833528000,1698833529000,6,5842173389,1698833529217
1698833528000,1698833529000,4,2126305246,1698833529217
1698833528000,1698833529000,5,732887265,1698833529217
1698833528000,1698833529000,7,26894907171,1698833529217
[m
[36m[10:12:09.627478] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:10.176978] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:10.177066] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:10.178890] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833529000,1698833530000,10,323851236,1698833530177
1698833529000,1698833530000,11,314679210,1698833530177
1698833529000,1698833530000,9,296615026,1698833530177
1698833529000,1698833530000,8,16368870781,1698833530177
[m
[36m[10:12:10.210409] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:10.210487] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:10.212141] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833529000,1698833530000,6,5842175494,1698833530210
1698833529000,1698833530000,4,2126307422,1698833530210
1698833529000,1698833530000,5,732889409,1698833530210
1698833529000,1698833530000,7,26894909355,1698833530210
[m
[36m[10:12:10.628772] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:10.855436] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:10.856067] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:10.856806] [D] [thread 127199] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:10.856896] [I] [thread 127199] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:10.856916] [I] [thread 127199] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:10.857030] [I] [thread 127199] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:10.857043] [I] [thread 127199] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:11.055927] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:11.056424] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:11.169060] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:11.169166] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:11.171467] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833530000,1698833531000,10,323853617,1698833531169
1698833530000,1698833531000,11,314681508,1698833531169
1698833530000,1698833531000,8,16368873212,1698833531169
1698833530000,1698833531000,9,296617482,1698833531169
[m
[36m[10:12:11.208238] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:11.208310] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:11.209819] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833530000,1698833531000,6,5842178054,1698833531208
1698833530000,1698833531000,4,2126310044,1698833531208
1698833530000,1698833531000,5,732891972,1698833531208
1698833530000,1698833531000,7,26894911867,1698833531208
[m
[36m[10:12:12.057783] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:12.174752] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:12.174822] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:12.176050] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833531000,1698833532000,11,314684013,1698833532174
1698833531000,1698833532000,10,323856034,1698833532174
1698833531000,1698833532000,9,296619830,1698833532174
1698833531000,1698833532000,8,16368875553,1698833532174
[m
[36m[10:12:12.205113] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:12.205211] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:12.207409] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833531000,1698833532000,6,5842180332,1698833532205
1698833531000,1698833532000,4,2126312218,1698833532205
1698833531000,1698833532000,5,732894200,1698833532205
1698833531000,1698833532000,7,26894914151,1698833532205
[m
[36m[10:12:13.059153] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:13.166369] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:13.166473] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:13.168693] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833532000,1698833533000,11,314686163,1698833533166
1698833532000,1698833533000,10,323858194,1698833533166
1698833532000,1698833533000,8,16368877816,1698833533166
1698833532000,1698833533000,9,296622085,1698833533166
[m
[36m[10:12:13.204595] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:13.204690] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:13.206657] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833532000,1698833533000,6,5842182627,1698833533204
1698833532000,1698833533000,4,2126314621,1698833533204
1698833532000,1698833533000,7,26894916379,1698833533204
1698833532000,1698833533000,5,732896630,1698833533204
[m
[36m[10:12:13.367654] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:13.367986] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:13.369563] [D] [thread 127204] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:13.369654] [I] [thread 127204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:13.369673] [I] [thread 127204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:13.369787] [I] [thread 127204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:13.369800] [I] [thread 127204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:13.600481] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:13.600814] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:14.160340] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:14.160450] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:14.162766] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833533000,1698833534000,11,314688827,1698833534160
1698833533000,1698833534000,8,16368880479,1698833534160
1698833533000,1698833534000,10,323860932,1698833534160
1698833533000,1698833534000,9,296624728,1698833534160
[m
[36m[10:12:14.205550] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:14.205647] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:14.207649] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833533000,1698833534000,6,5842185209,1698833534205
1698833533000,1698833534000,4,2126317073,1698833534205
1698833533000,1698833534000,7,26894918991,1698833534205
1698833533000,1698833534000,5,732899119,1698833534205
[m
[36m[10:12:14.602138] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:15.157997] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:15.158075] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:15.159446] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833534000,1698833535000,11,314691037,1698833535158
1698833534000,1698833535000,8,16368882636,1698833535158
1698833534000,1698833535000,10,323863102,1698833535158
1698833534000,1698833535000,9,296626890,1698833535158
[m
[36m[10:12:15.216640] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:15.216712] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:15.217948] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833534000,1698833535000,6,5842187484,1698833535216
1698833534000,1698833535000,4,2126319284,1698833535216
1698833534000,1698833535000,7,26894921211,1698833535216
1698833534000,1698833535000,5,732901318,1698833535216
[m
[36m[10:12:15.603501] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:15.728060] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:15.728407] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:15.729611] [D] [thread 127209] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:15.729685] [I] [thread 127209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:15.729700] [I] [thread 127209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:15.729808] [I] [thread 127209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:15.729820] [I] [thread 127209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:16.064068] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:16.064420] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:16.213179] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:16.213279] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:16.215269] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833535000,1698833536000,4,2126321934,1698833536213
1698833535000,1698833536000,7,26894923752,1698833536213
1698833535000,1698833536000,5,732903961,1698833536213
1698833535000,1698833536000,6,5842190234,1698833536213
[m
[36m[10:12:16.223529] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:16.223612] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:16.225362] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833535000,1698833536000,11,314693556,1698833536223
1698833535000,1698833536000,8,16368885131,1698833536223
1698833535000,1698833536000,10,323865529,1698833536223
1698833535000,1698833536000,9,296629422,1698833536223
[m
[36m[10:12:17.065650] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:17.208096] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:17.208186] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:17.209933] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833536000,1698833537000,4,2126324112,1698833537208
1698833536000,1698833537000,7,26894926016,1698833537208
1698833536000,1698833537000,5,732906094,1698833537208
1698833536000,1698833537000,6,5842192447,1698833537208
[m
[36m[10:12:17.221863] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:17.221956] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:17.223776] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833536000,1698833537000,8,16368887441,1698833537221
1698833536000,1698833537000,10,323867894,1698833537221
1698833536000,1698833537000,9,296631736,1698833537221
1698833536000,1698833537000,11,314696144,1698833537221
[m
[36m[10:12:18.066941] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:18.213210] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:18.213280] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:18.214473] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833537000,1698833538000,4,2126326585,1698833538213
1698833537000,1698833538000,7,26894928296,1698833538213
1698833537000,1698833538000,6,5842194836,1698833538213
1698833537000,1698833538000,5,732908510,1698833538213
[m
[36m[10:12:18.214896] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:18.214946] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:18.216043] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833537000,1698833538000,10,323870043,1698833538214
1698833537000,1698833538000,8,16368889713,1698833538214
1698833537000,1698833538000,9,296633970,1698833538214
1698833537000,1698833538000,11,314698314,1698833538214
[m
[36m[10:12:18.216899] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:18.217254] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:18.218421] [D] [thread 127214] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:18.218513] [I] [thread 127214] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:18.218531] [I] [thread 127214] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:18.218644] [I] [thread 127214] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:18.218657] [I] [thread 127214] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:18.436981] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:18.437329] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:19.215168] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:19.215272] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:19.217504] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833538000,1698833539000,8,16368892308,1698833539215
1698833538000,1698833539000,9,296636581,1698833539215
1698833538000,1698833539000,10,323872758,1698833539215
1698833538000,1698833539000,11,314700986,1698833539215
[m
[36m[10:12:19.218087] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:19.218170] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:19.220324] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833538000,1698833539000,4,2126328991,1698833539218
1698833538000,1698833539000,7,26894930833,1698833539218
1698833538000,1698833539000,6,5842197304,1698833539218
1698833538000,1698833539000,5,732911017,1698833539218
[m
[36m[10:12:19.438457] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:20.225017] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:20.225126] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:20.227415] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833539000,1698833540000,4,2126331131,1698833540225
1698833539000,1698833540000,7,26894933061,1698833540225
1698833539000,1698833540000,6,5842199469,1698833540225
1698833539000,1698833540000,5,732913129,1698833540225
[m
[36m[10:12:20.228019] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:20.228095] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:20.230139] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833539000,1698833540000,8,16368894615,1698833540228
1698833539000,1698833540000,9,296638747,1698833540228
1698833539000,1698833540000,10,323874948,1698833540228
1698833539000,1698833540000,11,314703140,1698833540228
[m
[36m[10:12:20.439723] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:20.726633] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:20.727009] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:20.728636] [D] [thread 127219] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:20.728713] [I] [thread 127219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:20.728728] [I] [thread 127219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:20.728836] [I] [thread 127219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:20.728848] [I] [thread 127219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:20.951537] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:20.951858] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:21.187308] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:21.187415] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:21.189600] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833540000,1698833541000,4,2126333846,1698833541187
1698833540000,1698833541000,7,26894935595,1698833541187
1698833540000,1698833541000,6,5842202034,1698833541187
1698833540000,1698833541000,5,732915638,1698833541187
[m
[36m[10:12:21.211855] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:21.211952] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:21.213925] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833540000,1698833541000,10,323877320,1698833541212
1698833540000,1698833541000,9,296641239,1698833541212
1698833540000,1698833541000,11,314705515,1698833541212
1698833540000,1698833541000,8,16368897217,1698833541212
[m
[36m[10:12:21.953075] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:22.219942] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:22.220016] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:22.221236] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833541000,1698833542000,10,323879863,1698833542220
1698833541000,1698833542000,9,296643733,1698833542220
1698833541000,1698833542000,11,314707979,1698833542220
1698833541000,1698833542000,8,16368899537,1698833542220
[m
[36m[10:12:22.221631] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:22.221727] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:22.222885] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833541000,1698833542000,4,2126336170,1698833542221
1698833541000,1698833542000,5,732917736,1698833542221
1698833541000,1698833542000,7,26894937894,1698833542221
1698833541000,1698833542000,6,5842204335,1698833542221
[m
[36m[10:12:22.954375] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:23.182064] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:23.182710] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:23.183457] [D] [thread 127224] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:23.183549] [I] [thread 127224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:23.183568] [I] [thread 127224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:23.183684] [I] [thread 127224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:23.183696] [I] [thread 127224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:23.209018] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:23.209105] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:23.211463] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833542000,1698833543000,5,732920108,1698833543209
1698833542000,1698833543000,7,26894940200,1698833543209
1698833542000,1698833543000,6,5842206722,1698833543209
1698833542000,1698833543000,4,2126338794,1698833543209
[m
[36m[10:12:23.218174] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:23.218332] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:23.220794] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833542000,1698833543000,11,314710160,1698833543218
1698833542000,1698833543000,8,16368901918,1698833543218
1698833542000,1698833543000,9,296646152,1698833543218
1698833542000,1698833543000,10,323882222,1698833543218
[m
[36m[10:12:23.344733] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:23.345212] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:24.201388] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:24.201484] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:24.204007] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833543000,1698833544000,5,732922664,1698833544201
1698833543000,1698833544000,7,26894942714,1698833544201
1698833543000,1698833544000,6,5842209225,1698833544201
1698833543000,1698833544000,4,2126341146,1698833544201
[m
[36m[10:12:24.217617] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:24.217710] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:24.219768] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833543000,1698833544000,11,314712822,1698833544217
1698833543000,1698833544000,8,16368904431,1698833544217
1698833543000,1698833544000,9,296648760,1698833544217
1698833543000,1698833544000,10,323884884,1698833544217
[m
[36m[10:12:24.346459] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:25.190727] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:25.190833] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:25.193324] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833544000,1698833545000,5,732924870,1698833545190
1698833544000,1698833545000,7,26894944948,1698833545190
1698833544000,1698833545000,6,5842211412,1698833545190
1698833544000,1698833545000,4,2126343436,1698833545190
[m
[36m[10:12:25.207543] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:25.207618] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:25.209499] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833544000,1698833545000,11,314714991,1698833545207
1698833544000,1698833545000,8,16368906572,1698833545207
1698833544000,1698833545000,9,296650876,1698833545207
1698833544000,1698833545000,10,323887058,1698833545207
[m
[36m[10:12:25.347754] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:25.507373] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:25.507969] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:25.508749] [D] [thread 127229] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:25.508841] [I] [thread 127229] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:25.508860] [I] [thread 127229] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:25.508976] [I] [thread 127229] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:25.508988] [I] [thread 127229] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:25.735189] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:25.735720] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:26.191150] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:26.191254] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:26.193562] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833545000,1698833546000,5,732927427,1698833546191
1698833545000,1698833546000,7,26894947592,1698833546191
1698833545000,1698833546000,6,5842214025,1698833546191
1698833545000,1698833546000,4,2126345967,1698833546191
[m
[36m[10:12:26.200256] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:26.200345] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:26.202417] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833545000,1698833546000,11,314717479,1698833546200
1698833545000,1698833546000,8,16368909161,1698833546200
1698833545000,1698833546000,9,296653510,1698833546200
1698833545000,1698833546000,10,323889616,1698833546200
[m
[36m[10:12:26.736966] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:27.189186] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:27.189292] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:27.191432] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833546000,1698833547000,5,732929578,1698833547189
1698833546000,1698833547000,7,26894949746,1698833547189
1698833546000,1698833547000,6,5842216194,1698833547189
1698833546000,1698833547000,4,2126348133,1698833547189
[m
[36m[10:12:27.196334] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:27.196408] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:27.198493] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833546000,1698833547000,11,314719830,1698833547196
1698833546000,1698833547000,8,16368911328,1698833547196
1698833546000,1698833547000,9,296655709,1698833547196
1698833546000,1698833547000,10,323891857,1698833547196
[m
[36m[10:12:27.738274] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:27.852090] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:27.852410] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:27.854161] [D] [thread 127234] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:27.854307] [I] [thread 127234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:27.854328] [I] [thread 127234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:27.854453] [I] [thread 127234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:27.854473] [I] [thread 127234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:28.078924] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:28.079255] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:28.187440] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:28.187541] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:28.190305] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833547000,1698833548000,5,732932125,1698833548187
1698833547000,1698833548000,7,26894952155,1698833548187
1698833547000,1698833548000,6,5842218716,1698833548187
1698833547000,1698833548000,4,2126350773,1698833548187
[m
[36m[10:12:28.199870] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:28.199962] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:28.201849] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833547000,1698833548000,11,314722179,1698833548200
1698833547000,1698833548000,8,16368913802,1698833548200
1698833547000,1698833548000,9,296658185,1698833548200
1698833547000,1698833548000,10,323894248,1698833548200
[m
[36m[10:12:29.080426] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:29.169420] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:29.169484] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:29.171200] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833548000,1698833549000,5,732934505,1698833549169
1698833548000,1698833549000,7,26894954594,1698833549169
1698833548000,1698833549000,6,5842221070,1698833549169
1698833548000,1698833549000,4,2126352973,1698833549169
[m
[36m[10:12:29.201980] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:29.202046] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:29.203716] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833548000,1698833549000,11,314724735,1698833549202
1698833548000,1698833549000,8,16368916218,1698833549202
1698833548000,1698833549000,9,296660609,1698833549202
1698833548000,1698833549000,10,323896755,1698833549202
[m
[36m[10:12:30.081744] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:30.171210] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:30.171277] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:30.172427] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833549000,1698833550000,5,732936900,1698833550171
1698833549000,1698833550000,7,26894956922,1698833550171
1698833549000,1698833550000,6,5842223402,1698833550171
1698833549000,1698833550000,4,2126355436,1698833550171
[m
[36m[10:12:30.189396] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:30.189461] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:30.190776] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833549000,1698833550000,11,314726879,1698833550189
1698833549000,1698833550000,8,16368918466,1698833550189
1698833549000,1698833550000,9,296662804,1698833550189
1698833549000,1698833550000,10,323898941,1698833550189
[m
[36m[10:12:30.316872] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:30.317226] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:30.318480] [D] [thread 127239] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:30.318595] [I] [thread 127239] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:30.318614] [I] [thread 127239] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:30.318747] [I] [thread 127239] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:30.318761] [I] [thread 127239] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:30.537147] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:30.537492] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:31.165291] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:31.165401] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:31.167695] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833550000,1698833551000,5,732939367,1698833551165
1698833550000,1698833551000,7,26894959467,1698833551165
1698833550000,1698833551000,6,5842225898,1698833551165
1698833550000,1698833551000,4,2126357831,1698833551165
[m
[36m[10:12:31.179088] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:31.179171] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:31.180743] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833550000,1698833551000,11,314729430,1698833551179
1698833550000,1698833551000,8,16368921047,1698833551179
1698833550000,1698833551000,9,296665437,1698833551179
1698833550000,1698833551000,10,323901587,1698833551179
[m
[36m[10:12:31.538708] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:32.222599] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:32.222702] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:32.224653] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833551000,1698833552000,11,314731822,1698833552222
1698833551000,1698833552000,8,16368923170,1698833552222
1698833551000,1698833552000,9,296667571,1698833552222
1698833551000,1698833552000,10,323903720,1698833552222
[m
[36m[10:12:32.225335] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:32.225410] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:32.227292] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833551000,1698833552000,5,732941646,1698833552225
1698833551000,1698833552000,7,26894961619,1698833552225
1698833551000,1698833552000,6,5842228054,1698833552225
1698833551000,1698833552000,4,2126360022,1698833552225
[m
[36m[10:12:32.539959] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:32.872916] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:32.873262] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:32.874235] [D] [thread 127244] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:32.874324] [I] [thread 127244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:32.874343] [I] [thread 127244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:32.874458] [I] [thread 127244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:32.874471] [I] [thread 127244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:33.076975] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:33.077379] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:33.163781] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:33.163888] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:33.166089] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833552000,1698833553000,8,16368925655,1698833553163
1698833552000,1698833553000,10,323906121,1698833553163
1698833552000,1698833553000,9,296670020,1698833553163
1698833552000,1698833553000,11,314734101,1698833553163
[m
[36m[10:12:33.225650] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:33.225747] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:33.227710] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833552000,1698833553000,7,26894964091,1698833553225
1698833552000,1698833553000,4,2126362644,1698833553225
1698833552000,1698833553000,6,5842230680,1698833553225
1698833552000,1698833553000,5,732944387,1698833553225
[m
[36m[10:12:34.078642] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:34.149848] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:34.149951] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:34.152237] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833553000,1698833554000,7,26894966403,1698833554150
1698833553000,1698833554000,4,2126364797,1698833554150
1698833553000,1698833554000,6,5842232903,1698833554150
1698833553000,1698833554000,5,732946484,1698833554150
[m
[36m[10:12:34.207329] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:34.207403] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:34.208665] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833553000,1698833554000,11,314736644,1698833554207
1698833553000,1698833554000,8,16368928044,1698833554207
1698833553000,1698833554000,10,323908592,1698833554207
1698833553000,1698833554000,9,296672404,1698833554207
[m
[36m[10:12:35.079983] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:35.152922] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:35.153023] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:35.155288] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833554000,1698833555000,5,732948747,1698833555153
1698833554000,1698833555000,7,26894968727,1698833555153
1698833554000,1698833555000,4,2126367191,1698833555153
1698833554000,1698833555000,6,5842235249,1698833555153
[m
[36m[10:12:35.198313] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:35.198388] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:35.200046] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833554000,1698833555000,8,16368930318,1698833555198
1698833554000,1698833555000,10,323910808,1698833555198
1698833554000,1698833555000,9,296674628,1698833555198
1698833554000,1698833555000,11,314738889,1698833555198
[m
[36m[10:12:35.275633] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:35.275974] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:35.276951] [D] [thread 127249] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:35.277042] [I] [thread 127249] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:35.277061] [I] [thread 127249] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:35.277176] [I] [thread 127249] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:35.277189] [I] [thread 127249] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:35.466224] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:35.466551] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:36.224246] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:36.224360] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:36.226675] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833555000,1698833556000,8,16368932967,1698833556224
1698833555000,1698833556000,10,323913444,1698833556224
1698833555000,1698833556000,9,296677285,1698833556224
1698833555000,1698833556000,11,314741556,1698833556224
[m
[36m[10:12:36.230978] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:36.231048] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:36.232759] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833555000,1698833556000,7,26894971401,1698833556231
1698833555000,1698833556000,5,732951182,1698833556231
1698833555000,1698833556000,4,2126369646,1698833556231
1698833555000,1698833556000,6,5842237731,1698833556231
[m
[36m[10:12:36.467782] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:37.219562] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:37.219640] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:37.220988] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833556000,1698833557000,10,323915605,1698833557219
1698833556000,1698833557000,9,296679468,1698833557219
1698833556000,1698833557000,11,314743753,1698833557219
1698833556000,1698833557000,8,16368935248,1698833557219
[m
[36m[10:12:37.221430] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:37.221499] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:37.222881] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833556000,1698833557000,5,732953506,1698833557221
1698833556000,1698833557000,4,2126371877,1698833557221
1698833556000,1698833557000,6,5842239916,1698833557221
1698833556000,1698833557000,7,26894973704,1698833557221
[m
[36m[10:12:37.469099] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:37.683534] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:37.683856] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:37.685615] [D] [thread 127254] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:37.685711] [I] [thread 127254] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:37.685730] [I] [thread 127254] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:37.685845] [I] [thread 127254] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:37.685858] [I] [thread 127254] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:37.895344] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:37.895686] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:38.215880] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:38.215986] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:38.218256] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833557000,1698833558000,10,323918017,1698833558216
1698833557000,1698833558000,9,296681994,1698833558216
1698833557000,1698833558000,11,314746241,1698833558216
1698833557000,1698833558000,8,16368937823,1698833558216
[m
[36m[10:12:38.226763] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:38.226856] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:38.228578] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833557000,1698833558000,4,2126374610,1698833558226
1698833557000,1698833558000,6,5842242578,1698833558226
1698833557000,1698833558000,7,26894976293,1698833558226
1698833557000,1698833558000,5,732956253,1698833558226
[m
[36m[10:12:38.896892] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:39.203329] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:39.203416] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:39.205530] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833558000,1698833559000,10,323920426,1698833559203
1698833558000,1698833559000,9,296684353,1698833559203
1698833558000,1698833559000,11,314748649,1698833559203
1698833558000,1698833559000,8,16368940137,1698833559203
[m
[36m[10:12:39.218055] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:39.218145] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:39.219885] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833558000,1698833559000,6,5842244762,1698833559218
1698833558000,1698833559000,7,26894978493,1698833559218
1698833558000,1698833559000,5,732958470,1698833559218
1698833558000,1698833559000,4,2126376884,1698833559218
[m
[36m[10:12:39.898257] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:40.099890] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:40.100255] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:40.101214] [D] [thread 127259] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:40.101307] [I] [thread 127259] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:40.101326] [I] [thread 127259] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:40.101441] [I] [thread 127259] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:40.101453] [I] [thread 127259] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:40.199542] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:40.199650] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:40.201862] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833559000,1698833560000,10,323922706,1698833560199
1698833559000,1698833560000,9,296686619,1698833560199
1698833559000,1698833560000,11,314750828,1698833560199
1698833559000,1698833560000,8,16368942509,1698833560199
[m
[36m[10:12:40.206041] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:40.206133] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:40.208353] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833559000,1698833560000,6,5842247164,1698833560206
1698833559000,1698833560000,7,26894980951,1698833560206
1698833559000,1698833560000,4,2126379392,1698833560206
1698833559000,1698833560000,5,732960967,1698833560206
[m
[36m[10:12:40.342352] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:40.342695] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:41.185356] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:41.185455] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:41.187419] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833560000,1698833561000,10,323925294,1698833561185
1698833560000,1698833561000,9,296689137,1698833561185
1698833560000,1698833561000,11,314753428,1698833561185
1698833560000,1698833561000,8,16368944916,1698833561185
[m
[36m[10:12:41.201852] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:41.201943] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:41.203735] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833560000,1698833561000,6,5842249543,1698833561201
1698833560000,1698833561000,7,26894983369,1698833561201
1698833560000,1698833561000,4,2126381716,1698833561201
1698833560000,1698833561000,5,732963259,1698833561201
[m
[36m[10:12:41.343897] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:42.180094] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:42.180200] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:42.182168] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833561000,1698833562000,10,323927440,1698833562180
1698833561000,1698833562000,11,314755603,1698833562180
1698833561000,1698833562000,9,296691263,1698833562180
1698833561000,1698833562000,8,16368947033,1698833562180
[m
[36m[10:12:42.201766] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:42.201843] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:42.203602] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833561000,1698833562000,6,5842251695,1698833562201
1698833561000,1698833562000,4,2126383968,1698833562201
1698833561000,1698833562000,7,26894985540,1698833562201
1698833561000,1698833562000,5,732965501,1698833562201
[m
[36m[10:12:42.345165] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:42.493907] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:42.494500] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:42.495315] [D] [thread 127264] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:42.495440] [I] [thread 127264] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:42.495460] [I] [thread 127264] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:42.495575] [I] [thread 127264] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:42.495588] [I] [thread 127264] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:42.732556] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:42.733126] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:43.177911] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:43.178020] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:43.180040] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833562000,1698833563000,10,323929941,1698833563178
1698833562000,1698833563000,11,314758136,1698833563178
1698833562000,1698833563000,9,296693861,1698833563178
1698833562000,1698833563000,8,16368949683,1698833563178
[m
[36m[10:12:43.191218] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:43.191304] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:43.193029] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833562000,1698833563000,6,5842254393,1698833563191
1698833562000,1698833563000,4,2126386540,1698833563191
1698833562000,1698833563000,7,26894988159,1698833563191
1698833562000,1698833563000,5,732968031,1698833563191
[m
[36m[10:12:43.734367] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:44.183452] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:44.183528] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:44.184852] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833563000,1698833564000,6,5842256614,1698833564183
1698833563000,1698833564000,4,2126388754,1698833564183
1698833563000,1698833564000,7,26894990349,1698833564183
1698833563000,1698833564000,5,732970307,1698833564183
[m
[36m[10:12:44.227542] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:44.227621] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:44.228775] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833563000,1698833564000,10,323932402,1698833564227
1698833563000,1698833564000,9,296696198,1698833564227
1698833563000,1698833564000,11,314760521,1698833564227
1698833563000,1698833564000,8,16368951984,1698833564227
[m
[36m[10:12:44.735662] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:44.889149] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:44.889464] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:44.890541] [D] [thread 127270] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:44.890638] [I] [thread 127270] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:44.890657] [I] [thread 127270] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:44.890773] [I] [thread 127270] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:44.890831] [I] [thread 127270] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:45.177115] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:45.177446] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:45.179550] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:45.179622] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:45.180767] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833564000,1698833565000,6,5842259117,1698833565179
1698833564000,1698833565000,4,2126391373,1698833565179
1698833564000,1698833565000,7,26894992895,1698833565179
1698833564000,1698833565000,5,732972890,1698833565179
[m
[36m[10:12:45.223589] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:45.223692] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:45.225877] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833564000,1698833565000,9,296698522,1698833565223
1698833564000,1698833565000,11,314762748,1698833565223
1698833564000,1698833565000,8,16368954394,1698833565223
1698833564000,1698833565000,10,323934960,1698833565223
[m
[36m[10:12:46.169314] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:46.169420] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:46.171696] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833565000,1698833566000,6,5842261449,1698833566169
1698833565000,1698833566000,4,2126393560,1698833566169
1698833565000,1698833566000,5,732975118,1698833566169
1698833565000,1698833566000,7,26894995217,1698833566169
[m
[36m[10:12:46.178803] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:46.216888] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:46.216987] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:46.219137] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833565000,1698833566000,9,296701000,1698833566217
1698833565000,1698833566000,11,314765300,1698833566217
1698833565000,1698833566000,8,16368956800,1698833566217
1698833565000,1698833566000,10,323937388,1698833566217
[m
[36m[10:12:47.166771] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:47.166877] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:47.169081] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833566000,1698833567000,6,5842263696,1698833567166
1698833566000,1698833567000,4,2126395929,1698833567166
1698833566000,1698833567000,5,732977394,1698833567166
1698833566000,1698833567000,7,26894997369,1698833567166
[m
[36m[10:12:47.180199] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:47.214684] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:47.214776] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:47.216687] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833566000,1698833567000,11,314767449,1698833567214
1698833566000,1698833567000,9,296703152,1698833567214
1698833566000,1698833567000,8,16368958912,1698833567214
1698833566000,1698833567000,10,323939550,1698833567214
[m
[36m[10:12:47.447890] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:47.448534] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:47.449291] [D] [thread 127276] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:47.449382] [I] [thread 127276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:47.449401] [I] [thread 127276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:47.449515] [I] [thread 127276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:47.449528] [I] [thread 127276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:47.671662] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:47.672250] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:48.169845] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:48.169953] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:48.172190] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833567000,1698833568000,6,5842266307,1698833568169
1698833567000,1698833568000,4,2126398436,1698833568169
1698833567000,1698833568000,5,732979949,1698833568169
1698833567000,1698833568000,7,26894999979,1698833568169
[m
[36m[10:12:48.212882] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:48.212970] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:48.214716] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833567000,1698833568000,11,314769969,1698833568213
1698833567000,1698833568000,9,296705769,1698833568213
1698833567000,1698833568000,8,16368961571,1698833568213
1698833567000,1698833568000,10,323942136,1698833568213
[m
[36m[10:12:48.673535] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:49.169018] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:49.169123] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:49.171357] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833568000,1698833569000,6,5842268471,1698833569169
1698833568000,1698833569000,4,2126400609,1698833569169
1698833568000,1698833569000,5,732982092,1698833569169
1698833568000,1698833569000,7,26895002150,1698833569169
[m
[36m[10:12:49.224252] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:49.224340] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:49.226119] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833568000,1698833569000,9,296708134,1698833569224
1698833568000,1698833569000,11,314772284,1698833569224
1698833568000,1698833569000,8,16368963892,1698833569224
1698833568000,1698833569000,10,323944390,1698833569224
[m
[36m[10:12:49.674904] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:49.888262] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:49.888791] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:49.889832] [D] [thread 127281] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:49.889944] [I] [thread 127281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:49.889963] [I] [thread 127281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:49.890087] [I] [thread 127281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:49.890165] [I] [thread 127281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:50.079712] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:50.080262] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:50.165299] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:50.165408] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:50.167630] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833569000,1698833570000,6,5842270998,1698833570165
1698833569000,1698833570000,4,2126403224,1698833570165
1698833569000,1698833570000,5,732984755,1698833570165
1698833569000,1698833570000,7,26895004650,1698833570165
[m
[36m[10:12:50.222999] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:50.223102] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:50.225072] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833569000,1698833570000,11,314774560,1698833570223
1698833569000,1698833570000,8,16368966332,1698833570223
1698833569000,1698833570000,10,323946839,1698833570223
1698833569000,1698833570000,9,296710666,1698833570223
[m
[36m[10:12:51.081491] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:51.158793] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:51.158869] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:51.160183] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833570000,1698833571000,6,5842273313,1698833571158
1698833570000,1698833571000,4,2126405444,1698833571158
1698833570000,1698833571000,5,732986991,1698833571158
1698833570000,1698833571000,7,26895007064,1698833571158
[m
[36m[10:12:51.206423] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:51.206493] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:51.207556] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833570000,1698833571000,11,314777144,1698833571206
1698833570000,1698833571000,8,16368968741,1698833571206
1698833570000,1698833571000,10,323949274,1698833571206
1698833570000,1698833571000,9,296713067,1698833571206
[m
[36m[10:12:52.082774] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:52.216106] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:52.216181] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:52.217510] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833571000,1698833572000,4,2126407948,1698833572216
1698833571000,1698833572000,6,5842275596,1698833572216
1698833571000,1698833572000,5,732989325,1698833572216
1698833571000,1698833572000,7,26895009330,1698833572216
[m
[36m[10:12:52.224235] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:52.224306] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:52.225556] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833571000,1698833572000,11,314779406,1698833572224
1698833571000,1698833572000,8,16368971051,1698833572224
1698833571000,1698833572000,10,323951418,1698833572224
1698833571000,1698833572000,9,296715292,1698833572224
[m
[36m[10:12:52.329450] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:52.330064] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:52.331048] [D] [thread 127286] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:52.331152] [I] [thread 127286] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:52.331172] [I] [thread 127286] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:52.331304] [I] [thread 127286] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:52.331320] [I] [thread 127286] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:52.555462] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:52.556072] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:53.208938] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:53.209043] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:53.211323] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833572000,1698833573000,6,5842278155,1698833573209
1698833572000,1698833573000,5,732991829,1698833573209
1698833572000,1698833573000,7,26895011877,1698833573209
1698833572000,1698833573000,4,2126410527,1698833573209
[m
[36m[10:12:53.226686] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:53.226776] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:53.228502] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833572000,1698833573000,10,323954083,1698833573226
1698833572000,1698833573000,9,296717923,1698833573226
1698833572000,1698833573000,11,314782183,1698833573226
1698833572000,1698833573000,8,16368973658,1698833573226
[m
[36m[10:12:53.557315] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:54.192155] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:54.192259] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:54.194512] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833573000,1698833574000,6,5842280346,1698833574192
1698833573000,1698833574000,7,26895014001,1698833574192
1698833573000,1698833574000,5,732993940,1698833574192
1698833573000,1698833574000,4,2126412755,1698833574192
[m
[36m[10:12:54.210082] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:54.210175] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:54.211959] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833573000,1698833574000,8,16368975850,1698833574210
1698833573000,1698833574000,10,323956230,1698833574210
1698833573000,1698833574000,9,296720105,1698833574210
1698833573000,1698833574000,11,314784276,1698833574210
[m
[36m[10:12:54.558354] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:54.736249] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:54.736609] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:54.738259] [D] [thread 127291] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:54.738356] [I] [thread 127291] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:54.738375] [I] [thread 127291] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:54.738491] [I] [thread 127291] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:54.738515] [I] [thread 127291] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:55.000108] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:55.000469] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:55.185346] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:55.185453] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:55.187677] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833574000,1698833575000,6,5842282932,1698833575185
1698833574000,1698833575000,5,732996581,1698833575185
1698833574000,1698833575000,7,26895016568,1698833575185
1698833574000,1698833575000,4,2126415353,1698833575185
[m
[36m[10:12:55.210105] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:55.210239] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:55.212141] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833574000,1698833575000,11,314786528,1698833575210
1698833574000,1698833575000,10,323958748,1698833575210
1698833574000,1698833575000,9,296722593,1698833575210
1698833574000,1698833575000,8,16368978489,1698833575210
[m
[36m[10:12:56.001694] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:56.177166] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:56.177236] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:56.178381] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833575000,1698833576000,6,5842285179,1698833576177
1698833575000,1698833576000,5,732998757,1698833576177
1698833575000,1698833576000,7,26895018805,1698833576177
1698833575000,1698833576000,4,2126417527,1698833576177
[m
[36m[10:12:56.203962] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:56.204055] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:56.206179] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833575000,1698833576000,11,314788968,1698833576204
1698833575000,1698833576000,10,323961080,1698833576204
1698833575000,1698833576000,9,296724887,1698833576204
1698833575000,1698833576000,8,16368980781,1698833576204
[m
[36m[10:12:57.003005] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:57.162769] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:57.162868] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:57.165094] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833576000,1698833577000,6,5842287475,1698833577162
1698833576000,1698833577000,5,733001139,1698833577162
1698833576000,1698833577000,7,26895021099,1698833577162
1698833576000,1698833577000,4,2126419898,1698833577162
[m
[36m[10:12:57.219459] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:57.219536] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:57.221492] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833576000,1698833577000,11,314791261,1698833577219
1698833576000,1698833577000,10,323963241,1698833577219
1698833576000,1698833577000,9,296727140,1698833577219
1698833576000,1698833577000,8,16368982972,1698833577219
[m
[36m[10:12:57.372936] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:57.373268] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:57.374319] [D] [thread 127296] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:57.374409] [I] [thread 127296] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:57.374426] [I] [thread 127296] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:57.374541] [I] [thread 127296] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:57.374555] [I] [thread 127296] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:57.530262] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:57.530593] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:58.210423] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:58.210535] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:58.212758] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833577000,1698833578000,10,323965908,1698833578210
1698833577000,1698833578000,9,296729752,1698833578210
1698833577000,1698833578000,8,16368985596,1698833578210
1698833577000,1698833578000,11,314794038,1698833578210
[m
[36m[10:12:58.227036] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:58.227128] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:58.228910] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833577000,1698833578000,6,5842290132,1698833578227
1698833577000,1698833578000,7,26895023700,1698833578227
1698833577000,1698833578000,5,733003652,1698833578227
1698833577000,1698833578000,4,2126422333,1698833578227
[m
[36m[10:12:58.531860] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:59.206735] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:59.206816] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:59.208145] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833578000,1698833579000,10,323968079,1698833579206
1698833578000,1698833579000,9,296731929,1698833579206
1698833578000,1698833579000,8,16368987769,1698833579206
1698833578000,1698833579000,11,314796245,1698833579206
[m
[36m[10:12:59.224061] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:12:59.224129] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:12:59.225402] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833578000,1698833579000,7,26895025864,1698833579224
1698833578000,1698833579000,5,733005816,1698833579224
1698833578000,1698833579000,4,2126424591,1698833579224
1698833578000,1698833579000,6,5842292452,1698833579224
[m
[36m[10:12:59.533165] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:59.736419] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:59.736774] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:59.737772] [D] [thread 127301] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:12:59.737862] [I] [thread 127301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:59.737882] [I] [thread 127301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:12:59.737997] [I] [thread 127301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:12:59.738010] [I] [thread 127301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:12:59.985050] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:12:59.985409] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:00.200436] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:00.200542] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:00.202846] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833579000,1698833580000,10,323970621,1698833580200
1698833579000,1698833580000,8,16368990333,1698833580200
1698833579000,1698833580000,9,296734455,1698833580200
1698833579000,1698833580000,11,314798678,1698833580200
[m
[36m[10:13:00.224784] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:00.224877] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:00.226904] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833579000,1698833580000,7,26895028566,1698833580224
1698833579000,1698833580000,5,733008476,1698833580224
1698833579000,1698833580000,4,2126427216,1698833580224
1698833579000,1698833580000,6,5842295117,1698833580224
[m
[36m[10:13:00.986645] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:01.184240] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:01.184352] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:01.186616] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833580000,1698833581000,10,323972962,1698833581184
1698833580000,1698833581000,8,16368992669,1698833581184
1698833580000,1698833581000,9,296736748,1698833581184
1698833580000,1698833581000,11,314801046,1698833581184
[m
[36m[10:13:01.221338] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:01.221423] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:01.223544] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833580000,1698833581000,5,733010632,1698833581221
1698833580000,1698833581000,4,2126429400,1698833581221
1698833580000,1698833581000,6,5842297257,1698833581221
1698833580000,1698833581000,7,26895030929,1698833581221
[m
[36m[10:13:01.987939] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:02.132917] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:02.133244] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:02.134297] [D] [thread 127306] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:02.134387] [I] [thread 127306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:02.134406] [I] [thread 127306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:02.134521] [I] [thread 127306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:02.134533] [I] [thread 127306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:02.173424] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:02.173529] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:02.175749] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833581000,1698833582000,8,16368994953,1698833582173
1698833581000,1698833582000,10,323975160,1698833582173
1698833581000,1698833582000,9,296739000,1698833582173
1698833581000,1698833582000,11,314803239,1698833582173
[m
[36m[10:13:02.221893] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:02.221986] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:02.224187] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833581000,1698833582000,5,733013089,1698833582222
1698833581000,1698833582000,4,2126431836,1698833582222
1698833581000,1698833582000,6,5842299684,1698833582222
1698833581000,1698833582000,7,26895033313,1698833582222
[m
[36m[10:13:02.381092] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:02.381414] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:03.158318] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:03.158422] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:03.160576] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833582000,1698833583000,10,323977751,1698833583158
1698833582000,1698833583000,8,16368997449,1698833583158
1698833582000,1698833583000,9,296741574,1698833583158
1698833582000,1698833583000,11,314805864,1698833583158
[m
[36m[10:13:03.221528] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:03.221620] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:03.223825] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833582000,1698833583000,5,733015534,1698833583221
1698833582000,1698833583000,4,2126434232,1698833583221
1698833582000,1698833583000,6,5842302100,1698833583221
1698833582000,1698833583000,7,26895035800,1698833583221
[m
[36m[10:13:03.382685] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:04.155282] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:04.155389] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:04.157618] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833583000,1698833584000,10,323979912,1698833584155
1698833583000,1698833584000,8,16368999603,1698833584155
1698833583000,1698833584000,9,296743735,1698833584155
1698833583000,1698833584000,11,314808068,1698833584155
[m
[36m[10:13:04.213420] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:04.213510] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:04.215441] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833583000,1698833584000,5,733017695,1698833584213
1698833583000,1698833584000,4,2126436452,1698833584213
1698833583000,1698833584000,6,5842304316,1698833584213
1698833583000,1698833584000,7,26895037970,1698833584213
[m
[36m[10:13:04.383958] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:04.549710] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:04.550040] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:04.551106] [D] [thread 127311] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:04.551202] [I] [thread 127311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:04.551221] [I] [thread 127311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:04.551337] [I] [thread 127311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:04.551350] [I] [thread 127311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:04.740431] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:04.740753] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:05.147697] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:05.147768] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:05.149327] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833584000,1698833585000,8,16369002205,1698833585147
1698833584000,1698833585000,10,323982427,1698833585147
1698833584000,1698833585000,9,296746326,1698833585147
1698833584000,1698833585000,11,314810540,1698833585147
[m
[36m[10:13:05.205988] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:05.206081] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:05.208300] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833584000,1698833585000,5,733020311,1698833585206
1698833584000,1698833585000,4,2126439049,1698833585206
1698833584000,1698833585000,6,5842306921,1698833585206
1698833584000,1698833585000,7,26895040617,1698833585206
[m
[36m[10:13:05.742004] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:06.143346] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:06.143423] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:06.144680] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833585000,1698833586000,10,323984829,1698833586143
1698833585000,1698833586000,8,16369004534,1698833586143
1698833585000,1698833586000,9,296748648,1698833586143
1698833585000,1698833586000,11,314812885,1698833586143
[m
[36m[10:13:06.204277] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:06.204350] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:06.205664] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833585000,1698833586000,5,733022513,1698833586204
1698833585000,1698833586000,4,2126441286,1698833586204
1698833585000,1698833586000,6,5842309125,1698833586204
1698833585000,1698833586000,7,26895042814,1698833586204
[m
[36m[10:13:06.743301] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:06.867195] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:06.867571] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:06.868717] [D] [thread 127316] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:06.868811] [I] [thread 127316] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:06.868831] [I] [thread 127316] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:06.868945] [I] [thread 127316] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:06.868957] [I] [thread 127316] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:07.080473] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:07.080798] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:07.135255] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:07.135363] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:07.137533] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833586000,1698833587000,10,323987163,1698833587135
1698833586000,1698833587000,8,16369006977,1698833587135
1698833586000,1698833587000,9,296751004,1698833587135
1698833586000,1698833587000,11,314815247,1698833587135
[m
[36m[10:13:07.225831] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:07.225930] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:07.228118] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833586000,1698833587000,5,733025187,1698833587225
1698833586000,1698833587000,4,2126444013,1698833587225
1698833586000,1698833587000,6,5842311695,1698833587225
1698833586000,1698833587000,7,26895045315,1698833587225
[m
[36m[10:13:08.081980] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:08.218759] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:08.218840] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:08.220868] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833587000,1698833588000,8,16369009483,1698833588218
1698833587000,1698833588000,10,323989639,1698833588218
1698833587000,1698833588000,11,314817718,1698833588218
1698833587000,1698833588000,9,296753439,1698833588218
[m
[36m[10:13:08.225921] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:08.226012] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:08.228181] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833587000,1698833588000,6,5842313998,1698833588226
1698833587000,1698833588000,7,26895047653,1698833588226
1698833587000,1698833588000,4,2126446380,1698833588226
1698833587000,1698833588000,5,733027647,1698833588226
[m
[36m[10:13:09.082320] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:09.204327] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:09.204564] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:09.206787] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833588000,1698833589000,10,323991800,1698833589204
1698833588000,1698833589000,9,296755618,1698833589204
1698833588000,1698833589000,11,314819872,1698833589204
1698833588000,1698833589000,8,16369011811,1698833589204
[m
[36m[10:13:09.219353] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:09.219444] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:09.221223] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833588000,1698833589000,6,5842316347,1698833589219
1698833588000,1698833589000,7,26895049943,1698833589219
1698833588000,1698833589000,4,2126448799,1698833589219
1698833588000,1698833589000,5,733030052,1698833589219
[m
[36m[10:13:09.247747] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:09.248110] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:09.249237] [D] [thread 127321] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:09.249331] [I] [thread 127321] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:09.249351] [I] [thread 127321] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:09.249463] [I] [thread 127321] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:09.249476] [I] [thread 127321] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:09.451298] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:09.451611] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:10.194980] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:10.195083] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:10.197279] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833589000,1698833590000,10,323994452,1698833590195
1698833589000,1698833590000,9,296758269,1698833590195
1698833589000,1698833590000,11,314822528,1698833590195
1698833589000,1698833590000,8,16369014332,1698833590195
[m
[36m[10:13:10.208932] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:10.209019] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:10.210879] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833589000,1698833590000,6,5842318774,1698833590209
1698833589000,1698833590000,7,26895052502,1698833590209
1698833589000,1698833590000,4,2126451191,1698833590209
1698833589000,1698833590000,5,733032459,1698833590209
[m
[36m[10:13:10.452928] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:11.215316] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:11.215420] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:11.217636] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833590000,1698833591000,6,5842320984,1698833591215
1698833590000,1698833591000,7,26895054639,1698833591215
1698833590000,1698833591000,4,2126453441,1698833591215
1698833590000,1698833591000,5,733034656,1698833591215
[m
[36m[10:13:11.225949] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:11.226039] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:11.227745] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833590000,1698833591000,10,323996723,1698833591226
1698833590000,1698833591000,9,296760555,1698833591226
1698833590000,1698833591000,11,314824698,1698833591226
1698833590000,1698833591000,8,16369016488,1698833591226
[m
[36m[10:13:11.454278] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:11.644963] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:11.645284] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:11.646445] [D] [thread 127326] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:11.646556] [I] [thread 127326] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:11.646573] [I] [thread 127326] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:11.646698] [I] [thread 127326] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:11.646714] [I] [thread 127326] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:11.880216] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:11.880563] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:12.219635] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:12.219742] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:12.221940] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833591000,1698833592000,6,5842323652,1698833592219
1698833591000,1698833592000,7,26895057261,1698833592219
1698833591000,1698833592000,4,2126456056,1698833592219
1698833591000,1698833592000,5,733037287,1698833592219
[m
[36m[10:13:12.225583] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:12.225660] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:12.227378] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833591000,1698833592000,11,314827197,1698833592225
1698833591000,1698833592000,8,16369019138,1698833592225
1698833591000,1698833592000,9,296763247,1698833592225
1698833591000,1698833592000,10,323999471,1698833592225
[m
[36m[10:13:12.881779] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:13.218177] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:13.218334] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:13.220587] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833592000,1698833593000,6,5842325801,1698833593218
1698833592000,1698833593000,7,26895059455,1698833593218
1698833592000,1698833593000,4,2126458298,1698833593218
1698833592000,1698833593000,5,733039464,1698833593218
[m
[36m[10:13:13.221195] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:13.221283] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:13.223472] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833592000,1698833593000,11,314829638,1698833593221
1698833592000,1698833593000,8,16369021421,1698833593221
1698833592000,1698833593000,9,296765525,1698833593221
1698833592000,1698833593000,10,324001753,1698833593221
[m
[36m[10:13:13.883128] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:14.078495] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:14.078844] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:14.079812] [D] [thread 127331] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:14.079903] [I] [thread 127331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:14.079922] [I] [thread 127331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:14.080034] [I] [thread 127331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:14.080047] [I] [thread 127331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:14.213200] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:14.213274] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:14.214675] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833593000,1698833594000,6,5842328257,1698833594213
1698833593000,1698833594000,7,26895061891,1698833594213
1698833593000,1698833594000,4,2126460857,1698833594213
1698833593000,1698833594000,5,733042052,1698833594213
[m
[36m[10:13:14.219407] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:14.219482] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:14.220786] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833593000,1698833594000,11,314831910,1698833594219
1698833593000,1698833594000,8,16369023799,1698833594219
1698833593000,1698833594000,9,296767865,1698833594219
1698833593000,1698833594000,10,324004014,1698833594219
[m
[36m[10:13:14.277926] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:14.278308] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:15.212293] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:15.212397] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:15.214725] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833594000,1698833595000,4,2126463160,1698833595212
1698833594000,1698833595000,6,5842330662,1698833595212
1698833594000,1698833595000,7,26895064354,1698833595212
1698833594000,1698833595000,5,733044335,1698833595212
[m
[36m[10:13:15.222565] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:15.222658] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:15.224255] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833594000,1698833595000,8,16369026263,1698833595222
1698833594000,1698833595000,9,296770416,1698833595222
1698833594000,1698833595000,10,324006569,1698833595222
1698833594000,1698833595000,11,314834696,1698833595222
[m
[36m[10:13:15.279541] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:16.211742] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:16.211848] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:16.214013] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833595000,1698833596000,4,2126465450,1698833596211
1698833595000,1698833596000,6,5842332848,1698833596211
1698833595000,1698833596000,7,26895066558,1698833596211
1698833595000,1698833596000,5,733046648,1698833596211
[m
[36m[10:13:16.222474] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:16.222568] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:16.224156] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833595000,1698833596000,8,16369028382,1698833596222
1698833595000,1698833596000,9,296772536,1698833596222
1698833595000,1698833596000,11,314836841,1698833596222
1698833595000,1698833596000,10,324008698,1698833596222
[m
[36m[10:13:16.280778] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:16.482266] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:16.482616] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:16.483639] [D] [thread 127336] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:16.483739] [I] [thread 127336] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:16.483758] [I] [thread 127336] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:16.483875] [I] [thread 127336] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:16.483929] [I] [thread 127336] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:16.701536] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:16.701900] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:17.210051] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:17.210157] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:17.212398] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833596000,1698833597000,4,2126467970,1698833597210
1698833596000,1698833597000,6,5842335510,1698833597210
1698833596000,1698833597000,7,26895069172,1698833597210
1698833596000,1698833597000,5,733049129,1698833597210
[m
[36m[10:13:17.221692] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:17.221784] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:17.223590] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833596000,1698833597000,8,16369031039,1698833597221
1698833596000,1698833597000,9,296775217,1698833597221
1698833596000,1698833597000,10,324011375,1698833597221
1698833596000,1698833597000,11,314839464,1698833597221
[m
[36m[10:13:17.702336] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:18.208039] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:18.208146] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:18.210389] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833597000,1698833598000,8,16369033218,1698833598208
1698833597000,1698833598000,9,296777406,1698833598208
1698833597000,1698833598000,11,314841733,1698833598208
1698833597000,1698833598000,10,324013649,1698833598208
[m
[36m[10:13:18.211066] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:18.211152] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:18.213246] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833597000,1698833598000,6,5842337629,1698833598211
1698833597000,1698833598000,4,2126470176,1698833598211
1698833597000,1698833598000,7,26895071300,1698833598211
1698833597000,1698833598000,5,733051285,1698833598211
[m
[36m[10:13:18.703623] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:18.982838] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:18.983195] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:18.984784] [D] [thread 127341] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:18.984876] [I] [thread 127341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:18.984895] [I] [thread 127341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:18.985011] [I] [thread 127341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:18.985024] [I] [thread 127341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:19.201776] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:19.202137] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:19.213155] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:19.213220] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:19.214527] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833598000,1698833599000,6,5842340071,1698833599213
1698833598000,1698833599000,4,2126472733,1698833599213
1698833598000,1698833599000,7,26895073733,1698833599213
1698833598000,1698833599000,5,733053825,1698833599213
[m
[36m[10:13:19.226743] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:19.226811] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:19.228488] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833598000,1698833599000,8,16369035789,1698833599226
1698833598000,1698833599000,9,296779718,1698833599226
1698833598000,1698833599000,11,314844000,1698833599226
1698833598000,1698833599000,10,324015940,1698833599226
[m
[36m[10:13:20.203357] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:20.214004] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:20.214096] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:20.216354] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833599000,1698833600000,4,2126475016,1698833600214
1698833599000,1698833600000,6,5842342464,1698833600214
1698833599000,1698833600000,7,26895076177,1698833600214
1698833599000,1698833600000,5,733056130,1698833600214
[m
[36m[10:13:20.217831] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:20.217918] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:20.219787] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833599000,1698833600000,11,314846545,1698833600218
1698833599000,1698833600000,9,296782207,1698833600218
1698833599000,1698833600000,10,324018451,1698833600218
1698833599000,1698833600000,8,16369038267,1698833600218
[m
[36m[10:13:21.204615] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:21.205227] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:21.205287] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:21.206497] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833600000,1698833601000,9,296784384,1698833601205
1698833600000,1698833601000,11,314848738,1698833601205
1698833600000,1698833601000,10,324020611,1698833601205
1698833600000,1698833601000,8,16369040449,1698833601205
[m
[36m[10:13:21.213771] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:21.213841] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:21.215132] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833600000,1698833601000,4,2126477360,1698833601213
1698833600000,1698833601000,6,5842344698,1698833601213
1698833600000,1698833601000,7,26895078411,1698833601213
1698833600000,1698833601000,5,733058494,1698833601213
[m
[36m[10:13:21.479889] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:21.480531] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:21.481291] [D] [thread 127346] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:21.481408] [I] [thread 127346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:21.481429] [I] [thread 127346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:21.481551] [I] [thread 127346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:21.481575] [I] [thread 127346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:21.699729] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:21.700083] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:22.194906] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:22.194978] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:22.196460] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833601000,1698833602000,9,296787012,1698833602194
1698833601000,1698833602000,10,324023152,1698833602194
1698833601000,1698833602000,11,314851259,1698833602194
1698833601000,1698833602000,8,16369043064,1698833602194
[m
[36m[10:13:22.213300] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:22.213378] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:22.215073] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833601000,1698833602000,4,2126479938,1698833602213
1698833601000,1698833602000,7,26895081067,1698833602213
1698833601000,1698833602000,6,5842347328,1698833602213
1698833601000,1698833602000,5,733060995,1698833602213
[m
[36m[10:13:22.701280] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:23.191213] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:23.191311] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:23.193118] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833602000,1698833603000,9,296789201,1698833603191
1698833602000,1698833603000,11,314853564,1698833603191
1698833602000,1698833603000,10,324025414,1698833603191
1698833602000,1698833603000,8,16369045228,1698833603191
[m
[36m[10:13:23.213666] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:23.213757] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:23.215710] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833602000,1698833603000,7,26895083178,1698833603213
1698833602000,1698833603000,6,5842349526,1698833603213
1698833602000,1698833603000,5,733063121,1698833603213
1698833602000,1698833603000,4,2126482189,1698833603213
[m
[36m[10:13:23.702567] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:23.847899] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:23.848245] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:23.849200] [D] [thread 127351] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:23.849290] [I] [thread 127351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:23.849309] [I] [thread 127351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:23.849424] [I] [thread 127351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:23.849437] [I] [thread 127351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:24.052497] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:24.052848] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:24.181930] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:24.182034] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:24.184299] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833603000,1698833604000,9,296791650,1698833604182
1698833603000,1698833604000,10,324027841,1698833604182
1698833603000,1698833604000,11,314855926,1698833604182
1698833603000,1698833604000,8,16369047731,1698833604182
[m
[36m[10:13:24.212474] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:24.212555] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:24.214100] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833603000,1698833604000,7,26895085670,1698833604212
1698833603000,1698833604000,6,5842352042,1698833604212
1698833603000,1698833604000,5,733065722,1698833604212
1698833603000,1698833604000,4,2126484877,1698833604212
[m
[36m[10:13:25.054072] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:25.179058] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:25.179137] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:25.180594] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833604000,1698833605000,9,296794037,1698833605179
1698833604000,1698833605000,11,314858395,1698833605179
1698833604000,1698833605000,10,324030257,1698833605179
1698833604000,1698833605000,8,16369050150,1698833605179
[m
[36m[10:13:25.222433] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:25.222520] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:25.224214] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833604000,1698833605000,7,26895088100,1698833605222
1698833604000,1698833605000,6,5842354306,1698833605222
1698833604000,1698833605000,4,2126487061,1698833605222
1698833604000,1698833605000,5,733067897,1698833605222
[m
[36m[10:13:26.055374] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:26.172411] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:26.172515] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:26.174788] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833605000,1698833606000,9,296796219,1698833606172
1698833605000,1698833606000,10,324032421,1698833606172
1698833605000,1698833606000,11,314860556,1698833606172
1698833605000,1698833606000,8,16369052387,1698833606172
[m
[36m[10:13:26.218925] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:26.219010] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:26.220415] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833605000,1698833606000,6,5842356614,1698833606219
1698833605000,1698833606000,4,2126489485,1698833606219
1698833605000,1698833606000,5,733070381,1698833606219
1698833605000,1698833606000,7,26895090562,1698833606219
[m
[36m[10:13:26.372518] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:26.372867] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:26.373912] [D] [thread 127356] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:26.374005] [I] [thread 127356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:26.374024] [I] [thread 127356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:26.374141] [I] [thread 127356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:26.374154] [I] [thread 127356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:26.520824] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:26.521156] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:27.166405] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:27.166501] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:27.168440] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833606000,1698833607000,9,296798877,1698833607166
1698833606000,1698833607000,10,324035127,1698833607166
1698833606000,1698833607000,11,314863200,1698833607166
1698833606000,1698833607000,8,16369054965,1698833607166
[m
[36m[10:13:27.208671] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:27.208749] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:27.210546] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833606000,1698833607000,6,5842359161,1698833607208
1698833606000,1698833607000,4,2126491854,1698833607208
1698833606000,1698833607000,5,733072830,1698833607208
1698833606000,1698833607000,7,26895093053,1698833607208
[m
[36m[10:13:27.522401] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:28.173169] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:28.173241] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:28.174540] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833607000,1698833608000,9,296801058,1698833608173
1698833607000,1698833608000,10,324037298,1698833608173
1698833607000,1698833608000,8,16369057164,1698833608173
1698833607000,1698833608000,11,314865455,1698833608173
[m
[36m[10:13:28.208994] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:28.209066] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:28.210364] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833607000,1698833608000,6,5842361338,1698833608209
1698833607000,1698833608000,4,2126494077,1698833608209
1698833607000,1698833608000,5,733074996,1698833608209
1698833607000,1698833608000,7,26895095290,1698833608209
[m
[36m[10:13:28.523679] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:28.700070] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:28.700419] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:28.701563] [D] [thread 127361] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:28.701657] [I] [thread 127361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:28.701676] [I] [thread 127361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:28.701792] [I] [thread 127361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:28.701804] [I] [thread 127361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:28.899040] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:28.899394] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:29.173895] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:29.174007] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:29.176238] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833608000,1698833609000,9,296803519,1698833609174
1698833608000,1698833609000,10,324039775,1698833609174
1698833608000,1698833609000,8,16369059672,1698833609174
1698833608000,1698833609000,11,314867852,1698833609174
[m
[36m[10:13:29.195328] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:29.195404] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:29.197303] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833608000,1698833609000,6,5842363942,1698833609195
1698833608000,1698833609000,4,2126496685,1698833609195
1698833608000,1698833609000,5,733077654,1698833609195
1698833608000,1698833609000,7,26895097918,1698833609195
[m
[36m[10:13:29.900631] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:30.186353] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:30.186460] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:30.188673] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833609000,1698833610000,6,5842366176,1698833610186
1698833609000,1698833610000,4,2126498857,1698833610186
1698833609000,1698833610000,5,733079805,1698833610186
1698833609000,1698833610000,7,26895100086,1698833610186
[m
[36m[10:13:30.214648] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:30.214725] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:30.216433] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833609000,1698833610000,9,296806008,1698833610214
1698833609000,1698833610000,10,324042234,1698833610214
1698833609000,1698833610000,8,16369061991,1698833610214
1698833609000,1698833610000,11,314870278,1698833610214
[m
[36m[10:13:30.901987] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:31.183264] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:31.183577] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:31.184702] [D] [thread 127366] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:31.184798] [I] [thread 127366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:31.184818] [I] [thread 127366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:31.184934] [I] [thread 127366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:31.184947] [I] [thread 127366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:31.189925] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:31.189990] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:31.191102] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833610000,1698833611000,6,5842368498,1698833611190
1698833610000,1698833611000,4,2126501352,1698833611190
1698833610000,1698833611000,5,733082202,1698833611190
1698833610000,1698833611000,7,26895102411,1698833611190
[m
[36m[10:13:31.211012] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:31.211091] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:31.213128] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833610000,1698833611000,10,324044369,1698833611211
1698833610000,1698833611000,11,314872407,1698833611211
1698833610000,1698833611000,8,16369064340,1698833611211
1698833610000,1698833611000,9,296808371,1698833611211
[m
[36m[10:13:31.411423] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:31.411776] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:32.188542] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:32.188632] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:32.190518] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833611000,1698833612000,6,5842370983,1698833612188
1698833611000,1698833612000,4,2126503733,1698833612188
1698833611000,1698833612000,5,733084656,1698833612188
1698833611000,1698833612000,7,26895104930,1698833612188
[m
[36m[10:13:32.197605] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:32.197679] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:32.199407] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833611000,1698833612000,10,324047059,1698833612197
1698833611000,1698833612000,8,16369066880,1698833612197
1698833611000,1698833612000,11,314875080,1698833612197
1698833611000,1698833612000,9,296810927,1698833612197
[m
[36m[10:13:32.413007] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:33.185090] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:33.185194] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:33.187508] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833612000,1698833613000,6,5842373161,1698833613185
1698833612000,1698833613000,4,2126505989,1698833613185
1698833612000,1698833613000,5,733086860,1698833613185
1698833612000,1698833613000,7,26895107076,1698833613185
[m
[36m[10:13:33.225734] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:33.225827] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:33.228102] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833612000,1698833613000,10,324049319,1698833613225
1698833612000,1698833613000,8,16369069044,1698833613225
1698833612000,1698833613000,11,314877223,1698833613225
1698833612000,1698833613000,9,296813078,1698833613225
[m
[36m[10:13:33.414352] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:33.540612] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:33.541107] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:33.541982] [D] [thread 127371] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:33.542074] [I] [thread 127371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:33.542093] [I] [thread 127371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:33.542268] [I] [thread 127371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:33.542286] [I] [thread 127371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:33.775483] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:33.776034] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:34.222298] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:34.222392] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:34.224607] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833613000,1698833614000,8,16369071607,1698833614222
1698833613000,1698833614000,11,314879717,1698833614222
1698833613000,1698833614000,9,296815665,1698833614222
1698833613000,1698833614000,10,324051965,1698833614222
[m
[36m[10:13:34.225189] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:34.225266] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:34.227400] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833613000,1698833614000,4,2126508654,1698833614225
1698833613000,1698833614000,6,5842375771,1698833614225
1698833613000,1698833614000,5,733089472,1698833614225
1698833613000,1698833614000,7,26895109805,1698833614225
[m
[36m[10:13:34.777318] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:35.217289] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:35.217396] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:35.219402] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833614000,1698833615000,8,16369073850,1698833615217
1698833614000,1698833615000,11,314882181,1698833615217
1698833614000,1698833615000,9,296817916,1698833615217
1698833614000,1698833615000,10,324054269,1698833615217
[m
[36m[10:13:35.222510] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:35.222590] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:35.224442] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833614000,1698833615000,6,5842377983,1698833615222
1698833614000,1698833615000,5,733091638,1698833615222
1698833614000,1698833615000,7,26895111974,1698833615222
1698833614000,1698833615000,4,2126510924,1698833615222
[m
[36m[10:13:35.778605] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:35.884473] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:35.885060] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:35.885916] [D] [thread 127376] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:35.886006] [I] [thread 127376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:35.886026] [I] [thread 127376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:35.886143] [I] [thread 127376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:35.886156] [I] [thread 127376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:36.107962] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:36.108552] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:36.217650] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:36.217721] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:36.219055] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833615000,1698833616000,8,16369076306,1698833616217
1698833615000,1698833616000,11,314884581,1698833616217
1698833615000,1698833616000,9,296820356,1698833616217
1698833615000,1698833616000,10,324056732,1698833616217
[m
[36m[10:13:36.219566] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:36.219633] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:36.220924] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833615000,1698833616000,6,5842380497,1698833616219
1698833615000,1698833616000,7,26895114465,1698833616219
1698833615000,1698833616000,5,733094224,1698833616219
1698833615000,1698833616000,4,2126513607,1698833616219
[m
[36m[10:13:37.109841] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:37.211950] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:37.212053] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:37.214326] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833616000,1698833617000,6,5842382806,1698833617212
1698833616000,1698833617000,7,26895116790,1698833617212
1698833616000,1698833617000,5,733096467,1698833617212
1698833616000,1698833617000,4,2126515845,1698833617212
[m
[36m[10:13:37.215493] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:37.215594] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:37.217785] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833616000,1698833617000,8,16369078835,1698833617215
1698833616000,1698833617000,11,314887061,1698833617215
1698833616000,1698833617000,9,296822794,1698833617215
1698833616000,1698833617000,10,324059186,1698833617215
[m
[36m[10:13:38.111154] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:38.200284] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:38.200378] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:38.202330] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833617000,1698833618000,6,5842385090,1698833618200
1698833617000,1698833618000,7,26895118984,1698833618200
1698833617000,1698833618000,5,733098838,1698833618200
1698833617000,1698833618000,4,2126518211,1698833618200
[m
[36m[10:13:38.210404] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:38.210488] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:38.212420] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833617000,1698833618000,11,314889205,1698833618210
1698833617000,1698833618000,9,296824906,1698833618210
1698833617000,1698833618000,10,324061309,1698833618210
1698833617000,1698833618000,8,16369081126,1698833618210
[m
[36m[10:13:38.544217] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:38.545009] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:38.545987] [D] [thread 127382] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:38.546076] [I] [thread 127382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:38.546093] [I] [thread 127382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:38.546239] [I] [thread 127382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:38.546257] [I] [thread 127382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:38.699602] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:38.700111] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:39.203778] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:39.203871] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:39.206022] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833618000,1698833619000,11,314891655,1698833619203
1698833618000,1698833619000,9,296827509,1698833619203
1698833618000,1698833619000,10,324063901,1698833619203
1698833618000,1698833619000,8,16369083731,1698833619203
[m
[36m[10:13:39.222631] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:39.222707] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:39.224410] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833618000,1698833619000,6,5842387812,1698833619222
1698833618000,1698833619000,7,26895121614,1698833619222
1698833618000,1698833619000,5,733101337,1698833619222
1698833618000,1698833619000,4,2126520626,1698833619222
[m
[36m[10:13:39.701324] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:40.183555] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:40.183669] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:40.186132] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833619000,1698833620000,7,26895123772,1698833620183
1698833619000,1698833620000,5,733103501,1698833620183
1698833619000,1698833620000,4,2126522748,1698833620183
1698833619000,1698833620000,6,5842389909,1698833620183
[m
[36m[10:13:40.197430] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:40.197499] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:40.199092] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833619000,1698833620000,11,314894011,1698833620197
1698833619000,1698833620000,9,296829714,1698833620197
1698833619000,1698833620000,10,324066074,1698833620197
1698833619000,1698833620000,8,16369085890,1698833620197
[m
[36m[10:13:40.702598] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:40.767202] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:40.767825] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:40.768783] [D] [thread 127387] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:40.768892] [I] [thread 127387] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:40.768912] [I] [thread 127387] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:40.769035] [I] [thread 127387] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:40.769050] [I] [thread 127387] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:40.979610] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:40.980136] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:41.174477] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:41.174573] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:41.176714] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833620000,1698833621000,6,5842392390,1698833621174
1698833620000,1698833621000,7,26895126271,1698833621174
1698833620000,1698833621000,5,733106094,1698833621174
1698833620000,1698833621000,4,2126525404,1698833621174
[m
[36m[10:13:41.197938] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:41.198026] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:41.199948] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833620000,1698833621000,11,314896326,1698833621198
1698833620000,1698833621000,9,296832166,1698833621198
1698833620000,1698833621000,10,324068520,1698833621198
1698833620000,1698833621000,8,16369088366,1698833621198
[m
[36m[10:13:41.981353] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:42.174639] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:42.174727] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:42.177132] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833621000,1698833622000,6,5842394711,1698833622174
1698833621000,1698833622000,7,26895128591,1698833622174
1698833621000,1698833622000,4,2126527554,1698833622174
1698833621000,1698833622000,5,733108321,1698833622174
[m
[36m[10:13:42.214371] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:42.214466] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:42.216579] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833621000,1698833622000,11,314899011,1698833622214
1698833621000,1698833622000,9,296834601,1698833622214
1698833621000,1698833622000,8,16369090698,1698833622214
1698833621000,1698833622000,10,324071006,1698833622214
[m
[36m[10:13:42.982639] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:43.170863] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:43.170936] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:43.172564] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833622000,1698833623000,6,5842397033,1698833623170
1698833622000,1698833623000,7,26895130855,1698833623170
1698833622000,1698833623000,4,2126530062,1698833623170
1698833622000,1698833623000,5,733110716,1698833623170
[m
[36m[10:13:43.213492] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:43.213561] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:43.215369] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833622000,1698833623000,9,296836820,1698833623213
1698833622000,1698833623000,8,16369093067,1698833623213
1698833622000,1698833623000,10,324073235,1698833623213
1698833622000,1698833623000,11,314901334,1698833623213
[m
[36m[10:13:43.244110] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:43.245336] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:43.245810] [D] [thread 127392] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:43.245907] [I] [thread 127392] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:43.245928] [I] [thread 127392] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:43.246054] [I] [thread 127392] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:43.246067] [I] [thread 127392] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:43.419682] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:43.420267] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:44.166566] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:44.166673] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:44.169141] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833623000,1698833624000,6,5842399559,1698833624166
1698833623000,1698833624000,7,26895133436,1698833624166
1698833623000,1698833624000,4,2126532489,1698833624166
1698833623000,1698833624000,5,733113209,1698833624166
[m
[36m[10:13:44.207030] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:44.207134] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:44.209733] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833623000,1698833624000,9,296839424,1698833624207
1698833623000,1698833624000,8,16369095585,1698833624207
1698833623000,1698833624000,10,324075839,1698833624207
1698833623000,1698833624000,11,314903966,1698833624207
[m
[36m[10:13:44.421474] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:45.171333] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:45.171443] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:45.173943] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833624000,1698833625000,6,5842401755,1698833625171
1698833624000,1698833625000,7,26895135623,1698833625171
1698833624000,1698833625000,4,2126534714,1698833625171
1698833624000,1698833625000,5,733115459,1698833625171
[m
[36m[10:13:45.204775] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:45.204861] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:45.206845] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833624000,1698833625000,9,296841581,1698833625204
1698833624000,1698833625000,8,16369097720,1698833625204
1698833624000,1698833625000,10,324077988,1698833625204
1698833624000,1698833625000,11,314906148,1698833625204
[m
[36m[10:13:45.422849] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:45.564790] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:45.565169] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:45.566217] [D] [thread 127397] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:45.566330] [I] [thread 127397] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:45.566351] [I] [thread 127397] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:45.566481] [I] [thread 127397] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:45.566494] [I] [thread 127397] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:45.816776] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:45.817101] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:46.168788] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:46.168891] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:46.171348] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833625000,1698833626000,6,5842404404,1698833626168
1698833625000,1698833626000,7,26895138287,1698833626168
1698833625000,1698833626000,4,2126537282,1698833626168
1698833625000,1698833626000,5,733118110,1698833626168
[m
[36m[10:13:46.207411] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:46.207497] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:46.209849] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833625000,1698833626000,9,296844146,1698833626207
1698833625000,1698833626000,8,16369100301,1698833626207
1698833625000,1698833626000,10,324080475,1698833626207
1698833625000,1698833626000,11,314908662,1698833626207
[m
[36m[10:13:46.818367] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:47.165501] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:47.165597] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:47.168168] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833626000,1698833627000,6,5842406571,1698833627165
1698833626000,1698833627000,7,26895140457,1698833627165
1698833626000,1698833627000,4,2126539393,1698833627165
1698833626000,1698833627000,5,733120231,1698833627165
[m
[36m[10:13:47.212071] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:47.212175] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:47.214322] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833626000,1698833627000,9,296846411,1698833627212
1698833626000,1698833627000,8,16369102505,1698833627212
1698833626000,1698833627000,10,324082811,1698833627212
1698833626000,1698833627000,11,314911009,1698833627212
[m
[36m[10:13:47.819707] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:47.957241] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:47.957599] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:47.959485] [D] [thread 127402] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:47.959592] [I] [thread 127402] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:47.959612] [I] [thread 127402] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:47.959726] [I] [thread 127402] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:47.959739] [I] [thread 127402] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:48.165414] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:48.165509] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:48.167118] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833627000,1698833628000,7,26895142845,1698833628165
1698833627000,1698833628000,6,5842409066,1698833628165
1698833627000,1698833628000,4,2126541954,1698833628165
1698833627000,1698833628000,5,733122749,1698833628165
[m
[36m[10:13:48.182409] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:48.182754] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:48.203096] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:48.203169] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:48.205249] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833627000,1698833628000,9,296848796,1698833628203
1698833627000,1698833628000,8,16369104909,1698833628203
1698833627000,1698833628000,10,324085178,1698833628203
1698833627000,1698833628000,11,314913309,1698833628203
[m
[36m[10:13:49.163610] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:49.163712] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:49.166013] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833628000,1698833629000,7,26895145231,1698833629163
1698833628000,1698833629000,6,5842411408,1698833629163
1698833628000,1698833629000,4,2126544235,1698833629163
1698833628000,1698833629000,5,733124983,1698833629163
[m
[36m[10:13:49.183994] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:49.200100] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:49.200189] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:49.202748] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833628000,1698833629000,9,296851254,1698833629200
1698833628000,1698833629000,8,16369107413,1698833629200
1698833628000,1698833629000,10,324087696,1698833629200
1698833628000,1698833629000,11,314915801,1698833629200
[m
[36m[10:13:50.166764] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:50.166839] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:50.168249] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833629000,1698833630000,7,26895147415,1698833630166
1698833629000,1698833630000,6,5842413671,1698833630166
1698833629000,1698833630000,4,2126546589,1698833630166
1698833629000,1698833630000,5,733127321,1698833630166
[m
[36m[10:13:50.185230] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:50.187194] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:50.187265] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:50.188740] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833629000,1698833630000,8,16369109596,1698833630187
1698833629000,1698833630000,9,296853453,1698833630187
1698833629000,1698833630000,10,324089866,1698833630187
1698833629000,1698833630000,11,314918000,1698833630187
[m
[36m[10:13:50.432960] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:50.433283] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:50.434380] [D] [thread 127407] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:50.434470] [I] [thread 127407] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:50.434489] [I] [thread 127407] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:50.434604] [I] [thread 127407] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:50.434618] [I] [thread 127407] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:50.665442] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:50.665775] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:51.172632] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:51.172728] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:51.174914] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833630000,1698833631000,7,26895150085,1698833631172
1698833630000,1698833631000,6,5842416299,1698833631172
1698833630000,1698833631000,4,2126549137,1698833631172
1698833630000,1698833631000,5,733129953,1698833631172
[m
[36m[10:13:51.224270] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:51.224463] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:51.226085] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833630000,1698833631000,8,16369112332,1698833631224
1698833630000,1698833631000,9,296856057,1698833631224
1698833630000,1698833631000,10,324092407,1698833631224
1698833630000,1698833631000,11,314920550,1698833631224
[m
[36m[10:13:51.667016] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:52.221212] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:52.221316] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:52.223590] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833631000,1698833632000,9,296858315,1698833632221
1698833631000,1698833632000,10,324094686,1698833632221
1698833631000,1698833632000,11,314922834,1698833632221
1698833631000,1698833632000,8,16369114607,1698833632221
[m
[36m[10:13:52.224184] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:52.224337] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:52.226430] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833631000,1698833632000,7,26895152282,1698833632224
1698833631000,1698833632000,4,2126551371,1698833632224
1698833631000,1698833632000,6,5842418455,1698833632224
1698833631000,1698833632000,5,733132098,1698833632224
[m
[36m[10:13:52.668338] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:52.731344] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:52.731747] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:52.733320] [D] [thread 127412] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:52.733413] [I] [thread 127412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:52.733432] [I] [thread 127412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:52.733549] [I] [thread 127412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:52.733562] [I] [thread 127412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:52.947639] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:52.947994] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:53.212570] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:53.212656] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:53.215075] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833632000,1698833633000,9,296860717,1698833633212
1698833632000,1698833633000,10,324097048,1698833633212
1698833632000,1698833633000,11,314925207,1698833633212
1698833632000,1698833633000,8,16369117110,1698833633212
[m
[36m[10:13:53.215678] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:53.215795] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:53.218265] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833632000,1698833633000,6,5842420998,1698833633215
1698833632000,1698833633000,7,26895154768,1698833633215
1698833632000,1698833633000,5,733134671,1698833633215
1698833632000,1698833633000,4,2126554130,1698833633215
[m
[36m[10:13:53.949262] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:54.197652] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:54.197748] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:54.200002] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833633000,1698833634000,10,324099563,1698833634197
1698833633000,1698833634000,9,296863136,1698833634197
1698833633000,1698833634000,11,314927643,1698833634197
1698833633000,1698833634000,8,16369119385,1698833634197
[m
[36m[10:13:54.202470] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:54.202546] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:54.204232] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833633000,1698833634000,7,26895157074,1698833634202
1698833633000,1698833634000,6,5842423274,1698833634202
1698833633000,1698833634000,5,733136881,1698833634202
1698833633000,1698833634000,4,2126556263,1698833634202
[m
[36m[10:13:54.950409] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:54.995341] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:54.995685] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:54.996693] [D] [thread 127417] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:54.996786] [I] [thread 127417] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:54.996805] [I] [thread 127417] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:54.996919] [I] [thread 127417] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:54.996932] [I] [thread 127417] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:55.191446] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:55.191768] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:55.197946] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:55.198010] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:55.199120] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833634000,1698833635000,10,324101822,1698833635198
1698833634000,1698833635000,9,296865483,1698833635198
1698833634000,1698833635000,11,314929928,1698833635198
1698833634000,1698833635000,8,16369121829,1698833635198
[m
[36m[10:13:55.223427] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:55.223523] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:55.225674] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833634000,1698833635000,7,26895159570,1698833635223
1698833634000,1698833635000,6,5842425704,1698833635223
1698833634000,1698833635000,5,733139340,1698833635223
1698833634000,1698833635000,4,2126558835,1698833635223
[m
[36m[10:13:56.192996] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:56.203127] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:56.203222] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:56.204960] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833635000,1698833636000,10,324104379,1698833636203
1698833635000,1698833636000,9,296867965,1698833636203
1698833635000,1698833636000,11,314932472,1698833636203
1698833635000,1698833636000,8,16369124309,1698833636203
[m
[36m[10:13:56.222050] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:56.222133] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:56.223993] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833635000,1698833636000,6,5842428182,1698833636222
1698833635000,1698833636000,5,733141678,1698833636222
1698833635000,1698833636000,4,2126561095,1698833636222
1698833635000,1698833636000,7,26895161944,1698833636222
[m
[36m[10:13:57.194297] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:57.199949] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:57.200331] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:57.201563] [D] [thread 127422] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:57.201665] [I] [thread 127422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:57.201685] [I] [thread 127422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:57.201800] [I] [thread 127422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:57.201813] [I] [thread 127422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:57.214756] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:57.214823] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:57.216049] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833636000,1698833637000,10,324106549,1698833637214
1698833636000,1698833637000,9,296870358,1698833637214
1698833636000,1698833637000,11,314934649,1698833637214
1698833636000,1698833637000,8,16369126577,1698833637214
[m
[36m[10:13:57.217433] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:57.217503] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:57.219112] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833636000,1698833637000,7,26895164344,1698833637217
1698833636000,1698833637000,5,733144128,1698833637217
1698833636000,1698833637000,4,2126563517,1698833637217
1698833636000,1698833637000,6,5842430688,1698833637217
[m
[36m[10:13:57.406683] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:57.407027] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:58.211184] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:58.211256] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:58.212531] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833637000,1698833638000,5,733146572,1698833638211
1698833637000,1698833638000,4,2126565972,1698833638211
1698833637000,1698833638000,6,5842433203,1698833638211
1698833637000,1698833638000,7,26895167030,1698833638211
[m
[36m[10:13:58.212917] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:58.212964] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:58.214105] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833637000,1698833638000,10,324109177,1698833638212
1698833637000,1698833638000,11,314937361,1698833638212
1698833637000,1698833638000,8,16369129137,1698833638212
1698833637000,1698833638000,9,296873082,1698833638212
[m
[36m[10:13:58.408386] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:59.217678] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:59.217793] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:59.220170] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833638000,1698833639000,4,2126568231,1698833639217
1698833638000,1698833639000,5,733148829,1698833639217
1698833638000,1698833639000,7,26895169209,1698833639217
1698833638000,1698833639000,6,5842435429,1698833639217
[m
[36m[10:13:59.225538] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:13:59.225632] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:13:59.227824] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833638000,1698833639000,10,324111447,1698833639225
1698833638000,1698833639000,11,314939500,1698833639225
1698833638000,1698833639000,8,16369131301,1698833639225
1698833638000,1698833639000,9,296875242,1698833639225
[m
[36m[10:13:59.403619] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:59.404175] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:59.406440] [D] [thread 127427] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:13:59.406551] [I] [thread 127427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:59.406569] [I] [thread 127427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:13:59.406692] [I] [thread 127427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:13:59.406711] [I] [thread 127427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:13:59.669949] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:13:59.670489] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:00.197821] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:00.197911] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:00.200074] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833639000,1698833640000,11,314942092,1698833640197
1698833639000,1698833640000,8,16369133935,1698833640197
1698833639000,1698833640000,9,296877921,1698833640197
1698833639000,1698833640000,10,324114095,1698833640197
[m
[36m[10:14:00.224163] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:00.224242] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:00.226370] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833639000,1698833640000,4,2126570798,1698833640224
1698833639000,1698833640000,5,733151374,1698833640224
1698833639000,1698833640000,7,26895171812,1698833640224
1698833639000,1698833640000,6,5842438072,1698833640224
[m
[36m[10:14:00.671737] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:01.193298] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:01.193408] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:01.195427] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833640000,1698833641000,10,324116223,1698833641193
1698833640000,1698833641000,11,314944369,1698833641193
1698833640000,1698833641000,8,16369136157,1698833641193
1698833640000,1698833641000,9,296880097,1698833641193
[m
[36m[10:14:01.225399] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:01.225485] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:01.227642] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833640000,1698833641000,4,2126572965,1698833641225
1698833640000,1698833641000,5,733153500,1698833641225
1698833640000,1698833641000,7,26895173935,1698833641225
1698833640000,1698833641000,6,5842440201,1698833641225
[m
[36m[10:14:01.672839] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:01.768375] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:01.768702] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:01.770009] [D] [thread 127432] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:01.770124] [I] [thread 127432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:01.770145] [I] [thread 127432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:01.770440] [I] [thread 127432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:01.770478] [I] [thread 127432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:01.980435] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:01.980759] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:02.192673] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:02.192769] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:02.194728] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833641000,1698833642000,10,324118600,1698833642192
1698833641000,1698833642000,11,314946724,1698833642192
1698833641000,1698833642000,8,16369138617,1698833642192
1698833641000,1698833642000,9,296882493,1698833642192
[m
[36m[10:14:02.208763] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:02.208846] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:02.210650] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833641000,1698833642000,4,2126575605,1698833642208
1698833641000,1698833642000,5,733156100,1698833642208
1698833641000,1698833642000,7,26895176498,1698833642208
1698833641000,1698833642000,6,5842442665,1698833642208
[m
[36m[10:14:02.982054] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:03.206769] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:03.206857] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:03.208591] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833642000,1698833643000,6,5842444812,1698833643206
1698833642000,1698833643000,4,2126577808,1698833643206
1698833642000,1698833643000,5,733158346,1698833643206
1698833642000,1698833643000,7,26895178775,1698833643206
[m
[36m[10:14:03.223698] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:03.223778] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:03.225450] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833642000,1698833643000,10,324121136,1698833643223
1698833642000,1698833643000,8,16369140955,1698833643223
1698833642000,1698833643000,11,314949157,1698833643223
1698833642000,1698833643000,9,296884877,1698833643223
[m
[36m[10:14:03.983288] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:04.106429] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:04.106754] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:04.107768] [D] [thread 127438] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:04.107890] [I] [thread 127438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:04.107909] [I] [thread 127438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:04.108030] [I] [thread 127438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:04.108044] [I] [thread 127438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:04.201989] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:04.202079] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:04.203887] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833643000,1698833644000,6,5842447140,1698833644202
1698833643000,1698833644000,4,2126580252,1698833644202
1698833643000,1698833644000,5,733160804,1698833644202
1698833643000,1698833644000,7,26895181103,1698833644202
[m
[36m[10:14:04.218749] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:04.218837] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:04.220725] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833643000,1698833644000,8,16369143249,1698833644218
1698833643000,1698833644000,11,314951394,1698833644218
1698833643000,1698833644000,9,296887196,1698833644218
1698833643000,1698833644000,10,324123520,1698833644218
[m
[36m[10:14:04.332963] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:04.333284] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:05.197440] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:05.197513] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:05.198804] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833644000,1698833645000,6,5842449651,1698833645197
1698833644000,1698833645000,4,2126582688,1698833645197
1698833644000,1698833645000,5,733163223,1698833645197
1698833644000,1698833645000,7,26895183645,1698833645197
[m
[36m[10:14:05.208844] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:05.209023] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:05.210445] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833644000,1698833645000,8,16369145805,1698833645209
1698833644000,1698833645000,11,314954040,1698833645209
1698833644000,1698833645000,9,296889790,1698833645209
1698833644000,1698833645000,10,324126135,1698833645209
[m
[36m[10:14:05.334554] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:06.191139] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:06.191233] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:06.193170] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833645000,1698833646000,6,5842451893,1698833646191
1698833645000,1698833646000,4,2126584930,1698833646191
1698833645000,1698833646000,5,733165439,1698833646191
1698833645000,1698833646000,7,26895185856,1698833646191
[m
[36m[10:14:06.206509] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:06.206596] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:06.208318] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833645000,1698833646000,8,16369147969,1698833646206
1698833645000,1698833646000,11,314956228,1698833646206
1698833645000,1698833646000,9,296891933,1698833646206
1698833645000,1698833646000,10,324128309,1698833646206
[m
[36m[10:14:06.335811] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:06.385806] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:06.386158] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:06.387249] [D] [thread 127443] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:06.387368] [I] [thread 127443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:06.387388] [I] [thread 127443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:06.387523] [I] [thread 127443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:06.387540] [I] [thread 127443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:06.572600] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:06.572969] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:07.191402] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:07.191488] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:07.193582] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833646000,1698833647000,6,5842454475,1698833647191
1698833646000,1698833647000,4,2126587531,1698833647191
1698833646000,1698833647000,5,733167984,1698833647191
1698833646000,1698833647000,7,26895188485,1698833647191
[m
[36m[10:14:07.210022] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:07.210115] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:07.212096] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833646000,1698833647000,8,16369150636,1698833647210
1698833646000,1698833647000,11,314958751,1698833647210
1698833646000,1698833647000,9,296894579,1698833647210
1698833646000,1698833647000,10,324130944,1698833647210
[m
[36m[10:14:07.574133] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:08.185898] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:08.186004] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:08.188279] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833647000,1698833648000,6,5842456631,1698833648186
1698833647000,1698833648000,4,2126589659,1698833648186
1698833647000,1698833648000,5,733170096,1698833648186
1698833647000,1698833648000,7,26895190606,1698833648186
[m
[36m[10:14:08.208114] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:08.208191] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:08.209879] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833647000,1698833648000,8,16369152863,1698833648208
1698833647000,1698833648000,11,314961028,1698833648208
1698833647000,1698833648000,9,296896756,1698833648208
1698833647000,1698833648000,10,324133143,1698833648208
[m
[36m[10:14:08.575393] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:08.644609] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:08.644931] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:08.646604] [D] [thread 127448] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:08.646712] [I] [thread 127448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:08.646732] [I] [thread 127448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:08.646857] [I] [thread 127448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:08.646873] [I] [thread 127448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:08.815825] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:08.816155] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:09.185918] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:09.186006] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:09.188194] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833648000,1698833649000,6,5842459231,1698833649186
1698833648000,1698833649000,4,2126592366,1698833649186
1698833648000,1698833649000,5,733172787,1698833649186
1698833648000,1698833649000,7,26895193239,1698833649186
[m
[36m[10:14:09.212262] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:09.212359] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:09.214362] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833648000,1698833649000,8,16369155351,1698833649212
1698833648000,1698833649000,11,314963426,1698833649212
1698833648000,1698833649000,9,296899258,1698833649212
1698833648000,1698833649000,10,324135654,1698833649212
[m
[36m[10:14:09.817327] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:10.214714] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:10.214824] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:10.217048] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833649000,1698833650000,8,16369157656,1698833650214
1698833649000,1698833650000,11,314965845,1698833650214
1698833649000,1698833650000,9,296901589,1698833650214
1698833649000,1698833650000,10,324137964,1698833650214
[m
[36m[10:14:10.219603] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:10.219695] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:10.221829] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833649000,1698833650000,4,2126594655,1698833650219
1698833649000,1698833650000,6,5842461466,1698833650219
1698833649000,1698833650000,5,733174975,1698833650219
1698833649000,1698833650000,7,26895195445,1698833650219
[m
[36m[10:14:10.818616] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:10.840029] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:10.840369] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:10.841319] [D] [thread 127453] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:10.841411] [I] [thread 127453] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:10.841430] [I] [thread 127453] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:10.841546] [I] [thread 127453] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:10.841559] [I] [thread 127453] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:11.100566] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:11.100901] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:11.219904] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:11.220012] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:11.222150] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833650000,1698833651000,6,5842464059,1698833651220
1698833650000,1698833651000,5,733177568,1698833651220
1698833650000,1698833651000,7,26895197928,1698833651220
1698833650000,1698833651000,4,2126597336,1698833651220
[m
[36m[10:14:11.227538] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:11.227634] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:11.229744] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833650000,1698833651000,8,16369160162,1698833651227
1698833650000,1698833651000,9,296903975,1698833651227
1698833650000,1698833651000,11,314968167,1698833651227
1698833650000,1698833651000,10,324140323,1698833651227
[m
[36m[10:14:12.102105] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:12.214706] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:12.214783] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:12.216121] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833651000,1698833652000,5,733179894,1698833652214
1698833651000,1698833652000,7,26895200371,1698833652214
1698833651000,1698833652000,4,2126599543,1698833652214
1698833651000,1698833652000,6,5842466534,1698833652214
[m
[36m[10:14:12.221524] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:12.221589] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:12.222772] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833651000,1698833652000,9,296906428,1698833652221
1698833651000,1698833652000,11,314970696,1698833652221
1698833651000,1698833652000,10,324142843,1698833652221
1698833651000,1698833652000,8,16369162606,1698833652221
[m
[36m[10:14:13.095784] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:13.096474] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:13.097171] [D] [thread 127459] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:13.097262] [I] [thread 127459] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:13.097279] [I] [thread 127459] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:13.097394] [I] [thread 127459] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:13.097407] [I] [thread 127459] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:13.216065] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:13.216175] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:13.218478] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833652000,1698833653000,5,733182233,1698833653216
1698833652000,1698833653000,7,26895202718,1698833653216
1698833652000,1698833653000,4,2126601980,1698833653216
1698833652000,1698833653000,6,5842468956,1698833653216
[m
[36m[10:14:13.226015] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:13.226091] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:13.227696] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833652000,1698833653000,8,16369164934,1698833653226
1698833652000,1698833653000,9,296908680,1698833653226
1698833652000,1698833653000,11,314972916,1698833653226
1698833652000,1698833653000,10,324145144,1698833653226
[m
[36m[10:14:13.327577] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:13.328271] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:14.214402] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:14.214498] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:14.216645] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833653000,1698833654000,5,733184683,1698833654214
1698833653000,1698833654000,7,26895205217,1698833654214
1698833653000,1698833654000,4,2126604404,1698833654214
1698833653000,1698833654000,6,5842471405,1698833654214
[m
[36m[10:14:14.220727] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:14.220822] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:14.223023] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833653000,1698833654000,9,296911279,1698833654220
1698833653000,1698833654000,11,314975529,1698833654220
1698833653000,1698833654000,10,324147671,1698833654220
1698833653000,1698833654000,8,16369167596,1698833654220
[m
[36m[10:14:14.329563] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:15.207736] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:15.207833] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:15.209769] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833654000,1698833655000,9,296913393,1698833655207
1698833654000,1698833655000,11,314977656,1698833655207
1698833654000,1698833655000,8,16369169785,1698833655207
1698833654000,1698833655000,10,324149815,1698833655207
[m
[36m[10:14:15.222335] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:15.222418] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:15.224131] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833654000,1698833655000,5,733186937,1698833655222
1698833654000,1698833655000,7,26895207358,1698833655222
1698833654000,1698833655000,4,2126606672,1698833655222
1698833654000,1698833655000,6,5842473637,1698833655222
[m
[36m[10:14:15.330840] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:15.388708] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:15.389237] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:15.390067] [D] [thread 127465] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:15.390160] [I] [thread 127465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:15.390179] [I] [thread 127465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:15.390326] [I] [thread 127465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:15.390343] [I] [thread 127465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:15.591129] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:15.591840] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:16.210924] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:16.211017] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:16.213217] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833655000,1698833656000,9,296916003,1698833656211
1698833655000,1698833656000,11,314980221,1698833656211
1698833655000,1698833656000,8,16369172402,1698833656211
1698833655000,1698833656000,10,324152389,1698833656211
[m
[36m[10:14:16.218652] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:16.218744] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:16.220851] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833655000,1698833656000,7,26895210043,1698833656218
1698833655000,1698833656000,5,733189498,1698833656218
1698833655000,1698833656000,4,2126609182,1698833656218
1698833655000,1698833656000,6,5842476236,1698833656218
[m
[36m[10:14:16.593183] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:17.202792] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:17.202898] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:17.204666] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833656000,1698833657000,9,296918190,1698833657202
1698833656000,1698833657000,11,314982479,1698833657202
1698833656000,1698833657000,8,16369174570,1698833657202
1698833656000,1698833657000,10,324154599,1698833657202
[m
[36m[10:14:17.223848] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:17.223930] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:17.226008] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833656000,1698833657000,7,26895212177,1698833657223
1698833656000,1698833657000,5,733191682,1698833657223
1698833656000,1698833657000,4,2126611379,1698833657223
1698833656000,1698833657000,6,5842478350,1698833657223
[m
[36m[10:14:17.594494] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:17.616074] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:17.616672] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:17.617384] [D] [thread 127470] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:17.617474] [I] [thread 127470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:17.617494] [I] [thread 127470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:17.617611] [I] [thread 127470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:17.617623] [I] [thread 127470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:17.844355] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:17.844905] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:18.196969] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:18.197076] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:18.199359] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833657000,1698833658000,9,296920692,1698833658197
1698833657000,1698833658000,11,314984936,1698833658197
1698833657000,1698833658000,8,16369177141,1698833658197
1698833657000,1698833658000,10,324157101,1698833658197
[m
[36m[10:14:18.226672] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:18.226775] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:18.228707] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833657000,1698833658000,5,733194346,1698833658226
1698833657000,1698833658000,7,26895214754,1698833658226
1698833657000,1698833658000,4,2126614000,1698833658226
1698833657000,1698833658000,6,5842481020,1698833658226
[m
[36m[10:14:18.846253] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:19.195913] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:19.195994] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:19.197345] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833658000,1698833659000,9,296923056,1698833659196
1698833658000,1698833659000,11,314987400,1698833659196
1698833658000,1698833659000,10,324159534,1698833659196
1698833658000,1698833659000,8,16369179421,1698833659196
[m
[36m[10:14:19.216171] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:19.216265] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:19.218169] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833658000,1698833659000,5,733196656,1698833659216
1698833658000,1698833659000,7,26895217078,1698833659216
1698833658000,1698833659000,4,2126616167,1698833659216
1698833658000,1698833659000,6,5842483125,1698833659216
[m
[36m[10:14:19.847531] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:19.873657] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:19.874359] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:19.875092] [D] [thread 127475] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:19.875184] [I] [thread 127475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:19.875204] [I] [thread 127475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:19.875319] [I] [thread 127475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:19.875331] [I] [thread 127475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:20.137734] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:20.138346] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:20.192983] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:20.193107] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:20.195184] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833659000,1698833660000,9,296925510,1698833660193
1698833659000,1698833660000,11,314989650,1698833660193
1698833659000,1698833660000,10,324161842,1698833660193
1698833659000,1698833660000,8,16369181883,1698833660193
[m
[36m[10:14:20.214954] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:20.215018] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:20.216085] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833659000,1698833660000,7,26895219629,1698833660215
1698833659000,1698833660000,6,5842485457,1698833660215
1698833659000,1698833660000,4,2126618693,1698833660215
1698833659000,1698833660000,5,733199345,1698833660215
[m
[36m[10:14:21.139776] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:21.186822] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:21.186907] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:21.188814] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833660000,1698833661000,9,296927994,1698833661186
1698833660000,1698833661000,11,314992184,1698833661186
1698833660000,1698833661000,10,324164303,1698833661186
1698833660000,1698833661000,8,16369184286,1698833661186
[m
[36m[10:14:21.217915] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:21.217989] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:21.219818] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833660000,1698833661000,6,5842487791,1698833661218
1698833660000,1698833661000,4,2126620994,1698833661218
1698833660000,1698833661000,5,733201589,1698833661218
1698833660000,1698833661000,7,26895222138,1698833661218
[m
[36m[10:14:22.141218] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:22.178937] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:22.179530] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:22.180308] [D] [thread 127481] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:22.180400] [I] [thread 127481] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:22.180418] [I] [thread 127481] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:22.180533] [I] [thread 127481] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:22.180545] [I] [thread 127481] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:22.181825] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:22.181984] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:22.183365] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833661000,1698833662000,9,296930185,1698833662181
1698833661000,1698833662000,11,314994318,1698833662181
1698833661000,1698833662000,10,324166509,1698833662181
1698833661000,1698833662000,8,16369186553,1698833662181
[m
[36m[10:14:22.212750] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:22.212854] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:22.215259] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833661000,1698833662000,6,5842490118,1698833662212
1698833661000,1698833662000,4,2126623363,1698833662212
1698833661000,1698833662000,7,26895224458,1698833662212
1698833661000,1698833662000,5,733203986,1698833662212
[m
[36m[10:14:22.359571] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:22.359904] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:23.180284] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:23.180378] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:23.182929] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833662000,1698833663000,9,296932830,1698833663180
1698833662000,1698833663000,11,314997022,1698833663180
1698833662000,1698833663000,8,16369189131,1698833663180
1698833662000,1698833663000,10,324169127,1698833663180
[m
[36m[10:14:23.213275] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:23.213352] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:23.215660] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833662000,1698833663000,6,5842492623,1698833663213
1698833662000,1698833663000,4,2126625838,1698833663213
1698833662000,1698833663000,7,26895226976,1698833663213
1698833662000,1698833663000,5,733206436,1698833663213
[m
[36m[10:14:23.361137] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:24.177899] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:24.177995] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:24.180234] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833663000,1698833664000,11,314999160,1698833664178
1698833663000,1698833664000,9,296934993,1698833664178
1698833663000,1698833664000,8,16369191233,1698833664178
1698833663000,1698833664000,10,324171266,1698833664178
[m
[36m[10:14:24.210342] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:24.210426] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:24.212507] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833663000,1698833664000,6,5842494832,1698833664210
1698833663000,1698833664000,4,2126628089,1698833664210
1698833663000,1698833664000,7,26895229164,1698833664210
1698833663000,1698833664000,5,733208744,1698833664210
[m
[36m[10:14:24.362406] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:24.373149] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:24.373494] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:24.374663] [D] [thread 127487] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:24.374761] [I] [thread 127487] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:24.374780] [I] [thread 127487] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:24.374896] [I] [thread 127487] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:24.374954] [I] [thread 127487] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:24.583947] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:24.584328] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:25.208515] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:25.208610] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:25.210791] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833664000,1698833665000,4,2126630638,1698833665208
1698833664000,1698833665000,6,5842497428,1698833665208
1698833664000,1698833665000,7,26895231757,1698833665208
1698833664000,1698833665000,5,733211303,1698833665208
[m
[36m[10:14:25.224289] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:25.224375] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:25.226399] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833664000,1698833665000,9,296937722,1698833665224
1698833664000,1698833665000,11,315001721,1698833665224
1698833664000,1698833665000,8,16369195116,1698833665224
1698833664000,1698833665000,10,324173924,1698833665224
[m
[36m[10:14:25.585571] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:26.219353] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:26.219435] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:26.221808] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833665000,1698833666000,11,315004145,1698833666219
1698833665000,1698833666000,8,16369198645,1698833666219
1698833665000,1698833666000,10,324176132,1698833666219
1698833665000,1698833666000,9,296940053,1698833666219
[m
[36m[10:14:26.227316] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:26.227410] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:26.229834] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833665000,1698833666000,4,2126632938,1698833666227
1698833665000,1698833666000,6,5842499619,1698833666227
1698833665000,1698833666000,7,26895233954,1698833666227
1698833665000,1698833666000,5,733213477,1698833666227
[m
[36m[10:14:26.586831] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:26.596011] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:26.596321] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:26.597391] [D] [thread 127492] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:26.597491] [I] [thread 127492] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:26.597510] [I] [thread 127492] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:26.597626] [I] [thread 127492] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:26.597638] [I] [thread 127492] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:26.815379] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:26.815938] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:27.213669] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:27.213744] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:27.215108] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833666000,1698833667000,8,16369201224,1698833667213
1698833666000,1698833667000,10,324178643,1698833667213
1698833666000,1698833667000,11,315006792,1698833667213
1698833666000,1698833667000,9,296942656,1698833667213
[m
[36m[10:14:27.216128] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:27.216200] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:27.217519] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833666000,1698833667000,6,5842502272,1698833667216
1698833666000,1698833667000,7,26895236585,1698833667216
1698833666000,1698833667000,5,733216214,1698833667216
1698833666000,1698833667000,4,2126635725,1698833667216
[m
[36m[10:14:27.817214] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:28.213241] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:28.213348] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:28.215647] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833667000,1698833668000,6,5842504502,1698833668213
1698833667000,1698833668000,7,26895238777,1698833668213
1698833667000,1698833668000,5,733218383,1698833668213
1698833667000,1698833668000,4,2126637928,1698833668213
[m
[36m[10:14:28.219042] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:28.219133] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:28.220737] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833667000,1698833668000,8,16369203497,1698833668219
1698833667000,1698833668000,10,324180970,1698833668219
1698833667000,1698833668000,11,315009115,1698833668219
1698833667000,1698833668000,9,296944904,1698833668219
[m
[36m[10:14:28.818527] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:28.923051] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:28.923610] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:28.924432] [D] [thread 127497] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:28.924527] [I] [thread 127497] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:28.924545] [I] [thread 127497] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:28.924661] [I] [thread 127497] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:28.924673] [I] [thread 127497] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:29.148096] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:29.148459] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:29.204629] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:29.204734] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:29.207024] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833668000,1698833669000,6,5842506938,1698833669204
1698833668000,1698833669000,7,26895241275,1698833669204
1698833668000,1698833669000,5,733220910,1698833669204
1698833668000,1698833669000,4,2126640495,1698833669204
[m
[36m[10:14:29.218105] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:29.218174] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:29.219748] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833668000,1698833669000,8,16369205882,1698833669218
1698833668000,1698833669000,10,324183263,1698833669218
1698833668000,1698833669000,11,315011462,1698833669218
1698833668000,1698833669000,9,296947314,1698833669218
[m
[36m[10:14:30.149720] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:30.195311] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:30.195417] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:30.197382] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833669000,1698833670000,6,5842509345,1698833670195
1698833669000,1698833670000,7,26895243647,1698833670195
1698833669000,1698833670000,5,733223197,1698833670195
1698833669000,1698833670000,4,2126642759,1698833670195
[m
[36m[10:14:30.210794] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:30.210877] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:30.212586] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833669000,1698833670000,8,16369208356,1698833670210
1698833669000,1698833670000,10,324185747,1698833670210
1698833669000,1698833670000,11,315013928,1698833670210
1698833669000,1698833670000,9,296949764,1698833670210
[m
[36m[10:14:31.151017] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:31.192109] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:31.192178] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:31.193526] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833670000,1698833671000,6,5842511590,1698833671192
1698833670000,1698833671000,4,2126645122,1698833671192
1698833670000,1698833671000,5,733225564,1698833671192
1698833670000,1698833671000,7,26895245903,1698833671192
[m
[36m[10:14:31.211106] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:31.211180] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:31.211881] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:31.212178] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:31.213054] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833670000,1698833671000,8,16369210585,1698833671211
1698833670000,1698833671000,10,324187895,1698833671211
1698833670000,1698833671000,11,315016108,1698833671211
1698833670000,1698833671000,9,296951990,1698833671211
[m
[36m[10:14:31.213218] [D] [thread 127502] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:31.213278] [I] [thread 127502] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:31.213296] [I] [thread 127502] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:31.213439] [I] [thread 127502] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:31.213456] [I] [thread 127502] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:31.385837] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:31.386230] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:32.188795] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:32.188882] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:32.191378] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833671000,1698833672000,6,5842514167,1698833672188
1698833671000,1698833672000,4,2126647569,1698833672188
1698833671000,1698833672000,7,26895248443,1698833672188
1698833671000,1698833672000,5,733228037,1698833672188
[m
[36m[10:14:32.210456] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:32.210528] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:32.212675] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833671000,1698833672000,8,16369213191,1698833672210
1698833671000,1698833672000,10,324190673,1698833672210
1698833671000,1698833672000,11,315018769,1698833672210
1698833671000,1698833672000,9,296954639,1698833672210
[m
[36m[10:14:32.387561] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:33.180295] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:33.180404] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:33.182961] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833672000,1698833673000,6,5842516395,1698833673180
1698833672000,1698833673000,5,733230268,1698833673180
1698833672000,1698833673000,4,2126649838,1698833673180
1698833672000,1698833673000,7,26895250673,1698833673180
[m
[36m[10:14:33.193999] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:33.194070] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:33.195830] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833672000,1698833673000,8,16369215368,1698833673194
1698833672000,1698833673000,10,324192854,1698833673194
1698833672000,1698833673000,11,315020924,1698833673194
1698833672000,1698833673000,9,296956759,1698833673194
[m
[36m[10:14:33.388806] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:33.404356] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:33.404702] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:33.405706] [D] [thread 127507] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:33.405800] [I] [thread 127507] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:33.405820] [I] [thread 127507] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:33.405935] [I] [thread 127507] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:33.405947] [I] [thread 127507] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:33.617835] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:33.618228] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:34.176507] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:34.176582] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:34.178083] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833673000,1698833674000,6,5842519025,1698833674176
1698833673000,1698833674000,5,733232863,1698833674176
1698833673000,1698833674000,7,26895253312,1698833674176
1698833673000,1698833674000,4,2126652376,1698833674176
[m
[36m[10:14:34.223617] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:34.223690] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:34.225087] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833673000,1698833674000,8,16369218124,1698833674223
1698833673000,1698833674000,10,324195517,1698833674223
1698833673000,1698833674000,11,315023488,1698833674223
1698833673000,1698833674000,9,296959441,1698833674223
[m
[36m[10:14:34.619595] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:35.175244] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:35.175346] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:35.177874] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833674000,1698833675000,6,5842521138,1698833675175
1698833674000,1698833675000,7,26895255449,1698833675175
1698833674000,1698833675000,5,733235007,1698833675175
1698833674000,1698833675000,4,2126654565,1698833675175
[m
[36m[10:14:35.256477] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:35.256547] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:35.257714] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833674000,1698833675000,10,324197779,1698833675256
1698833674000,1698833675000,11,315025730,1698833675256
1698833674000,1698833675000,9,296961632,1698833675256
1698833674000,1698833675000,8,16369220467,1698833675256
[m
[36m[10:14:35.620941] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:35.665719] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:35.666038] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:35.667131] [D] [thread 127512] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:35.667225] [I] [thread 127512] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:35.667244] [I] [thread 127512] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:35.667358] [I] [thread 127512] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:35.667371] [I] [thread 127512] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:35.873977] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:35.874333] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:36.177063] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:36.177147] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:36.179316] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833675000,1698833676000,6,5842523736,1698833676177
1698833675000,1698833676000,7,26895258014,1698833676177
1698833675000,1698833676000,5,733237633,1698833676177
1698833675000,1698833676000,4,2126657204,1698833676177
[m
[36m[10:14:36.221040] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:36.221123] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:36.223001] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833675000,1698833676000,10,324200333,1698833676221
1698833675000,1698833676000,11,315028199,1698833676221
1698833675000,1698833676000,9,296964112,1698833676221
1698833675000,1698833676000,8,16369223047,1698833676221
[m
[36m[10:14:36.875581] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:37.174635] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:37.174741] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:37.176946] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833676000,1698833677000,6,5842525981,1698833677174
1698833676000,1698833677000,7,26895260270,1698833677174
1698833676000,1698833677000,4,2126659402,1698833677174
1698833676000,1698833677000,5,733239865,1698833677174
[m
[36m[10:14:37.217050] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:37.217127] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:37.218879] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833676000,1698833677000,11,315030557,1698833677217
1698833676000,1698833677000,9,296966494,1698833677217
1698833676000,1698833677000,8,16369225331,1698833677217
1698833676000,1698833677000,10,324202819,1698833677217
[m
[36m[10:14:37.876851] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:37.901861] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:37.902506] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:37.903273] [D] [thread 127517] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:37.903365] [I] [thread 127517] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:37.903384] [I] [thread 127517] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:37.903502] [I] [thread 127517] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:37.903515] [I] [thread 127517] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:38.119591] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:38.120104] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:38.171043] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:38.171149] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:38.173354] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833677000,1698833678000,6,5842528435,1698833678171
1698833677000,1698833678000,7,26895262677,1698833678171
1698833677000,1698833678000,4,2126661951,1698833678171
1698833677000,1698833678000,5,733242375,1698833678171
[m
[36m[10:14:38.205514] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:38.205600] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:38.207770] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833677000,1698833678000,11,315032830,1698833678205
1698833677000,1698833678000,9,296968826,1698833678205
1698833677000,1698833678000,8,16369227733,1698833678205
1698833677000,1698833678000,10,324205163,1698833678205
[m
[36m[10:14:39.121351] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:39.165132] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:39.165223] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:39.167530] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833678000,1698833679000,6,5842530791,1698833679165
1698833678000,1698833679000,7,26895265105,1698833679165
1698833678000,1698833679000,5,733244674,1698833679165
1698833678000,1698833679000,4,2126664193,1698833679165
[m
[36m[10:14:39.207495] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:39.207577] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:39.209477] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833678000,1698833679000,11,315035356,1698833679207
1698833678000,1698833679000,9,296971278,1698833679207
1698833678000,1698833679000,8,16369230119,1698833679207
1698833678000,1698833679000,10,324207705,1698833679207
[m
[36m[10:14:40.122708] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:40.199036] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:40.199136] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:40.201368] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833679000,1698833680000,11,315037520,1698833680199
1698833679000,1698833680000,9,296973481,1698833680199
1698833679000,1698833680000,10,324209887,1698833680199
1698833679000,1698833680000,8,16369232383,1698833680199
[m
[36m[10:14:40.265260] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:40.265551] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:40.266785] [D] [thread 127522] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:40.266864] [I] [thread 127522] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:40.266882] [I] [thread 127522] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:40.267013] [I] [thread 127522] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:40.267028] [I] [thread 127522] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:40.267196] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:40.267217] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:40.268314] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833679000,1698833680000,6,5842533262,1698833680267
1698833679000,1698833680000,7,26895267369,1698833680267
1698833679000,1698833680000,5,733247008,1698833680267
1698833679000,1698833680000,4,2126666572,1698833680267
[m
[36m[10:14:40.432140] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:40.432501] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:41.195609] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:41.195681] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:41.197084] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833680000,1698833681000,11,315040180,1698833681195
1698833680000,1698833681000,9,296976155,1698833681195
1698833680000,1698833681000,8,16369234993,1698833681195
1698833680000,1698833681000,10,324212558,1698833681195
[m
[36m[10:14:41.221627] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:41.221702] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:41.223411] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833680000,1698833681000,7,26895269964,1698833681221
1698833680000,1698833681000,5,733249481,1698833681221
1698833680000,1698833681000,4,2126669026,1698833681221
1698833680000,1698833681000,6,5842535898,1698833681221
[m
[36m[10:14:41.433769] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:42.195384] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:42.195454] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:42.196730] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833681000,1698833682000,11,315042353,1698833682195
1698833681000,1698833682000,9,296978319,1698833682195
1698833681000,1698833682000,10,324214724,1698833682195
1698833681000,1698833682000,8,16369237183,1698833682195
[m
[36m[10:14:42.214805] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:42.214876] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:42.216439] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833681000,1698833682000,7,26895272108,1698833682214
1698833681000,1698833682000,5,733251696,1698833682214
1698833681000,1698833682000,4,2126671299,1698833682214
1698833681000,1698833682000,6,5842538133,1698833682214
[m
[36m[10:14:42.435072] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:42.488839] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:42.489195] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:42.490836] [D] [thread 127527] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:42.490931] [I] [thread 127527] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:42.490950] [I] [thread 127527] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:42.491066] [I] [thread 127527] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:42.491079] [I] [thread 127527] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:42.687049] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:42.687407] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:43.195825] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:43.195928] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:43.198406] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833682000,1698833683000,11,315044897,1698833683196
1698833682000,1698833683000,9,296980857,1698833683196
1698833682000,1698833683000,10,324217257,1698833683196
1698833682000,1698833683000,8,16369239800,1698833683196
[m
[36m[10:14:43.217852] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:43.217947] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:43.220258] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833682000,1698833683000,7,26895274728,1698833683218
1698833682000,1698833683000,4,2126673852,1698833683218
1698833682000,1698833683000,5,733254323,1698833683218
1698833682000,1698833683000,6,5842540747,1698833683218
[m
[36m[10:14:43.688729] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:44.184879] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:44.184967] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:44.186968] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833683000,1698833684000,11,315047224,1698833684185
1698833683000,1698833684000,9,296983171,1698833684185
1698833683000,1698833684000,10,324219491,1698833684185
1698833683000,1698833684000,8,16369241965,1698833684185
[m
[36m[10:14:44.219794] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:44.219892] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:44.222415] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833683000,1698833684000,7,26895276933,1698833684219
1698833683000,1698833684000,4,2126675990,1698833684219
1698833683000,1698833684000,5,733256486,1698833684219
1698833683000,1698833684000,6,5842542926,1698833684219
[m
[36m[10:14:44.676972] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:44.677475] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:44.678407] [D] [thread 127532] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:44.678500] [I] [thread 127532] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:44.678520] [I] [thread 127532] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:44.678636] [I] [thread 127532] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:44.678649] [I] [thread 127532] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:44.878078] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:44.878565] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:45.191274] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:45.191381] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:45.193637] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833684000,1698833685000,11,315049612,1698833685191
1698833684000,1698833685000,9,296985574,1698833685191
1698833684000,1698833685000,10,324221994,1698833685191
1698833684000,1698833685000,8,16369244460,1698833685191
[m
[36m[10:14:45.214787] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:45.214863] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:45.216740] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833684000,1698833685000,4,2126678641,1698833685214
1698833684000,1698833685000,7,26895279453,1698833685214
1698833684000,1698833685000,5,733259143,1698833685214
1698833684000,1698833685000,6,5842545529,1698833685214
[m
[36m[10:14:45.879850] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:46.188725] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:46.188814] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:46.190615] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833685000,1698833686000,11,315052062,1698833686188
1698833685000,1698833686000,9,296987962,1698833686188
1698833685000,1698833686000,10,324224388,1698833686188
1698833685000,1698833686000,8,16369246743,1698833686188
[m
[36m[10:14:46.214030] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:46.214129] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:46.216368] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833685000,1698833686000,4,2126680808,1698833686214
1698833685000,1698833686000,7,26895281741,1698833686214
1698833685000,1698833686000,5,733261332,1698833686214
1698833685000,1698833686000,6,5842547760,1698833686214
[m
[36m[10:14:46.881090] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:46.935394] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:46.935728] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:46.936741] [D] [thread 127538] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:46.936861] [I] [thread 127538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:46.936882] [I] [thread 127538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:46.937003] [I] [thread 127538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:46.937019] [I] [thread 127538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:47.104073] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:47.104418] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:47.187772] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:47.187879] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:47.190061] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833686000,1698833687000,11,315054276,1698833687187
1698833686000,1698833687000,9,296990269,1698833687187
1698833686000,1698833687000,10,324226718,1698833687187
1698833686000,1698833687000,8,16369249142,1698833687187
[m
[36m[10:14:47.208529] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:47.208623] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:47.210614] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833686000,1698833687000,4,2126683291,1698833687208
1698833686000,1698833687000,7,26895284170,1698833687208
1698833686000,1698833687000,5,733263823,1698833687208
1698833686000,1698833687000,6,5842550240,1698833687208
[m
[36m[10:14:48.105619] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:48.179501] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:48.179577] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:48.180824] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833687000,1698833688000,11,315056847,1698833688179
1698833687000,1698833688000,9,296992823,1698833688179
1698833687000,1698833688000,10,324229222,1698833688179
1698833687000,1698833688000,8,16369251604,1698833688179
[m
[36m[10:14:48.208620] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:48.208706] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:48.210658] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833687000,1698833688000,4,2126685630,1698833688208
1698833687000,1698833688000,5,733266166,1698833688208
1698833687000,1698833688000,7,26895286617,1698833688208
1698833687000,1698833688000,6,5842552573,1698833688208
[m
[36m[10:14:49.106891] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:49.218341] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:49.218437] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:49.219922] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833688000,1698833689000,11,315059136,1698833689218
1698833688000,1698833689000,9,296995023,1698833689218
1698833688000,1698833689000,10,324231439,1698833689218
1698833688000,1698833689000,8,16369253893,1698833689218
[m
[36m[10:14:49.223090] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:49.223175] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:49.224675] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833688000,1698833689000,4,2126688041,1698833689223
1698833688000,1698833689000,7,26895289035,1698833689223
1698833688000,1698833689000,5,733268500,1698833689223
1698833688000,1698833689000,6,5842554950,1698833689223
[m
[36m[10:14:49.247157] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:49.247529] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:49.248750] [D] [thread 127543] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:49.248855] [I] [thread 127543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:49.248878] [I] [thread 127543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:49.249000] [I] [thread 127543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:49.249015] [I] [thread 127543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:49.459835] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:49.460420] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:50.210633] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:50.210890] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:50.213241] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833689000,1698833690000,9,296997649,1698833690210
1698833689000,1698833690000,10,324234058,1698833690210
1698833689000,1698833690000,8,16369256494,1698833690210
1698833689000,1698833690000,11,315061959,1698833690210
[m
[36m[10:14:50.214025] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:50.214093] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:50.215876] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833689000,1698833690000,4,2126690593,1698833690214
1698833689000,1698833690000,5,733270999,1698833690214
1698833689000,1698833690000,6,5842557461,1698833690214
1698833689000,1698833690000,7,26895291725,1698833690214
[m
[36m[10:14:50.461733] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:51.202379] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:51.202486] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:51.204710] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833690000,1698833691000,9,296999829,1698833691202
1698833690000,1698833691000,10,324236171,1698833691202
1698833690000,1698833691000,8,16369258623,1698833691202
1698833690000,1698833691000,11,315064129,1698833691202
[m
[36m[10:14:51.220803] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:51.220886] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:51.222669] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833690000,1698833691000,5,733273382,1698833691220
1698833690000,1698833691000,4,2126692986,1698833691220
1698833690000,1698833691000,6,5842559671,1698833691220
1698833690000,1698833691000,7,26895293859,1698833691220
[m
[36m[10:14:51.463027] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:51.486168] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:51.486513] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:51.487764] [D] [thread 127548] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:51.487882] [I] [thread 127548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:51.487902] [I] [thread 127548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:51.488025] [I] [thread 127548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:51.488087] [I] [thread 127548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:51.704620] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:51.704947] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:52.201087] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:52.201190] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:52.203456] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833691000,1698833692000,9,297002373,1698833692201
1698833691000,1698833692000,10,324238786,1698833692201
1698833691000,1698833692000,8,16369261214,1698833692201
1698833691000,1698833692000,11,315066642,1698833692201
[m
[36m[10:14:52.215865] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:52.215958] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:52.217726] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833691000,1698833692000,4,2126695540,1698833692216
1698833691000,1698833692000,6,5842562273,1698833692216
1698833691000,1698833692000,7,26895296517,1698833692216
1698833691000,1698833692000,5,733276110,1698833692216
[m
[36m[10:14:52.706155] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:53.202459] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:53.202566] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:53.204788] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833692000,1698833693000,10,324241054,1698833693202
1698833692000,1698833693000,9,297004595,1698833693202
1698833692000,1698833693000,8,16369263389,1698833693202
1698833692000,1698833693000,11,315068965,1698833693202
[m
[36m[10:14:53.220634] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:53.220711] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:53.222403] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833692000,1698833693000,4,2126697652,1698833693220
1698833692000,1698833693000,5,733278231,1698833693220
1698833692000,1698833693000,7,26895298667,1698833693220
1698833692000,1698833693000,6,5842564389,1698833693220
[m
[36m[10:14:53.707453] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:53.768026] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:53.768379] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:53.769576] [D] [thread 127553] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:14:53.769673] [I] [thread 127553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:53.769693] [I] [thread 127553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:14:53.769808] [I] [thread 127553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:14:53.769821] [I] [thread 127553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:14:53.932879] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:53.933497] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:54.198000] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:54.198073] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:54.199371] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833693000,1698833694000,10,324243445,1698833694198
1698833693000,1698833694000,8,16369265879,1698833694198
1698833693000,1698833694000,9,297007048,1698833694198
1698833693000,1698833694000,11,315071309,1698833694198
[m
[36m[10:14:54.208237] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:54.208745] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:14:54.209589] [I] [thread 127557] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[10:14:54.209679] [D] [thread 127557] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[10:14:54.209813] [I] [thread 127557] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[10:14:54.209830] [I] [thread 127557] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:14:54.209871] [I] [thread 126822] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:14:54.209952] [I] [thread 126822] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:14:54.209975] [I] [thread 126822] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:14:54.210020] [I] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[10:14:54.210034] [D] [thread 126822] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[10:14:54.210081] [D] [thread 126822] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[10:14:54.210343] [D] [thread 126822] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[10:14:54.210834] [D] [thread 126822] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:14:54.210860] [D] [thread 126822] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:14:54.210902] [D] [thread 126822] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:14:54.210916] [D] [thread 126822] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:14:54.210924] [D] [thread 126822] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[10:14:54.210952] [D] [thread 126822] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[10:14:54.210973] [D] [thread 126822] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:14:54.211002] [D] [thread 126822] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[10:14:54.211013] [D] [thread 126822] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[10:14:54.211154] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.32:33389[m
[36m[10:14:54.211182] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:33389 queryId=1[m
[36m[10:14:54.216254] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.33:37727[m
[36m[10:14:54.216337] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:37727 queryId=1[m
[36m[10:14:54.216577] [D] [thread 126832] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[10:14:54.216602] [D] [thread 126832] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:14:54.217660] [D] [thread 126832] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out following content 1698833693000,1698833694000,4,2126700246,1698833694216
1698833693000,1698833694000,7,26895301237,1698833694216
1698833693000,1698833694000,6,5842566996,1698833694216
1698833693000,1698833694000,5,733280702,1698833694216
[m
[36m[10:14:54.221008] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.34:36071[m
[36m[10:14:54.221095] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:36071 queryId=1[m
[36m[10:14:54.225528] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.35:40461[m
[36m[10:14:54.225614] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:40461 queryId=1[m
[36m[10:14:54.229985] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.30:45807[m
[36m[10:14:54.230183] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:45807 queryId=1[m
[36m[10:14:54.234683] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.36:46129[m
[36m[10:14:54.234759] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.36:46129 queryId=1[m
[36m[10:14:54.238973] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:45171[m
[36m[10:14:54.239053] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:45171 queryId=1[m
[36m[10:14:54.243680] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:37323[m
[36m[10:14:54.243763] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:37323 queryId=1[m
[36m[10:14:54.247986] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=11 and IP=192.168.2.39:40941[m
[36m[10:14:54.248070] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.39:40941 queryId=1[m
[36m[10:14:54.252330] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.31:37051[m
[36m[10:14:54.252414] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:37051 queryId=1[m
[36m[10:14:54.256672] [D] [thread 126822] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:41583[m
[36m[10:14:54.256757] [D] [thread 126822] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:41583 queryId=1[m
[36m[10:14:54.261180] [D] [thread 126822] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 11 queues[m
[36m[10:14:54.276898] [D] [thread 126831] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:37323): EndOfStream received for channel [m
[36m[10:14:54.277059] [D] [thread 126831] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::37::0::0(threadId=0)[m
[32m[10:14:54.277243] [I] [thread 126831] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::37::0::0; newCnt(1)[m
[36m[10:14:54.277311] [D] [thread 126831] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::37::0::0, counter is at 1.[m
[36m[10:14:54.277638] [D] [thread 126831] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[10:14:54.277694] [W] [thread 126831] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[10:14:54.463983] [D] [thread 126831] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:37323): EndOfStream received for channel [m
[36m[10:14:54.464127] [D] [thread 126831] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::52::0::0(threadId=0)[m
[32m[10:14:54.464221] [I] [thread 126831] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::52::0::0; newCnt(1)[m
[36m[10:14:54.464256] [D] [thread 126831] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::52::0::0, counter is at 1.[m
[36m[10:14:54.464317] [D] [thread 126831] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[10:14:54.464364] [W] [thread 126831] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[10:14:54.636227] [E] [thread 127460] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::28::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaac4f590b7, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffac813d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaac4f59a6f, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb667f6b7, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb64982eb, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae842207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffacec36e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae8547e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae855773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaac4f590b7, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffac813d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaac4f59a6f, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb667f6b7, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb64982eb, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae842207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffacec36e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae8547e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae855773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[10:14:54.792057] [D] [thread 126834] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[10:14:54.792370] [D] [thread 126834] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[10:14:54.792502] [D] [thread 126834] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  11  type= HardStop[m
[36m[10:14:54.792564] [D] [thread 126834] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[10:14:54.792650] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:14:54.792879] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:14:54.793333] [D] [thread 126834] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 11 Source 37 is notifying completion: HardStop[m
[36m[10:14:54.793397] [D] [thread 126832] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::37::0::0[m
[36m[10:14:54.793436] [D] [thread 126834] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 11 Source 37 is terminated; tokens left = 3[m
[36m[10:14:54.793491] [D] [thread 126834] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 37 terminationType=HardStop[m
[36m[10:14:54.793581] [D] [thread 126832] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::37::0::0 Thread 0[m
[36m[10:14:54.793634] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:14:54.793663] [D] [thread 126832] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::37::0::0[m
[36m[10:14:54.793702] [D] [thread 126832] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::37::0::0[m
[36m[10:14:54.793733] [D] [thread 126832] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::37::0::0[m
[36m[10:14:54.793780] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[32m[10:14:54.793801] [I] [thread 126832] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::37::0::0; newCnt(0)[m
[36m[10:14:54.794130] [D] [thread 126834] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=37 reconfType=HardEndOfStream queryId=1 querySubPlanId=11 threadPool->getNumberOfThreads()=1[m
[36m[10:14:54.794185] [D] [thread 126832] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:14:54.794241] [D] [thread 126834] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:14:54.794382] [D] [thread 126834] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
2023-11-01 10:14:54.796 postReconfigurationCallback: queryId=1, querySubPlanId=11; queryId=1 subPlanId=11 processedTasks=602 processedTuple=2408 processedBuffers=602 processedWatermarks=0 latencyAVG=1698833544205 queueSizeAVG=0 availableGlobalBufferAVG=894 availableFixedBufferAVG=0
[36m[10:14:54.794443] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:14:54.794583] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:14:54.794846] [D] [thread 126834] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 11 Source 52 is notifying completion: HardStop[m
[36m[10:14:54.794902] [D] [thread 126834] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 11 Source 52 is terminated; tokens left = 2[m
[36m[10:14:54.794907] [D] [thread 126832] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[10:14:54.794935] [D] [thread 126834] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 52 terminationType=HardStop[m
[36m[10:14:54.794973] [D] [thread 126832] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::52::0::0 Thread 0[m
[36m[10:14:54.795006] [D] [thread 126832] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[10:14:54.795016] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:14:54.795033] [D] [thread 126832] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::52::0::0[m
[36m[10:14:54.795059] [D] [thread 126832] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::52::0::0[m
[32m[10:14:54.795122] [I] [thread 126832] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::52::0::0; newCnt(0)[m
[36m[10:14:54.795134] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:14:54.795350] [D] [thread 126834] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=52 reconfType=HardEndOfStream queryId=1 querySubPlanId=11 threadPool->getNumberOfThreads()=1[m
[36m[10:14:54.795415] [D] [thread 126834] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:14:54.795415] [D] [thread 126832] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:14:54.795667] [D] [thread 126832] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 11 Sink FileSink() is terminated; tokens left = 1[m
[36m[10:14:54.795743] [D] [thread 126832] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:14:54.795889] [D] [thread 126832] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=false type HardEndOfStream[m
[36m[10:14:54.796148] [D] [thread 126832] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[10:14:54.796680] [D] [thread 126832] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=11[m
[36m[10:14:54.796723] [D] [thread 126832] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=11[m
[36m[10:14:54.796742] [D] [thread 126832] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-11 is marked as stopped now[m
[36m[10:14:54.796958] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Destroy[m
[36m[10:14:54.797148] [D] [thread 126834] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Destroy[m
[36m[10:14:54.797635] [D] [thread 126834] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  11[m
[36m[10:14:54.797776] [D] [thread 126834] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 11 was successful[m
[36m[10:14:54.797805] [D] [thread 126834] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  11  succeeded[m
[36m[10:14:54.797826] [D] [thread 126834] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[10:14:54.801190] [D] [thread 126822] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Stop succeed[m
[36m[10:14:54.801243] [D] [thread 126822] [QueryUndeploymentPhase.cpp:114] [stopQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[36m[10:14:54.801905] [D] [thread 126822] [QueryUndeploymentPhase.cpp:59] [execute] QueryUndeploymentPhase:removeQuery: undeploy query  1[m
[36m[10:14:54.801943] [D] [thread 126822] [QueryUndeploymentPhase.cpp:125] [undeployQuery] QueryUndeploymentPhase::undeployQuery queryId= 1[m
[36m[10:14:54.802070] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=4 and IP=192.168.2.32:33389[m
[36m[10:14:54.802105] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.32:33389 queryId=1[m
[36m[10:14:54.806940] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=5 and IP=192.168.2.33:37727[m
[36m[10:14:54.807022] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.33:37727 queryId=1[m
[36m[10:14:54.811281] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=6 and IP=192.168.2.34:36071[m
[36m[10:14:54.811366] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.34:36071 queryId=1[m
[36m[10:14:54.815673] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=7 and IP=192.168.2.35:40461[m
[36m[10:14:54.815759] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.35:40461 queryId=1[m
[36m[10:14:54.819995] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=2 and IP=192.168.2.30:45807[m
[36m[10:14:54.820082] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.30:45807 queryId=1[m
[36m[10:14:54.824421] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=8 and IP=192.168.2.36:46129[m
[36m[10:14:54.824545] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.36:46129 queryId=1[m
[36m[10:14:54.828797] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=9 and IP=192.168.2.37:45171[m
[36m[10:14:54.828870] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.37:45171 queryId=1[m
[36m[10:14:54.833072] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=10 and IP=192.168.2.38:37323[m
[36m[10:14:54.833159] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.38:37323 queryId=1[m
[36m[10:14:54.837382] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=11 and IP=192.168.2.39:40941[m
[36m[10:14:54.837505] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.39:40941 queryId=1[m
[36m[10:14:54.841726] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=3 and IP=192.168.2.31:37051[m
[36m[10:14:54.841811] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.31:37051 queryId=1[m
[36m[10:14:54.846079] [D] [thread 126822] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=1 and IP=192.168.2.11:41583[m
[36m[10:14:54.846161] [D] [thread 126822] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.11:41583 queryId=1[m
[36m[10:14:54.850727] [D] [thread 126822] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Unregister for 11 queues[m
[36m[10:14:54.879574] [D] [thread 126901] [WorkerRPCServer.cpp:64] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: got request for 1[m
[36m[10:14:54.879681] [D] [thread 126901] [NodeEngine.cpp:206] [unregisterQuery] Runtime: unregisterQuery query= 1[m
[36m[10:14:54.879768] [D] [thread 126901] [NodeEngine.cpp:231] [unregisterQuery] Runtime: unregister of query  11 : current status is stopped= true[m
[36m[10:14:54.879794] [D] [thread 126901] [QueryManagerLifecycle.cpp:222] [deregisterQuery] AbstractQueryManager::deregisterAndUndeployQuery: query 1[m
[36m[10:14:54.879880] [D] [thread 126901] [NodeEngine.cpp:234] [unregisterQuery] Runtime: unregister of query  11  succeeded[m
[36m[10:14:54.879961] [D] [thread 126901] [WorkerRPCServer.cpp:67] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: success[m
[1m[41m[10:14:54.935098] [C] [thread 126822] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[10:14:54.935194] [I] [thread 126822] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[10:14:54.935266] [I] [thread 126822] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[10:14:54.935359] [W] [thread 126822] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[10:14:54.935372] [I] [thread 126822] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[10:14:54.935382] [W] [thread 126822] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[31m[1m[10:14:54.944294] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:54.945168] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:45807 went dead so we remove it[m
[32m[10:14:54.945320] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[32m[10:14:54.945346] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:54.945376] [I] [thread 126838] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:14:54.945384] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:14:54.945396] [I] [thread 126838] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:14:54.945417] [I] [thread 126838] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:14:54.945428] [I] [thread 126838] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:14:54.945437] [I] [thread 126838] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:14:54.945480] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:14:55.210053] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:14:56.106147] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:56.107116] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:45807 went dead so we remove it[m
[32m[10:14:56.107260] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[33m[1m[10:14:56.107290] [W] [thread 126838] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[10:14:56.112091] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:56.112998] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:37051 went dead so we remove it[m
[32m[10:14:56.113141] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[32m[10:14:56.113166] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:56.113187] [I] [thread 126838] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:14:56.113194] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:14:56.113211] [I] [thread 126838] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:14:56.113221] [I] [thread 126838] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:14:56.113230] [I] [thread 126838] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:14:56.113238] [I] [thread 126838] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:14:56.113260] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:14:56.118336] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:56.119267] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:33389 went dead so we remove it[m
[32m[10:14:56.119412] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[32m[10:14:56.119438] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:56.119449] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:14:56.119473] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:14:56.136526] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:56.137553] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:36071 went dead so we remove it[m
[32m[10:14:56.137717] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[32m[10:14:56.137746] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:56.137759] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:14:56.137786] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:14:56.143581] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:56.144613] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:40461 went dead so we remove it[m
[32m[10:14:56.144778] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=2][m
[32m[10:14:56.144808] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:56.144821] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:14:56.144850] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:14:56.211365] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:14:57.212668] [D] [thread 126837] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:14:57.245965] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.246917] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:45807 went dead so we remove it[m
[32m[10:14:57.247059] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[33m[1m[10:14:57.247088] [W] [thread 126838] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[10:14:57.252006] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.252921] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:37051 went dead so we remove it[m
[32m[10:14:57.253061] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[10:14:57.253090] [W] [thread 126838] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[10:14:57.257880] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.258828] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:33389 went dead so we remove it[m
[32m[10:14:57.258970] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:14:57.258998] [W] [thread 126838] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[10:14:57.275429] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.276405] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:36071 went dead so we remove it[m
[32m[10:14:57.276556] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:14:57.276589] [W] [thread 126838] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 6 doesn't exists in the system.[m
[31m[1m[10:14:57.282112] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.283142] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:40461 went dead so we remove it[m
[32m[10:14:57.283297] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=2][m
[33m[1m[10:14:57.283330] [W] [thread 126838] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 7 doesn't exists in the system.[m
[31m[1m[10:14:57.288882] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.289804] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.36:46129 went dead so we remove it[m
[32m[10:14:57.289948] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=2][m
[32m[10:14:57.289973] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:57.289984] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:14:57.290008] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:14:57.295057] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.295973] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.37:45171 went dead so we remove it[m
[32m[10:14:57.296117] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=2][m
[32m[10:14:57.296142] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:57.296153] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:14:57.296177] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:14:57.301707] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.302877] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.38:37323 went dead so we remove it[m
[32m[10:14:57.303058] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=2][m
[32m[10:14:57.303086] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:57.303100] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:14:57.303129] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:14:57.309113] [E] [thread 126838] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:14:57.310075] [W] [thread 126838] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.39:40941 went dead so we remove it[m
[32m[10:14:57.310279] [I] [thread 126838] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=2][m
[32m[10:14:57.310307] [I] [thread 126838] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:14:57.310318] [I] [thread 126838] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:14:57.310342] [D] [thread 126838] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
